// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module example_proc_1_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_channel12_din,
        data_channel12_num_data_valid,
        data_channel12_fifo_cap,
        data_channel12_full_n,
        data_channel12_write,
        data_channel23_din,
        data_channel23_num_data_valid,
        data_channel23_fifo_cap,
        data_channel23_full_n,
        data_channel23_write,
        data_channel121_dout,
        data_channel121_num_data_valid,
        data_channel121_fifo_cap,
        data_channel121_empty_n,
        data_channel121_read,
        data_channel232_dout,
        data_channel232_num_data_valid,
        data_channel232_fifo_cap,
        data_channel232_empty_n,
        data_channel232_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] data_channel12_din;
input  [6:0] data_channel12_num_data_valid;
input  [6:0] data_channel12_fifo_cap;
input   data_channel12_full_n;
output   data_channel12_write;
output  [31:0] data_channel23_din;
input  [6:0] data_channel23_num_data_valid;
input  [6:0] data_channel23_fifo_cap;
input   data_channel23_full_n;
output   data_channel23_write;
input  [31:0] data_channel121_dout;
input  [6:0] data_channel121_num_data_valid;
input  [6:0] data_channel121_fifo_cap;
input   data_channel121_empty_n;
output   data_channel121_read;
input  [31:0] data_channel232_dout;
input  [6:0] data_channel232_num_data_valid;
input  [6:0] data_channel232_fifo_cap;
input   data_channel232_empty_n;
output   data_channel232_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_channel12_write;
reg data_channel23_write;
reg data_channel121_read;
reg data_channel232_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_done;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_idle;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_ready;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel232_read;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel121_read;
wire   [31:0] grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel12_din;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel12_write;
wire   [31:0] grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_add_phi_out;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_add_phi_out_ap_vld;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_done;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_idle;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_ready;
wire   [31:0] grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_data_channel23_din;
wire    grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_data_channel23_write;
reg    grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start_reg;
reg    ap_block_state1_ignore_call6;
wire    ap_CS_fsm_state2;
reg    grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg   [4:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start_reg = 1'b0;
#0 grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start_reg = 1'b0;
end

example_proc_1_2_Pipeline_VITIS_LOOP_55_1 grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start),
    .ap_done(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_done),
    .ap_idle(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_idle),
    .ap_ready(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_ready),
    .data_channel232_dout(data_channel232_dout),
    .data_channel232_num_data_valid(7'd0),
    .data_channel232_fifo_cap(7'd0),
    .data_channel232_empty_n(data_channel232_empty_n),
    .data_channel232_read(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel232_read),
    .data_channel121_dout(data_channel121_dout),
    .data_channel121_num_data_valid(7'd0),
    .data_channel121_fifo_cap(7'd0),
    .data_channel121_empty_n(data_channel121_empty_n),
    .data_channel121_read(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel121_read),
    .data_channel12_din(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel12_din),
    .data_channel12_num_data_valid(7'd0),
    .data_channel12_fifo_cap(7'd0),
    .data_channel12_full_n(data_channel12_full_n),
    .data_channel12_write(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel12_write),
    .add_phi_out(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_add_phi_out),
    .add_phi_out_ap_vld(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_add_phi_out_ap_vld)
);

example_proc_1_2_Pipeline_VITIS_LOOP_59_2 grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start),
    .ap_done(grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_done),
    .ap_idle(grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_idle),
    .ap_ready(grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_ready),
    .data_channel23_din(grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_data_channel23_din),
    .data_channel23_num_data_valid(7'd0),
    .data_channel23_fifo_cap(7'd0),
    .data_channel23_full_n(data_channel23_full_n),
    .data_channel23_write(grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_data_channel23_write),
    .add_phi_reload(grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_add_phi_out)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start_reg <= 1'b1;
        end else if ((grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_ready == 1'b1)) begin
            grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start_reg <= 1'b1;
        end else if ((grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_ready == 1'b1)) begin
            grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_channel121_read = grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel121_read;
    end else begin
        data_channel121_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_channel12_write = grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel12_write;
    end else begin
        data_channel12_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_channel232_read = grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel232_read;
    end else begin
        data_channel232_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_channel23_write = grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_data_channel23_write;
    end else begin
        data_channel23_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call6 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign data_channel12_din = grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_data_channel12_din;

assign data_channel23_din = grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_data_channel23_din;

assign grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start = grp_proc_1_2_Pipeline_VITIS_LOOP_55_1_fu_30_ap_start_reg;

assign grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start = grp_proc_1_2_Pipeline_VITIS_LOOP_59_2_fu_41_ap_start_reg;

endmodule //example_proc_1_2
