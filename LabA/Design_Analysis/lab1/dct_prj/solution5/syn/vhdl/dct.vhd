-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we0 : OUT STD_LOGIC;
    input_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we1 : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we0 : OUT STD_LOGIC;
    output_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_r_ce1 : OUT STD_LOGIC;
    output_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we1 : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of dct is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dct,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.904187,HLS_SYN_LAT=476,HLS_SYN_TPT=343,HLS_SYN_MEM=3,HLS_SYN_DSP=8,HLS_SYN_FF=1009,HLS_SYN_LUT=1654,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal buf_2d_in_0_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_0_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_2_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_2_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_3_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_3_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_4_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_4_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_5_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_5_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_6_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_6_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_7_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_7_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_start : STD_LOGIC;
    signal read_data_U0_ap_done : STD_LOGIC;
    signal read_data_U0_ap_continue : STD_LOGIC;
    signal read_data_U0_ap_idle : STD_LOGIC;
    signal read_data_U0_ap_ready : STD_LOGIC;
    signal read_data_U0_input_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal read_data_U0_input_r_ce0 : STD_LOGIC;
    signal read_data_U0_buf_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_0_ce0 : STD_LOGIC;
    signal read_data_U0_buf_0_we0 : STD_LOGIC;
    signal read_data_U0_buf_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_1_ce0 : STD_LOGIC;
    signal read_data_U0_buf_1_we0 : STD_LOGIC;
    signal read_data_U0_buf_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_2_ce0 : STD_LOGIC;
    signal read_data_U0_buf_2_we0 : STD_LOGIC;
    signal read_data_U0_buf_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_3_ce0 : STD_LOGIC;
    signal read_data_U0_buf_3_we0 : STD_LOGIC;
    signal read_data_U0_buf_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_4_ce0 : STD_LOGIC;
    signal read_data_U0_buf_4_we0 : STD_LOGIC;
    signal read_data_U0_buf_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_5_ce0 : STD_LOGIC;
    signal read_data_U0_buf_5_we0 : STD_LOGIC;
    signal read_data_U0_buf_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_6_ce0 : STD_LOGIC;
    signal read_data_U0_buf_6_we0 : STD_LOGIC;
    signal read_data_U0_buf_6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_buf_7_ce0 : STD_LOGIC;
    signal read_data_U0_buf_7_we0 : STD_LOGIC;
    signal read_data_U0_buf_7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_buf_2d_in_7 : STD_LOGIC;
    signal read_data_U0_buf_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_7 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_6 : STD_LOGIC;
    signal read_data_U0_buf_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_6 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_5 : STD_LOGIC;
    signal read_data_U0_buf_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_5 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_4 : STD_LOGIC;
    signal read_data_U0_buf_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_4 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_3 : STD_LOGIC;
    signal read_data_U0_buf_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_3 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_2 : STD_LOGIC;
    signal read_data_U0_buf_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_2 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_1 : STD_LOGIC;
    signal read_data_U0_buf_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_1 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_0 : STD_LOGIC;
    signal read_data_U0_buf_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_0 : STD_LOGIC;
    signal dct_2d_U0_ap_start : STD_LOGIC;
    signal dct_2d_U0_ap_done : STD_LOGIC;
    signal dct_2d_U0_ap_continue : STD_LOGIC;
    signal dct_2d_U0_ap_idle : STD_LOGIC;
    signal dct_2d_U0_ap_ready : STD_LOGIC;
    signal dct_2d_U0_in_block_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_0_ce0 : STD_LOGIC;
    signal dct_2d_U0_in_block_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_1_ce0 : STD_LOGIC;
    signal dct_2d_U0_in_block_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_2_ce0 : STD_LOGIC;
    signal dct_2d_U0_in_block_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_3_ce0 : STD_LOGIC;
    signal dct_2d_U0_in_block_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_4_ce0 : STD_LOGIC;
    signal dct_2d_U0_in_block_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_5_ce0 : STD_LOGIC;
    signal dct_2d_U0_in_block_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_6_ce0 : STD_LOGIC;
    signal dct_2d_U0_in_block_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_2d_U0_in_block_7_ce0 : STD_LOGIC;
    signal dct_2d_U0_out_block_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_2d_U0_out_block_ce0 : STD_LOGIC;
    signal dct_2d_U0_out_block_we0 : STD_LOGIC;
    signal dct_2d_U0_out_block_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_buf_2d_out : STD_LOGIC;
    signal dct_2d_U0_out_block_full_n : STD_LOGIC;
    signal write_data_U0_ap_start : STD_LOGIC;
    signal write_data_U0_ap_done : STD_LOGIC;
    signal write_data_U0_ap_continue : STD_LOGIC;
    signal write_data_U0_ap_idle : STD_LOGIC;
    signal write_data_U0_ap_ready : STD_LOGIC;
    signal write_data_U0_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal write_data_U0_buf_r_ce0 : STD_LOGIC;
    signal write_data_U0_output_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal write_data_U0_output_r_ce0 : STD_LOGIC;
    signal write_data_U0_output_r_we0 : STD_LOGIC;
    signal write_data_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal buf_2d_in_0_i_full_n : STD_LOGIC;
    signal buf_2d_in_0_t_empty_n : STD_LOGIC;
    signal buf_2d_in_1_i_full_n : STD_LOGIC;
    signal buf_2d_in_1_t_empty_n : STD_LOGIC;
    signal buf_2d_in_2_i_full_n : STD_LOGIC;
    signal buf_2d_in_2_t_empty_n : STD_LOGIC;
    signal buf_2d_in_3_i_full_n : STD_LOGIC;
    signal buf_2d_in_3_t_empty_n : STD_LOGIC;
    signal buf_2d_in_4_i_full_n : STD_LOGIC;
    signal buf_2d_in_4_t_empty_n : STD_LOGIC;
    signal buf_2d_in_5_i_full_n : STD_LOGIC;
    signal buf_2d_in_5_t_empty_n : STD_LOGIC;
    signal buf_2d_in_6_i_full_n : STD_LOGIC;
    signal buf_2d_in_6_t_empty_n : STD_LOGIC;
    signal buf_2d_in_7_i_full_n : STD_LOGIC;
    signal buf_2d_in_7_t_empty_n : STD_LOGIC;
    signal buf_2d_out_i_full_n : STD_LOGIC;
    signal buf_2d_out_t_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal read_data_U0_start_full_n : STD_LOGIC;
    signal read_data_U0_start_write : STD_LOGIC;
    signal dct_2d_U0_start_full_n : STD_LOGIC;
    signal dct_2d_U0_start_write : STD_LOGIC;
    signal write_data_U0_start_full_n : STD_LOGIC;
    signal write_data_U0_start_write : STD_LOGIC;

    component read_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_0_ce0 : OUT STD_LOGIC;
        buf_0_we0 : OUT STD_LOGIC;
        buf_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_1_ce0 : OUT STD_LOGIC;
        buf_1_we0 : OUT STD_LOGIC;
        buf_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_2_ce0 : OUT STD_LOGIC;
        buf_2_we0 : OUT STD_LOGIC;
        buf_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_3_ce0 : OUT STD_LOGIC;
        buf_3_we0 : OUT STD_LOGIC;
        buf_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_4_ce0 : OUT STD_LOGIC;
        buf_4_we0 : OUT STD_LOGIC;
        buf_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_5_ce0 : OUT STD_LOGIC;
        buf_5_we0 : OUT STD_LOGIC;
        buf_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_6_ce0 : OUT STD_LOGIC;
        buf_6_we0 : OUT STD_LOGIC;
        buf_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_7_ce0 : OUT STD_LOGIC;
        buf_7_we0 : OUT STD_LOGIC;
        buf_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_2d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_block_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_0_ce0 : OUT STD_LOGIC;
        in_block_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_1_ce0 : OUT STD_LOGIC;
        in_block_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_2_ce0 : OUT STD_LOGIC;
        in_block_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_3_ce0 : OUT STD_LOGIC;
        in_block_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_4_ce0 : OUT STD_LOGIC;
        in_block_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_5_ce0 : OUT STD_LOGIC;
        in_block_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_6_ce0 : OUT STD_LOGIC;
        in_block_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_7_ce0 : OUT STD_LOGIC;
        in_block_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        out_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_block_ce0 : OUT STD_LOGIC;
        out_block_we0 : OUT STD_LOGIC;
        out_block_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component write_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_buf_2d_in_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component dct_buf_2d_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    buf_2d_in_0_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_0_address0,
        i_ce0 => read_data_U0_buf_0_ce0,
        i_we0 => read_data_U0_buf_0_we0,
        i_d0 => read_data_U0_buf_0_d0,
        i_q0 => buf_2d_in_0_i_q0,
        t_address0 => dct_2d_U0_in_block_0_address0,
        t_ce0 => dct_2d_U0_in_block_0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_0_i_full_n,
        i_write => ap_channel_done_buf_2d_in_0,
        t_empty_n => buf_2d_in_0_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_in_1_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_1_address0,
        i_ce0 => read_data_U0_buf_1_ce0,
        i_we0 => read_data_U0_buf_1_we0,
        i_d0 => read_data_U0_buf_1_d0,
        i_q0 => buf_2d_in_1_i_q0,
        t_address0 => dct_2d_U0_in_block_1_address0,
        t_ce0 => dct_2d_U0_in_block_1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_1_i_full_n,
        i_write => ap_channel_done_buf_2d_in_1,
        t_empty_n => buf_2d_in_1_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_in_2_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_2_address0,
        i_ce0 => read_data_U0_buf_2_ce0,
        i_we0 => read_data_U0_buf_2_we0,
        i_d0 => read_data_U0_buf_2_d0,
        i_q0 => buf_2d_in_2_i_q0,
        t_address0 => dct_2d_U0_in_block_2_address0,
        t_ce0 => dct_2d_U0_in_block_2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_2_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_2_i_full_n,
        i_write => ap_channel_done_buf_2d_in_2,
        t_empty_n => buf_2d_in_2_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_in_3_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_3_address0,
        i_ce0 => read_data_U0_buf_3_ce0,
        i_we0 => read_data_U0_buf_3_we0,
        i_d0 => read_data_U0_buf_3_d0,
        i_q0 => buf_2d_in_3_i_q0,
        t_address0 => dct_2d_U0_in_block_3_address0,
        t_ce0 => dct_2d_U0_in_block_3_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_3_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_3_i_full_n,
        i_write => ap_channel_done_buf_2d_in_3,
        t_empty_n => buf_2d_in_3_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_in_4_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_4_address0,
        i_ce0 => read_data_U0_buf_4_ce0,
        i_we0 => read_data_U0_buf_4_we0,
        i_d0 => read_data_U0_buf_4_d0,
        i_q0 => buf_2d_in_4_i_q0,
        t_address0 => dct_2d_U0_in_block_4_address0,
        t_ce0 => dct_2d_U0_in_block_4_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_4_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_4_i_full_n,
        i_write => ap_channel_done_buf_2d_in_4,
        t_empty_n => buf_2d_in_4_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_in_5_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_5_address0,
        i_ce0 => read_data_U0_buf_5_ce0,
        i_we0 => read_data_U0_buf_5_we0,
        i_d0 => read_data_U0_buf_5_d0,
        i_q0 => buf_2d_in_5_i_q0,
        t_address0 => dct_2d_U0_in_block_5_address0,
        t_ce0 => dct_2d_U0_in_block_5_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_5_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_5_i_full_n,
        i_write => ap_channel_done_buf_2d_in_5,
        t_empty_n => buf_2d_in_5_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_in_6_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_6_address0,
        i_ce0 => read_data_U0_buf_6_ce0,
        i_we0 => read_data_U0_buf_6_we0,
        i_d0 => read_data_U0_buf_6_d0,
        i_q0 => buf_2d_in_6_i_q0,
        t_address0 => dct_2d_U0_in_block_6_address0,
        t_ce0 => dct_2d_U0_in_block_6_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_6_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_6_i_full_n,
        i_write => ap_channel_done_buf_2d_in_6,
        t_empty_n => buf_2d_in_6_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_in_7_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => read_data_U0_buf_7_address0,
        i_ce0 => read_data_U0_buf_7_ce0,
        i_we0 => read_data_U0_buf_7_we0,
        i_d0 => read_data_U0_buf_7_d0,
        i_q0 => buf_2d_in_7_i_q0,
        t_address0 => dct_2d_U0_in_block_7_address0,
        t_ce0 => dct_2d_U0_in_block_7_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_in_7_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_in_7_i_full_n,
        i_write => ap_channel_done_buf_2d_in_7,
        t_empty_n => buf_2d_in_7_t_empty_n,
        t_read => dct_2d_U0_ap_ready);

    buf_2d_out_U : component dct_buf_2d_out
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dct_2d_U0_out_block_address0,
        i_ce0 => dct_2d_U0_out_block_ce0,
        i_we0 => dct_2d_U0_out_block_we0,
        i_d0 => dct_2d_U0_out_block_d0,
        i_q0 => buf_2d_out_i_q0,
        t_address0 => write_data_U0_buf_r_address0,
        t_ce0 => write_data_U0_buf_r_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => buf_2d_out_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => buf_2d_out_i_full_n,
        i_write => dct_2d_U0_ap_done,
        t_empty_n => buf_2d_out_t_empty_n,
        t_read => write_data_U0_ap_ready);

    read_data_U0 : component read_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => read_data_U0_ap_start,
        ap_done => read_data_U0_ap_done,
        ap_continue => read_data_U0_ap_continue,
        ap_idle => read_data_U0_ap_idle,
        ap_ready => read_data_U0_ap_ready,
        input_r_address0 => read_data_U0_input_r_address0,
        input_r_ce0 => read_data_U0_input_r_ce0,
        input_r_q0 => input_r_q0,
        buf_0_address0 => read_data_U0_buf_0_address0,
        buf_0_ce0 => read_data_U0_buf_0_ce0,
        buf_0_we0 => read_data_U0_buf_0_we0,
        buf_0_d0 => read_data_U0_buf_0_d0,
        buf_1_address0 => read_data_U0_buf_1_address0,
        buf_1_ce0 => read_data_U0_buf_1_ce0,
        buf_1_we0 => read_data_U0_buf_1_we0,
        buf_1_d0 => read_data_U0_buf_1_d0,
        buf_2_address0 => read_data_U0_buf_2_address0,
        buf_2_ce0 => read_data_U0_buf_2_ce0,
        buf_2_we0 => read_data_U0_buf_2_we0,
        buf_2_d0 => read_data_U0_buf_2_d0,
        buf_3_address0 => read_data_U0_buf_3_address0,
        buf_3_ce0 => read_data_U0_buf_3_ce0,
        buf_3_we0 => read_data_U0_buf_3_we0,
        buf_3_d0 => read_data_U0_buf_3_d0,
        buf_4_address0 => read_data_U0_buf_4_address0,
        buf_4_ce0 => read_data_U0_buf_4_ce0,
        buf_4_we0 => read_data_U0_buf_4_we0,
        buf_4_d0 => read_data_U0_buf_4_d0,
        buf_5_address0 => read_data_U0_buf_5_address0,
        buf_5_ce0 => read_data_U0_buf_5_ce0,
        buf_5_we0 => read_data_U0_buf_5_we0,
        buf_5_d0 => read_data_U0_buf_5_d0,
        buf_6_address0 => read_data_U0_buf_6_address0,
        buf_6_ce0 => read_data_U0_buf_6_ce0,
        buf_6_we0 => read_data_U0_buf_6_we0,
        buf_6_d0 => read_data_U0_buf_6_d0,
        buf_7_address0 => read_data_U0_buf_7_address0,
        buf_7_ce0 => read_data_U0_buf_7_ce0,
        buf_7_we0 => read_data_U0_buf_7_we0,
        buf_7_d0 => read_data_U0_buf_7_d0);

    dct_2d_U0 : component dct_2d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_2d_U0_ap_start,
        ap_done => dct_2d_U0_ap_done,
        ap_continue => dct_2d_U0_ap_continue,
        ap_idle => dct_2d_U0_ap_idle,
        ap_ready => dct_2d_U0_ap_ready,
        in_block_0_address0 => dct_2d_U0_in_block_0_address0,
        in_block_0_ce0 => dct_2d_U0_in_block_0_ce0,
        in_block_0_q0 => buf_2d_in_0_t_q0,
        in_block_1_address0 => dct_2d_U0_in_block_1_address0,
        in_block_1_ce0 => dct_2d_U0_in_block_1_ce0,
        in_block_1_q0 => buf_2d_in_1_t_q0,
        in_block_2_address0 => dct_2d_U0_in_block_2_address0,
        in_block_2_ce0 => dct_2d_U0_in_block_2_ce0,
        in_block_2_q0 => buf_2d_in_2_t_q0,
        in_block_3_address0 => dct_2d_U0_in_block_3_address0,
        in_block_3_ce0 => dct_2d_U0_in_block_3_ce0,
        in_block_3_q0 => buf_2d_in_3_t_q0,
        in_block_4_address0 => dct_2d_U0_in_block_4_address0,
        in_block_4_ce0 => dct_2d_U0_in_block_4_ce0,
        in_block_4_q0 => buf_2d_in_4_t_q0,
        in_block_5_address0 => dct_2d_U0_in_block_5_address0,
        in_block_5_ce0 => dct_2d_U0_in_block_5_ce0,
        in_block_5_q0 => buf_2d_in_5_t_q0,
        in_block_6_address0 => dct_2d_U0_in_block_6_address0,
        in_block_6_ce0 => dct_2d_U0_in_block_6_ce0,
        in_block_6_q0 => buf_2d_in_6_t_q0,
        in_block_7_address0 => dct_2d_U0_in_block_7_address0,
        in_block_7_ce0 => dct_2d_U0_in_block_7_ce0,
        in_block_7_q0 => buf_2d_in_7_t_q0,
        out_block_address0 => dct_2d_U0_out_block_address0,
        out_block_ce0 => dct_2d_U0_out_block_ce0,
        out_block_we0 => dct_2d_U0_out_block_we0,
        out_block_d0 => dct_2d_U0_out_block_d0);

    write_data_U0 : component write_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => write_data_U0_ap_start,
        ap_done => write_data_U0_ap_done,
        ap_continue => write_data_U0_ap_continue,
        ap_idle => write_data_U0_ap_idle,
        ap_ready => write_data_U0_ap_ready,
        buf_r_address0 => write_data_U0_buf_r_address0,
        buf_r_ce0 => write_data_U0_buf_r_ce0,
        buf_r_q0 => buf_2d_out_t_q0,
        output_r_address0 => write_data_U0_output_r_address0,
        output_r_ce0 => write_data_U0_output_r_ce0,
        output_r_we0 => write_data_U0_output_r_we0,
        output_r_d0 => write_data_U0_output_r_d0);





    ap_sync_reg_channel_write_buf_2d_in_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_0 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_0 <= ap_sync_channel_write_buf_2d_in_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_1 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_1 <= ap_sync_channel_write_buf_2d_in_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_2 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_2 <= ap_sync_channel_write_buf_2d_in_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_3 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_3 <= ap_sync_channel_write_buf_2d_in_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_4 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_4 <= ap_sync_channel_write_buf_2d_in_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_5 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_5 <= ap_sync_channel_write_buf_2d_in_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_6 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_6 <= ap_sync_channel_write_buf_2d_in_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_buf_2d_in_7 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_7 <= ap_sync_channel_write_buf_2d_in_7;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_buf_2d_in_0 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_0 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_1 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_1 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_2 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_2 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_3 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_3 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_4 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_4 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_5 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_5 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_6 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_6 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_7 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_7 xor ap_const_logic_1));
    ap_channel_done_buf_2d_out <= dct_2d_U0_ap_done;
    ap_done <= write_data_U0_ap_done;
    ap_idle <= (write_data_U0_ap_idle and read_data_U0_ap_idle and (buf_2d_out_t_empty_n xor ap_const_logic_1) and (buf_2d_in_7_t_empty_n xor ap_const_logic_1) and (buf_2d_in_6_t_empty_n xor ap_const_logic_1) and (buf_2d_in_5_t_empty_n xor ap_const_logic_1) and (buf_2d_in_4_t_empty_n xor ap_const_logic_1) and (buf_2d_in_3_t_empty_n xor ap_const_logic_1) and (buf_2d_in_2_t_empty_n xor ap_const_logic_1) and (buf_2d_in_1_t_empty_n xor ap_const_logic_1) and (buf_2d_in_0_t_empty_n xor ap_const_logic_1) and dct_2d_U0_ap_idle);
    ap_ready <= read_data_U0_ap_ready;
    ap_sync_channel_write_buf_2d_in_0 <= ((read_data_U0_buf_0_full_n and ap_channel_done_buf_2d_in_0) or ap_sync_reg_channel_write_buf_2d_in_0);
    ap_sync_channel_write_buf_2d_in_1 <= ((read_data_U0_buf_1_full_n and ap_channel_done_buf_2d_in_1) or ap_sync_reg_channel_write_buf_2d_in_1);
    ap_sync_channel_write_buf_2d_in_2 <= ((read_data_U0_buf_2_full_n and ap_channel_done_buf_2d_in_2) or ap_sync_reg_channel_write_buf_2d_in_2);
    ap_sync_channel_write_buf_2d_in_3 <= ((read_data_U0_buf_3_full_n and ap_channel_done_buf_2d_in_3) or ap_sync_reg_channel_write_buf_2d_in_3);
    ap_sync_channel_write_buf_2d_in_4 <= ((read_data_U0_buf_4_full_n and ap_channel_done_buf_2d_in_4) or ap_sync_reg_channel_write_buf_2d_in_4);
    ap_sync_channel_write_buf_2d_in_5 <= ((read_data_U0_buf_5_full_n and ap_channel_done_buf_2d_in_5) or ap_sync_reg_channel_write_buf_2d_in_5);
    ap_sync_channel_write_buf_2d_in_6 <= ((read_data_U0_buf_6_full_n and ap_channel_done_buf_2d_in_6) or ap_sync_reg_channel_write_buf_2d_in_6);
    ap_sync_channel_write_buf_2d_in_7 <= ((read_data_U0_buf_7_full_n and ap_channel_done_buf_2d_in_7) or ap_sync_reg_channel_write_buf_2d_in_7);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= write_data_U0_ap_done;
    ap_sync_ready <= read_data_U0_ap_ready;
    dct_2d_U0_ap_continue <= buf_2d_out_i_full_n;
    dct_2d_U0_ap_start <= (buf_2d_in_7_t_empty_n and buf_2d_in_6_t_empty_n and buf_2d_in_5_t_empty_n and buf_2d_in_4_t_empty_n and buf_2d_in_3_t_empty_n and buf_2d_in_2_t_empty_n and buf_2d_in_1_t_empty_n and buf_2d_in_0_t_empty_n);
    dct_2d_U0_out_block_full_n <= buf_2d_out_i_full_n;
    dct_2d_U0_start_full_n <= ap_const_logic_1;
    dct_2d_U0_start_write <= ap_const_logic_0;
    input_r_address0 <= read_data_U0_input_r_address0;
    input_r_address1 <= ap_const_lv6_0;
    input_r_ce0 <= read_data_U0_input_r_ce0;
    input_r_ce1 <= ap_const_logic_0;
    input_r_d0 <= ap_const_lv16_0;
    input_r_d1 <= ap_const_lv16_0;
    input_r_we0 <= ap_const_logic_0;
    input_r_we1 <= ap_const_logic_0;
    output_r_address0 <= write_data_U0_output_r_address0;
    output_r_address1 <= ap_const_lv6_0;
    output_r_ce0 <= write_data_U0_output_r_ce0;
    output_r_ce1 <= ap_const_logic_0;
    output_r_d0 <= write_data_U0_output_r_d0;
    output_r_d1 <= ap_const_lv16_0;
    output_r_we0 <= write_data_U0_output_r_we0;
    output_r_we1 <= ap_const_logic_0;
    read_data_U0_ap_continue <= (ap_sync_channel_write_buf_2d_in_7 and ap_sync_channel_write_buf_2d_in_6 and ap_sync_channel_write_buf_2d_in_5 and ap_sync_channel_write_buf_2d_in_4 and ap_sync_channel_write_buf_2d_in_3 and ap_sync_channel_write_buf_2d_in_2 and ap_sync_channel_write_buf_2d_in_1 and ap_sync_channel_write_buf_2d_in_0);
    read_data_U0_ap_start <= ap_start;
    read_data_U0_buf_0_full_n <= buf_2d_in_0_i_full_n;
    read_data_U0_buf_1_full_n <= buf_2d_in_1_i_full_n;
    read_data_U0_buf_2_full_n <= buf_2d_in_2_i_full_n;
    read_data_U0_buf_3_full_n <= buf_2d_in_3_i_full_n;
    read_data_U0_buf_4_full_n <= buf_2d_in_4_i_full_n;
    read_data_U0_buf_5_full_n <= buf_2d_in_5_i_full_n;
    read_data_U0_buf_6_full_n <= buf_2d_in_6_i_full_n;
    read_data_U0_buf_7_full_n <= buf_2d_in_7_i_full_n;
    read_data_U0_start_full_n <= ap_const_logic_1;
    read_data_U0_start_write <= ap_const_logic_0;
    write_data_U0_ap_continue <= ap_const_logic_1;
    write_data_U0_ap_start <= buf_2d_out_t_empty_n;
    write_data_U0_start_full_n <= ap_const_logic_1;
    write_data_U0_start_write <= ap_const_logic_0;
end behav;
