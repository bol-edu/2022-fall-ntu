// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_Row_DCT_Loop_pr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        buf_2d_in_0_address0,
        buf_2d_in_0_ce0,
        buf_2d_in_0_q0,
        buf_2d_in_1_address0,
        buf_2d_in_1_ce0,
        buf_2d_in_1_q0,
        buf_2d_in_2_address0,
        buf_2d_in_2_ce0,
        buf_2d_in_2_q0,
        buf_2d_in_3_address0,
        buf_2d_in_3_ce0,
        buf_2d_in_3_q0,
        buf_2d_in_4_address0,
        buf_2d_in_4_ce0,
        buf_2d_in_4_q0,
        buf_2d_in_5_address0,
        buf_2d_in_5_ce0,
        buf_2d_in_5_q0,
        buf_2d_in_6_address0,
        buf_2d_in_6_ce0,
        buf_2d_in_6_q0,
        buf_2d_in_7_address0,
        buf_2d_in_7_ce0,
        buf_2d_in_7_q0,
        row_outbuf_i_address0,
        row_outbuf_i_ce0,
        row_outbuf_i_we0,
        row_outbuf_i_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] buf_2d_in_0_address0;
output   buf_2d_in_0_ce0;
input  [15:0] buf_2d_in_0_q0;
output  [2:0] buf_2d_in_1_address0;
output   buf_2d_in_1_ce0;
input  [15:0] buf_2d_in_1_q0;
output  [2:0] buf_2d_in_2_address0;
output   buf_2d_in_2_ce0;
input  [15:0] buf_2d_in_2_q0;
output  [2:0] buf_2d_in_3_address0;
output   buf_2d_in_3_ce0;
input  [15:0] buf_2d_in_3_q0;
output  [2:0] buf_2d_in_4_address0;
output   buf_2d_in_4_ce0;
input  [15:0] buf_2d_in_4_q0;
output  [2:0] buf_2d_in_5_address0;
output   buf_2d_in_5_ce0;
input  [15:0] buf_2d_in_5_q0;
output  [2:0] buf_2d_in_6_address0;
output   buf_2d_in_6_ce0;
input  [15:0] buf_2d_in_6_q0;
output  [2:0] buf_2d_in_7_address0;
output   buf_2d_in_7_ce0;
input  [15:0] buf_2d_in_7_q0;
output  [5:0] row_outbuf_i_address0;
output   row_outbuf_i_ce0;
output   row_outbuf_i_we0;
output  [15:0] row_outbuf_i_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg buf_2d_in_0_ce0;
reg buf_2d_in_1_ce0;
reg buf_2d_in_2_ce0;
reg buf_2d_in_3_ce0;
reg buf_2d_in_4_ce0;
reg buf_2d_in_5_ce0;
reg buf_2d_in_6_ce0;
reg buf_2d_in_7_ce0;
reg row_outbuf_i_ce0;
reg row_outbuf_i_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] dct_coeff_table_0_address0;
reg    dct_coeff_table_0_ce0;
wire   [13:0] dct_coeff_table_0_q0;
wire   [2:0] dct_coeff_table_1_address0;
reg    dct_coeff_table_1_ce0;
wire  signed [14:0] dct_coeff_table_1_q0;
wire   [2:0] dct_coeff_table_2_address0;
reg    dct_coeff_table_2_ce0;
wire   [14:0] dct_coeff_table_2_q0;
wire   [2:0] dct_coeff_table_3_address0;
reg    dct_coeff_table_3_ce0;
wire  signed [14:0] dct_coeff_table_3_q0;
wire   [2:0] dct_coeff_table_4_address0;
reg    dct_coeff_table_4_ce0;
wire   [14:0] dct_coeff_table_4_q0;
wire   [2:0] dct_coeff_table_5_address0;
reg    dct_coeff_table_5_ce0;
wire  signed [14:0] dct_coeff_table_5_q0;
wire   [2:0] dct_coeff_table_6_address0;
reg    dct_coeff_table_6_ce0;
wire   [14:0] dct_coeff_table_6_q0;
wire   [2:0] dct_coeff_table_7_address0;
reg    dct_coeff_table_7_ce0;
wire  signed [14:0] dct_coeff_table_7_q0;
reg   [3:0] k_0_i_reg_302;
wire   [0:0] icmp_ln76_fu_313_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] i_fu_319_p2;
reg   [3:0] i_reg_533;
wire   [7:0] zext_ln48_1_fu_345_p1;
reg   [7:0] zext_ln48_1_reg_538;
reg   [2:0] buf_2d_in_0_addr_reg_543;
reg   [2:0] buf_2d_in_1_addr_reg_548;
reg   [2:0] buf_2d_in_2_addr_reg_553;
reg   [2:0] buf_2d_in_3_addr_reg_558;
reg   [2:0] buf_2d_in_4_addr_reg_563;
reg   [2:0] buf_2d_in_5_addr_reg_568;
reg   [2:0] buf_2d_in_6_addr_reg_573;
reg   [2:0] buf_2d_in_7_addr_reg_578;
wire   [0:0] icmp_ln55_fu_349_p2;
reg   [0:0] icmp_ln55_reg_583;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln55_reg_583_pp0_iter1_reg;
wire   [3:0] k_fu_355_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] add_ln63_8_fu_377_p2;
reg   [7:0] add_ln63_8_reg_592;
reg   [7:0] add_ln63_8_reg_592_pp0_iter1_reg;
reg   [13:0] dct_coeff_table_0_lo_reg_637;
wire  signed [28:0] mul_ln61_1_fu_471_p2;
reg  signed [28:0] mul_ln61_1_reg_642;
reg  signed [14:0] dct_coeff_table_2_lo_reg_647;
wire  signed [28:0] mul_ln61_3_fu_477_p2;
reg  signed [28:0] mul_ln61_3_reg_652;
reg  signed [14:0] dct_coeff_table_4_lo_reg_657;
wire  signed [28:0] mul_ln61_5_fu_483_p2;
reg  signed [28:0] mul_ln61_5_reg_662;
reg  signed [14:0] dct_coeff_table_6_lo_reg_667;
wire  signed [28:0] grp_fu_489_p3;
reg  signed [28:0] add_ln63_4_reg_672;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] i_0_i_reg_291;
reg    ap_block_state1;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln48_fu_325_p1;
wire   [63:0] zext_ln60_fu_361_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln63_1_fu_414_p1;
wire   [6:0] tmp_fu_337_p3;
wire   [7:0] zext_ln63_fu_373_p1;
wire  signed [28:0] grp_fu_497_p3;
wire  signed [28:0] grp_fu_505_p3;
wire  signed [28:0] grp_fu_513_p3;
wire  signed [28:0] grp_fu_521_p3;
(* use_dsp48 = "no" *) wire   [28:0] add_ln63_2_fu_446_p2;
(* use_dsp48 = "no" *) wire   [28:0] add_ln63_6_fu_450_p2;
wire   [28:0] add_ln63_7_fu_454_p2;
wire   [13:0] grp_fu_489_p2;
wire   [13:0] grp_fu_497_p0;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [28:0] grp_fu_497_p00;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Loop_Row_DCT_Loopbkb #(
    .DataWidth( 14 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_0_address0),
    .ce0(dct_coeff_table_0_ce0),
    .q0(dct_coeff_table_0_q0)
);

Loop_Row_DCT_Loopcud #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_1_address0),
    .ce0(dct_coeff_table_1_ce0),
    .q0(dct_coeff_table_1_q0)
);

Loop_Row_DCT_LoopdEe #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_2_address0),
    .ce0(dct_coeff_table_2_ce0),
    .q0(dct_coeff_table_2_q0)
);

Loop_Row_DCT_LoopeOg #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_3_address0),
    .ce0(dct_coeff_table_3_ce0),
    .q0(dct_coeff_table_3_q0)
);

Loop_Row_DCT_LoopfYi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_4_address0),
    .ce0(dct_coeff_table_4_ce0),
    .q0(dct_coeff_table_4_q0)
);

Loop_Row_DCT_Loopg8j #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_5_address0),
    .ce0(dct_coeff_table_5_ce0),
    .q0(dct_coeff_table_5_q0)
);

Loop_Row_DCT_Loophbi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_6_address0),
    .ce0(dct_coeff_table_6_ce0),
    .q0(dct_coeff_table_6_q0)
);

Loop_Row_DCT_Loopibs #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_7_address0),
    .ce0(dct_coeff_table_7_ce0),
    .q0(dct_coeff_table_7_q0)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U10(
    .din0(dct_coeff_table_1_q0),
    .din1(buf_2d_in_1_q0),
    .dout(mul_ln61_1_fu_471_p2)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U11(
    .din0(dct_coeff_table_3_q0),
    .din1(buf_2d_in_3_q0),
    .dout(mul_ln61_3_fu_477_p2)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U12(
    .din0(dct_coeff_table_5_q0),
    .din1(buf_2d_in_5_q0),
    .dout(mul_ln61_5_fu_483_p2)
);

dct_mac_muladd_15kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15kbM_U13(
    .din0(dct_coeff_table_7_q0),
    .din1(buf_2d_in_7_q0),
    .din2(grp_fu_489_p2),
    .dout(grp_fu_489_p3)
);

dct_mac_muladd_14lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14lbW_U14(
    .din0(grp_fu_497_p0),
    .din1(buf_2d_in_0_q0),
    .din2(mul_ln61_1_reg_642),
    .dout(grp_fu_497_p3)
);

dct_mac_muladd_15mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15mb6_U15(
    .din0(dct_coeff_table_2_lo_reg_647),
    .din1(buf_2d_in_2_q0),
    .din2(mul_ln61_3_reg_652),
    .dout(grp_fu_505_p3)
);

dct_mac_muladd_15mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15mb6_U16(
    .din0(dct_coeff_table_4_lo_reg_657),
    .din1(buf_2d_in_4_q0),
    .din2(mul_ln61_5_reg_662),
    .dout(grp_fu_513_p3)
);

dct_mac_muladd_15mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15mb6_U17(
    .din0(dct_coeff_table_6_lo_reg_667),
    .din1(buf_2d_in_6_q0),
    .din2(add_ln63_4_reg_672),
    .dout(grp_fu_521_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_reg_291 <= i_reg_533;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_291 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_fu_349_p2 == 1'd0))) begin
        k_0_i_reg_302 <= k_fu_355_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd0))) begin
        k_0_i_reg_302 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_583 == 1'd0))) begin
        add_ln63_4_reg_672 <= grp_fu_489_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_fu_349_p2 == 1'd0))) begin
        add_ln63_8_reg_592 <= add_ln63_8_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln63_8_reg_592_pp0_iter1_reg <= add_ln63_8_reg_592;
        icmp_ln55_reg_583 <= icmp_ln55_fu_349_p2;
        icmp_ln55_reg_583_pp0_iter1_reg <= icmp_ln55_reg_583;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd0))) begin
        buf_2d_in_0_addr_reg_543 <= zext_ln48_fu_325_p1;
        buf_2d_in_1_addr_reg_548 <= zext_ln48_fu_325_p1;
        buf_2d_in_2_addr_reg_553 <= zext_ln48_fu_325_p1;
        buf_2d_in_3_addr_reg_558 <= zext_ln48_fu_325_p1;
        buf_2d_in_4_addr_reg_563 <= zext_ln48_fu_325_p1;
        buf_2d_in_5_addr_reg_568 <= zext_ln48_fu_325_p1;
        buf_2d_in_6_addr_reg_573 <= zext_ln48_fu_325_p1;
        buf_2d_in_7_addr_reg_578 <= zext_ln48_fu_325_p1;
        zext_ln48_1_reg_538[6 : 3] <= zext_ln48_1_fu_345_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_583 == 1'd0))) begin
        dct_coeff_table_0_lo_reg_637 <= dct_coeff_table_0_q0;
        dct_coeff_table_2_lo_reg_647 <= dct_coeff_table_2_q0;
        dct_coeff_table_4_lo_reg_657 <= dct_coeff_table_4_q0;
        dct_coeff_table_6_lo_reg_667 <= dct_coeff_table_6_q0;
        mul_ln61_1_reg_642 <= mul_ln61_1_fu_471_p2;
        mul_ln61_3_reg_652 <= mul_ln61_3_fu_477_p2;
        mul_ln61_5_reg_662 <= mul_ln61_5_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_533 <= i_fu_319_p2;
    end
end

always @ (*) begin
    if ((icmp_ln55_fu_349_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_0_ce0 = 1'b1;
    end else begin
        buf_2d_in_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_1_ce0 = 1'b1;
    end else begin
        buf_2d_in_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_2_ce0 = 1'b1;
    end else begin
        buf_2d_in_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_3_ce0 = 1'b1;
    end else begin
        buf_2d_in_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_4_ce0 = 1'b1;
    end else begin
        buf_2d_in_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_5_ce0 = 1'b1;
    end else begin
        buf_2d_in_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_6_ce0 = 1'b1;
    end else begin
        buf_2d_in_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2d_in_7_ce0 = 1'b1;
    end else begin
        buf_2d_in_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_0_ce0 = 1'b1;
    end else begin
        dct_coeff_table_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_1_ce0 = 1'b1;
    end else begin
        dct_coeff_table_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_2_ce0 = 1'b1;
    end else begin
        dct_coeff_table_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_3_ce0 = 1'b1;
    end else begin
        dct_coeff_table_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_4_ce0 = 1'b1;
    end else begin
        dct_coeff_table_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_5_ce0 = 1'b1;
    end else begin
        dct_coeff_table_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_6_ce0 = 1'b1;
    end else begin
        dct_coeff_table_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dct_coeff_table_7_ce0 = 1'b1;
    end else begin
        dct_coeff_table_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_outbuf_i_ce0 = 1'b1;
    end else begin
        row_outbuf_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln55_reg_583_pp0_iter1_reg == 1'd0))) begin
        row_outbuf_i_we0 = 1'b1;
    end else begin
        row_outbuf_i_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_313_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln55_fu_349_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln55_fu_349_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln63_2_fu_446_p2 = ($signed(grp_fu_497_p3) + $signed(grp_fu_505_p3));

assign add_ln63_6_fu_450_p2 = ($signed(grp_fu_513_p3) + $signed(grp_fu_521_p3));

assign add_ln63_7_fu_454_p2 = (add_ln63_2_fu_446_p2 + add_ln63_6_fu_450_p2);

assign add_ln63_8_fu_377_p2 = (zext_ln48_1_reg_538 + zext_ln63_fu_373_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign buf_2d_in_0_address0 = buf_2d_in_0_addr_reg_543;

assign buf_2d_in_1_address0 = buf_2d_in_1_addr_reg_548;

assign buf_2d_in_2_address0 = buf_2d_in_2_addr_reg_553;

assign buf_2d_in_3_address0 = buf_2d_in_3_addr_reg_558;

assign buf_2d_in_4_address0 = buf_2d_in_4_addr_reg_563;

assign buf_2d_in_5_address0 = buf_2d_in_5_addr_reg_568;

assign buf_2d_in_6_address0 = buf_2d_in_6_addr_reg_573;

assign buf_2d_in_7_address0 = buf_2d_in_7_addr_reg_578;

assign dct_coeff_table_0_address0 = zext_ln60_fu_361_p1;

assign dct_coeff_table_1_address0 = zext_ln60_fu_361_p1;

assign dct_coeff_table_2_address0 = zext_ln60_fu_361_p1;

assign dct_coeff_table_3_address0 = zext_ln60_fu_361_p1;

assign dct_coeff_table_4_address0 = zext_ln60_fu_361_p1;

assign dct_coeff_table_5_address0 = zext_ln60_fu_361_p1;

assign dct_coeff_table_6_address0 = zext_ln60_fu_361_p1;

assign dct_coeff_table_7_address0 = zext_ln60_fu_361_p1;

assign grp_fu_489_p2 = 29'd4096;

assign grp_fu_497_p0 = grp_fu_497_p00;

assign grp_fu_497_p00 = dct_coeff_table_0_lo_reg_637;

assign i_fu_319_p2 = (i_0_i_reg_291 + 4'd1);

assign icmp_ln55_fu_349_p2 = ((k_0_i_reg_302 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_313_p2 = ((i_0_i_reg_291 == 4'd8) ? 1'b1 : 1'b0);

assign k_fu_355_p2 = (k_0_i_reg_302 + 4'd1);

assign row_outbuf_i_address0 = zext_ln63_1_fu_414_p1;

assign row_outbuf_i_d0 = {{add_ln63_7_fu_454_p2[28:13]}};

assign tmp_fu_337_p3 = {{i_0_i_reg_291}, {3'd0}};

assign zext_ln48_1_fu_345_p1 = tmp_fu_337_p3;

assign zext_ln48_fu_325_p1 = i_0_i_reg_291;

assign zext_ln60_fu_361_p1 = k_0_i_reg_302;

assign zext_ln63_1_fu_414_p1 = add_ln63_8_reg_592_pp0_iter1_reg;

assign zext_ln63_fu_373_p1 = k_0_i_reg_302;

always @ (posedge ap_clk) begin
    zext_ln48_1_reg_538[2:0] <= 3'b000;
    zext_ln48_1_reg_538[7] <= 1'b0;
end

endmodule //Loop_Row_DCT_Loop_pr
