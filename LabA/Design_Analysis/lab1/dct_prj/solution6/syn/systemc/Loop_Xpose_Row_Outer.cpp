// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_Xpose_Row_Outer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_Xpose_Row_Outer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_Xpose_Row_Outer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_Xpose_Row_Outer::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_ST_fsm_state4 = "100";
const sc_lv<32> Loop_Xpose_Row_Outer::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_Xpose_Row_Outer::ap_const_boolean_1 = true;
const sc_lv<32> Loop_Xpose_Row_Outer::ap_const_lv32_1 = "1";
const bool Loop_Xpose_Row_Outer::ap_const_boolean_0 = false;
const sc_lv<1> Loop_Xpose_Row_Outer::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_Xpose_Row_Outer::ap_const_lv1_1 = "1";
const sc_lv<7> Loop_Xpose_Row_Outer::ap_const_lv7_0 = "0000000";
const sc_lv<4> Loop_Xpose_Row_Outer::ap_const_lv4_0 = "0000";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_6 = "110";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_5 = "101";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_4 = "100";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_3 = "11";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_2 = "10";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_1 = "1";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_0 = "000";
const sc_lv<3> Loop_Xpose_Row_Outer::ap_const_lv3_7 = "111";
const sc_lv<7> Loop_Xpose_Row_Outer::ap_const_lv7_40 = "1000000";
const sc_lv<7> Loop_Xpose_Row_Outer::ap_const_lv7_1 = "1";
const sc_lv<4> Loop_Xpose_Row_Outer::ap_const_lv4_1 = "1";
const sc_lv<4> Loop_Xpose_Row_Outer::ap_const_lv4_8 = "1000";
const sc_lv<32> Loop_Xpose_Row_Outer::ap_const_lv32_2 = "10";

Loop_Xpose_Row_Outer::Loop_Xpose_Row_Outer(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln81_fu_236_p2);
    sensitive << ( indvar_flatten_reg_197 );

    SC_METHOD(thread_add_ln84_fu_286_p2);
    sensitive << ( zext_ln84_2_fu_282_p1 );
    sensitive << ( zext_ln84_1_fu_270_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln81_fu_230_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_j_0_i_phi_fu_212_p4);
    sensitive << ( j_0_i_reg_208 );
    sensitive << ( icmp_ln81_reg_318 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln84_1_reg_327 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_col_inbuf_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_0_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_1_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_2_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_3_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_4_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_4_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_5_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_5_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_6_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_6_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_fu_307_p1 );

    SC_METHOD(thread_col_inbuf_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_col_inbuf_7_d0);
    sensitive << ( row_outbuf_i_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_col_inbuf_7_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln84_reg_338 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_i_fu_301_p2);
    sensitive << ( select_ln84_fu_254_p3 );

    SC_METHOD(thread_icmp_ln81_fu_230_p2);
    sensitive << ( indvar_flatten_reg_197 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln83_fu_248_p2);
    sensitive << ( i_1_i_reg_219 );
    sensitive << ( icmp_ln81_fu_230_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_242_p2);
    sensitive << ( ap_phi_mux_j_0_i_phi_fu_212_p4 );

    SC_METHOD(thread_row_outbuf_i_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln84_3_fu_292_p1 );

    SC_METHOD(thread_row_outbuf_i_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_select_ln84_1_fu_262_p3);
    sensitive << ( ap_phi_mux_j_0_i_phi_fu_212_p4 );
    sensitive << ( icmp_ln83_fu_248_p2 );
    sensitive << ( j_fu_242_p2 );

    SC_METHOD(thread_select_ln84_fu_254_p3);
    sensitive << ( i_1_i_reg_219 );
    sensitive << ( icmp_ln83_fu_248_p2 );

    SC_METHOD(thread_tmp_fu_274_p3);
    sensitive << ( select_ln84_fu_254_p3 );

    SC_METHOD(thread_trunc_ln84_fu_297_p1);
    sensitive << ( select_ln84_fu_254_p3 );

    SC_METHOD(thread_zext_ln84_1_fu_270_p1);
    sensitive << ( select_ln84_1_fu_262_p3 );

    SC_METHOD(thread_zext_ln84_2_fu_282_p1);
    sensitive << ( tmp_fu_274_p3 );

    SC_METHOD(thread_zext_ln84_3_fu_292_p1);
    sensitive << ( add_ln84_fu_286_p2 );

    SC_METHOD(thread_zext_ln84_fu_307_p1);
    sensitive << ( select_ln84_1_reg_327 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln81_fu_230_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_Xpose_Row_Outer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, row_outbuf_i_address0, "(port)row_outbuf_i_address0");
    sc_trace(mVcdFile, row_outbuf_i_ce0, "(port)row_outbuf_i_ce0");
    sc_trace(mVcdFile, row_outbuf_i_q0, "(port)row_outbuf_i_q0");
    sc_trace(mVcdFile, col_inbuf_0_address0, "(port)col_inbuf_0_address0");
    sc_trace(mVcdFile, col_inbuf_0_ce0, "(port)col_inbuf_0_ce0");
    sc_trace(mVcdFile, col_inbuf_0_we0, "(port)col_inbuf_0_we0");
    sc_trace(mVcdFile, col_inbuf_0_d0, "(port)col_inbuf_0_d0");
    sc_trace(mVcdFile, col_inbuf_1_address0, "(port)col_inbuf_1_address0");
    sc_trace(mVcdFile, col_inbuf_1_ce0, "(port)col_inbuf_1_ce0");
    sc_trace(mVcdFile, col_inbuf_1_we0, "(port)col_inbuf_1_we0");
    sc_trace(mVcdFile, col_inbuf_1_d0, "(port)col_inbuf_1_d0");
    sc_trace(mVcdFile, col_inbuf_2_address0, "(port)col_inbuf_2_address0");
    sc_trace(mVcdFile, col_inbuf_2_ce0, "(port)col_inbuf_2_ce0");
    sc_trace(mVcdFile, col_inbuf_2_we0, "(port)col_inbuf_2_we0");
    sc_trace(mVcdFile, col_inbuf_2_d0, "(port)col_inbuf_2_d0");
    sc_trace(mVcdFile, col_inbuf_3_address0, "(port)col_inbuf_3_address0");
    sc_trace(mVcdFile, col_inbuf_3_ce0, "(port)col_inbuf_3_ce0");
    sc_trace(mVcdFile, col_inbuf_3_we0, "(port)col_inbuf_3_we0");
    sc_trace(mVcdFile, col_inbuf_3_d0, "(port)col_inbuf_3_d0");
    sc_trace(mVcdFile, col_inbuf_4_address0, "(port)col_inbuf_4_address0");
    sc_trace(mVcdFile, col_inbuf_4_ce0, "(port)col_inbuf_4_ce0");
    sc_trace(mVcdFile, col_inbuf_4_we0, "(port)col_inbuf_4_we0");
    sc_trace(mVcdFile, col_inbuf_4_d0, "(port)col_inbuf_4_d0");
    sc_trace(mVcdFile, col_inbuf_5_address0, "(port)col_inbuf_5_address0");
    sc_trace(mVcdFile, col_inbuf_5_ce0, "(port)col_inbuf_5_ce0");
    sc_trace(mVcdFile, col_inbuf_5_we0, "(port)col_inbuf_5_we0");
    sc_trace(mVcdFile, col_inbuf_5_d0, "(port)col_inbuf_5_d0");
    sc_trace(mVcdFile, col_inbuf_6_address0, "(port)col_inbuf_6_address0");
    sc_trace(mVcdFile, col_inbuf_6_ce0, "(port)col_inbuf_6_ce0");
    sc_trace(mVcdFile, col_inbuf_6_we0, "(port)col_inbuf_6_we0");
    sc_trace(mVcdFile, col_inbuf_6_d0, "(port)col_inbuf_6_d0");
    sc_trace(mVcdFile, col_inbuf_7_address0, "(port)col_inbuf_7_address0");
    sc_trace(mVcdFile, col_inbuf_7_ce0, "(port)col_inbuf_7_ce0");
    sc_trace(mVcdFile, col_inbuf_7_we0, "(port)col_inbuf_7_we0");
    sc_trace(mVcdFile, col_inbuf_7_d0, "(port)col_inbuf_7_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_197, "indvar_flatten_reg_197");
    sc_trace(mVcdFile, j_0_i_reg_208, "j_0_i_reg_208");
    sc_trace(mVcdFile, i_1_i_reg_219, "i_1_i_reg_219");
    sc_trace(mVcdFile, icmp_ln81_fu_230_p2, "icmp_ln81_fu_230_p2");
    sc_trace(mVcdFile, icmp_ln81_reg_318, "icmp_ln81_reg_318");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln81_fu_236_p2, "add_ln81_fu_236_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln84_1_fu_262_p3, "select_ln84_1_fu_262_p3");
    sc_trace(mVcdFile, select_ln84_1_reg_327, "select_ln84_1_reg_327");
    sc_trace(mVcdFile, trunc_ln84_fu_297_p1, "trunc_ln84_fu_297_p1");
    sc_trace(mVcdFile, trunc_ln84_reg_338, "trunc_ln84_reg_338");
    sc_trace(mVcdFile, i_fu_301_p2, "i_fu_301_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_phi_mux_j_0_i_phi_fu_212_p4, "ap_phi_mux_j_0_i_phi_fu_212_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln84_3_fu_292_p1, "zext_ln84_3_fu_292_p1");
    sc_trace(mVcdFile, zext_ln84_fu_307_p1, "zext_ln84_fu_307_p1");
    sc_trace(mVcdFile, icmp_ln83_fu_248_p2, "icmp_ln83_fu_248_p2");
    sc_trace(mVcdFile, j_fu_242_p2, "j_fu_242_p2");
    sc_trace(mVcdFile, select_ln84_fu_254_p3, "select_ln84_fu_254_p3");
    sc_trace(mVcdFile, tmp_fu_274_p3, "tmp_fu_274_p3");
    sc_trace(mVcdFile, zext_ln84_2_fu_282_p1, "zext_ln84_2_fu_282_p1");
    sc_trace(mVcdFile, zext_ln84_1_fu_270_p1, "zext_ln84_1_fu_270_p1");
    sc_trace(mVcdFile, add_ln84_fu_286_p2, "add_ln84_fu_286_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_Xpose_Row_Outer::~Loop_Xpose_Row_Outer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_Xpose_Row_Outer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln81_fu_230_p2.read(), ap_const_lv1_0))) {
        i_1_i_reg_219 = i_fu_301_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_1_i_reg_219 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln81_fu_230_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_197 = add_ln81_fu_236_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_197 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln81_reg_318.read(), ap_const_lv1_0))) {
        j_0_i_reg_208 = select_ln84_1_reg_327.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        j_0_i_reg_208 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln81_reg_318 = icmp_ln81_fu_230_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln81_fu_230_p2.read(), ap_const_lv1_0))) {
        select_ln84_1_reg_327 = select_ln84_1_fu_262_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln81_fu_230_p2.read(), ap_const_lv1_0))) {
        trunc_ln84_reg_338 = trunc_ln84_fu_297_p1.read();
    }
}

void Loop_Xpose_Row_Outer::thread_add_ln81_fu_236_p2() {
    add_ln81_fu_236_p2 = (!indvar_flatten_reg_197.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(indvar_flatten_reg_197.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Loop_Xpose_Row_Outer::thread_add_ln84_fu_286_p2() {
    add_ln84_fu_286_p2 = (!zext_ln84_2_fu_282_p1.read().is_01() || !zext_ln84_1_fu_270_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln84_2_fu_282_p1.read()) + sc_biguint<8>(zext_ln84_1_fu_270_p1.read()));
}

void Loop_Xpose_Row_Outer::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_Xpose_Row_Outer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_Xpose_Row_Outer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void Loop_Xpose_Row_Outer::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Xpose_Row_Outer::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Xpose_Row_Outer::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Xpose_Row_Outer::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_Xpose_Row_Outer::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Xpose_Row_Outer::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Xpose_Row_Outer::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln81_fu_230_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_Xpose_Row_Outer::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_Xpose_Row_Outer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_ap_phi_mux_j_0_i_phi_fu_212_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln81_reg_318.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_i_phi_fu_212_p4 = select_ln84_1_reg_327.read();
    } else {
        ap_phi_mux_j_0_i_phi_fu_212_p4 = j_0_i_reg_208.read();
    }
}

void Loop_Xpose_Row_Outer::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_0_address0() {
    col_inbuf_0_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_0_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_0_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_0_d0() {
    col_inbuf_0_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_0))) {
        col_inbuf_0_we0 = ap_const_logic_1;
    } else {
        col_inbuf_0_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_1_address0() {
    col_inbuf_1_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_1_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_1_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_1_d0() {
    col_inbuf_1_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_1))) {
        col_inbuf_1_we0 = ap_const_logic_1;
    } else {
        col_inbuf_1_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_2_address0() {
    col_inbuf_2_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_2_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_2_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_2_d0() {
    col_inbuf_2_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_2))) {
        col_inbuf_2_we0 = ap_const_logic_1;
    } else {
        col_inbuf_2_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_3_address0() {
    col_inbuf_3_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_3_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_3_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_3_d0() {
    col_inbuf_3_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_3))) {
        col_inbuf_3_we0 = ap_const_logic_1;
    } else {
        col_inbuf_3_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_4_address0() {
    col_inbuf_4_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_4_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_4_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_4_d0() {
    col_inbuf_4_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_4))) {
        col_inbuf_4_we0 = ap_const_logic_1;
    } else {
        col_inbuf_4_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_5_address0() {
    col_inbuf_5_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_5_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_5_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_5_d0() {
    col_inbuf_5_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_5))) {
        col_inbuf_5_we0 = ap_const_logic_1;
    } else {
        col_inbuf_5_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_6_address0() {
    col_inbuf_6_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_6_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_6_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_6_d0() {
    col_inbuf_6_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_6))) {
        col_inbuf_6_we0 = ap_const_logic_1;
    } else {
        col_inbuf_6_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_7_address0() {
    col_inbuf_7_address0 =  (sc_lv<3>) (zext_ln84_fu_307_p1.read());
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        col_inbuf_7_ce0 = ap_const_logic_1;
    } else {
        col_inbuf_7_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_7_d0() {
    col_inbuf_7_d0 = row_outbuf_i_q0.read();
}

void Loop_Xpose_Row_Outer::thread_col_inbuf_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,3,3>(trunc_ln84_reg_338.read(), ap_const_lv3_7))) {
        col_inbuf_7_we0 = ap_const_logic_1;
    } else {
        col_inbuf_7_we0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_i_fu_301_p2() {
    i_fu_301_p2 = (!select_ln84_fu_254_p3.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(select_ln84_fu_254_p3.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Loop_Xpose_Row_Outer::thread_icmp_ln81_fu_230_p2() {
    icmp_ln81_fu_230_p2 = (!indvar_flatten_reg_197.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_197.read() == ap_const_lv7_40);
}

void Loop_Xpose_Row_Outer::thread_icmp_ln83_fu_248_p2() {
    icmp_ln83_fu_248_p2 = (!i_1_i_reg_219.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_1_i_reg_219.read() == ap_const_lv4_8);
}

void Loop_Xpose_Row_Outer::thread_j_fu_242_p2() {
    j_fu_242_p2 = (!ap_const_lv4_1.is_01() || !ap_phi_mux_j_0_i_phi_fu_212_p4.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(ap_phi_mux_j_0_i_phi_fu_212_p4.read()));
}

void Loop_Xpose_Row_Outer::thread_row_outbuf_i_address0() {
    row_outbuf_i_address0 =  (sc_lv<6>) (zext_ln84_3_fu_292_p1.read());
}

void Loop_Xpose_Row_Outer::thread_row_outbuf_i_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        row_outbuf_i_ce0 = ap_const_logic_1;
    } else {
        row_outbuf_i_ce0 = ap_const_logic_0;
    }
}

void Loop_Xpose_Row_Outer::thread_select_ln84_1_fu_262_p3() {
    select_ln84_1_fu_262_p3 = (!icmp_ln83_fu_248_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln83_fu_248_p2.read()[0].to_bool())? j_fu_242_p2.read(): ap_phi_mux_j_0_i_phi_fu_212_p4.read());
}

void Loop_Xpose_Row_Outer::thread_select_ln84_fu_254_p3() {
    select_ln84_fu_254_p3 = (!icmp_ln83_fu_248_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln83_fu_248_p2.read()[0].to_bool())? ap_const_lv4_0: i_1_i_reg_219.read());
}

void Loop_Xpose_Row_Outer::thread_tmp_fu_274_p3() {
    tmp_fu_274_p3 = esl_concat<4,3>(select_ln84_fu_254_p3.read(), ap_const_lv3_0);
}

void Loop_Xpose_Row_Outer::thread_trunc_ln84_fu_297_p1() {
    trunc_ln84_fu_297_p1 = select_ln84_fu_254_p3.read().range(3-1, 0);
}

void Loop_Xpose_Row_Outer::thread_zext_ln84_1_fu_270_p1() {
    zext_ln84_1_fu_270_p1 = esl_zext<8,4>(select_ln84_1_fu_262_p3.read());
}

void Loop_Xpose_Row_Outer::thread_zext_ln84_2_fu_282_p1() {
    zext_ln84_2_fu_282_p1 = esl_zext<8,7>(tmp_fu_274_p3.read());
}

void Loop_Xpose_Row_Outer::thread_zext_ln84_3_fu_292_p1() {
    zext_ln84_3_fu_292_p1 = esl_zext<64,8>(add_ln84_fu_286_p2.read());
}

void Loop_Xpose_Row_Outer::thread_zext_ln84_fu_307_p1() {
    zext_ln84_fu_307_p1 = esl_zext<64,4>(select_ln84_1_reg_327.read());
}

void Loop_Xpose_Row_Outer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln81_fu_230_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln81_fu_230_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

