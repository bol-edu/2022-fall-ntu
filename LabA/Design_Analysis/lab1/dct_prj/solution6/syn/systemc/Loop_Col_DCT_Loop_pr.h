// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_Col_DCT_Loop_pr_HH_
#define _Loop_Col_DCT_Loop_pr_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dct_mul_mul_15s_1jbC.h"
#include "dct_mac_muladd_15kbM.h"
#include "dct_mac_muladd_14lbW.h"
#include "dct_mac_muladd_15mb6.h"
#include "Loop_Row_DCT_Loopbkb.h"
#include "Loop_Row_DCT_Loopcud.h"
#include "Loop_Row_DCT_LoopdEe.h"
#include "Loop_Row_DCT_LoopeOg.h"
#include "Loop_Row_DCT_LoopfYi.h"
#include "Loop_Row_DCT_Loopg8j.h"
#include "Loop_Row_DCT_Loophbi.h"
#include "Loop_Row_DCT_Loopibs.h"

namespace ap_rtl {

struct Loop_Col_DCT_Loop_pr : public sc_module {
    // Port declarations 35
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > col_inbuf_0_address0;
    sc_out< sc_logic > col_inbuf_0_ce0;
    sc_in< sc_lv<16> > col_inbuf_0_q0;
    sc_out< sc_lv<3> > col_inbuf_1_address0;
    sc_out< sc_logic > col_inbuf_1_ce0;
    sc_in< sc_lv<16> > col_inbuf_1_q0;
    sc_out< sc_lv<3> > col_inbuf_2_address0;
    sc_out< sc_logic > col_inbuf_2_ce0;
    sc_in< sc_lv<16> > col_inbuf_2_q0;
    sc_out< sc_lv<3> > col_inbuf_3_address0;
    sc_out< sc_logic > col_inbuf_3_ce0;
    sc_in< sc_lv<16> > col_inbuf_3_q0;
    sc_out< sc_lv<3> > col_inbuf_4_address0;
    sc_out< sc_logic > col_inbuf_4_ce0;
    sc_in< sc_lv<16> > col_inbuf_4_q0;
    sc_out< sc_lv<3> > col_inbuf_5_address0;
    sc_out< sc_logic > col_inbuf_5_ce0;
    sc_in< sc_lv<16> > col_inbuf_5_q0;
    sc_out< sc_lv<3> > col_inbuf_6_address0;
    sc_out< sc_logic > col_inbuf_6_ce0;
    sc_in< sc_lv<16> > col_inbuf_6_q0;
    sc_out< sc_lv<3> > col_inbuf_7_address0;
    sc_out< sc_logic > col_inbuf_7_ce0;
    sc_in< sc_lv<16> > col_inbuf_7_q0;
    sc_out< sc_lv<6> > col_outbuf_i_address0;
    sc_out< sc_logic > col_outbuf_i_ce0;
    sc_out< sc_logic > col_outbuf_i_we0;
    sc_out< sc_lv<16> > col_outbuf_i_d0;


    // Module declarations
    Loop_Col_DCT_Loop_pr(sc_module_name name);
    SC_HAS_PROCESS(Loop_Col_DCT_Loop_pr);

    ~Loop_Col_DCT_Loop_pr();

    sc_trace_file* mVcdFile;

    Loop_Row_DCT_Loopbkb* dct_coeff_table_0_U;
    Loop_Row_DCT_Loopcud* dct_coeff_table_1_U;
    Loop_Row_DCT_LoopdEe* dct_coeff_table_2_U;
    Loop_Row_DCT_LoopeOg* dct_coeff_table_3_U;
    Loop_Row_DCT_LoopfYi* dct_coeff_table_4_U;
    Loop_Row_DCT_Loopg8j* dct_coeff_table_5_U;
    Loop_Row_DCT_Loophbi* dct_coeff_table_6_U;
    Loop_Row_DCT_Loopibs* dct_coeff_table_7_U;
    dct_mul_mul_15s_1jbC<1,1,15,16,29>* dct_mul_mul_15s_1jbC_U48;
    dct_mul_mul_15s_1jbC<1,1,15,16,29>* dct_mul_mul_15s_1jbC_U49;
    dct_mul_mul_15s_1jbC<1,1,15,16,29>* dct_mul_mul_15s_1jbC_U50;
    dct_mac_muladd_15kbM<1,1,15,16,14,29>* dct_mac_muladd_15kbM_U51;
    dct_mac_muladd_14lbW<1,1,14,16,29,29>* dct_mac_muladd_14lbW_U52;
    dct_mac_muladd_15mb6<1,1,15,16,29,29>* dct_mac_muladd_15mb6_U53;
    dct_mac_muladd_15mb6<1,1,15,16,29,29>* dct_mac_muladd_15mb6_U54;
    dct_mac_muladd_15mb6<1,1,15,16,29,29>* dct_mac_muladd_15mb6_U55;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > dct_coeff_table_0_address0;
    sc_signal< sc_logic > dct_coeff_table_0_ce0;
    sc_signal< sc_lv<14> > dct_coeff_table_0_q0;
    sc_signal< sc_lv<3> > dct_coeff_table_1_address0;
    sc_signal< sc_logic > dct_coeff_table_1_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_1_q0;
    sc_signal< sc_lv<3> > dct_coeff_table_2_address0;
    sc_signal< sc_logic > dct_coeff_table_2_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_2_q0;
    sc_signal< sc_lv<3> > dct_coeff_table_3_address0;
    sc_signal< sc_logic > dct_coeff_table_3_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_3_q0;
    sc_signal< sc_lv<3> > dct_coeff_table_4_address0;
    sc_signal< sc_logic > dct_coeff_table_4_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_4_q0;
    sc_signal< sc_lv<3> > dct_coeff_table_5_address0;
    sc_signal< sc_logic > dct_coeff_table_5_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_5_q0;
    sc_signal< sc_lv<3> > dct_coeff_table_6_address0;
    sc_signal< sc_logic > dct_coeff_table_6_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_6_q0;
    sc_signal< sc_lv<3> > dct_coeff_table_7_address0;
    sc_signal< sc_logic > dct_coeff_table_7_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_7_q0;
    sc_signal< sc_lv<4> > k_0_i_reg_302;
    sc_signal< sc_lv<1> > icmp_ln87_fu_313_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > i_fu_319_p2;
    sc_signal< sc_lv<4> > i_reg_533;
    sc_signal< sc_lv<8> > zext_ln48_2_fu_345_p1;
    sc_signal< sc_lv<8> > zext_ln48_2_reg_538;
    sc_signal< sc_lv<3> > col_inbuf_0_addr_reg_543;
    sc_signal< sc_lv<3> > col_inbuf_1_addr_reg_548;
    sc_signal< sc_lv<3> > col_inbuf_2_addr_reg_553;
    sc_signal< sc_lv<3> > col_inbuf_3_addr_reg_558;
    sc_signal< sc_lv<3> > col_inbuf_4_addr_reg_563;
    sc_signal< sc_lv<3> > col_inbuf_5_addr_reg_568;
    sc_signal< sc_lv<3> > col_inbuf_6_addr_reg_573;
    sc_signal< sc_lv<3> > col_inbuf_7_addr_reg_578;
    sc_signal< sc_lv<1> > icmp_ln55_fu_349_p2;
    sc_signal< sc_lv<1> > icmp_ln55_reg_583;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln55_reg_583_pp0_iter1_reg;
    sc_signal< sc_lv<4> > k_fu_355_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > add_ln63_15_fu_377_p2;
    sc_signal< sc_lv<8> > add_ln63_15_reg_592;
    sc_signal< sc_lv<8> > add_ln63_15_reg_592_pp0_iter1_reg;
    sc_signal< sc_lv<14> > dct_coeff_table_0_lo_reg_637;
    sc_signal< sc_lv<29> > mul_ln61_8_fu_471_p2;
    sc_signal< sc_lv<29> > mul_ln61_8_reg_642;
    sc_signal< sc_lv<15> > dct_coeff_table_2_lo_reg_647;
    sc_signal< sc_lv<29> > mul_ln61_10_fu_477_p2;
    sc_signal< sc_lv<29> > mul_ln61_10_reg_652;
    sc_signal< sc_lv<15> > dct_coeff_table_4_lo_reg_657;
    sc_signal< sc_lv<29> > mul_ln61_12_fu_483_p2;
    sc_signal< sc_lv<29> > mul_ln61_12_reg_662;
    sc_signal< sc_lv<15> > dct_coeff_table_6_lo_reg_667;
    sc_signal< sc_lv<29> > grp_fu_489_p3;
    sc_signal< sc_lv<29> > add_ln63_11_reg_672;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<4> > i_2_i_reg_291;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln48_fu_325_p1;
    sc_signal< sc_lv<64> > zext_ln60_fu_361_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln63_2_fu_414_p1;
    sc_signal< sc_lv<7> > tmp_fu_337_p3;
    sc_signal< sc_lv<8> > zext_ln63_fu_373_p1;
    sc_signal< sc_lv<29> > grp_fu_497_p3;
    sc_signal< sc_lv<29> > grp_fu_505_p3;
    sc_signal< sc_lv<29> > grp_fu_513_p3;
    sc_signal< sc_lv<29> > grp_fu_521_p3;
    sc_signal< sc_lv<29> > add_ln63_9_fu_446_p2;
    sc_signal< sc_lv<29> > add_ln63_13_fu_450_p2;
    sc_signal< sc_lv<29> > add_ln63_14_fu_454_p2;
    sc_signal< sc_lv<14> > grp_fu_489_p2;
    sc_signal< sc_lv<14> > grp_fu_497_p0;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<29> > grp_fu_497_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<29> ap_const_lv29_1000;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln63_13_fu_450_p2();
    void thread_add_ln63_14_fu_454_p2();
    void thread_add_ln63_15_fu_377_p2();
    void thread_add_ln63_9_fu_446_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_col_inbuf_0_address0();
    void thread_col_inbuf_0_ce0();
    void thread_col_inbuf_1_address0();
    void thread_col_inbuf_1_ce0();
    void thread_col_inbuf_2_address0();
    void thread_col_inbuf_2_ce0();
    void thread_col_inbuf_3_address0();
    void thread_col_inbuf_3_ce0();
    void thread_col_inbuf_4_address0();
    void thread_col_inbuf_4_ce0();
    void thread_col_inbuf_5_address0();
    void thread_col_inbuf_5_ce0();
    void thread_col_inbuf_6_address0();
    void thread_col_inbuf_6_ce0();
    void thread_col_inbuf_7_address0();
    void thread_col_inbuf_7_ce0();
    void thread_col_outbuf_i_address0();
    void thread_col_outbuf_i_ce0();
    void thread_col_outbuf_i_d0();
    void thread_col_outbuf_i_we0();
    void thread_dct_coeff_table_0_address0();
    void thread_dct_coeff_table_0_ce0();
    void thread_dct_coeff_table_1_address0();
    void thread_dct_coeff_table_1_ce0();
    void thread_dct_coeff_table_2_address0();
    void thread_dct_coeff_table_2_ce0();
    void thread_dct_coeff_table_3_address0();
    void thread_dct_coeff_table_3_ce0();
    void thread_dct_coeff_table_4_address0();
    void thread_dct_coeff_table_4_ce0();
    void thread_dct_coeff_table_5_address0();
    void thread_dct_coeff_table_5_ce0();
    void thread_dct_coeff_table_6_address0();
    void thread_dct_coeff_table_6_ce0();
    void thread_dct_coeff_table_7_address0();
    void thread_dct_coeff_table_7_ce0();
    void thread_grp_fu_489_p2();
    void thread_grp_fu_497_p0();
    void thread_grp_fu_497_p00();
    void thread_i_fu_319_p2();
    void thread_icmp_ln55_fu_349_p2();
    void thread_icmp_ln87_fu_313_p2();
    void thread_k_fu_355_p2();
    void thread_tmp_fu_337_p3();
    void thread_zext_ln48_2_fu_345_p1();
    void thread_zext_ln48_fu_325_p1();
    void thread_zext_ln60_fu_361_p1();
    void thread_zext_ln63_2_fu_414_p1();
    void thread_zext_ln63_fu_373_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
