

================================================================
== Vivado HLS Report for 'dct_1d2'
================================================================
* Date:           Thu Oct 13 22:33:01 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        dct_prj
* Solution:       solution2
* Product family: virtexuplus
* Target device:  xcvu9p-flgb2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 8.00 ns | 4.143 ns |   1.00 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       89|       89| 0.712 us | 0.712 us |   89|   89|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- DCT_Outer_Loop   |       88|       88|        11|          -|          -|     8|    no    |
        | + DCT_Inner_Loop  |        8|        8|         2|          1|          1|     8|    yes   |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 5 4 
4 --> 3 
5 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.73>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%dst_offset_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %dst_offset)" [dct.cpp:63]   --->   Operation 6 'read' 'dst_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%src_offset_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %src_offset)" [dct.cpp:63]   --->   Operation 7 'read' 'src_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp_4 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %dst_offset_read, i3 0)" [dct.cpp:63]   --->   Operation 8 'bitconcatenate' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i7 %tmp_4 to i8" [dct.cpp:61]   --->   Operation 9 'zext' 'zext_ln61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp_5 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %src_offset_read, i3 0)" [dct.cpp:61]   --->   Operation 10 'bitconcatenate' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i7 %tmp_5 to i8" [dct.cpp:48]   --->   Operation 11 'zext' 'zext_ln48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.73ns)   --->   "br label %1" [dct.cpp:55]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.73>

State 2 <SV = 1> <Delay = 0.85>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%k_0 = phi i4 [ 0, %0 ], [ %k, %DCT_Outer_Loop_end ]"   --->   Operation 13 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.72ns)   --->   "%icmp_ln55 = icmp eq i4 %k_0, -8" [dct.cpp:55]   --->   Operation 14 'icmp' 'icmp_ln55' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 15 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.80ns)   --->   "%k = add i4 %k_0, 1" [dct.cpp:55]   --->   Operation 16 'add' 'k' <Predicate = true> <Delay = 0.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln55, label %3, label %DCT_Outer_Loop_begin" [dct.cpp:55]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str) nounwind" [dct.cpp:55]   --->   Operation 18 'specloopname' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str) nounwind" [dct.cpp:55]   --->   Operation 19 'specregionbegin' 'tmp_6' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln60 = zext i4 %k_0 to i8" [dct.cpp:60]   --->   Operation 20 'zext' 'zext_ln60' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %k_0, i3 0)" [dct.cpp:60]   --->   Operation 21 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i7 %tmp_8 to i8" [dct.cpp:63]   --->   Operation 22 'zext' 'zext_ln63' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.85ns)   --->   "%add_ln63_1 = add i8 %zext_ln60, %zext_ln61" [dct.cpp:63]   --->   Operation 23 'add' 'add_ln63_1' <Predicate = (!icmp_ln55)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln63_1 = zext i8 %add_ln63_1 to i64" [dct.cpp:63]   --->   Operation 24 'zext' 'zext_ln63_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%dst_addr = getelementptr [64 x i16]* %dst, i64 0, i64 %zext_ln63_1" [dct.cpp:63]   --->   Operation 25 'getelementptr' 'dst_addr' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.73ns)   --->   "br label %2" [dct.cpp:57]   --->   Operation 26 'br' <Predicate = (!icmp_ln55)> <Delay = 0.73>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "ret void" [dct.cpp:65]   --->   Operation 27 'ret' <Predicate = (icmp_ln55)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.15>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%n_0 = phi i4 [ 0, %DCT_Outer_Loop_begin ], [ %n, %DCT_Inner_Loop ]"   --->   Operation 28 'phi' 'n_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_0 = phi i32 [ 0, %DCT_Outer_Loop_begin ], [ %tmp, %DCT_Inner_Loop ]"   --->   Operation 29 'phi' 'tmp_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.72ns)   --->   "%icmp_ln57 = icmp eq i4 %n_0, -8" [dct.cpp:57]   --->   Operation 30 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 0.72> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 31 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.80ns)   --->   "%n = add i4 %n_0, 1" [dct.cpp:57]   --->   Operation 32 'add' 'n' <Predicate = true> <Delay = 0.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "br i1 %icmp_ln57, label %DCT_Outer_Loop_end, label %DCT_Inner_Loop" [dct.cpp:57]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i4 %n_0 to i8" [dct.cpp:60]   --->   Operation 34 'zext' 'zext_ln60_1' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.85ns)   --->   "%add_ln60 = add i8 %zext_ln63, %zext_ln60_1" [dct.cpp:60]   --->   Operation 35 'add' 'add_ln60' <Predicate = (!icmp_ln57)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i8 %add_ln60 to i64" [dct.cpp:60]   --->   Operation 36 'zext' 'zext_ln60_2' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%dct_coeff_table_addr = getelementptr [64 x i15]* @dct_coeff_table, i64 0, i64 %zext_ln60_2" [dct.cpp:60]   --->   Operation 37 'getelementptr' 'dct_coeff_table_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.85ns)   --->   "%add_ln61 = add i8 %zext_ln48, %zext_ln60_1" [dct.cpp:61]   --->   Operation 38 'add' 'add_ln61' <Predicate = (!icmp_ln57)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln61_1 = zext i8 %add_ln61 to i64" [dct.cpp:61]   --->   Operation 39 'zext' 'zext_ln61_1' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%src_addr = getelementptr [64 x i16]* %src, i64 0, i64 %zext_ln61_1" [dct.cpp:61]   --->   Operation 40 'getelementptr' 'src_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_3 : Operation 41 [2/2] (1.29ns)   --->   "%dct_coeff_table_load = load i15* %dct_coeff_table_addr, align 2" [dct.cpp:60]   --->   Operation 41 'load' 'dct_coeff_table_load' <Predicate = (!icmp_ln57)> <Delay = 1.29> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 15> <Depth = 64> <ROM>
ST_3 : Operation 42 [2/2] (1.29ns)   --->   "%src_load = load i16* %src_addr, align 2" [dct.cpp:61]   --->   Operation 42 'load' 'src_load' <Predicate = (!icmp_ln57)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>

State 4 <SV = 3> <Delay = 4.14>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str1) nounwind" [dct.cpp:57]   --->   Operation 43 'specloopname' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str1) nounwind" [dct.cpp:57]   --->   Operation 44 'specregionbegin' 'tmp_7' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [dct.cpp:58]   --->   Operation 45 'specpipeline' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_4 : Operation 46 [1/2] (1.29ns)   --->   "%dct_coeff_table_load = load i15* %dct_coeff_table_addr, align 2" [dct.cpp:60]   --->   Operation 46 'load' 'dct_coeff_table_load' <Predicate = (!icmp_ln57)> <Delay = 1.29> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 15> <Depth = 64> <ROM>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln60 = sext i15 %dct_coeff_table_load to i31" [dct.cpp:60]   --->   Operation 47 'sext' 'sext_ln60' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_4 : Operation 48 [1/2] (1.29ns)   --->   "%src_load = load i16* %src_addr, align 2" [dct.cpp:61]   --->   Operation 48 'load' 'src_load' <Predicate = (!icmp_ln57)> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%sext_ln61 = sext i16 %src_load to i31" [dct.cpp:61]   --->   Operation 49 'sext' 'sext_ln61' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.63ns) (grouped into DSP with root node tmp)   --->   "%mul_ln61 = mul i31 %sext_ln60, %sext_ln61" [dct.cpp:61]   --->   Operation 50 'mul' 'mul_ln61' <Predicate = (!icmp_ln57)> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 51 [1/1] (0.00ns) (grouped into DSP with root node tmp)   --->   "%sext_ln61_1 = sext i31 %mul_ln61 to i32" [dct.cpp:61]   --->   Operation 51 'sext' 'sext_ln61_1' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (2.20ns) (root node of the DSP)   --->   "%tmp = add nsw i32 %tmp_0, %sext_ln61_1" [dct.cpp:61]   --->   Operation 52 'add' 'tmp' <Predicate = (!icmp_ln57)> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str1, i32 %tmp_7) nounwind" [dct.cpp:62]   --->   Operation 53 'specregionend' 'empty_11' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br label %2" [dct.cpp:57]   --->   Operation 54 'br' <Predicate = (!icmp_ln57)> <Delay = 0.00>

State 5 <SV = 3> <Delay = 2.43>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln57 = trunc i32 %tmp_0 to i29" [dct.cpp:57]   --->   Operation 55 'trunc' 'trunc_ln57' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (1.13ns)   --->   "%add_ln63 = add i29 4096, %trunc_ln57" [dct.cpp:63]   --->   Operation 56 'add' 'add_ln63' <Predicate = true> <Delay = 1.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln1 = call i16 @_ssdm_op_PartSelect.i16.i29.i32.i32(i29 %add_ln63, i32 13, i32 28)" [dct.cpp:63]   --->   Operation 57 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (1.29ns)   --->   "store i16 %trunc_ln1, i16* %dst_addr, align 2" [dct.cpp:63]   --->   Operation 58 'store' <Predicate = true> <Delay = 1.29> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str, i32 %tmp_6) nounwind" [dct.cpp:64]   --->   Operation 59 'specregionend' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "br label %1" [dct.cpp:55]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 0.736ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('k') with incoming values : ('k', dct.cpp:55) [15]  (0.736 ns)

 <State 2>: 0.856ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', dct.cpp:55) [15]  (0 ns)
	'add' operation ('add_ln63_1', dct.cpp:63) [26]  (0.856 ns)

 <State 3>: 2.15ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', dct.cpp:57) [31]  (0 ns)
	'add' operation ('add_ln60', dct.cpp:60) [42]  (0.856 ns)
	'getelementptr' operation ('dct_coeff_table_addr', dct.cpp:60) [44]  (0 ns)
	'load' operation ('dct_coeff_table_load', dct.cpp:60) on array 'dct_coeff_table' [48]  (1.3 ns)

 <State 4>: 4.14ns
The critical path consists of the following:
	'load' operation ('dct_coeff_table_load', dct.cpp:60) on array 'dct_coeff_table' [48]  (1.3 ns)
	'mul' operation of DSP[54] ('mul_ln61', dct.cpp:61) [52]  (0.638 ns)
	'add' operation of DSP[54] ('tmp', dct.cpp:61) [54]  (2.21 ns)

 <State 5>: 2.44ns
The critical path consists of the following:
	'add' operation ('add_ln63', dct.cpp:63) [59]  (1.14 ns)
	'store' operation ('store_ln63', dct.cpp:63) of variable 'trunc_ln1', dct.cpp:63 on array 'dst' [61]  (1.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
