-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axi_interfaces is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    d_i_0_TVALID : IN STD_LOGIC;
    d_o_0_TREADY : IN STD_LOGIC;
    d_i_1_TVALID : IN STD_LOGIC;
    d_o_1_TREADY : IN STD_LOGIC;
    d_i_2_TVALID : IN STD_LOGIC;
    d_o_2_TREADY : IN STD_LOGIC;
    d_i_3_TVALID : IN STD_LOGIC;
    d_o_3_TREADY : IN STD_LOGIC;
    d_i_4_TVALID : IN STD_LOGIC;
    d_o_4_TREADY : IN STD_LOGIC;
    d_i_5_TVALID : IN STD_LOGIC;
    d_o_5_TREADY : IN STD_LOGIC;
    d_i_6_TVALID : IN STD_LOGIC;
    d_o_6_TREADY : IN STD_LOGIC;
    d_i_7_TVALID : IN STD_LOGIC;
    d_o_7_TREADY : IN STD_LOGIC;
    d_o_0_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_TVALID : OUT STD_LOGIC;
    d_o_1_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_TVALID : OUT STD_LOGIC;
    d_o_2_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_TVALID : OUT STD_LOGIC;
    d_o_3_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_TVALID : OUT STD_LOGIC;
    d_o_4_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_4_TVALID : OUT STD_LOGIC;
    d_o_5_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_5_TVALID : OUT STD_LOGIC;
    d_o_6_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_6_TVALID : OUT STD_LOGIC;
    d_o_7_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_7_TVALID : OUT STD_LOGIC;
    d_i_0_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_TREADY : OUT STD_LOGIC;
    d_i_1_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_TREADY : OUT STD_LOGIC;
    d_i_2_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2_TREADY : OUT STD_LOGIC;
    d_i_3_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3_TREADY : OUT STD_LOGIC;
    d_i_4_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_4_TREADY : OUT STD_LOGIC;
    d_i_5_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_5_TREADY : OUT STD_LOGIC;
    d_i_6_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_6_TREADY : OUT STD_LOGIC;
    d_i_7_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_7_TREADY : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of axi_interfaces is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "axi_interfaces_axi_interfaces,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.140000,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=563,HLS_SYN_LUT=880,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal tmp_fu_648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal regslice_both_d_o_0_U_apdone_blk : STD_LOGIC;
    signal regslice_both_d_o_1_U_apdone_blk : STD_LOGIC;
    signal regslice_both_d_o_2_U_apdone_blk : STD_LOGIC;
    signal regslice_both_d_o_3_U_apdone_blk : STD_LOGIC;
    signal regslice_both_d_o_4_U_apdone_blk : STD_LOGIC;
    signal regslice_both_d_o_5_U_apdone_blk : STD_LOGIC;
    signal regslice_both_d_o_6_U_apdone_blk : STD_LOGIC;
    signal regslice_both_d_o_7_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal d_o_0_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal d_o_1_TDATA_blk_n : STD_LOGIC;
    signal d_o_2_TDATA_blk_n : STD_LOGIC;
    signal d_o_3_TDATA_blk_n : STD_LOGIC;
    signal d_o_4_TDATA_blk_n : STD_LOGIC;
    signal d_o_5_TDATA_blk_n : STD_LOGIC;
    signal d_o_6_TDATA_blk_n : STD_LOGIC;
    signal d_o_7_TDATA_blk_n : STD_LOGIC;
    signal d_i_0_TDATA_blk_n : STD_LOGIC;
    signal d_i_1_TDATA_blk_n : STD_LOGIC;
    signal d_i_2_TDATA_blk_n : STD_LOGIC;
    signal d_i_3_TDATA_blk_n : STD_LOGIC;
    signal d_i_4_TDATA_blk_n : STD_LOGIC;
    signal d_i_5_TDATA_blk_n : STD_LOGIC;
    signal d_i_6_TDATA_blk_n : STD_LOGIC;
    signal d_i_7_TDATA_blk_n : STD_LOGIC;
    signal do_init_reg_204 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_reg_332 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln66_fu_478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_reg_706 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_1_fu_499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_1_reg_716 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_2_fu_520_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_2_reg_726 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_3_fu_541_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_3_reg_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_4_fu_562_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_4_reg_746 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_5_fu_583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_5_reg_756 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_6_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_6_reg_766 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_7_fu_625_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_7_reg_776 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln64_fu_644_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln64_reg_786 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_791 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_208_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_i1_phi_fu_336_p6 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_add216_phi_fu_349_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add216_reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_1414_phi_fu_359_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add_1414_reg_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_2612_phi_fu_369_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add_2612_reg_366 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_3810_phi_fu_379_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add_3810_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_4108_phi_fu_389_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add_4108_reg_386 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_5126_phi_fu_399_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add_5126_reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_6144_phi_fu_409_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add_6144_reg_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_7162_phi_fu_419_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_add_7162_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal sext_ln66_fu_470_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_484_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_fu_474_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_1_fu_491_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_1_fu_491_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_1_fu_505_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_1_fu_495_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_2_fu_512_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_2_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_2_fu_526_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_2_fu_516_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_3_fu_533_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_3_fu_533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_3_fu_547_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_3_fu_537_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_4_fu_554_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_4_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_4_fu_568_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_4_fu_558_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_5_fu_575_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_5_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_5_fu_589_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_5_fu_579_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_6_fu_596_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_6_fu_596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_6_fu_610_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_6_fu_600_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_7_fu_617_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln66_7_fu_617_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_7_fu_631_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln66_7_fu_621_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal i1_cast_fu_466_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_fu_638_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal d_o_0_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_0_TVALID_int_regslice : STD_LOGIC;
    signal d_o_0_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_0_U_vld_out : STD_LOGIC;
    signal d_o_1_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_1_TVALID_int_regslice : STD_LOGIC;
    signal d_o_1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_1_U_vld_out : STD_LOGIC;
    signal d_o_2_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_2_TVALID_int_regslice : STD_LOGIC;
    signal d_o_2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_2_U_vld_out : STD_LOGIC;
    signal d_o_3_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_3_TVALID_int_regslice : STD_LOGIC;
    signal d_o_3_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_3_U_vld_out : STD_LOGIC;
    signal d_o_4_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_4_TVALID_int_regslice : STD_LOGIC;
    signal d_o_4_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_4_U_vld_out : STD_LOGIC;
    signal d_o_5_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_5_TVALID_int_regslice : STD_LOGIC;
    signal d_o_5_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_5_U_vld_out : STD_LOGIC;
    signal d_o_6_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_6_TVALID_int_regslice : STD_LOGIC;
    signal d_o_6_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_6_U_vld_out : STD_LOGIC;
    signal d_o_7_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_7_TVALID_int_regslice : STD_LOGIC;
    signal d_o_7_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_o_7_U_vld_out : STD_LOGIC;
    signal regslice_both_d_i_0_U_apdone_blk : STD_LOGIC;
    signal d_i_0_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_TVALID_int_regslice : STD_LOGIC;
    signal d_i_0_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_0_U_ack_in : STD_LOGIC;
    signal regslice_both_d_i_1_U_apdone_blk : STD_LOGIC;
    signal d_i_1_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_TVALID_int_regslice : STD_LOGIC;
    signal d_i_1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_1_U_ack_in : STD_LOGIC;
    signal regslice_both_d_i_2_U_apdone_blk : STD_LOGIC;
    signal d_i_2_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_2_TVALID_int_regslice : STD_LOGIC;
    signal d_i_2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_2_U_ack_in : STD_LOGIC;
    signal regslice_both_d_i_3_U_apdone_blk : STD_LOGIC;
    signal d_i_3_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_3_TVALID_int_regslice : STD_LOGIC;
    signal d_i_3_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_3_U_ack_in : STD_LOGIC;
    signal regslice_both_d_i_4_U_apdone_blk : STD_LOGIC;
    signal d_i_4_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_4_TVALID_int_regslice : STD_LOGIC;
    signal d_i_4_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_4_U_ack_in : STD_LOGIC;
    signal regslice_both_d_i_5_U_apdone_blk : STD_LOGIC;
    signal d_i_5_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_5_TVALID_int_regslice : STD_LOGIC;
    signal d_i_5_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_5_U_ack_in : STD_LOGIC;
    signal regslice_both_d_i_6_U_apdone_blk : STD_LOGIC;
    signal d_i_6_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_6_TVALID_int_regslice : STD_LOGIC;
    signal d_i_6_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_6_U_ack_in : STD_LOGIC;
    signal regslice_both_d_i_7_U_apdone_blk : STD_LOGIC;
    signal d_i_7_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_7_TVALID_int_regslice : STD_LOGIC;
    signal d_i_7_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_d_i_7_U_ack_in : STD_LOGIC;
    signal ap_condition_178 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component axi_interfaces_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component axi_interfaces_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    control_s_axi_U : component axi_interfaces_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    regslice_both_d_o_0_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_0_TDATA_int_regslice,
        vld_in => d_o_0_TVALID_int_regslice,
        ack_in => d_o_0_TREADY_int_regslice,
        data_out => d_o_0_TDATA,
        vld_out => regslice_both_d_o_0_U_vld_out,
        ack_out => d_o_0_TREADY,
        apdone_blk => regslice_both_d_o_0_U_apdone_blk);

    regslice_both_d_o_1_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_1_TDATA_int_regslice,
        vld_in => d_o_1_TVALID_int_regslice,
        ack_in => d_o_1_TREADY_int_regslice,
        data_out => d_o_1_TDATA,
        vld_out => regslice_both_d_o_1_U_vld_out,
        ack_out => d_o_1_TREADY,
        apdone_blk => regslice_both_d_o_1_U_apdone_blk);

    regslice_both_d_o_2_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_2_TDATA_int_regslice,
        vld_in => d_o_2_TVALID_int_regslice,
        ack_in => d_o_2_TREADY_int_regslice,
        data_out => d_o_2_TDATA,
        vld_out => regslice_both_d_o_2_U_vld_out,
        ack_out => d_o_2_TREADY,
        apdone_blk => regslice_both_d_o_2_U_apdone_blk);

    regslice_both_d_o_3_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_3_TDATA_int_regslice,
        vld_in => d_o_3_TVALID_int_regslice,
        ack_in => d_o_3_TREADY_int_regslice,
        data_out => d_o_3_TDATA,
        vld_out => regslice_both_d_o_3_U_vld_out,
        ack_out => d_o_3_TREADY,
        apdone_blk => regslice_both_d_o_3_U_apdone_blk);

    regslice_both_d_o_4_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_4_TDATA_int_regslice,
        vld_in => d_o_4_TVALID_int_regslice,
        ack_in => d_o_4_TREADY_int_regslice,
        data_out => d_o_4_TDATA,
        vld_out => regslice_both_d_o_4_U_vld_out,
        ack_out => d_o_4_TREADY,
        apdone_blk => regslice_both_d_o_4_U_apdone_blk);

    regslice_both_d_o_5_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_5_TDATA_int_regslice,
        vld_in => d_o_5_TVALID_int_regslice,
        ack_in => d_o_5_TREADY_int_regslice,
        data_out => d_o_5_TDATA,
        vld_out => regslice_both_d_o_5_U_vld_out,
        ack_out => d_o_5_TREADY,
        apdone_blk => regslice_both_d_o_5_U_apdone_blk);

    regslice_both_d_o_6_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_6_TDATA_int_regslice,
        vld_in => d_o_6_TVALID_int_regslice,
        ack_in => d_o_6_TREADY_int_regslice,
        data_out => d_o_6_TDATA,
        vld_out => regslice_both_d_o_6_U_vld_out,
        ack_out => d_o_6_TREADY,
        apdone_blk => regslice_both_d_o_6_U_apdone_blk);

    regslice_both_d_o_7_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_o_7_TDATA_int_regslice,
        vld_in => d_o_7_TVALID_int_regslice,
        ack_in => d_o_7_TREADY_int_regslice,
        data_out => d_o_7_TDATA,
        vld_out => regslice_both_d_o_7_U_vld_out,
        ack_out => d_o_7_TREADY,
        apdone_blk => regslice_both_d_o_7_U_apdone_blk);

    regslice_both_d_i_0_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_0_TDATA,
        vld_in => d_i_0_TVALID,
        ack_in => regslice_both_d_i_0_U_ack_in,
        data_out => d_i_0_TDATA_int_regslice,
        vld_out => d_i_0_TVALID_int_regslice,
        ack_out => d_i_0_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_0_U_apdone_blk);

    regslice_both_d_i_1_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_1_TDATA,
        vld_in => d_i_1_TVALID,
        ack_in => regslice_both_d_i_1_U_ack_in,
        data_out => d_i_1_TDATA_int_regslice,
        vld_out => d_i_1_TVALID_int_regslice,
        ack_out => d_i_1_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_1_U_apdone_blk);

    regslice_both_d_i_2_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_2_TDATA,
        vld_in => d_i_2_TVALID,
        ack_in => regslice_both_d_i_2_U_ack_in,
        data_out => d_i_2_TDATA_int_regslice,
        vld_out => d_i_2_TVALID_int_regslice,
        ack_out => d_i_2_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_2_U_apdone_blk);

    regslice_both_d_i_3_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_3_TDATA,
        vld_in => d_i_3_TVALID,
        ack_in => regslice_both_d_i_3_U_ack_in,
        data_out => d_i_3_TDATA_int_regslice,
        vld_out => d_i_3_TVALID_int_regslice,
        ack_out => d_i_3_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_3_U_apdone_blk);

    regslice_both_d_i_4_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_4_TDATA,
        vld_in => d_i_4_TVALID,
        ack_in => regslice_both_d_i_4_U_ack_in,
        data_out => d_i_4_TDATA_int_regslice,
        vld_out => d_i_4_TVALID_int_regslice,
        ack_out => d_i_4_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_4_U_apdone_blk);

    regslice_both_d_i_5_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_5_TDATA,
        vld_in => d_i_5_TVALID,
        ack_in => regslice_both_d_i_5_U_ack_in,
        data_out => d_i_5_TDATA_int_regslice,
        vld_out => d_i_5_TVALID_int_regslice,
        ack_out => d_i_5_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_5_U_apdone_blk);

    regslice_both_d_i_6_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_6_TDATA,
        vld_in => d_i_6_TVALID,
        ack_in => regslice_both_d_i_6_U_ack_in,
        data_out => d_i_6_TDATA_int_regslice,
        vld_out => d_i_6_TVALID_int_regslice,
        ack_out => d_i_6_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_6_U_apdone_blk);

    regslice_both_d_i_7_U : component axi_interfaces_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => d_i_7_TDATA,
        vld_in => d_i_7_TVALID,
        ack_in => regslice_both_d_i_7_U_ack_in,
        data_out => d_i_7_TDATA_int_regslice,
        vld_out => d_i_7_TVALID_int_regslice,
        ack_out => d_i_7_TREADY_int_regslice,
        apdone_blk => regslice_both_d_i_7_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    do_init_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_791 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                do_init_reg_204 <= ap_const_lv1_0;
            elsif ((((tmp_reg_791 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_204 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i1_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_791 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i1_reg_332 <= trunc_ln64_reg_786;
            elsif ((((tmp_reg_791 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                i1_reg_332 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (tmp_fu_648_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_0 <= add_ln66_fu_478_p2;
                acc_1 <= add_ln66_1_fu_499_p2;
                acc_2 <= add_ln66_2_fu_520_p2;
                acc_3 <= add_ln66_3_fu_541_p2;
                acc_4 <= add_ln66_4_fu_562_p2;
                acc_5 <= add_ln66_5_fu_583_p2;
                acc_6 <= add_ln66_6_fu_604_p2;
                acc_7 <= add_ln66_7_fu_625_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln66_1_reg_716 <= add_ln66_1_fu_499_p2;
                add_ln66_2_reg_726 <= add_ln66_2_fu_520_p2;
                add_ln66_3_reg_736 <= add_ln66_3_fu_541_p2;
                add_ln66_4_reg_746 <= add_ln66_4_fu_562_p2;
                add_ln66_5_reg_756 <= add_ln66_5_fu_583_p2;
                add_ln66_6_reg_766 <= add_ln66_6_fu_604_p2;
                add_ln66_7_reg_776 <= add_ln66_7_fu_625_p2;
                add_ln66_reg_706 <= add_ln66_fu_478_p2;
                trunc_ln64_reg_786 <= trunc_ln64_fu_644_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_791 <= i_fu_638_p2(5 downto 5);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln66_1_fu_499_p2 <= std_logic_vector(signed(sext_ln66_1_fu_491_p1) + signed(ap_phi_mux_add_1414_phi_fu_359_p4));
    add_ln66_2_fu_520_p2 <= std_logic_vector(signed(sext_ln66_2_fu_512_p1) + signed(ap_phi_mux_add_2612_phi_fu_369_p4));
    add_ln66_3_fu_541_p2 <= std_logic_vector(signed(sext_ln66_3_fu_533_p1) + signed(ap_phi_mux_add_3810_phi_fu_379_p4));
    add_ln66_4_fu_562_p2 <= std_logic_vector(signed(sext_ln66_4_fu_554_p1) + signed(ap_phi_mux_add_4108_phi_fu_389_p4));
    add_ln66_5_fu_583_p2 <= std_logic_vector(signed(sext_ln66_5_fu_575_p1) + signed(ap_phi_mux_add_5126_phi_fu_399_p4));
    add_ln66_6_fu_604_p2 <= std_logic_vector(signed(sext_ln66_6_fu_596_p1) + signed(ap_phi_mux_add_6144_phi_fu_409_p4));
    add_ln66_7_fu_625_p2 <= std_logic_vector(signed(sext_ln66_7_fu_617_p1) + signed(ap_phi_mux_add_7162_phi_fu_419_p4));
    add_ln66_fu_478_p2 <= std_logic_vector(signed(sext_ln66_fu_470_p1) + signed(ap_phi_mux_add216_phi_fu_349_p4));
    add_ln67_1_fu_505_p0 <= d_i_1_TDATA_int_regslice;
    add_ln67_2_fu_526_p0 <= d_i_2_TDATA_int_regslice;
    add_ln67_3_fu_547_p0 <= d_i_3_TDATA_int_regslice;
    add_ln67_4_fu_568_p0 <= d_i_4_TDATA_int_regslice;
    add_ln67_5_fu_589_p0 <= d_i_5_TDATA_int_regslice;
    add_ln67_6_fu_610_p0 <= d_i_6_TDATA_int_regslice;
    add_ln67_7_fu_631_p0 <= d_i_7_TDATA_int_regslice;
    add_ln67_fu_484_p0 <= d_i_0_TDATA_int_regslice;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, regslice_both_d_o_0_U_apdone_blk, regslice_both_d_o_1_U_apdone_blk, regslice_both_d_o_2_U_apdone_blk, regslice_both_d_o_3_U_apdone_blk, regslice_both_d_o_4_U_apdone_blk, regslice_both_d_o_5_U_apdone_blk, regslice_both_d_o_6_U_apdone_blk, regslice_both_d_o_7_U_apdone_blk, ap_enable_reg_pp0_iter1, d_o_0_TREADY_int_regslice, d_o_1_TREADY_int_regslice, d_o_2_TREADY_int_regslice, d_o_3_TREADY_int_regslice, d_o_4_TREADY_int_regslice, d_o_5_TREADY_int_regslice, d_o_6_TREADY_int_regslice, d_o_7_TREADY_int_regslice, d_i_0_TVALID_int_regslice, d_i_1_TVALID_int_regslice, d_i_2_TVALID_int_regslice, d_i_3_TVALID_int_regslice, d_i_4_TVALID_int_regslice, d_i_5_TVALID_int_regslice, d_i_6_TVALID_int_regslice, d_i_7_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_1) and ((d_i_7_TVALID_int_regslice = ap_const_logic_0) or (d_i_6_TVALID_int_regslice = ap_const_logic_0) or (d_i_5_TVALID_int_regslice = ap_const_logic_0) or (d_i_4_TVALID_int_regslice = ap_const_logic_0) or (d_i_3_TVALID_int_regslice = ap_const_logic_0) or (d_i_2_TVALID_int_regslice = ap_const_logic_0) or (d_i_1_TVALID_int_regslice = ap_const_logic_0) or (d_i_0_TVALID_int_regslice = ap_const_logic_0) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_d_o_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_0_U_apdone_blk = ap_const_logic_1) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_d_o_7_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_6_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_5_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_4_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_3_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_block_state2_io, regslice_both_d_o_0_U_apdone_blk, regslice_both_d_o_1_U_apdone_blk, regslice_both_d_o_2_U_apdone_blk, regslice_both_d_o_3_U_apdone_blk, regslice_both_d_o_4_U_apdone_blk, regslice_both_d_o_5_U_apdone_blk, regslice_both_d_o_6_U_apdone_blk, regslice_both_d_o_7_U_apdone_blk, ap_block_state3_io, ap_enable_reg_pp0_iter1, d_o_0_TREADY_int_regslice, d_o_1_TREADY_int_regslice, d_o_2_TREADY_int_regslice, d_o_3_TREADY_int_regslice, d_o_4_TREADY_int_regslice, d_o_5_TREADY_int_regslice, d_o_6_TREADY_int_regslice, d_o_7_TREADY_int_regslice, d_i_0_TVALID_int_regslice, d_i_1_TVALID_int_regslice, d_i_2_TVALID_int_regslice, d_i_3_TVALID_int_regslice, d_i_4_TVALID_int_regslice, d_i_5_TVALID_int_regslice, d_i_6_TVALID_int_regslice, d_i_7_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_1) and ((d_i_7_TVALID_int_regslice = ap_const_logic_0) or (d_i_6_TVALID_int_regslice = ap_const_logic_0) or (d_i_5_TVALID_int_regslice = ap_const_logic_0) or (d_i_4_TVALID_int_regslice = ap_const_logic_0) or (d_i_3_TVALID_int_regslice = ap_const_logic_0) or (d_i_2_TVALID_int_regslice = ap_const_logic_0) or (d_i_1_TVALID_int_regslice = ap_const_logic_0) or (d_i_0_TVALID_int_regslice = ap_const_logic_0) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_d_o_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_0_U_apdone_blk = ap_const_logic_1) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_d_o_7_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_6_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_5_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_4_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_3_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_block_state2_io, regslice_both_d_o_0_U_apdone_blk, regslice_both_d_o_1_U_apdone_blk, regslice_both_d_o_2_U_apdone_blk, regslice_both_d_o_3_U_apdone_blk, regslice_both_d_o_4_U_apdone_blk, regslice_both_d_o_5_U_apdone_blk, regslice_both_d_o_6_U_apdone_blk, regslice_both_d_o_7_U_apdone_blk, ap_block_state3_io, ap_enable_reg_pp0_iter1, d_o_0_TREADY_int_regslice, d_o_1_TREADY_int_regslice, d_o_2_TREADY_int_regslice, d_o_3_TREADY_int_regslice, d_o_4_TREADY_int_regslice, d_o_5_TREADY_int_regslice, d_o_6_TREADY_int_regslice, d_o_7_TREADY_int_regslice, d_i_0_TVALID_int_regslice, d_i_1_TVALID_int_regslice, d_i_2_TVALID_int_regslice, d_i_3_TVALID_int_regslice, d_i_4_TVALID_int_regslice, d_i_5_TVALID_int_regslice, d_i_6_TVALID_int_regslice, d_i_7_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_start = ap_const_logic_1) and ((d_i_7_TVALID_int_regslice = ap_const_logic_0) or (d_i_6_TVALID_int_regslice = ap_const_logic_0) or (d_i_5_TVALID_int_regslice = ap_const_logic_0) or (d_i_4_TVALID_int_regslice = ap_const_logic_0) or (d_i_3_TVALID_int_regslice = ap_const_logic_0) or (d_i_2_TVALID_int_regslice = ap_const_logic_0) or (d_i_1_TVALID_int_regslice = ap_const_logic_0) or (d_i_0_TVALID_int_regslice = ap_const_logic_0) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_d_o_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_0_U_apdone_blk = ap_const_logic_1) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_d_o_7_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_6_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_5_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_4_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_3_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_state2_io_assign_proc : process(d_o_0_TREADY_int_regslice, d_o_1_TREADY_int_regslice, d_o_2_TREADY_int_regslice, d_o_3_TREADY_int_regslice, d_o_4_TREADY_int_regslice, d_o_5_TREADY_int_regslice, d_o_6_TREADY_int_regslice, d_o_7_TREADY_int_regslice)
    begin
                ap_block_state2_io <= ((d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(d_o_0_TREADY_int_regslice, d_o_1_TREADY_int_regslice, d_o_2_TREADY_int_regslice, d_o_3_TREADY_int_regslice, d_o_4_TREADY_int_regslice, d_o_5_TREADY_int_regslice, d_o_6_TREADY_int_regslice, d_o_7_TREADY_int_regslice, d_i_0_TVALID_int_regslice, d_i_1_TVALID_int_regslice, d_i_2_TVALID_int_regslice, d_i_3_TVALID_int_regslice, d_i_4_TVALID_int_regslice, d_i_5_TVALID_int_regslice, d_i_6_TVALID_int_regslice, d_i_7_TVALID_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((d_i_7_TVALID_int_regslice = ap_const_logic_0) or (d_i_6_TVALID_int_regslice = ap_const_logic_0) or (d_i_5_TVALID_int_regslice = ap_const_logic_0) or (d_i_4_TVALID_int_regslice = ap_const_logic_0) or (d_i_3_TVALID_int_regslice = ap_const_logic_0) or (d_i_2_TVALID_int_regslice = ap_const_logic_0) or (d_i_1_TVALID_int_regslice = ap_const_logic_0) or (d_i_0_TVALID_int_regslice = ap_const_logic_0) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(d_o_0_TREADY_int_regslice, d_o_1_TREADY_int_regslice, d_o_2_TREADY_int_regslice, d_o_3_TREADY_int_regslice, d_o_4_TREADY_int_regslice, d_o_5_TREADY_int_regslice, d_o_6_TREADY_int_regslice, d_o_7_TREADY_int_regslice)
    begin
                ap_block_state3_io <= ((d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(regslice_both_d_o_0_U_apdone_blk, regslice_both_d_o_1_U_apdone_blk, regslice_both_d_o_2_U_apdone_blk, regslice_both_d_o_3_U_apdone_blk, regslice_both_d_o_4_U_apdone_blk, regslice_both_d_o_5_U_apdone_blk, regslice_both_d_o_6_U_apdone_blk, regslice_both_d_o_7_U_apdone_blk, d_o_0_TREADY_int_regslice, d_o_1_TREADY_int_regslice, d_o_2_TREADY_int_regslice, d_o_3_TREADY_int_regslice, d_o_4_TREADY_int_regslice, d_o_5_TREADY_int_regslice, d_o_6_TREADY_int_regslice, d_o_7_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((regslice_both_d_o_2_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_1_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_0_U_apdone_blk = ap_const_logic_1) or (d_o_7_TREADY_int_regslice = ap_const_logic_0) or (d_o_6_TREADY_int_regslice = ap_const_logic_0) or (d_o_5_TREADY_int_regslice = ap_const_logic_0) or (d_o_4_TREADY_int_regslice = ap_const_logic_0) or (d_o_3_TREADY_int_regslice = ap_const_logic_0) or (d_o_2_TREADY_int_regslice = ap_const_logic_0) or (d_o_1_TREADY_int_regslice = ap_const_logic_0) or (d_o_0_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_d_o_7_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_6_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_5_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_4_U_apdone_blk = ap_const_logic_1) or (regslice_both_d_o_3_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_condition_178_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_178 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_reg_791)
    begin
        if (((tmp_reg_791 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_add216_phi_fu_349_p4_assign_proc : process(acc_0, add_ln66_reg_706, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add216_reg_346)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add216_phi_fu_349_p4 <= add_ln66_reg_706;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add216_phi_fu_349_p4 <= acc_0;
        else 
            ap_phi_mux_add216_phi_fu_349_p4 <= ap_phi_reg_pp0_iter0_add216_reg_346;
        end if; 
    end process;


    ap_phi_mux_add_1414_phi_fu_359_p4_assign_proc : process(acc_1, add_ln66_1_reg_716, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add_1414_reg_356)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add_1414_phi_fu_359_p4 <= add_ln66_1_reg_716;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add_1414_phi_fu_359_p4 <= acc_1;
        else 
            ap_phi_mux_add_1414_phi_fu_359_p4 <= ap_phi_reg_pp0_iter0_add_1414_reg_356;
        end if; 
    end process;


    ap_phi_mux_add_2612_phi_fu_369_p4_assign_proc : process(acc_2, add_ln66_2_reg_726, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add_2612_reg_366)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add_2612_phi_fu_369_p4 <= add_ln66_2_reg_726;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add_2612_phi_fu_369_p4 <= acc_2;
        else 
            ap_phi_mux_add_2612_phi_fu_369_p4 <= ap_phi_reg_pp0_iter0_add_2612_reg_366;
        end if; 
    end process;


    ap_phi_mux_add_3810_phi_fu_379_p4_assign_proc : process(acc_3, add_ln66_3_reg_736, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add_3810_reg_376)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add_3810_phi_fu_379_p4 <= add_ln66_3_reg_736;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add_3810_phi_fu_379_p4 <= acc_3;
        else 
            ap_phi_mux_add_3810_phi_fu_379_p4 <= ap_phi_reg_pp0_iter0_add_3810_reg_376;
        end if; 
    end process;


    ap_phi_mux_add_4108_phi_fu_389_p4_assign_proc : process(acc_4, add_ln66_4_reg_746, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add_4108_reg_386)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add_4108_phi_fu_389_p4 <= add_ln66_4_reg_746;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add_4108_phi_fu_389_p4 <= acc_4;
        else 
            ap_phi_mux_add_4108_phi_fu_389_p4 <= ap_phi_reg_pp0_iter0_add_4108_reg_386;
        end if; 
    end process;


    ap_phi_mux_add_5126_phi_fu_399_p4_assign_proc : process(acc_5, add_ln66_5_reg_756, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add_5126_reg_396)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add_5126_phi_fu_399_p4 <= add_ln66_5_reg_756;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add_5126_phi_fu_399_p4 <= acc_5;
        else 
            ap_phi_mux_add_5126_phi_fu_399_p4 <= ap_phi_reg_pp0_iter0_add_5126_reg_396;
        end if; 
    end process;


    ap_phi_mux_add_6144_phi_fu_409_p4_assign_proc : process(acc_6, add_ln66_6_reg_766, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add_6144_reg_406)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add_6144_phi_fu_409_p4 <= add_ln66_6_reg_766;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add_6144_phi_fu_409_p4 <= acc_6;
        else 
            ap_phi_mux_add_6144_phi_fu_409_p4 <= ap_phi_reg_pp0_iter0_add_6144_reg_406;
        end if; 
    end process;


    ap_phi_mux_add_7162_phi_fu_419_p4_assign_proc : process(acc_7, add_ln66_7_reg_776, ap_phi_mux_do_init_phi_fu_208_p6, ap_phi_reg_pp0_iter0_add_7162_reg_416)
    begin
        if ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_add_7162_phi_fu_419_p4 <= add_ln66_7_reg_776;
        elsif ((ap_phi_mux_do_init_phi_fu_208_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_add_7162_phi_fu_419_p4 <= acc_7;
        else 
            ap_phi_mux_add_7162_phi_fu_419_p4 <= ap_phi_reg_pp0_iter0_add_7162_reg_416;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_208_p6_assign_proc : process(do_init_reg_204, tmp_reg_791, ap_condition_178)
    begin
        if ((ap_const_boolean_1 = ap_condition_178)) then
            if ((tmp_reg_791 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_208_p6 <= ap_const_lv1_1;
            elsif ((tmp_reg_791 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_208_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_208_p6 <= do_init_reg_204;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_208_p6 <= do_init_reg_204;
        end if; 
    end process;


    ap_phi_mux_i1_phi_fu_336_p6_assign_proc : process(i1_reg_332, trunc_ln64_reg_786, tmp_reg_791, ap_condition_178)
    begin
        if ((ap_const_boolean_1 = ap_condition_178)) then
            if ((tmp_reg_791 = ap_const_lv1_1)) then 
                ap_phi_mux_i1_phi_fu_336_p6 <= ap_const_lv5_0;
            elsif ((tmp_reg_791 = ap_const_lv1_0)) then 
                ap_phi_mux_i1_phi_fu_336_p6 <= trunc_ln64_reg_786;
            else 
                ap_phi_mux_i1_phi_fu_336_p6 <= i1_reg_332;
            end if;
        else 
            ap_phi_mux_i1_phi_fu_336_p6 <= i1_reg_332;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_add216_reg_346 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_add_1414_reg_356 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_add_2612_reg_366 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_add_3810_reg_376 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_add_4108_reg_386 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_add_5126_reg_396 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_add_6144_reg_406 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_add_7162_reg_416 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_start, tmp_fu_648_p3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (tmp_fu_648_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    d_i_0_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_0_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_0_TDATA_blk_n <= d_i_0_TVALID_int_regslice;
        else 
            d_i_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_0_TREADY <= regslice_both_d_i_0_U_ack_in;

    d_i_0_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_0_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_0_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_1_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_1_TDATA_blk_n <= d_i_1_TVALID_int_regslice;
        else 
            d_i_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_1_TREADY <= regslice_both_d_i_1_U_ack_in;

    d_i_1_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_1_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_1_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_i_2_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_2_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_2_TDATA_blk_n <= d_i_2_TVALID_int_regslice;
        else 
            d_i_2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_2_TREADY <= regslice_both_d_i_2_U_ack_in;

    d_i_2_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_2_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_2_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_i_3_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_3_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_3_TDATA_blk_n <= d_i_3_TVALID_int_regslice;
        else 
            d_i_3_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_3_TREADY <= regslice_both_d_i_3_U_ack_in;

    d_i_3_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_3_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_3_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_i_4_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_4_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_4_TDATA_blk_n <= d_i_4_TVALID_int_regslice;
        else 
            d_i_4_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_4_TREADY <= regslice_both_d_i_4_U_ack_in;

    d_i_4_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_4_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_4_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_i_5_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_5_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_5_TDATA_blk_n <= d_i_5_TVALID_int_regslice;
        else 
            d_i_5_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_5_TREADY <= regslice_both_d_i_5_U_ack_in;

    d_i_5_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_5_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_5_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_i_6_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_6_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_6_TDATA_blk_n <= d_i_6_TVALID_int_regslice;
        else 
            d_i_6_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_6_TREADY <= regslice_both_d_i_6_U_ack_in;

    d_i_6_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_6_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_6_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_i_7_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, d_i_7_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            d_i_7_TDATA_blk_n <= d_i_7_TVALID_int_regslice;
        else 
            d_i_7_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_i_7_TREADY <= regslice_both_d_i_7_U_ack_in;

    d_i_7_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_i_7_TREADY_int_regslice <= ap_const_logic_1;
        else 
            d_i_7_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_0_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_0_TDATA_blk_n <= d_o_0_TREADY_int_regslice;
        else 
            d_o_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_0_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_fu_484_p0) + signed(trunc_ln66_fu_474_p1));
    d_o_0_TVALID <= regslice_both_d_o_0_U_vld_out;

    d_o_0_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_0_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_0_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_1_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_1_TDATA_blk_n <= d_o_1_TREADY_int_regslice;
        else 
            d_o_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_1_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_1_fu_505_p0) + signed(trunc_ln66_1_fu_495_p1));
    d_o_1_TVALID <= regslice_both_d_o_1_U_vld_out;

    d_o_1_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_1_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_1_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_2_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_2_TDATA_blk_n <= d_o_2_TREADY_int_regslice;
        else 
            d_o_2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_2_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_2_fu_526_p0) + signed(trunc_ln66_2_fu_516_p1));
    d_o_2_TVALID <= regslice_both_d_o_2_U_vld_out;

    d_o_2_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_2_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_2_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_3_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_3_TDATA_blk_n <= d_o_3_TREADY_int_regslice;
        else 
            d_o_3_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_3_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_3_fu_547_p0) + signed(trunc_ln66_3_fu_537_p1));
    d_o_3_TVALID <= regslice_both_d_o_3_U_vld_out;

    d_o_3_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_3_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_3_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_4_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_4_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_4_TDATA_blk_n <= d_o_4_TREADY_int_regslice;
        else 
            d_o_4_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_4_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_4_fu_568_p0) + signed(trunc_ln66_4_fu_558_p1));
    d_o_4_TVALID <= regslice_both_d_o_4_U_vld_out;

    d_o_4_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_4_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_4_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_5_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_5_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_5_TDATA_blk_n <= d_o_5_TREADY_int_regslice;
        else 
            d_o_5_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_5_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_5_fu_589_p0) + signed(trunc_ln66_5_fu_579_p1));
    d_o_5_TVALID <= regslice_both_d_o_5_U_vld_out;

    d_o_5_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_5_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_5_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_6_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_6_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_6_TDATA_blk_n <= d_o_6_TREADY_int_regslice;
        else 
            d_o_6_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_6_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_6_fu_610_p0) + signed(trunc_ln66_6_fu_600_p1));
    d_o_6_TVALID <= regslice_both_d_o_6_U_vld_out;

    d_o_6_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_6_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_6_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    d_o_7_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, d_o_7_TREADY_int_regslice)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            d_o_7_TDATA_blk_n <= d_o_7_TREADY_int_regslice;
        else 
            d_o_7_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    d_o_7_TDATA_int_regslice <= std_logic_vector(signed(add_ln67_7_fu_631_p0) + signed(trunc_ln66_7_fu_621_p1));
    d_o_7_TVALID <= regslice_both_d_o_7_U_vld_out;

    d_o_7_TVALID_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            d_o_7_TVALID_int_regslice <= ap_const_logic_1;
        else 
            d_o_7_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    i1_cast_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i1_phi_fu_336_p6),6));
    i_fu_638_p2 <= std_logic_vector(unsigned(i1_cast_fu_466_p1) + unsigned(ap_const_lv6_8));
    sext_ln66_1_fu_491_p0 <= d_i_1_TDATA_int_regslice;
        sext_ln66_1_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_1_fu_491_p0),32));

    sext_ln66_2_fu_512_p0 <= d_i_2_TDATA_int_regslice;
        sext_ln66_2_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_2_fu_512_p0),32));

    sext_ln66_3_fu_533_p0 <= d_i_3_TDATA_int_regslice;
        sext_ln66_3_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_3_fu_533_p0),32));

    sext_ln66_4_fu_554_p0 <= d_i_4_TDATA_int_regslice;
        sext_ln66_4_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_4_fu_554_p0),32));

    sext_ln66_5_fu_575_p0 <= d_i_5_TDATA_int_regslice;
        sext_ln66_5_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_5_fu_575_p0),32));

    sext_ln66_6_fu_596_p0 <= d_i_6_TDATA_int_regslice;
        sext_ln66_6_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_6_fu_596_p0),32));

    sext_ln66_7_fu_617_p0 <= d_i_7_TDATA_int_regslice;
        sext_ln66_7_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_7_fu_617_p0),32));

    sext_ln66_fu_470_p0 <= d_i_0_TDATA_int_regslice;
        sext_ln66_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln66_fu_470_p0),32));

    tmp_fu_648_p3 <= i_fu_638_p2(5 downto 5);
    trunc_ln64_fu_644_p1 <= i_fu_638_p2(5 - 1 downto 0);
    trunc_ln66_1_fu_495_p1 <= ap_phi_mux_add_1414_phi_fu_359_p4(16 - 1 downto 0);
    trunc_ln66_2_fu_516_p1 <= ap_phi_mux_add_2612_phi_fu_369_p4(16 - 1 downto 0);
    trunc_ln66_3_fu_537_p1 <= ap_phi_mux_add_3810_phi_fu_379_p4(16 - 1 downto 0);
    trunc_ln66_4_fu_558_p1 <= ap_phi_mux_add_4108_phi_fu_389_p4(16 - 1 downto 0);
    trunc_ln66_5_fu_579_p1 <= ap_phi_mux_add_5126_phi_fu_399_p4(16 - 1 downto 0);
    trunc_ln66_6_fu_600_p1 <= ap_phi_mux_add_6144_phi_fu_409_p4(16 - 1 downto 0);
    trunc_ln66_7_fu_621_p1 <= ap_phi_mux_add_7162_phi_fu_419_p4(16 - 1 downto 0);
    trunc_ln66_fu_474_p1 <= ap_phi_mux_add216_phi_fu_349_p4(16 - 1 downto 0);
end behav;
