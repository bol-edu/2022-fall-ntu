// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_interfaces_axi_interfaces,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.140000,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=527,HLS_SYN_LUT=840,HLS_VERSION=2022_1}" *)

module axi_interfaces (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_i_0_TVALID,
        d_o_0_TREADY,
        d_i_1_TVALID,
        d_o_1_TREADY,
        d_i_2_TVALID,
        d_o_2_TREADY,
        d_i_3_TVALID,
        d_o_3_TREADY,
        d_i_4_TVALID,
        d_o_4_TREADY,
        d_i_5_TVALID,
        d_o_5_TREADY,
        d_i_6_TVALID,
        d_o_6_TREADY,
        d_i_7_TVALID,
        d_o_7_TREADY,
        d_o_0_TDATA,
        d_o_0_TVALID,
        d_o_1_TDATA,
        d_o_1_TVALID,
        d_o_2_TDATA,
        d_o_2_TVALID,
        d_o_3_TDATA,
        d_o_3_TVALID,
        d_o_4_TDATA,
        d_o_4_TVALID,
        d_o_5_TDATA,
        d_o_5_TVALID,
        d_o_6_TDATA,
        d_o_6_TVALID,
        d_o_7_TDATA,
        d_o_7_TVALID,
        d_i_0_TDATA,
        d_i_0_TREADY,
        d_i_1_TDATA,
        d_i_1_TREADY,
        d_i_2_TDATA,
        d_i_2_TREADY,
        d_i_3_TDATA,
        d_i_3_TREADY,
        d_i_4_TDATA,
        d_i_4_TREADY,
        d_i_5_TDATA,
        d_i_5_TREADY,
        d_i_6_TDATA,
        d_i_6_TREADY,
        d_i_7_TDATA,
        d_i_7_TREADY
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   d_i_0_TVALID;
input   d_o_0_TREADY;
input   d_i_1_TVALID;
input   d_o_1_TREADY;
input   d_i_2_TVALID;
input   d_o_2_TREADY;
input   d_i_3_TVALID;
input   d_o_3_TREADY;
input   d_i_4_TVALID;
input   d_o_4_TREADY;
input   d_i_5_TVALID;
input   d_o_5_TREADY;
input   d_i_6_TVALID;
input   d_o_6_TREADY;
input   d_i_7_TVALID;
input   d_o_7_TREADY;
output  [15:0] d_o_0_TDATA;
output   d_o_0_TVALID;
output  [15:0] d_o_1_TDATA;
output   d_o_1_TVALID;
output  [15:0] d_o_2_TDATA;
output   d_o_2_TVALID;
output  [15:0] d_o_3_TDATA;
output   d_o_3_TVALID;
output  [15:0] d_o_4_TDATA;
output   d_o_4_TVALID;
output  [15:0] d_o_5_TDATA;
output   d_o_5_TVALID;
output  [15:0] d_o_6_TDATA;
output   d_o_6_TVALID;
output  [15:0] d_o_7_TDATA;
output   d_o_7_TVALID;
input  [15:0] d_i_0_TDATA;
output   d_i_0_TREADY;
input  [15:0] d_i_1_TDATA;
output   d_i_1_TREADY;
input  [15:0] d_i_2_TDATA;
output   d_i_2_TREADY;
input  [15:0] d_i_3_TDATA;
output   d_i_3_TREADY;
input  [15:0] d_i_4_TDATA;
output   d_i_4_TREADY;
input  [15:0] d_i_5_TDATA;
output   d_i_5_TREADY;
input  [15:0] d_i_6_TDATA;
output   d_i_6_TREADY;
input  [15:0] d_i_7_TDATA;
output   d_i_7_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_fu_644_p3;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state2_io;
wire    regslice_both_d_o_0_U_apdone_blk;
wire    regslice_both_d_o_1_U_apdone_blk;
wire    regslice_both_d_o_2_U_apdone_blk;
wire    regslice_both_d_o_3_U_apdone_blk;
wire    regslice_both_d_o_4_U_apdone_blk;
wire    regslice_both_d_o_5_U_apdone_blk;
wire    regslice_both_d_o_6_U_apdone_blk;
wire    regslice_both_d_o_7_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg    d_o_0_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    d_o_1_TDATA_blk_n;
reg    d_o_2_TDATA_blk_n;
reg    d_o_3_TDATA_blk_n;
reg    d_o_4_TDATA_blk_n;
reg    d_o_5_TDATA_blk_n;
reg    d_o_6_TDATA_blk_n;
reg    d_o_7_TDATA_blk_n;
reg    d_i_0_TDATA_blk_n;
reg    d_i_1_TDATA_blk_n;
reg    d_i_2_TDATA_blk_n;
reg    d_i_3_TDATA_blk_n;
reg    d_i_4_TDATA_blk_n;
reg    d_i_5_TDATA_blk_n;
reg    d_i_6_TDATA_blk_n;
reg    d_i_7_TDATA_blk_n;
reg   [0:0] do_init_reg_200;
reg   [4:0] i1_reg_328;
wire   [31:0] add_ln66_fu_474_p2;
reg   [31:0] add_ln66_reg_702;
wire   [31:0] add_ln66_1_fu_495_p2;
reg   [31:0] add_ln66_1_reg_712;
wire   [31:0] add_ln66_2_fu_516_p2;
reg   [31:0] add_ln66_2_reg_722;
wire   [31:0] add_ln66_3_fu_537_p2;
reg   [31:0] add_ln66_3_reg_732;
wire   [31:0] add_ln66_4_fu_558_p2;
reg   [31:0] add_ln66_4_reg_742;
wire   [31:0] add_ln66_5_fu_579_p2;
reg   [31:0] add_ln66_5_reg_752;
wire   [31:0] add_ln66_6_fu_600_p2;
reg   [31:0] add_ln66_6_reg_762;
wire   [31:0] add_ln66_7_fu_621_p2;
reg   [31:0] add_ln66_7_reg_772;
wire   [4:0] trunc_ln64_fu_640_p1;
reg   [4:0] trunc_ln64_reg_782;
reg   [0:0] tmp_reg_787;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_do_init_phi_fu_204_p6;
reg   [4:0] ap_phi_mux_i1_phi_fu_332_p6;
reg   [31:0] ap_phi_mux_add216_phi_fu_345_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add216_reg_342;
reg   [31:0] ap_phi_mux_add_1414_phi_fu_355_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add_1414_reg_352;
reg   [31:0] ap_phi_mux_add_2612_phi_fu_365_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add_2612_reg_362;
reg   [31:0] ap_phi_mux_add_3810_phi_fu_375_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add_3810_reg_372;
reg   [31:0] ap_phi_mux_add_4108_phi_fu_385_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add_4108_reg_382;
reg   [31:0] ap_phi_mux_add_5126_phi_fu_395_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add_5126_reg_392;
reg   [31:0] ap_phi_mux_add_6144_phi_fu_405_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add_6144_reg_402;
reg   [31:0] ap_phi_mux_add_7162_phi_fu_415_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_add_7162_reg_412;
reg    ap_block_pp0_stage0_01001;
wire  signed [15:0] sext_ln66_fu_466_p0;
wire  signed [31:0] sext_ln66_fu_466_p1;
wire  signed [15:0] add_ln67_fu_480_p0;
wire   [15:0] trunc_ln66_fu_470_p1;
wire  signed [15:0] sext_ln66_1_fu_487_p0;
wire  signed [31:0] sext_ln66_1_fu_487_p1;
wire  signed [15:0] add_ln67_1_fu_501_p0;
wire   [15:0] trunc_ln66_1_fu_491_p1;
wire  signed [15:0] sext_ln66_2_fu_508_p0;
wire  signed [31:0] sext_ln66_2_fu_508_p1;
wire  signed [15:0] add_ln67_2_fu_522_p0;
wire   [15:0] trunc_ln66_2_fu_512_p1;
wire  signed [15:0] sext_ln66_3_fu_529_p0;
wire  signed [31:0] sext_ln66_3_fu_529_p1;
wire  signed [15:0] add_ln67_3_fu_543_p0;
wire   [15:0] trunc_ln66_3_fu_533_p1;
wire  signed [15:0] sext_ln66_4_fu_550_p0;
wire  signed [31:0] sext_ln66_4_fu_550_p1;
wire  signed [15:0] add_ln67_4_fu_564_p0;
wire   [15:0] trunc_ln66_4_fu_554_p1;
wire  signed [15:0] sext_ln66_5_fu_571_p0;
wire  signed [31:0] sext_ln66_5_fu_571_p1;
wire  signed [15:0] add_ln67_5_fu_585_p0;
wire   [15:0] trunc_ln66_5_fu_575_p1;
wire  signed [15:0] sext_ln66_6_fu_592_p0;
wire  signed [31:0] sext_ln66_6_fu_592_p1;
wire  signed [15:0] add_ln67_6_fu_606_p0;
wire   [15:0] trunc_ln66_6_fu_596_p1;
wire  signed [15:0] sext_ln66_7_fu_613_p0;
wire  signed [31:0] sext_ln66_7_fu_613_p1;
wire  signed [15:0] add_ln67_7_fu_627_p0;
wire   [15:0] trunc_ln66_7_fu_617_p1;
wire   [5:0] i1_cast_fu_462_p1;
wire   [5:0] i_fu_634_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] d_o_0_TDATA_int_regslice;
reg    d_o_0_TVALID_int_regslice;
wire    d_o_0_TREADY_int_regslice;
wire    regslice_both_d_o_0_U_vld_out;
wire   [15:0] d_o_1_TDATA_int_regslice;
reg    d_o_1_TVALID_int_regslice;
wire    d_o_1_TREADY_int_regslice;
wire    regslice_both_d_o_1_U_vld_out;
wire   [15:0] d_o_2_TDATA_int_regslice;
reg    d_o_2_TVALID_int_regslice;
wire    d_o_2_TREADY_int_regslice;
wire    regslice_both_d_o_2_U_vld_out;
wire   [15:0] d_o_3_TDATA_int_regslice;
reg    d_o_3_TVALID_int_regslice;
wire    d_o_3_TREADY_int_regslice;
wire    regslice_both_d_o_3_U_vld_out;
wire   [15:0] d_o_4_TDATA_int_regslice;
reg    d_o_4_TVALID_int_regslice;
wire    d_o_4_TREADY_int_regslice;
wire    regslice_both_d_o_4_U_vld_out;
wire   [15:0] d_o_5_TDATA_int_regslice;
reg    d_o_5_TVALID_int_regslice;
wire    d_o_5_TREADY_int_regslice;
wire    regslice_both_d_o_5_U_vld_out;
wire   [15:0] d_o_6_TDATA_int_regslice;
reg    d_o_6_TVALID_int_regslice;
wire    d_o_6_TREADY_int_regslice;
wire    regslice_both_d_o_6_U_vld_out;
wire   [15:0] d_o_7_TDATA_int_regslice;
reg    d_o_7_TVALID_int_regslice;
wire    d_o_7_TREADY_int_regslice;
wire    regslice_both_d_o_7_U_vld_out;
wire    regslice_both_d_i_0_U_apdone_blk;
wire   [15:0] d_i_0_TDATA_int_regslice;
wire    d_i_0_TVALID_int_regslice;
reg    d_i_0_TREADY_int_regslice;
wire    regslice_both_d_i_0_U_ack_in;
wire    regslice_both_d_i_1_U_apdone_blk;
wire   [15:0] d_i_1_TDATA_int_regslice;
wire    d_i_1_TVALID_int_regslice;
reg    d_i_1_TREADY_int_regslice;
wire    regslice_both_d_i_1_U_ack_in;
wire    regslice_both_d_i_2_U_apdone_blk;
wire   [15:0] d_i_2_TDATA_int_regslice;
wire    d_i_2_TVALID_int_regslice;
reg    d_i_2_TREADY_int_regslice;
wire    regslice_both_d_i_2_U_ack_in;
wire    regslice_both_d_i_3_U_apdone_blk;
wire   [15:0] d_i_3_TDATA_int_regslice;
wire    d_i_3_TVALID_int_regslice;
reg    d_i_3_TREADY_int_regslice;
wire    regslice_both_d_i_3_U_ack_in;
wire    regslice_both_d_i_4_U_apdone_blk;
wire   [15:0] d_i_4_TDATA_int_regslice;
wire    d_i_4_TVALID_int_regslice;
reg    d_i_4_TREADY_int_regslice;
wire    regslice_both_d_i_4_U_ack_in;
wire    regslice_both_d_i_5_U_apdone_blk;
wire   [15:0] d_i_5_TDATA_int_regslice;
wire    d_i_5_TVALID_int_regslice;
reg    d_i_5_TREADY_int_regslice;
wire    regslice_both_d_i_5_U_ack_in;
wire    regslice_both_d_i_6_U_apdone_blk;
wire   [15:0] d_i_6_TDATA_int_regslice;
wire    d_i_6_TVALID_int_regslice;
reg    d_i_6_TREADY_int_regslice;
wire    regslice_both_d_i_6_U_ack_in;
wire    regslice_both_d_i_7_U_apdone_blk;
wire   [15:0] d_i_7_TDATA_int_regslice;
wire    d_i_7_TVALID_int_regslice;
reg    d_i_7_TREADY_int_regslice;
wire    regslice_both_d_i_7_U_ack_in;
reg    ap_condition_178;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_0_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_0_TDATA_int_regslice),
    .vld_in(d_o_0_TVALID_int_regslice),
    .ack_in(d_o_0_TREADY_int_regslice),
    .data_out(d_o_0_TDATA),
    .vld_out(regslice_both_d_o_0_U_vld_out),
    .ack_out(d_o_0_TREADY),
    .apdone_blk(regslice_both_d_o_0_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_1_TDATA_int_regslice),
    .vld_in(d_o_1_TVALID_int_regslice),
    .ack_in(d_o_1_TREADY_int_regslice),
    .data_out(d_o_1_TDATA),
    .vld_out(regslice_both_d_o_1_U_vld_out),
    .ack_out(d_o_1_TREADY),
    .apdone_blk(regslice_both_d_o_1_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_2_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_2_TDATA_int_regslice),
    .vld_in(d_o_2_TVALID_int_regslice),
    .ack_in(d_o_2_TREADY_int_regslice),
    .data_out(d_o_2_TDATA),
    .vld_out(regslice_both_d_o_2_U_vld_out),
    .ack_out(d_o_2_TREADY),
    .apdone_blk(regslice_both_d_o_2_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_3_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_3_TDATA_int_regslice),
    .vld_in(d_o_3_TVALID_int_regslice),
    .ack_in(d_o_3_TREADY_int_regslice),
    .data_out(d_o_3_TDATA),
    .vld_out(regslice_both_d_o_3_U_vld_out),
    .ack_out(d_o_3_TREADY),
    .apdone_blk(regslice_both_d_o_3_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_4_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_4_TDATA_int_regslice),
    .vld_in(d_o_4_TVALID_int_regslice),
    .ack_in(d_o_4_TREADY_int_regslice),
    .data_out(d_o_4_TDATA),
    .vld_out(regslice_both_d_o_4_U_vld_out),
    .ack_out(d_o_4_TREADY),
    .apdone_blk(regslice_both_d_o_4_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_5_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_5_TDATA_int_regslice),
    .vld_in(d_o_5_TVALID_int_regslice),
    .ack_in(d_o_5_TREADY_int_regslice),
    .data_out(d_o_5_TDATA),
    .vld_out(regslice_both_d_o_5_U_vld_out),
    .ack_out(d_o_5_TREADY),
    .apdone_blk(regslice_both_d_o_5_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_6_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_6_TDATA_int_regslice),
    .vld_in(d_o_6_TVALID_int_regslice),
    .ack_in(d_o_6_TREADY_int_regslice),
    .data_out(d_o_6_TDATA),
    .vld_out(regslice_both_d_o_6_U_vld_out),
    .ack_out(d_o_6_TREADY),
    .apdone_blk(regslice_both_d_o_6_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_o_7_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_o_7_TDATA_int_regslice),
    .vld_in(d_o_7_TVALID_int_regslice),
    .ack_in(d_o_7_TREADY_int_regslice),
    .data_out(d_o_7_TDATA),
    .vld_out(regslice_both_d_o_7_U_vld_out),
    .ack_out(d_o_7_TREADY),
    .apdone_blk(regslice_both_d_o_7_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_0_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_0_TDATA),
    .vld_in(d_i_0_TVALID),
    .ack_in(regslice_both_d_i_0_U_ack_in),
    .data_out(d_i_0_TDATA_int_regslice),
    .vld_out(d_i_0_TVALID_int_regslice),
    .ack_out(d_i_0_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_0_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_1_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_1_TDATA),
    .vld_in(d_i_1_TVALID),
    .ack_in(regslice_both_d_i_1_U_ack_in),
    .data_out(d_i_1_TDATA_int_regslice),
    .vld_out(d_i_1_TVALID_int_regslice),
    .ack_out(d_i_1_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_1_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_2_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_2_TDATA),
    .vld_in(d_i_2_TVALID),
    .ack_in(regslice_both_d_i_2_U_ack_in),
    .data_out(d_i_2_TDATA_int_regslice),
    .vld_out(d_i_2_TVALID_int_regslice),
    .ack_out(d_i_2_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_2_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_3_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_3_TDATA),
    .vld_in(d_i_3_TVALID),
    .ack_in(regslice_both_d_i_3_U_ack_in),
    .data_out(d_i_3_TDATA_int_regslice),
    .vld_out(d_i_3_TVALID_int_regslice),
    .ack_out(d_i_3_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_3_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_4_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_4_TDATA),
    .vld_in(d_i_4_TVALID),
    .ack_in(regslice_both_d_i_4_U_ack_in),
    .data_out(d_i_4_TDATA_int_regslice),
    .vld_out(d_i_4_TVALID_int_regslice),
    .ack_out(d_i_4_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_4_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_5_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_5_TDATA),
    .vld_in(d_i_5_TVALID),
    .ack_in(regslice_both_d_i_5_U_ack_in),
    .data_out(d_i_5_TDATA_int_regslice),
    .vld_out(d_i_5_TVALID_int_regslice),
    .ack_out(d_i_5_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_5_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_6_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_6_TDATA),
    .vld_in(d_i_6_TVALID),
    .ack_in(regslice_both_d_i_6_U_ack_in),
    .data_out(d_i_6_TDATA_int_regslice),
    .vld_out(d_i_6_TVALID_int_regslice),
    .ack_out(d_i_6_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_6_U_apdone_blk)
);

axi_interfaces_regslice_both #(
    .DataWidth( 16 ))
regslice_both_d_i_7_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_i_7_TDATA),
    .vld_in(d_i_7_TVALID),
    .ack_in(regslice_both_d_i_7_U_ack_in),
    .data_out(d_i_7_TDATA_int_regslice),
    .vld_out(d_i_7_TVALID_int_regslice),
    .ack_out(d_i_7_TREADY_int_regslice),
    .apdone_blk(regslice_both_d_i_7_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        do_init_reg_200 <= 1'd0;
    end else if ((((tmp_reg_787 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_200 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_787 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i1_reg_328 <= trunc_ln64_reg_782;
    end else if ((((tmp_reg_787 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        i1_reg_328 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (tmp_fu_644_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_0 <= add_ln66_fu_474_p2;
        acc_1 <= add_ln66_1_fu_495_p2;
        acc_2 <= add_ln66_2_fu_516_p2;
        acc_3 <= add_ln66_3_fu_537_p2;
        acc_4 <= add_ln66_4_fu_558_p2;
        acc_5 <= add_ln66_5_fu_579_p2;
        acc_6 <= add_ln66_6_fu_600_p2;
        acc_7 <= add_ln66_7_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln66_1_reg_712 <= add_ln66_1_fu_495_p2;
        add_ln66_2_reg_722 <= add_ln66_2_fu_516_p2;
        add_ln66_3_reg_732 <= add_ln66_3_fu_537_p2;
        add_ln66_4_reg_742 <= add_ln66_4_fu_558_p2;
        add_ln66_5_reg_752 <= add_ln66_5_fu_579_p2;
        add_ln66_6_reg_762 <= add_ln66_6_fu_600_p2;
        add_ln66_7_reg_772 <= add_ln66_7_fu_621_p2;
        add_ln66_reg_702 <= add_ln66_fu_474_p2;
        trunc_ln64_reg_782 <= trunc_ln64_fu_640_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_787 <= i_fu_634_p2[32'd5];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_787 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add216_phi_fu_345_p4 = add_ln66_reg_702;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add216_phi_fu_345_p4 = acc_0;
    end else begin
        ap_phi_mux_add216_phi_fu_345_p4 = ap_phi_reg_pp0_iter0_add216_reg_342;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add_1414_phi_fu_355_p4 = add_ln66_1_reg_712;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add_1414_phi_fu_355_p4 = acc_1;
    end else begin
        ap_phi_mux_add_1414_phi_fu_355_p4 = ap_phi_reg_pp0_iter0_add_1414_reg_352;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add_2612_phi_fu_365_p4 = add_ln66_2_reg_722;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add_2612_phi_fu_365_p4 = acc_2;
    end else begin
        ap_phi_mux_add_2612_phi_fu_365_p4 = ap_phi_reg_pp0_iter0_add_2612_reg_362;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add_3810_phi_fu_375_p4 = add_ln66_3_reg_732;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add_3810_phi_fu_375_p4 = acc_3;
    end else begin
        ap_phi_mux_add_3810_phi_fu_375_p4 = ap_phi_reg_pp0_iter0_add_3810_reg_372;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add_4108_phi_fu_385_p4 = add_ln66_4_reg_742;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add_4108_phi_fu_385_p4 = acc_4;
    end else begin
        ap_phi_mux_add_4108_phi_fu_385_p4 = ap_phi_reg_pp0_iter0_add_4108_reg_382;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add_5126_phi_fu_395_p4 = add_ln66_5_reg_752;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add_5126_phi_fu_395_p4 = acc_5;
    end else begin
        ap_phi_mux_add_5126_phi_fu_395_p4 = ap_phi_reg_pp0_iter0_add_5126_reg_392;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add_6144_phi_fu_405_p4 = add_ln66_6_reg_762;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add_6144_phi_fu_405_p4 = acc_6;
    end else begin
        ap_phi_mux_add_6144_phi_fu_405_p4 = ap_phi_reg_pp0_iter0_add_6144_reg_402;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd0)) begin
        ap_phi_mux_add_7162_phi_fu_415_p4 = add_ln66_7_reg_772;
    end else if ((ap_phi_mux_do_init_phi_fu_204_p6 == 1'd1)) begin
        ap_phi_mux_add_7162_phi_fu_415_p4 = acc_7;
    end else begin
        ap_phi_mux_add_7162_phi_fu_415_p4 = ap_phi_reg_pp0_iter0_add_7162_reg_412;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_178)) begin
        if ((tmp_reg_787 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_204_p6 = 1'd1;
        end else if ((tmp_reg_787 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_204_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_204_p6 = do_init_reg_200;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_204_p6 = do_init_reg_200;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_178)) begin
        if ((tmp_reg_787 == 1'd1)) begin
            ap_phi_mux_i1_phi_fu_332_p6 = 5'd0;
        end else if ((tmp_reg_787 == 1'd0)) begin
            ap_phi_mux_i1_phi_fu_332_p6 = trunc_ln64_reg_782;
        end else begin
            ap_phi_mux_i1_phi_fu_332_p6 = i1_reg_328;
        end
    end else begin
        ap_phi_mux_i1_phi_fu_332_p6 = i1_reg_328;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (tmp_fu_644_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_0_TDATA_blk_n = d_i_0_TVALID_int_regslice;
    end else begin
        d_i_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_0_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_0_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_1_TDATA_blk_n = d_i_1_TVALID_int_regslice;
    end else begin
        d_i_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_1_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_1_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_2_TDATA_blk_n = d_i_2_TVALID_int_regslice;
    end else begin
        d_i_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_2_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_2_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_3_TDATA_blk_n = d_i_3_TVALID_int_regslice;
    end else begin
        d_i_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_3_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_3_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_4_TDATA_blk_n = d_i_4_TVALID_int_regslice;
    end else begin
        d_i_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_4_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_4_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_5_TDATA_blk_n = d_i_5_TVALID_int_regslice;
    end else begin
        d_i_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_5_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_5_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_6_TDATA_blk_n = d_i_6_TVALID_int_regslice;
    end else begin
        d_i_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_6_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_6_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        d_i_7_TDATA_blk_n = d_i_7_TVALID_int_regslice;
    end else begin
        d_i_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_i_7_TREADY_int_regslice = 1'b1;
    end else begin
        d_i_7_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_0_TDATA_blk_n = d_o_0_TREADY_int_regslice;
    end else begin
        d_o_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_0_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_0_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_1_TDATA_blk_n = d_o_1_TREADY_int_regslice;
    end else begin
        d_o_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_1_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_1_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_2_TDATA_blk_n = d_o_2_TREADY_int_regslice;
    end else begin
        d_o_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_2_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_2_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_3_TDATA_blk_n = d_o_3_TREADY_int_regslice;
    end else begin
        d_o_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_3_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_3_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_4_TDATA_blk_n = d_o_4_TREADY_int_regslice;
    end else begin
        d_o_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_4_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_4_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_5_TDATA_blk_n = d_o_5_TREADY_int_regslice;
    end else begin
        d_o_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_5_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_5_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_6_TDATA_blk_n = d_o_6_TREADY_int_regslice;
    end else begin
        d_o_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_6_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_6_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        d_o_7_TDATA_blk_n = d_o_7_TREADY_int_regslice;
    end else begin
        d_o_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_o_7_TVALID_int_regslice = 1'b1;
    end else begin
        d_o_7_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln66_1_fu_495_p2 = ($signed(sext_ln66_1_fu_487_p1) + $signed(ap_phi_mux_add_1414_phi_fu_355_p4));

assign add_ln66_2_fu_516_p2 = ($signed(sext_ln66_2_fu_508_p1) + $signed(ap_phi_mux_add_2612_phi_fu_365_p4));

assign add_ln66_3_fu_537_p2 = ($signed(sext_ln66_3_fu_529_p1) + $signed(ap_phi_mux_add_3810_phi_fu_375_p4));

assign add_ln66_4_fu_558_p2 = ($signed(sext_ln66_4_fu_550_p1) + $signed(ap_phi_mux_add_4108_phi_fu_385_p4));

assign add_ln66_5_fu_579_p2 = ($signed(sext_ln66_5_fu_571_p1) + $signed(ap_phi_mux_add_5126_phi_fu_395_p4));

assign add_ln66_6_fu_600_p2 = ($signed(sext_ln66_6_fu_592_p1) + $signed(ap_phi_mux_add_6144_phi_fu_405_p4));

assign add_ln66_7_fu_621_p2 = ($signed(sext_ln66_7_fu_613_p1) + $signed(ap_phi_mux_add_7162_phi_fu_415_p4));

assign add_ln66_fu_474_p2 = ($signed(sext_ln66_fu_466_p1) + $signed(ap_phi_mux_add216_phi_fu_345_p4));

assign add_ln67_1_fu_501_p0 = d_i_1_TDATA_int_regslice;

assign add_ln67_2_fu_522_p0 = d_i_2_TDATA_int_regslice;

assign add_ln67_3_fu_543_p0 = d_i_3_TDATA_int_regslice;

assign add_ln67_4_fu_564_p0 = d_i_4_TDATA_int_regslice;

assign add_ln67_5_fu_585_p0 = d_i_5_TDATA_int_regslice;

assign add_ln67_6_fu_606_p0 = d_i_6_TDATA_int_regslice;

assign add_ln67_7_fu_627_p0 = d_i_7_TDATA_int_regslice;

assign add_ln67_fu_480_p0 = d_i_0_TDATA_int_regslice;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b1) & ((d_i_7_TVALID_int_regslice == 1'b0) | (d_i_6_TVALID_int_regslice == 1'b0) | (d_i_5_TVALID_int_regslice == 1'b0) | (d_i_4_TVALID_int_regslice == 1'b0) | (d_i_3_TVALID_int_regslice == 1'b0) | (d_i_2_TVALID_int_regslice == 1'b0) | (d_i_1_TVALID_int_regslice == 1'b0) | (d_i_0_TVALID_int_regslice == 1'b0) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_d_o_2_U_apdone_blk == 1'b1) | (regslice_both_d_o_1_U_apdone_blk == 1'b1) | (regslice_both_d_o_0_U_apdone_blk == 1'b1) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0) | (regslice_both_d_o_7_U_apdone_blk == 1'b1) | (regslice_both_d_o_6_U_apdone_blk == 1'b1) | (regslice_both_d_o_5_U_apdone_blk == 1'b1) | (regslice_both_d_o_4_U_apdone_blk == 1'b1) | (regslice_both_d_o_3_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b1) & ((d_i_7_TVALID_int_regslice == 1'b0) | (d_i_6_TVALID_int_regslice == 1'b0) | (d_i_5_TVALID_int_regslice == 1'b0) | (d_i_4_TVALID_int_regslice == 1'b0) | (d_i_3_TVALID_int_regslice == 1'b0) | (d_i_2_TVALID_int_regslice == 1'b0) | (d_i_1_TVALID_int_regslice == 1'b0) | (d_i_0_TVALID_int_regslice == 1'b0) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_d_o_2_U_apdone_blk == 1'b1) | (regslice_both_d_o_1_U_apdone_blk == 1'b1) | (regslice_both_d_o_0_U_apdone_blk == 1'b1) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state3_io) | (regslice_both_d_o_7_U_apdone_blk == 1'b1) | (regslice_both_d_o_6_U_apdone_blk == 1'b1) | (regslice_both_d_o_5_U_apdone_blk == 1'b1) | (regslice_both_d_o_4_U_apdone_blk == 1'b1) | (regslice_both_d_o_3_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_start == 1'b1) & ((d_i_7_TVALID_int_regslice == 1'b0) | (d_i_6_TVALID_int_regslice == 1'b0) | (d_i_5_TVALID_int_regslice == 1'b0) | (d_i_4_TVALID_int_regslice == 1'b0) | (d_i_3_TVALID_int_regslice == 1'b0) | (d_i_2_TVALID_int_regslice == 1'b0) | (d_i_1_TVALID_int_regslice == 1'b0) | (d_i_0_TVALID_int_regslice == 1'b0) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_d_o_2_U_apdone_blk == 1'b1) | (regslice_both_d_o_1_U_apdone_blk == 1'b1) | (regslice_both_d_o_0_U_apdone_blk == 1'b1) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state3_io) | (regslice_both_d_o_7_U_apdone_blk == 1'b1) | (regslice_both_d_o_6_U_apdone_blk == 1'b1) | (regslice_both_d_o_5_U_apdone_blk == 1'b1) | (regslice_both_d_o_4_U_apdone_blk == 1'b1) | (regslice_both_d_o_3_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_state2_io = ((d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((d_i_7_TVALID_int_regslice == 1'b0) | (d_i_6_TVALID_int_regslice == 1'b0) | (d_i_5_TVALID_int_regslice == 1'b0) | (d_i_4_TVALID_int_regslice == 1'b0) | (d_i_3_TVALID_int_regslice == 1'b0) | (d_i_2_TVALID_int_regslice == 1'b0) | (d_i_1_TVALID_int_regslice == 1'b0) | (d_i_0_TVALID_int_regslice == 1'b0) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = ((d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((regslice_both_d_o_2_U_apdone_blk == 1'b1) | (regslice_both_d_o_1_U_apdone_blk == 1'b1) | (regslice_both_d_o_0_U_apdone_blk == 1'b1) | (d_o_7_TREADY_int_regslice == 1'b0) | (d_o_6_TREADY_int_regslice == 1'b0) | (d_o_5_TREADY_int_regslice == 1'b0) | (d_o_4_TREADY_int_regslice == 1'b0) | (d_o_3_TREADY_int_regslice == 1'b0) | (d_o_2_TREADY_int_regslice == 1'b0) | (d_o_1_TREADY_int_regslice == 1'b0) | (d_o_0_TREADY_int_regslice == 1'b0) | (regslice_both_d_o_7_U_apdone_blk == 1'b1) | (regslice_both_d_o_6_U_apdone_blk == 1'b1) | (regslice_both_d_o_5_U_apdone_blk == 1'b1) | (regslice_both_d_o_4_U_apdone_blk == 1'b1) | (regslice_both_d_o_3_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_condition_178 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_add216_reg_342 = 'bx;

assign ap_phi_reg_pp0_iter0_add_1414_reg_352 = 'bx;

assign ap_phi_reg_pp0_iter0_add_2612_reg_362 = 'bx;

assign ap_phi_reg_pp0_iter0_add_3810_reg_372 = 'bx;

assign ap_phi_reg_pp0_iter0_add_4108_reg_382 = 'bx;

assign ap_phi_reg_pp0_iter0_add_5126_reg_392 = 'bx;

assign ap_phi_reg_pp0_iter0_add_6144_reg_402 = 'bx;

assign ap_phi_reg_pp0_iter0_add_7162_reg_412 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign d_i_0_TREADY = regslice_both_d_i_0_U_ack_in;

assign d_i_1_TREADY = regslice_both_d_i_1_U_ack_in;

assign d_i_2_TREADY = regslice_both_d_i_2_U_ack_in;

assign d_i_3_TREADY = regslice_both_d_i_3_U_ack_in;

assign d_i_4_TREADY = regslice_both_d_i_4_U_ack_in;

assign d_i_5_TREADY = regslice_both_d_i_5_U_ack_in;

assign d_i_6_TREADY = regslice_both_d_i_6_U_ack_in;

assign d_i_7_TREADY = regslice_both_d_i_7_U_ack_in;

assign d_o_0_TDATA_int_regslice = ($signed(add_ln67_fu_480_p0) + $signed(trunc_ln66_fu_470_p1));

assign d_o_0_TVALID = regslice_both_d_o_0_U_vld_out;

assign d_o_1_TDATA_int_regslice = ($signed(add_ln67_1_fu_501_p0) + $signed(trunc_ln66_1_fu_491_p1));

assign d_o_1_TVALID = regslice_both_d_o_1_U_vld_out;

assign d_o_2_TDATA_int_regslice = ($signed(add_ln67_2_fu_522_p0) + $signed(trunc_ln66_2_fu_512_p1));

assign d_o_2_TVALID = regslice_both_d_o_2_U_vld_out;

assign d_o_3_TDATA_int_regslice = ($signed(add_ln67_3_fu_543_p0) + $signed(trunc_ln66_3_fu_533_p1));

assign d_o_3_TVALID = regslice_both_d_o_3_U_vld_out;

assign d_o_4_TDATA_int_regslice = ($signed(add_ln67_4_fu_564_p0) + $signed(trunc_ln66_4_fu_554_p1));

assign d_o_4_TVALID = regslice_both_d_o_4_U_vld_out;

assign d_o_5_TDATA_int_regslice = ($signed(add_ln67_5_fu_585_p0) + $signed(trunc_ln66_5_fu_575_p1));

assign d_o_5_TVALID = regslice_both_d_o_5_U_vld_out;

assign d_o_6_TDATA_int_regslice = ($signed(add_ln67_6_fu_606_p0) + $signed(trunc_ln66_6_fu_596_p1));

assign d_o_6_TVALID = regslice_both_d_o_6_U_vld_out;

assign d_o_7_TDATA_int_regslice = ($signed(add_ln67_7_fu_627_p0) + $signed(trunc_ln66_7_fu_617_p1));

assign d_o_7_TVALID = regslice_both_d_o_7_U_vld_out;

assign i1_cast_fu_462_p1 = ap_phi_mux_i1_phi_fu_332_p6;

assign i_fu_634_p2 = (i1_cast_fu_462_p1 + 6'd8);

assign sext_ln66_1_fu_487_p0 = d_i_1_TDATA_int_regslice;

assign sext_ln66_1_fu_487_p1 = sext_ln66_1_fu_487_p0;

assign sext_ln66_2_fu_508_p0 = d_i_2_TDATA_int_regslice;

assign sext_ln66_2_fu_508_p1 = sext_ln66_2_fu_508_p0;

assign sext_ln66_3_fu_529_p0 = d_i_3_TDATA_int_regslice;

assign sext_ln66_3_fu_529_p1 = sext_ln66_3_fu_529_p0;

assign sext_ln66_4_fu_550_p0 = d_i_4_TDATA_int_regslice;

assign sext_ln66_4_fu_550_p1 = sext_ln66_4_fu_550_p0;

assign sext_ln66_5_fu_571_p0 = d_i_5_TDATA_int_regslice;

assign sext_ln66_5_fu_571_p1 = sext_ln66_5_fu_571_p0;

assign sext_ln66_6_fu_592_p0 = d_i_6_TDATA_int_regslice;

assign sext_ln66_6_fu_592_p1 = sext_ln66_6_fu_592_p0;

assign sext_ln66_7_fu_613_p0 = d_i_7_TDATA_int_regslice;

assign sext_ln66_7_fu_613_p1 = sext_ln66_7_fu_613_p0;

assign sext_ln66_fu_466_p0 = d_i_0_TDATA_int_regslice;

assign sext_ln66_fu_466_p1 = sext_ln66_fu_466_p0;

assign tmp_fu_644_p3 = i_fu_634_p2[32'd5];

assign trunc_ln64_fu_640_p1 = i_fu_634_p2[4:0];

assign trunc_ln66_1_fu_491_p1 = ap_phi_mux_add_1414_phi_fu_355_p4[15:0];

assign trunc_ln66_2_fu_512_p1 = ap_phi_mux_add_2612_phi_fu_365_p4[15:0];

assign trunc_ln66_3_fu_533_p1 = ap_phi_mux_add_3810_phi_fu_375_p4[15:0];

assign trunc_ln66_4_fu_554_p1 = ap_phi_mux_add_4108_phi_fu_385_p4[15:0];

assign trunc_ln66_5_fu_575_p1 = ap_phi_mux_add_5126_phi_fu_395_p4[15:0];

assign trunc_ln66_6_fu_596_p1 = ap_phi_mux_add_6144_phi_fu_405_p4[15:0];

assign trunc_ln66_7_fu_617_p1 = ap_phi_mux_add_7162_phi_fu_415_p4[15:0];

assign trunc_ln66_fu_470_p1 = ap_phi_mux_add216_phi_fu_345_p4[15:0];

endmodule //axi_interfaces
