// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.505688,HLS_SYN_LAT=17,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1314,HLS_SYN_LUT=2219,HLS_VERSION=2022_1}" *)

module array_io (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d_o_address0,
        d_o_ce0,
        d_o_we0,
        d_o_d0,
        d_o_address1,
        d_o_ce1,
        d_o_we1,
        d_o_d1,
        d_i_address0,
        d_i_ce0,
        d_i_q0,
        d_i_address1,
        d_i_ce1,
        d_i_q1
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] d_o_address0;
output   d_o_ce0;
output   d_o_we0;
output  [15:0] d_o_d0;
output  [4:0] d_o_address1;
output   d_o_ce1;
output   d_o_we1;
output  [15:0] d_o_d1;
output  [4:0] d_i_address0;
output   d_i_ce0;
input  [15:0] d_i_q0;
output  [4:0] d_i_address1;
output   d_i_ce1;
input  [15:0] d_i_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] d_o_address0;
reg d_o_ce0;
reg d_o_we0;
reg[15:0] d_o_d0;
reg[4:0] d_o_address1;
reg d_o_ce1;
reg d_o_we1;
reg[15:0] d_o_d1;
reg[4:0] d_i_address0;
reg d_i_ce0;
reg[4:0] d_i_address1;
reg d_i_ce1;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg  signed [15:0] d_i_load_reg_1328;
wire    ap_CS_fsm_state2;
reg  signed [15:0] d_i_load_1_reg_1334;
wire   [15:0] add_ln69_fu_702_p2;
reg   [15:0] add_ln69_reg_1353;
wire    ap_CS_fsm_state3;
wire   [15:0] add_ln69_1_fu_716_p2;
reg   [15:0] add_ln69_1_reg_1361;
reg  signed [15:0] d_i_load_2_reg_1366;
reg  signed [15:0] d_i_load_3_reg_1372;
wire   [15:0] add_ln69_2_fu_730_p2;
reg   [15:0] add_ln69_2_reg_1391;
wire    ap_CS_fsm_state4;
wire   [15:0] add_ln69_3_fu_744_p2;
reg   [15:0] add_ln69_3_reg_1399;
reg  signed [15:0] d_i_load_4_reg_1404;
reg  signed [15:0] d_i_load_5_reg_1410;
wire   [15:0] add_ln69_4_fu_758_p2;
reg   [15:0] add_ln69_4_reg_1429;
wire    ap_CS_fsm_state5;
wire   [15:0] add_ln69_5_fu_772_p2;
reg   [15:0] add_ln69_5_reg_1437;
reg  signed [15:0] d_i_load_6_reg_1442;
reg  signed [15:0] d_i_load_7_reg_1448;
wire   [15:0] add_ln69_6_fu_786_p2;
reg   [15:0] add_ln69_6_reg_1467;
wire    ap_CS_fsm_state6;
wire   [15:0] add_ln69_7_fu_800_p2;
reg   [15:0] add_ln69_7_reg_1475;
reg  signed [15:0] d_i_load_8_reg_1480;
reg  signed [15:0] d_i_load_9_reg_1486;
wire   [15:0] add_ln69_8_fu_806_p2;
reg   [15:0] add_ln69_8_reg_1502;
wire    ap_CS_fsm_state7;
wire   [15:0] add_ln69_9_fu_811_p2;
reg   [15:0] add_ln69_9_reg_1507;
reg  signed [15:0] d_i_load_10_reg_1512;
reg  signed [15:0] d_i_load_11_reg_1518;
wire   [15:0] add_ln69_10_fu_816_p2;
reg   [15:0] add_ln69_10_reg_1534;
wire    ap_CS_fsm_state8;
wire   [15:0] add_ln69_11_fu_821_p2;
reg   [15:0] add_ln69_11_reg_1539;
reg  signed [15:0] d_i_load_12_reg_1544;
reg  signed [15:0] d_i_load_13_reg_1550;
wire   [15:0] add_ln69_12_fu_826_p2;
reg   [15:0] add_ln69_12_reg_1566;
wire    ap_CS_fsm_state9;
wire   [15:0] add_ln69_13_fu_831_p2;
reg   [15:0] add_ln69_13_reg_1571;
reg  signed [15:0] d_i_load_14_reg_1576;
reg  signed [15:0] d_i_load_15_reg_1582;
wire   [15:0] add_ln69_14_fu_836_p2;
reg   [15:0] add_ln69_14_reg_1598;
wire    ap_CS_fsm_state10;
wire   [15:0] add_ln69_15_fu_841_p2;
reg   [15:0] add_ln69_15_reg_1603;
reg  signed [15:0] d_i_load_16_reg_1608;
reg  signed [15:0] d_i_load_17_reg_1614;
wire   [15:0] add_ln69_16_fu_846_p2;
reg   [15:0] add_ln69_16_reg_1630;
wire    ap_CS_fsm_state11;
wire   [15:0] add_ln69_17_fu_851_p2;
reg   [15:0] add_ln69_17_reg_1635;
reg  signed [15:0] d_i_load_18_reg_1640;
reg  signed [15:0] d_i_load_19_reg_1646;
wire   [15:0] add_ln69_18_fu_856_p2;
reg   [15:0] add_ln69_18_reg_1662;
wire    ap_CS_fsm_state12;
wire   [15:0] add_ln69_19_fu_861_p2;
reg   [15:0] add_ln69_19_reg_1667;
reg  signed [15:0] d_i_load_20_reg_1672;
reg  signed [15:0] d_i_load_21_reg_1678;
wire   [15:0] add_ln69_20_fu_866_p2;
reg   [15:0] add_ln69_20_reg_1694;
wire    ap_CS_fsm_state13;
wire   [15:0] add_ln69_21_fu_871_p2;
reg   [15:0] add_ln69_21_reg_1699;
reg  signed [15:0] d_i_load_22_reg_1704;
reg  signed [15:0] d_i_load_23_reg_1710;
wire   [15:0] add_ln69_22_fu_888_p2;
reg   [15:0] add_ln69_22_reg_1726;
wire    ap_CS_fsm_state14;
wire   [15:0] add_ln69_23_fu_893_p2;
reg   [15:0] add_ln69_23_reg_1731;
wire   [17:0] add_ln67_2_fu_912_p2;
reg   [17:0] add_ln67_2_reg_1736;
wire   [15:0] add_ln69_24_fu_918_p2;
reg   [15:0] add_ln69_24_reg_1741;
wire   [17:0] add_ln67_6_fu_937_p2;
reg   [17:0] add_ln67_6_reg_1746;
wire   [15:0] add_ln69_25_fu_943_p2;
reg   [15:0] add_ln69_25_reg_1751;
wire   [17:0] add_ln67_10_fu_1020_p2;
reg   [17:0] add_ln67_10_reg_1766;
wire    ap_CS_fsm_state15;
wire   [15:0] add_ln69_26_fu_1026_p2;
reg   [15:0] add_ln69_26_reg_1771;
wire   [17:0] add_ln67_14_fu_1045_p2;
reg   [17:0] add_ln67_14_reg_1776;
wire   [15:0] add_ln69_27_fu_1051_p2;
reg   [15:0] add_ln69_27_reg_1781;
wire   [17:0] add_ln67_18_fu_1128_p2;
reg   [17:0] add_ln67_18_reg_1796;
wire    ap_CS_fsm_state16;
wire   [15:0] add_ln69_28_fu_1134_p2;
reg   [15:0] add_ln69_28_reg_1801;
wire   [17:0] add_ln67_22_fu_1153_p2;
reg   [17:0] add_ln67_22_reg_1806;
wire   [15:0] add_ln69_29_fu_1159_p2;
reg   [15:0] add_ln69_29_reg_1811;
wire   [17:0] add_ln67_26_fu_1236_p2;
reg   [17:0] add_ln67_26_reg_1826;
wire    ap_CS_fsm_state17;
wire   [15:0] add_ln69_30_fu_1242_p2;
reg   [15:0] add_ln69_30_reg_1831;
wire   [17:0] add_ln67_30_fu_1261_p2;
reg   [17:0] add_ln67_30_reg_1836;
wire   [15:0] add_ln69_31_fu_1267_p2;
reg   [15:0] add_ln69_31_reg_1841;
wire    ap_CS_fsm_state18;
wire   [31:0] temp_fu_974_p2;
wire   [31:0] temp_1_fu_994_p2;
wire   [31:0] temp_2_fu_1082_p2;
wire   [31:0] temp_3_fu_1102_p2;
wire   [31:0] temp_4_fu_1190_p2;
wire   [31:0] temp_5_fu_1210_p2;
wire   [31:0] temp_6_fu_1286_p2;
wire   [31:0] temp_7_fu_1306_p2;
wire   [15:0] trunc_ln67_fu_698_p1;
wire   [15:0] trunc_ln67_1_fu_712_p1;
wire   [15:0] trunc_ln67_2_fu_726_p1;
wire   [15:0] trunc_ln67_3_fu_740_p1;
wire   [15:0] trunc_ln67_4_fu_754_p1;
wire   [15:0] trunc_ln67_5_fu_768_p1;
wire   [15:0] trunc_ln67_6_fu_782_p1;
wire   [15:0] trunc_ln67_7_fu_796_p1;
wire  signed [15:0] sext_ln67_8_fu_898_p0;
wire  signed [16:0] sext_ln69_8_fu_882_p1;
wire  signed [16:0] sext_ln67_8_fu_898_p1;
wire   [16:0] add_ln67_1_fu_902_p2;
wire  signed [17:0] sext_ln67_9_fu_908_p1;
wire  signed [17:0] sext_ln69_fu_876_p1;
wire  signed [15:0] add_ln69_24_fu_918_p0;
wire  signed [15:0] sext_ln67_11_fu_923_p0;
wire  signed [16:0] sext_ln69_9_fu_885_p1;
wire  signed [16:0] sext_ln67_11_fu_923_p1;
wire   [16:0] add_ln67_5_fu_927_p2;
wire  signed [17:0] sext_ln67_12_fu_933_p1;
wire  signed [17:0] sext_ln69_1_fu_879_p1;
wire  signed [15:0] add_ln69_25_fu_943_p0;
wire  signed [31:0] sext_ln67_fu_948_p1;
wire  signed [31:0] sext_ln67_10_fu_971_p1;
wire   [31:0] add_ln67_fu_966_p2;
wire  signed [31:0] sext_ln67_1_fu_951_p1;
wire  signed [31:0] sext_ln67_13_fu_991_p1;
wire   [31:0] add_ln67_4_fu_986_p2;
wire  signed [15:0] sext_ln67_14_fu_1006_p0;
wire  signed [16:0] sext_ln69_10_fu_960_p1;
wire  signed [16:0] sext_ln67_14_fu_1006_p1;
wire   [16:0] add_ln67_9_fu_1010_p2;
wire  signed [17:0] sext_ln67_15_fu_1016_p1;
wire  signed [17:0] sext_ln69_2_fu_954_p1;
wire  signed [15:0] add_ln69_26_fu_1026_p0;
wire  signed [15:0] sext_ln67_17_fu_1031_p0;
wire  signed [16:0] sext_ln69_11_fu_963_p1;
wire  signed [16:0] sext_ln67_17_fu_1031_p1;
wire   [16:0] add_ln67_13_fu_1035_p2;
wire  signed [17:0] sext_ln67_18_fu_1041_p1;
wire  signed [17:0] sext_ln69_3_fu_957_p1;
wire  signed [15:0] add_ln69_27_fu_1051_p0;
wire  signed [31:0] sext_ln67_2_fu_1056_p1;
wire  signed [31:0] sext_ln67_16_fu_1079_p1;
wire   [31:0] add_ln67_8_fu_1074_p2;
wire  signed [31:0] sext_ln67_3_fu_1059_p1;
wire  signed [31:0] sext_ln67_19_fu_1099_p1;
wire   [31:0] add_ln67_12_fu_1094_p2;
wire  signed [15:0] sext_ln67_20_fu_1114_p0;
wire  signed [16:0] sext_ln69_12_fu_1068_p1;
wire  signed [16:0] sext_ln67_20_fu_1114_p1;
wire   [16:0] add_ln67_17_fu_1118_p2;
wire  signed [17:0] sext_ln67_21_fu_1124_p1;
wire  signed [17:0] sext_ln69_4_fu_1062_p1;
wire  signed [15:0] add_ln69_28_fu_1134_p0;
wire  signed [15:0] sext_ln67_23_fu_1139_p0;
wire  signed [16:0] sext_ln69_13_fu_1071_p1;
wire  signed [16:0] sext_ln67_23_fu_1139_p1;
wire   [16:0] add_ln67_21_fu_1143_p2;
wire  signed [17:0] sext_ln67_24_fu_1149_p1;
wire  signed [17:0] sext_ln69_5_fu_1065_p1;
wire  signed [15:0] add_ln69_29_fu_1159_p0;
wire  signed [31:0] sext_ln67_4_fu_1164_p1;
wire  signed [31:0] sext_ln67_22_fu_1187_p1;
wire   [31:0] add_ln67_16_fu_1182_p2;
wire  signed [31:0] sext_ln67_5_fu_1167_p1;
wire  signed [31:0] sext_ln67_25_fu_1207_p1;
wire   [31:0] add_ln67_20_fu_1202_p2;
wire  signed [15:0] sext_ln67_26_fu_1222_p0;
wire  signed [16:0] sext_ln69_14_fu_1176_p1;
wire  signed [16:0] sext_ln67_26_fu_1222_p1;
wire   [16:0] add_ln67_25_fu_1226_p2;
wire  signed [17:0] sext_ln67_27_fu_1232_p1;
wire  signed [17:0] sext_ln69_6_fu_1170_p1;
wire  signed [15:0] add_ln69_30_fu_1242_p0;
wire  signed [15:0] sext_ln67_29_fu_1247_p0;
wire  signed [16:0] sext_ln69_15_fu_1179_p1;
wire  signed [16:0] sext_ln67_29_fu_1247_p1;
wire   [16:0] add_ln67_29_fu_1251_p2;
wire  signed [17:0] sext_ln67_30_fu_1257_p1;
wire  signed [17:0] sext_ln69_7_fu_1173_p1;
wire  signed [15:0] add_ln69_31_fu_1267_p0;
wire  signed [31:0] sext_ln67_6_fu_1272_p1;
wire  signed [31:0] sext_ln67_28_fu_1283_p1;
wire   [31:0] add_ln67_24_fu_1278_p2;
wire  signed [31:0] sext_ln67_7_fu_1275_p1;
wire  signed [31:0] sext_ln67_31_fu_1303_p1;
wire   [31:0] add_ln67_28_fu_1298_p2;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 acc_0 = 32'd0;
#0 acc_1 = 32'd0;
#0 acc_2 = 32'd0;
#0 acc_3 = 32'd0;
#0 acc_4 = 32'd0;
#0 acc_5 = 32'd0;
#0 acc_6 = 32'd0;
#0 acc_7 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        acc_0 <= temp_fu_974_p2;
        acc_1 <= temp_1_fu_994_p2;
        add_ln67_10_reg_1766 <= add_ln67_10_fu_1020_p2;
        add_ln67_14_reg_1776 <= add_ln67_14_fu_1045_p2;
        add_ln69_26_reg_1771 <= add_ln69_26_fu_1026_p2;
        add_ln69_27_reg_1781 <= add_ln69_27_fu_1051_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        acc_2 <= temp_2_fu_1082_p2;
        acc_3 <= temp_3_fu_1102_p2;
        add_ln67_18_reg_1796 <= add_ln67_18_fu_1128_p2;
        add_ln67_22_reg_1806 <= add_ln67_22_fu_1153_p2;
        add_ln69_28_reg_1801 <= add_ln69_28_fu_1134_p2;
        add_ln69_29_reg_1811 <= add_ln69_29_fu_1159_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        acc_4 <= temp_4_fu_1190_p2;
        acc_5 <= temp_5_fu_1210_p2;
        add_ln67_26_reg_1826 <= add_ln67_26_fu_1236_p2;
        add_ln67_30_reg_1836 <= add_ln67_30_fu_1261_p2;
        add_ln69_30_reg_1831 <= add_ln69_30_fu_1242_p2;
        add_ln69_31_reg_1841 <= add_ln69_31_fu_1267_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        acc_6 <= temp_6_fu_1286_p2;
        acc_7 <= temp_7_fu_1306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln67_2_reg_1736 <= add_ln67_2_fu_912_p2;
        add_ln67_6_reg_1746 <= add_ln67_6_fu_937_p2;
        add_ln69_22_reg_1726 <= add_ln69_22_fu_888_p2;
        add_ln69_23_reg_1731 <= add_ln69_23_fu_893_p2;
        add_ln69_24_reg_1741 <= add_ln69_24_fu_918_p2;
        add_ln69_25_reg_1751 <= add_ln69_25_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln69_10_reg_1534 <= add_ln69_10_fu_816_p2;
        add_ln69_11_reg_1539 <= add_ln69_11_fu_821_p2;
        d_i_load_12_reg_1544 <= d_i_q1;
        d_i_load_13_reg_1550 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln69_12_reg_1566 <= add_ln69_12_fu_826_p2;
        add_ln69_13_reg_1571 <= add_ln69_13_fu_831_p2;
        d_i_load_14_reg_1576 <= d_i_q1;
        d_i_load_15_reg_1582 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln69_14_reg_1598 <= add_ln69_14_fu_836_p2;
        add_ln69_15_reg_1603 <= add_ln69_15_fu_841_p2;
        d_i_load_16_reg_1608 <= d_i_q1;
        d_i_load_17_reg_1614 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln69_16_reg_1630 <= add_ln69_16_fu_846_p2;
        add_ln69_17_reg_1635 <= add_ln69_17_fu_851_p2;
        d_i_load_18_reg_1640 <= d_i_q1;
        d_i_load_19_reg_1646 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln69_18_reg_1662 <= add_ln69_18_fu_856_p2;
        add_ln69_19_reg_1667 <= add_ln69_19_fu_861_p2;
        d_i_load_20_reg_1672 <= d_i_q1;
        d_i_load_21_reg_1678 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln69_1_reg_1361 <= add_ln69_1_fu_716_p2;
        add_ln69_reg_1353 <= add_ln69_fu_702_p2;
        d_i_load_2_reg_1366 <= d_i_q1;
        d_i_load_3_reg_1372 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln69_20_reg_1694 <= add_ln69_20_fu_866_p2;
        add_ln69_21_reg_1699 <= add_ln69_21_fu_871_p2;
        d_i_load_22_reg_1704 <= d_i_q1;
        d_i_load_23_reg_1710 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln69_2_reg_1391 <= add_ln69_2_fu_730_p2;
        add_ln69_3_reg_1399 <= add_ln69_3_fu_744_p2;
        d_i_load_4_reg_1404 <= d_i_q1;
        d_i_load_5_reg_1410 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln69_4_reg_1429 <= add_ln69_4_fu_758_p2;
        add_ln69_5_reg_1437 <= add_ln69_5_fu_772_p2;
        d_i_load_6_reg_1442 <= d_i_q1;
        d_i_load_7_reg_1448 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln69_6_reg_1467 <= add_ln69_6_fu_786_p2;
        add_ln69_7_reg_1475 <= add_ln69_7_fu_800_p2;
        d_i_load_8_reg_1480 <= d_i_q1;
        d_i_load_9_reg_1486 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln69_8_reg_1502 <= add_ln69_8_fu_806_p2;
        add_ln69_9_reg_1507 <= add_ln69_9_fu_811_p2;
        d_i_load_10_reg_1512 <= d_i_q1;
        d_i_load_11_reg_1518 <= d_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_load_1_reg_1334 <= d_i_q0;
        d_i_load_reg_1328 <= d_i_q1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address0 = 64'd1;
    end else begin
        d_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_i_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_i_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_i_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_i_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_i_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_i_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_i_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_i_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_i_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_i_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_i_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_i_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_i_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_i_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        d_i_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        d_i_address1 = 64'd0;
    end else begin
        d_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        d_i_ce0 = 1'b1;
    end else begin
        d_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        d_i_ce1 = 1'b1;
    end else begin
        d_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        d_o_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        d_o_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        d_o_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_o_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_o_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_o_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_o_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_address0 = 64'd1;
    end else begin
        d_o_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        d_o_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        d_o_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        d_o_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_o_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_o_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_o_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_o_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_address1 = 64'd0;
    end else begin
        d_o_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        d_o_ce0 = 1'b1;
    end else begin
        d_o_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        d_o_ce1 = 1'b1;
    end else begin
        d_o_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        d_o_d0 = add_ln69_31_reg_1841;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        d_o_d0 = add_ln69_29_reg_1811;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        d_o_d0 = add_ln69_27_reg_1781;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_o_d0 = add_ln69_25_reg_1751;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_o_d0 = add_ln69_23_fu_893_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_o_d0 = add_ln69_21_fu_871_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_o_d0 = add_ln69_19_fu_861_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_d0 = add_ln69_17_fu_851_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_d0 = add_ln69_15_fu_841_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_d0 = add_ln69_13_fu_831_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_d0 = add_ln69_11_fu_821_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_d0 = add_ln69_9_fu_811_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_d0 = add_ln69_7_fu_800_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_d0 = add_ln69_5_fu_772_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_d0 = add_ln69_3_fu_744_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_d0 = add_ln69_1_fu_716_p2;
    end else begin
        d_o_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        d_o_d1 = add_ln69_30_reg_1831;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        d_o_d1 = add_ln69_28_reg_1801;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        d_o_d1 = add_ln69_26_reg_1771;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        d_o_d1 = add_ln69_24_reg_1741;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        d_o_d1 = add_ln69_22_fu_888_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        d_o_d1 = add_ln69_20_fu_866_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        d_o_d1 = add_ln69_18_fu_856_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_o_d1 = add_ln69_16_fu_846_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        d_o_d1 = add_ln69_14_fu_836_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        d_o_d1 = add_ln69_12_fu_826_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_o_d1 = add_ln69_10_fu_816_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        d_o_d1 = add_ln69_8_fu_806_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_o_d1 = add_ln69_6_fu_786_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        d_o_d1 = add_ln69_4_fu_758_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        d_o_d1 = add_ln69_2_fu_730_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        d_o_d1 = add_ln69_fu_702_p2;
    end else begin
        d_o_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        d_o_we0 = 1'b1;
    end else begin
        d_o_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        d_o_we1 = 1'b1;
    end else begin
        d_o_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_10_fu_1020_p2 = ($signed(sext_ln67_15_fu_1016_p1) + $signed(sext_ln69_2_fu_954_p1));

assign add_ln67_12_fu_1094_p2 = ($signed(acc_3) + $signed(sext_ln67_3_fu_1059_p1));

assign add_ln67_13_fu_1035_p2 = ($signed(sext_ln69_11_fu_963_p1) + $signed(sext_ln67_17_fu_1031_p1));

assign add_ln67_14_fu_1045_p2 = ($signed(sext_ln67_18_fu_1041_p1) + $signed(sext_ln69_3_fu_957_p1));

assign add_ln67_16_fu_1182_p2 = ($signed(acc_4) + $signed(sext_ln67_4_fu_1164_p1));

assign add_ln67_17_fu_1118_p2 = ($signed(sext_ln69_12_fu_1068_p1) + $signed(sext_ln67_20_fu_1114_p1));

assign add_ln67_18_fu_1128_p2 = ($signed(sext_ln67_21_fu_1124_p1) + $signed(sext_ln69_4_fu_1062_p1));

assign add_ln67_1_fu_902_p2 = ($signed(sext_ln69_8_fu_882_p1) + $signed(sext_ln67_8_fu_898_p1));

assign add_ln67_20_fu_1202_p2 = ($signed(acc_5) + $signed(sext_ln67_5_fu_1167_p1));

assign add_ln67_21_fu_1143_p2 = ($signed(sext_ln69_13_fu_1071_p1) + $signed(sext_ln67_23_fu_1139_p1));

assign add_ln67_22_fu_1153_p2 = ($signed(sext_ln67_24_fu_1149_p1) + $signed(sext_ln69_5_fu_1065_p1));

assign add_ln67_24_fu_1278_p2 = ($signed(acc_6) + $signed(sext_ln67_6_fu_1272_p1));

assign add_ln67_25_fu_1226_p2 = ($signed(sext_ln69_14_fu_1176_p1) + $signed(sext_ln67_26_fu_1222_p1));

assign add_ln67_26_fu_1236_p2 = ($signed(sext_ln67_27_fu_1232_p1) + $signed(sext_ln69_6_fu_1170_p1));

assign add_ln67_28_fu_1298_p2 = ($signed(acc_7) + $signed(sext_ln67_7_fu_1275_p1));

assign add_ln67_29_fu_1251_p2 = ($signed(sext_ln69_15_fu_1179_p1) + $signed(sext_ln67_29_fu_1247_p1));

assign add_ln67_2_fu_912_p2 = ($signed(sext_ln67_9_fu_908_p1) + $signed(sext_ln69_fu_876_p1));

assign add_ln67_30_fu_1261_p2 = ($signed(sext_ln67_30_fu_1257_p1) + $signed(sext_ln69_7_fu_1173_p1));

assign add_ln67_4_fu_986_p2 = ($signed(acc_1) + $signed(sext_ln67_1_fu_951_p1));

assign add_ln67_5_fu_927_p2 = ($signed(sext_ln69_9_fu_885_p1) + $signed(sext_ln67_11_fu_923_p1));

assign add_ln67_6_fu_937_p2 = ($signed(sext_ln67_12_fu_933_p1) + $signed(sext_ln69_1_fu_879_p1));

assign add_ln67_8_fu_1074_p2 = ($signed(acc_2) + $signed(sext_ln67_2_fu_1056_p1));

assign add_ln67_9_fu_1010_p2 = ($signed(sext_ln69_10_fu_960_p1) + $signed(sext_ln67_14_fu_1006_p1));

assign add_ln67_fu_966_p2 = ($signed(acc_0) + $signed(sext_ln67_fu_948_p1));

assign add_ln69_10_fu_816_p2 = ($signed(d_i_load_10_reg_1512) + $signed(add_ln69_2_reg_1391));

assign add_ln69_11_fu_821_p2 = ($signed(d_i_load_11_reg_1518) + $signed(add_ln69_3_reg_1399));

assign add_ln69_12_fu_826_p2 = ($signed(d_i_load_12_reg_1544) + $signed(add_ln69_4_reg_1429));

assign add_ln69_13_fu_831_p2 = ($signed(d_i_load_13_reg_1550) + $signed(add_ln69_5_reg_1437));

assign add_ln69_14_fu_836_p2 = ($signed(d_i_load_14_reg_1576) + $signed(add_ln69_6_reg_1467));

assign add_ln69_15_fu_841_p2 = ($signed(d_i_load_15_reg_1582) + $signed(add_ln69_7_reg_1475));

assign add_ln69_16_fu_846_p2 = ($signed(d_i_load_16_reg_1608) + $signed(add_ln69_8_reg_1502));

assign add_ln69_17_fu_851_p2 = ($signed(d_i_load_17_reg_1614) + $signed(add_ln69_9_reg_1507));

assign add_ln69_18_fu_856_p2 = ($signed(d_i_load_18_reg_1640) + $signed(add_ln69_10_reg_1534));

assign add_ln69_19_fu_861_p2 = ($signed(d_i_load_19_reg_1646) + $signed(add_ln69_11_reg_1539));

assign add_ln69_1_fu_716_p2 = ($signed(d_i_load_1_reg_1334) + $signed(trunc_ln67_1_fu_712_p1));

assign add_ln69_20_fu_866_p2 = ($signed(d_i_load_20_reg_1672) + $signed(add_ln69_12_reg_1566));

assign add_ln69_21_fu_871_p2 = ($signed(d_i_load_21_reg_1678) + $signed(add_ln69_13_reg_1571));

assign add_ln69_22_fu_888_p2 = ($signed(d_i_load_22_reg_1704) + $signed(add_ln69_14_reg_1598));

assign add_ln69_23_fu_893_p2 = ($signed(d_i_load_23_reg_1710) + $signed(add_ln69_15_reg_1603));

assign add_ln69_24_fu_918_p0 = d_i_q1;

assign add_ln69_24_fu_918_p2 = ($signed(add_ln69_24_fu_918_p0) + $signed(add_ln69_16_reg_1630));

assign add_ln69_25_fu_943_p0 = d_i_q0;

assign add_ln69_25_fu_943_p2 = ($signed(add_ln69_25_fu_943_p0) + $signed(add_ln69_17_reg_1635));

assign add_ln69_26_fu_1026_p0 = d_i_q1;

assign add_ln69_26_fu_1026_p2 = ($signed(add_ln69_26_fu_1026_p0) + $signed(add_ln69_18_reg_1662));

assign add_ln69_27_fu_1051_p0 = d_i_q0;

assign add_ln69_27_fu_1051_p2 = ($signed(add_ln69_27_fu_1051_p0) + $signed(add_ln69_19_reg_1667));

assign add_ln69_28_fu_1134_p0 = d_i_q1;

assign add_ln69_28_fu_1134_p2 = ($signed(add_ln69_28_fu_1134_p0) + $signed(add_ln69_20_reg_1694));

assign add_ln69_29_fu_1159_p0 = d_i_q0;

assign add_ln69_29_fu_1159_p2 = ($signed(add_ln69_29_fu_1159_p0) + $signed(add_ln69_21_reg_1699));

assign add_ln69_2_fu_730_p2 = ($signed(d_i_load_2_reg_1366) + $signed(trunc_ln67_2_fu_726_p1));

assign add_ln69_30_fu_1242_p0 = d_i_q1;

assign add_ln69_30_fu_1242_p2 = ($signed(add_ln69_30_fu_1242_p0) + $signed(add_ln69_22_reg_1726));

assign add_ln69_31_fu_1267_p0 = d_i_q0;

assign add_ln69_31_fu_1267_p2 = ($signed(add_ln69_31_fu_1267_p0) + $signed(add_ln69_23_reg_1731));

assign add_ln69_3_fu_744_p2 = ($signed(d_i_load_3_reg_1372) + $signed(trunc_ln67_3_fu_740_p1));

assign add_ln69_4_fu_758_p2 = ($signed(d_i_load_4_reg_1404) + $signed(trunc_ln67_4_fu_754_p1));

assign add_ln69_5_fu_772_p2 = ($signed(d_i_load_5_reg_1410) + $signed(trunc_ln67_5_fu_768_p1));

assign add_ln69_6_fu_786_p2 = ($signed(d_i_load_6_reg_1442) + $signed(trunc_ln67_6_fu_782_p1));

assign add_ln69_7_fu_800_p2 = ($signed(d_i_load_7_reg_1448) + $signed(trunc_ln67_7_fu_796_p1));

assign add_ln69_8_fu_806_p2 = ($signed(d_i_load_8_reg_1480) + $signed(add_ln69_reg_1353));

assign add_ln69_9_fu_811_p2 = ($signed(d_i_load_9_reg_1486) + $signed(add_ln69_1_reg_1361));

assign add_ln69_fu_702_p2 = ($signed(d_i_load_reg_1328) + $signed(trunc_ln67_fu_698_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign sext_ln67_10_fu_971_p1 = $signed(add_ln67_2_reg_1736);

assign sext_ln67_11_fu_923_p0 = d_i_q0;

assign sext_ln67_11_fu_923_p1 = sext_ln67_11_fu_923_p0;

assign sext_ln67_12_fu_933_p1 = $signed(add_ln67_5_fu_927_p2);

assign sext_ln67_13_fu_991_p1 = $signed(add_ln67_6_reg_1746);

assign sext_ln67_14_fu_1006_p0 = d_i_q1;

assign sext_ln67_14_fu_1006_p1 = sext_ln67_14_fu_1006_p0;

assign sext_ln67_15_fu_1016_p1 = $signed(add_ln67_9_fu_1010_p2);

assign sext_ln67_16_fu_1079_p1 = $signed(add_ln67_10_reg_1766);

assign sext_ln67_17_fu_1031_p0 = d_i_q0;

assign sext_ln67_17_fu_1031_p1 = sext_ln67_17_fu_1031_p0;

assign sext_ln67_18_fu_1041_p1 = $signed(add_ln67_13_fu_1035_p2);

assign sext_ln67_19_fu_1099_p1 = $signed(add_ln67_14_reg_1776);

assign sext_ln67_1_fu_951_p1 = d_i_load_1_reg_1334;

assign sext_ln67_20_fu_1114_p0 = d_i_q1;

assign sext_ln67_20_fu_1114_p1 = sext_ln67_20_fu_1114_p0;

assign sext_ln67_21_fu_1124_p1 = $signed(add_ln67_17_fu_1118_p2);

assign sext_ln67_22_fu_1187_p1 = $signed(add_ln67_18_reg_1796);

assign sext_ln67_23_fu_1139_p0 = d_i_q0;

assign sext_ln67_23_fu_1139_p1 = sext_ln67_23_fu_1139_p0;

assign sext_ln67_24_fu_1149_p1 = $signed(add_ln67_21_fu_1143_p2);

assign sext_ln67_25_fu_1207_p1 = $signed(add_ln67_22_reg_1806);

assign sext_ln67_26_fu_1222_p0 = d_i_q1;

assign sext_ln67_26_fu_1222_p1 = sext_ln67_26_fu_1222_p0;

assign sext_ln67_27_fu_1232_p1 = $signed(add_ln67_25_fu_1226_p2);

assign sext_ln67_28_fu_1283_p1 = $signed(add_ln67_26_reg_1826);

assign sext_ln67_29_fu_1247_p0 = d_i_q0;

assign sext_ln67_29_fu_1247_p1 = sext_ln67_29_fu_1247_p0;

assign sext_ln67_2_fu_1056_p1 = d_i_load_2_reg_1366;

assign sext_ln67_30_fu_1257_p1 = $signed(add_ln67_29_fu_1251_p2);

assign sext_ln67_31_fu_1303_p1 = $signed(add_ln67_30_reg_1836);

assign sext_ln67_3_fu_1059_p1 = d_i_load_3_reg_1372;

assign sext_ln67_4_fu_1164_p1 = d_i_load_4_reg_1404;

assign sext_ln67_5_fu_1167_p1 = d_i_load_5_reg_1410;

assign sext_ln67_6_fu_1272_p1 = d_i_load_6_reg_1442;

assign sext_ln67_7_fu_1275_p1 = d_i_load_7_reg_1448;

assign sext_ln67_8_fu_898_p0 = d_i_q1;

assign sext_ln67_8_fu_898_p1 = sext_ln67_8_fu_898_p0;

assign sext_ln67_9_fu_908_p1 = $signed(add_ln67_1_fu_902_p2);

assign sext_ln67_fu_948_p1 = d_i_load_reg_1328;

assign sext_ln69_10_fu_960_p1 = d_i_load_18_reg_1640;

assign sext_ln69_11_fu_963_p1 = d_i_load_19_reg_1646;

assign sext_ln69_12_fu_1068_p1 = d_i_load_20_reg_1672;

assign sext_ln69_13_fu_1071_p1 = d_i_load_21_reg_1678;

assign sext_ln69_14_fu_1176_p1 = d_i_load_22_reg_1704;

assign sext_ln69_15_fu_1179_p1 = d_i_load_23_reg_1710;

assign sext_ln69_1_fu_879_p1 = d_i_load_9_reg_1486;

assign sext_ln69_2_fu_954_p1 = d_i_load_10_reg_1512;

assign sext_ln69_3_fu_957_p1 = d_i_load_11_reg_1518;

assign sext_ln69_4_fu_1062_p1 = d_i_load_12_reg_1544;

assign sext_ln69_5_fu_1065_p1 = d_i_load_13_reg_1550;

assign sext_ln69_6_fu_1170_p1 = d_i_load_14_reg_1576;

assign sext_ln69_7_fu_1173_p1 = d_i_load_15_reg_1582;

assign sext_ln69_8_fu_882_p1 = d_i_load_16_reg_1608;

assign sext_ln69_9_fu_885_p1 = d_i_load_17_reg_1614;

assign sext_ln69_fu_876_p1 = d_i_load_8_reg_1480;

assign temp_1_fu_994_p2 = ($signed(sext_ln67_13_fu_991_p1) + $signed(add_ln67_4_fu_986_p2));

assign temp_2_fu_1082_p2 = ($signed(sext_ln67_16_fu_1079_p1) + $signed(add_ln67_8_fu_1074_p2));

assign temp_3_fu_1102_p2 = ($signed(sext_ln67_19_fu_1099_p1) + $signed(add_ln67_12_fu_1094_p2));

assign temp_4_fu_1190_p2 = ($signed(sext_ln67_22_fu_1187_p1) + $signed(add_ln67_16_fu_1182_p2));

assign temp_5_fu_1210_p2 = ($signed(sext_ln67_25_fu_1207_p1) + $signed(add_ln67_20_fu_1202_p2));

assign temp_6_fu_1286_p2 = ($signed(sext_ln67_28_fu_1283_p1) + $signed(add_ln67_24_fu_1278_p2));

assign temp_7_fu_1306_p2 = ($signed(sext_ln67_31_fu_1303_p1) + $signed(add_ln67_28_fu_1298_p2));

assign temp_fu_974_p2 = ($signed(sext_ln67_10_fu_971_p1) + $signed(add_ln67_fu_966_p2));

assign trunc_ln67_1_fu_712_p1 = acc_1[15:0];

assign trunc_ln67_2_fu_726_p1 = acc_2[15:0];

assign trunc_ln67_3_fu_740_p1 = acc_3[15:0];

assign trunc_ln67_4_fu_754_p1 = acc_4[15:0];

assign trunc_ln67_5_fu_768_p1 = acc_5[15:0];

assign trunc_ln67_6_fu_782_p1 = acc_6[15:0];

assign trunc_ln67_7_fu_796_p1 = acc_7[15:0];

assign trunc_ln67_fu_698_p1 = acc_0[15:0];

endmodule //array_io
