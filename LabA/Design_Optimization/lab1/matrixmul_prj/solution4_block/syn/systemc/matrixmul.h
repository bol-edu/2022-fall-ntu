// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixmul_HH_
#define _matrixmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_mac_mulbkb.h"

namespace ap_rtl {

struct matrixmul : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<64> > a_q0;
    sc_out< sc_lv<5> > a_address1;
    sc_out< sc_logic > a_ce1;
    sc_in< sc_lv<64> > a_q1;
    sc_out< sc_lv<5> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<64> > b_q0;
    sc_out< sc_lv<5> > b_address1;
    sc_out< sc_logic > b_ce1;
    sc_in< sc_lv<64> > b_q1;
    sc_out< sc_lv<8> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<16> > res_d0;


    // Module declarations
    matrixmul(sc_module_name name);
    SC_HAS_PROCESS(matrixmul);

    ~matrixmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U1;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U2;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U3;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U4;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U5;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U6;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U7;
    matrixmul_mac_mulbkb<1,1,8,8,16,16>* matrixmul_mac_mulbkb_U8;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > indvar_flatten_reg_159;
    sc_signal< sc_lv<5> > i_0_reg_170;
    sc_signal< sc_lv<5> > j_0_reg_181;
    sc_signal< sc_lv<1> > icmp_ln54_fu_192_p2;
    sc_signal< sc_lv<1> > icmp_ln54_reg_890;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > add_ln54_fu_198_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > select_ln57_fu_216_p3;
    sc_signal< sc_lv<5> > select_ln57_reg_899;
    sc_signal< sc_lv<5> > select_ln57_1_fu_224_p3;
    sc_signal< sc_lv<5> > select_ln57_1_reg_904;
    sc_signal< sc_lv<5> > j_fu_280_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<5> > ap_phi_mux_i_0_phi_fu_174_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln60_fu_240_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_251_p3;
    sc_signal< sc_lv<64> > zext_ln57_fu_260_p1;
    sc_signal< sc_lv<64> > zext_ln60_3_fu_275_p1;
    sc_signal< sc_lv<64> > zext_ln57_1_fu_306_p1;
    sc_signal< sc_lv<1> > icmp_ln56_fu_210_p2;
    sc_signal< sc_lv<5> > i_fu_204_p2;
    sc_signal< sc_lv<6> > tmp_fu_232_p3;
    sc_signal< sc_lv<6> > or_ln60_fu_245_p2;
    sc_signal< sc_lv<6> > zext_ln60_2_fu_265_p1;
    sc_signal< sc_lv<6> > add_ln60_15_fu_269_p2;
    sc_signal< sc_lv<9> > tmp_3_fu_286_p3;
    sc_signal< sc_lv<10> > zext_ln56_fu_293_p1;
    sc_signal< sc_lv<10> > zext_ln60_1_fu_297_p1;
    sc_signal< sc_lv<10> > add_ln57_fu_300_p2;
    sc_signal< sc_lv<8> > trunc_ln60_fu_311_p1;
    sc_signal< sc_lv<8> > trunc_ln60_1_fu_319_p1;
    sc_signal< sc_lv<8> > mul_ln60_fu_327_p0;
    sc_signal< sc_lv<8> > mul_ln60_fu_327_p1;
    sc_signal< sc_lv<8> > trunc_ln60_2_fu_333_p1;
    sc_signal< sc_lv<8> > trunc_ln60_3_fu_341_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_349_p4;
    sc_signal< sc_lv<8> > tmp_7_fu_363_p4;
    sc_signal< sc_lv<8> > tmp_8_fu_377_p4;
    sc_signal< sc_lv<8> > tmp_9_fu_391_p4;
    sc_signal< sc_lv<8> > mul_ln60_3_fu_405_p0;
    sc_signal< sc_lv<8> > mul_ln60_3_fu_405_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_411_p4;
    sc_signal< sc_lv<8> > tmp_4_fu_425_p4;
    sc_signal< sc_lv<8> > tmp_5_fu_439_p4;
    sc_signal< sc_lv<8> > tmp_10_fu_453_p4;
    sc_signal< sc_lv<8> > mul_ln60_5_fu_467_p0;
    sc_signal< sc_lv<8> > mul_ln60_5_fu_467_p1;
    sc_signal< sc_lv<8> > tmp_11_fu_473_p4;
    sc_signal< sc_lv<8> > tmp_12_fu_487_p4;
    sc_signal< sc_lv<8> > tmp_13_fu_501_p4;
    sc_signal< sc_lv<8> > tmp_14_fu_515_p4;
    sc_signal< sc_lv<8> > mul_ln60_7_fu_529_p0;
    sc_signal< sc_lv<8> > mul_ln60_7_fu_529_p1;
    sc_signal< sc_lv<8> > tmp_15_fu_535_p4;
    sc_signal< sc_lv<8> > tmp_16_fu_549_p4;
    sc_signal< sc_lv<8> > tmp_17_fu_563_p4;
    sc_signal< sc_lv<8> > tmp_18_fu_577_p4;
    sc_signal< sc_lv<8> > mul_ln60_9_fu_591_p0;
    sc_signal< sc_lv<8> > mul_ln60_9_fu_591_p1;
    sc_signal< sc_lv<8> > tmp_19_fu_597_p4;
    sc_signal< sc_lv<8> > tmp_20_fu_611_p4;
    sc_signal< sc_lv<8> > tmp_21_fu_625_p4;
    sc_signal< sc_lv<8> > tmp_22_fu_639_p4;
    sc_signal< sc_lv<8> > mul_ln60_11_fu_653_p0;
    sc_signal< sc_lv<8> > mul_ln60_11_fu_653_p1;
    sc_signal< sc_lv<8> > tmp_23_fu_659_p4;
    sc_signal< sc_lv<8> > tmp_24_fu_673_p4;
    sc_signal< sc_lv<8> > tmp_25_fu_687_p4;
    sc_signal< sc_lv<8> > tmp_26_fu_701_p4;
    sc_signal< sc_lv<8> > mul_ln60_13_fu_715_p0;
    sc_signal< sc_lv<8> > mul_ln60_13_fu_715_p1;
    sc_signal< sc_lv<8> > tmp_27_fu_721_p4;
    sc_signal< sc_lv<8> > tmp_28_fu_735_p4;
    sc_signal< sc_lv<8> > tmp_29_fu_749_p4;
    sc_signal< sc_lv<8> > tmp_30_fu_763_p4;
    sc_signal< sc_lv<8> > mul_ln60_15_fu_777_p0;
    sc_signal< sc_lv<8> > mul_ln60_15_fu_777_p1;
    sc_signal< sc_lv<16> > grp_fu_818_p3;
    sc_signal< sc_lv<16> > grp_fu_827_p3;
    sc_signal< sc_lv<16> > grp_fu_836_p3;
    sc_signal< sc_lv<16> > grp_fu_845_p3;
    sc_signal< sc_lv<16> > add_ln60_2_fu_783_p2;
    sc_signal< sc_lv<16> > add_ln60_5_fu_787_p2;
    sc_signal< sc_lv<16> > grp_fu_854_p3;
    sc_signal< sc_lv<16> > grp_fu_863_p3;
    sc_signal< sc_lv<16> > grp_fu_872_p3;
    sc_signal< sc_lv<16> > grp_fu_881_p3;
    sc_signal< sc_lv<16> > add_ln60_9_fu_797_p2;
    sc_signal< sc_lv<16> > add_ln60_12_fu_801_p2;
    sc_signal< sc_lv<16> > add_ln60_6_fu_791_p2;
    sc_signal< sc_lv<16> > add_ln60_13_fu_805_p2;
    sc_signal< sc_lv<16> > grp_fu_818_p2;
    sc_signal< sc_lv<16> > grp_fu_827_p2;
    sc_signal< sc_lv<16> > grp_fu_836_p2;
    sc_signal< sc_lv<16> > grp_fu_845_p2;
    sc_signal< sc_lv<16> > grp_fu_854_p2;
    sc_signal< sc_lv<16> > grp_fu_863_p2;
    sc_signal< sc_lv<16> > grp_fu_872_p2;
    sc_signal< sc_lv<16> > grp_fu_881_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<58> ap_const_lv58_0;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_address1();
    void thread_a_ce0();
    void thread_a_ce1();
    void thread_add_ln54_fu_198_p2();
    void thread_add_ln57_fu_300_p2();
    void thread_add_ln60_12_fu_801_p2();
    void thread_add_ln60_13_fu_805_p2();
    void thread_add_ln60_15_fu_269_p2();
    void thread_add_ln60_2_fu_783_p2();
    void thread_add_ln60_5_fu_787_p2();
    void thread_add_ln60_6_fu_791_p2();
    void thread_add_ln60_9_fu_797_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_174_p4();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_address1();
    void thread_b_ce0();
    void thread_b_ce1();
    void thread_grp_fu_818_p2();
    void thread_grp_fu_827_p2();
    void thread_grp_fu_836_p2();
    void thread_grp_fu_845_p2();
    void thread_grp_fu_854_p2();
    void thread_grp_fu_863_p2();
    void thread_grp_fu_872_p2();
    void thread_grp_fu_881_p2();
    void thread_i_fu_204_p2();
    void thread_icmp_ln54_fu_192_p2();
    void thread_icmp_ln56_fu_210_p2();
    void thread_j_fu_280_p2();
    void thread_mul_ln60_11_fu_653_p0();
    void thread_mul_ln60_11_fu_653_p1();
    void thread_mul_ln60_13_fu_715_p0();
    void thread_mul_ln60_13_fu_715_p1();
    void thread_mul_ln60_15_fu_777_p0();
    void thread_mul_ln60_15_fu_777_p1();
    void thread_mul_ln60_3_fu_405_p0();
    void thread_mul_ln60_3_fu_405_p1();
    void thread_mul_ln60_5_fu_467_p0();
    void thread_mul_ln60_5_fu_467_p1();
    void thread_mul_ln60_7_fu_529_p0();
    void thread_mul_ln60_7_fu_529_p1();
    void thread_mul_ln60_9_fu_591_p0();
    void thread_mul_ln60_9_fu_591_p1();
    void thread_mul_ln60_fu_327_p0();
    void thread_mul_ln60_fu_327_p1();
    void thread_or_ln60_fu_245_p2();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_select_ln57_1_fu_224_p3();
    void thread_select_ln57_fu_216_p3();
    void thread_tmp_10_fu_453_p4();
    void thread_tmp_11_fu_473_p4();
    void thread_tmp_12_fu_487_p4();
    void thread_tmp_13_fu_501_p4();
    void thread_tmp_14_fu_515_p4();
    void thread_tmp_15_fu_535_p4();
    void thread_tmp_16_fu_549_p4();
    void thread_tmp_17_fu_563_p4();
    void thread_tmp_18_fu_577_p4();
    void thread_tmp_19_fu_597_p4();
    void thread_tmp_20_fu_611_p4();
    void thread_tmp_21_fu_625_p4();
    void thread_tmp_22_fu_639_p4();
    void thread_tmp_23_fu_659_p4();
    void thread_tmp_24_fu_673_p4();
    void thread_tmp_25_fu_687_p4();
    void thread_tmp_26_fu_701_p4();
    void thread_tmp_27_fu_721_p4();
    void thread_tmp_28_fu_735_p4();
    void thread_tmp_29_fu_749_p4();
    void thread_tmp_2_fu_251_p3();
    void thread_tmp_30_fu_763_p4();
    void thread_tmp_3_fu_286_p3();
    void thread_tmp_4_fu_425_p4();
    void thread_tmp_5_fu_439_p4();
    void thread_tmp_6_fu_349_p4();
    void thread_tmp_7_fu_363_p4();
    void thread_tmp_8_fu_377_p4();
    void thread_tmp_9_fu_391_p4();
    void thread_tmp_fu_232_p3();
    void thread_tmp_s_fu_411_p4();
    void thread_trunc_ln60_1_fu_319_p1();
    void thread_trunc_ln60_2_fu_333_p1();
    void thread_trunc_ln60_3_fu_341_p1();
    void thread_trunc_ln60_fu_311_p1();
    void thread_zext_ln56_fu_293_p1();
    void thread_zext_ln57_1_fu_306_p1();
    void thread_zext_ln57_fu_260_p1();
    void thread_zext_ln60_1_fu_297_p1();
    void thread_zext_ln60_2_fu_265_p1();
    void thread_zext_ln60_3_fu_275_p1();
    void thread_zext_ln60_fu_240_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
