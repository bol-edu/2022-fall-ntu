// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> matrixmul::ap_ST_fsm_state1 = "1";
const sc_lv<3> matrixmul::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> matrixmul::ap_ST_fsm_state4 = "100";
const sc_lv<32> matrixmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool matrixmul::ap_const_boolean_1 = true;
const sc_lv<32> matrixmul::ap_const_lv32_1 = "1";
const bool matrixmul::ap_const_boolean_0 = false;
const sc_lv<1> matrixmul::ap_const_lv1_0 = "0";
const sc_lv<1> matrixmul::ap_const_lv1_1 = "1";
const sc_lv<9> matrixmul::ap_const_lv9_0 = "000000000";
const sc_lv<5> matrixmul::ap_const_lv5_0 = "00000";
const sc_lv<9> matrixmul::ap_const_lv9_100 = "100000000";
const sc_lv<9> matrixmul::ap_const_lv9_1 = "1";
const sc_lv<5> matrixmul::ap_const_lv5_1 = "1";
const sc_lv<5> matrixmul::ap_const_lv5_10 = "10000";
const sc_lv<4> matrixmul::ap_const_lv4_0 = "0000";
const sc_lv<32> matrixmul::ap_const_lv32_8 = "1000";
const sc_lv<32> matrixmul::ap_const_lv32_F = "1111";
const sc_lv<32> matrixmul::ap_const_lv32_10 = "10000";
const sc_lv<32> matrixmul::ap_const_lv32_17 = "10111";
const sc_lv<32> matrixmul::ap_const_lv32_18 = "11000";
const sc_lv<32> matrixmul::ap_const_lv32_1F = "11111";
const sc_lv<32> matrixmul::ap_const_lv32_20 = "100000";
const sc_lv<32> matrixmul::ap_const_lv32_27 = "100111";
const sc_lv<32> matrixmul::ap_const_lv32_28 = "101000";
const sc_lv<32> matrixmul::ap_const_lv32_2F = "101111";
const sc_lv<32> matrixmul::ap_const_lv32_30 = "110000";
const sc_lv<32> matrixmul::ap_const_lv32_37 = "110111";
const sc_lv<32> matrixmul::ap_const_lv32_38 = "111000";
const sc_lv<32> matrixmul::ap_const_lv32_3F = "111111";
const sc_lv<32> matrixmul::ap_const_lv32_40 = "1000000";
const sc_lv<32> matrixmul::ap_const_lv32_47 = "1000111";
const sc_lv<32> matrixmul::ap_const_lv32_48 = "1001000";
const sc_lv<32> matrixmul::ap_const_lv32_4F = "1001111";
const sc_lv<32> matrixmul::ap_const_lv32_50 = "1010000";
const sc_lv<32> matrixmul::ap_const_lv32_57 = "1010111";
const sc_lv<32> matrixmul::ap_const_lv32_58 = "1011000";
const sc_lv<32> matrixmul::ap_const_lv32_5F = "1011111";
const sc_lv<32> matrixmul::ap_const_lv32_60 = "1100000";
const sc_lv<32> matrixmul::ap_const_lv32_67 = "1100111";
const sc_lv<32> matrixmul::ap_const_lv32_68 = "1101000";
const sc_lv<32> matrixmul::ap_const_lv32_6F = "1101111";
const sc_lv<32> matrixmul::ap_const_lv32_70 = "1110000";
const sc_lv<32> matrixmul::ap_const_lv32_77 = "1110111";
const sc_lv<32> matrixmul::ap_const_lv32_78 = "1111000";
const sc_lv<32> matrixmul::ap_const_lv32_7F = "1111111";
const sc_lv<32> matrixmul::ap_const_lv32_2 = "10";

matrixmul::matrixmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrixmul_mac_mulbkb_U1 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U1");
    matrixmul_mac_mulbkb_U1->din0(tmp_5_fu_305_p4);
    matrixmul_mac_mulbkb_U1->din1(tmp_4_fu_291_p4);
    matrixmul_mac_mulbkb_U1->din2(grp_fu_788_p2);
    matrixmul_mac_mulbkb_U1->dout(grp_fu_788_p3);
    matrixmul_mac_mulbkb_U2 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U2");
    matrixmul_mac_mulbkb_U2->din0(tmp_7_fu_333_p4);
    matrixmul_mac_mulbkb_U2->din1(tmp_6_fu_319_p4);
    matrixmul_mac_mulbkb_U2->din2(grp_fu_797_p2);
    matrixmul_mac_mulbkb_U2->dout(grp_fu_797_p3);
    matrixmul_mac_mulbkb_U3 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U3");
    matrixmul_mac_mulbkb_U3->din0(tmp_2_fu_395_p4);
    matrixmul_mac_mulbkb_U3->din1(tmp_s_fu_381_p4);
    matrixmul_mac_mulbkb_U3->din2(grp_fu_806_p2);
    matrixmul_mac_mulbkb_U3->dout(grp_fu_806_p3);
    matrixmul_mac_mulbkb_U4 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U4");
    matrixmul_mac_mulbkb_U4->din0(tmp_12_fu_457_p4);
    matrixmul_mac_mulbkb_U4->din1(tmp_11_fu_443_p4);
    matrixmul_mac_mulbkb_U4->din2(grp_fu_815_p2);
    matrixmul_mac_mulbkb_U4->dout(grp_fu_815_p3);
    matrixmul_mac_mulbkb_U5 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U5");
    matrixmul_mac_mulbkb_U5->din0(tmp_16_fu_519_p4);
    matrixmul_mac_mulbkb_U5->din1(tmp_15_fu_505_p4);
    matrixmul_mac_mulbkb_U5->din2(grp_fu_824_p2);
    matrixmul_mac_mulbkb_U5->dout(grp_fu_824_p3);
    matrixmul_mac_mulbkb_U6 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U6");
    matrixmul_mac_mulbkb_U6->din0(tmp_20_fu_581_p4);
    matrixmul_mac_mulbkb_U6->din1(tmp_19_fu_567_p4);
    matrixmul_mac_mulbkb_U6->din2(grp_fu_833_p2);
    matrixmul_mac_mulbkb_U6->dout(grp_fu_833_p3);
    matrixmul_mac_mulbkb_U7 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U7");
    matrixmul_mac_mulbkb_U7->din0(tmp_24_fu_643_p4);
    matrixmul_mac_mulbkb_U7->din1(tmp_23_fu_629_p4);
    matrixmul_mac_mulbkb_U7->din2(grp_fu_842_p2);
    matrixmul_mac_mulbkb_U7->dout(grp_fu_842_p3);
    matrixmul_mac_mulbkb_U8 = new matrixmul_mac_mulbkb<1,1,8,8,16,16>("matrixmul_mac_mulbkb_U8");
    matrixmul_mac_mulbkb_U8->din0(tmp_28_fu_705_p4);
    matrixmul_mac_mulbkb_U8->din1(tmp_27_fu_691_p4);
    matrixmul_mac_mulbkb_U8->din2(grp_fu_851_p2);
    matrixmul_mac_mulbkb_U8->dout(grp_fu_851_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln57_fu_228_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_add_ln54_fu_194_p2);
    sensitive << ( indvar_flatten_reg_155 );

    SC_METHOD(thread_add_ln57_fu_258_p2);
    sensitive << ( zext_ln56_fu_251_p1 );
    sensitive << ( zext_ln57_2_fu_255_p1 );

    SC_METHOD(thread_add_ln60_12_fu_771_p2);
    sensitive << ( grp_fu_842_p3 );
    sensitive << ( grp_fu_851_p3 );

    SC_METHOD(thread_add_ln60_13_fu_775_p2);
    sensitive << ( add_ln60_9_fu_767_p2 );
    sensitive << ( add_ln60_12_fu_771_p2 );

    SC_METHOD(thread_add_ln60_2_fu_753_p2);
    sensitive << ( grp_fu_788_p3 );
    sensitive << ( grp_fu_797_p3 );

    SC_METHOD(thread_add_ln60_5_fu_757_p2);
    sensitive << ( grp_fu_806_p3 );
    sensitive << ( grp_fu_815_p3 );

    SC_METHOD(thread_add_ln60_6_fu_761_p2);
    sensitive << ( add_ln60_2_fu_753_p2 );
    sensitive << ( add_ln60_5_fu_757_p2 );

    SC_METHOD(thread_add_ln60_9_fu_767_p2);
    sensitive << ( grp_fu_824_p3 );
    sensitive << ( grp_fu_833_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln54_fu_188_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_170_p4);
    sensitive << ( i_0_reg_166 );
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln57_1_reg_874 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln57_1_fu_233_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_788_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_fu_285_p0 );
    sensitive << ( mul_ln60_fu_285_p1 );

    SC_METHOD(thread_grp_fu_797_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_3_fu_375_p0 );
    sensitive << ( mul_ln60_3_fu_375_p1 );

    SC_METHOD(thread_grp_fu_806_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_5_fu_437_p0 );
    sensitive << ( mul_ln60_5_fu_437_p1 );

    SC_METHOD(thread_grp_fu_815_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_7_fu_499_p0 );
    sensitive << ( mul_ln60_7_fu_499_p1 );

    SC_METHOD(thread_grp_fu_824_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_9_fu_561_p0 );
    sensitive << ( mul_ln60_9_fu_561_p1 );

    SC_METHOD(thread_grp_fu_833_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_11_fu_623_p0 );
    sensitive << ( mul_ln60_11_fu_623_p1 );

    SC_METHOD(thread_grp_fu_842_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_13_fu_685_p0 );
    sensitive << ( mul_ln60_13_fu_685_p1 );

    SC_METHOD(thread_grp_fu_851_p2);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln60_15_fu_747_p0 );
    sensitive << ( mul_ln60_15_fu_747_p1 );

    SC_METHOD(thread_i_fu_200_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_170_p4 );

    SC_METHOD(thread_icmp_ln54_fu_188_p2);
    sensitive << ( indvar_flatten_reg_155 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln56_fu_206_p2);
    sensitive << ( j_0_reg_177 );
    sensitive << ( icmp_ln54_fu_188_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_238_p2);
    sensitive << ( select_ln57_fu_212_p3 );

    SC_METHOD(thread_mul_ln60_11_fu_623_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_22_fu_609_p4 );

    SC_METHOD(thread_mul_ln60_11_fu_623_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_21_fu_595_p4 );

    SC_METHOD(thread_mul_ln60_13_fu_685_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_26_fu_671_p4 );

    SC_METHOD(thread_mul_ln60_13_fu_685_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_25_fu_657_p4 );

    SC_METHOD(thread_mul_ln60_15_fu_747_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_30_fu_733_p4 );

    SC_METHOD(thread_mul_ln60_15_fu_747_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_29_fu_719_p4 );

    SC_METHOD(thread_mul_ln60_3_fu_375_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_9_fu_361_p4 );

    SC_METHOD(thread_mul_ln60_3_fu_375_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_8_fu_347_p4 );

    SC_METHOD(thread_mul_ln60_5_fu_437_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_10_fu_423_p4 );

    SC_METHOD(thread_mul_ln60_5_fu_437_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_409_p4 );

    SC_METHOD(thread_mul_ln60_7_fu_499_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_14_fu_485_p4 );

    SC_METHOD(thread_mul_ln60_7_fu_499_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_13_fu_471_p4 );

    SC_METHOD(thread_mul_ln60_9_fu_561_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_18_fu_547_p4 );

    SC_METHOD(thread_mul_ln60_9_fu_561_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_17_fu_533_p4 );

    SC_METHOD(thread_mul_ln60_fu_285_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( trunc_ln60_1_fu_277_p1 );

    SC_METHOD(thread_mul_ln60_fu_285_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( trunc_ln60_fu_269_p1 );

    SC_METHOD(thread_res_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln57_3_fu_264_p1 );

    SC_METHOD(thread_res_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_res_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( add_ln60_6_fu_761_p2 );
    sensitive << ( add_ln60_13_fu_775_p2 );

    SC_METHOD(thread_res_we0);
    sensitive << ( icmp_ln54_reg_860 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_select_ln57_1_fu_220_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_170_p4 );
    sensitive << ( icmp_ln56_fu_206_p2 );
    sensitive << ( i_fu_200_p2 );

    SC_METHOD(thread_select_ln57_fu_212_p3);
    sensitive << ( j_0_reg_177 );
    sensitive << ( icmp_ln56_fu_206_p2 );

    SC_METHOD(thread_tmp_10_fu_423_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_11_fu_443_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_12_fu_457_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_13_fu_471_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_14_fu_485_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_15_fu_505_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_16_fu_519_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_17_fu_533_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_18_fu_547_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_19_fu_567_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_20_fu_581_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_21_fu_595_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_22_fu_609_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_23_fu_629_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_24_fu_643_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_25_fu_657_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_26_fu_671_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_27_fu_691_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_28_fu_705_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_29_fu_719_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_2_fu_395_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_30_fu_733_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_3_fu_409_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_4_fu_291_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_5_fu_305_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_6_fu_319_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_7_fu_333_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_8_fu_347_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_9_fu_361_p4);
    sensitive << ( b_q0 );

    SC_METHOD(thread_tmp_fu_244_p3);
    sensitive << ( select_ln57_1_reg_874 );

    SC_METHOD(thread_tmp_s_fu_381_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_trunc_ln60_1_fu_277_p1);
    sensitive << ( b_q0 );

    SC_METHOD(thread_trunc_ln60_fu_269_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_zext_ln56_fu_251_p1);
    sensitive << ( tmp_fu_244_p3 );

    SC_METHOD(thread_zext_ln57_1_fu_233_p1);
    sensitive << ( select_ln57_fu_212_p3 );

    SC_METHOD(thread_zext_ln57_2_fu_255_p1);
    sensitive << ( select_ln57_reg_869 );

    SC_METHOD(thread_zext_ln57_3_fu_264_p1);
    sensitive << ( add_ln57_fu_258_p2 );

    SC_METHOD(thread_zext_ln57_fu_228_p1);
    sensitive << ( select_ln57_1_fu_220_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln54_fu_188_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, res_address0, "(port)res_address0");
    sc_trace(mVcdFile, res_ce0, "(port)res_ce0");
    sc_trace(mVcdFile, res_we0, "(port)res_we0");
    sc_trace(mVcdFile, res_d0, "(port)res_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_155, "indvar_flatten_reg_155");
    sc_trace(mVcdFile, i_0_reg_166, "i_0_reg_166");
    sc_trace(mVcdFile, j_0_reg_177, "j_0_reg_177");
    sc_trace(mVcdFile, icmp_ln54_fu_188_p2, "icmp_ln54_fu_188_p2");
    sc_trace(mVcdFile, icmp_ln54_reg_860, "icmp_ln54_reg_860");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln54_fu_194_p2, "add_ln54_fu_194_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln57_fu_212_p3, "select_ln57_fu_212_p3");
    sc_trace(mVcdFile, select_ln57_reg_869, "select_ln57_reg_869");
    sc_trace(mVcdFile, select_ln57_1_fu_220_p3, "select_ln57_1_fu_220_p3");
    sc_trace(mVcdFile, select_ln57_1_reg_874, "select_ln57_1_reg_874");
    sc_trace(mVcdFile, j_fu_238_p2, "j_fu_238_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_170_p4, "ap_phi_mux_i_0_phi_fu_170_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln57_fu_228_p1, "zext_ln57_fu_228_p1");
    sc_trace(mVcdFile, zext_ln57_1_fu_233_p1, "zext_ln57_1_fu_233_p1");
    sc_trace(mVcdFile, zext_ln57_3_fu_264_p1, "zext_ln57_3_fu_264_p1");
    sc_trace(mVcdFile, icmp_ln56_fu_206_p2, "icmp_ln56_fu_206_p2");
    sc_trace(mVcdFile, i_fu_200_p2, "i_fu_200_p2");
    sc_trace(mVcdFile, tmp_fu_244_p3, "tmp_fu_244_p3");
    sc_trace(mVcdFile, zext_ln56_fu_251_p1, "zext_ln56_fu_251_p1");
    sc_trace(mVcdFile, zext_ln57_2_fu_255_p1, "zext_ln57_2_fu_255_p1");
    sc_trace(mVcdFile, add_ln57_fu_258_p2, "add_ln57_fu_258_p2");
    sc_trace(mVcdFile, trunc_ln60_fu_269_p1, "trunc_ln60_fu_269_p1");
    sc_trace(mVcdFile, trunc_ln60_1_fu_277_p1, "trunc_ln60_1_fu_277_p1");
    sc_trace(mVcdFile, mul_ln60_fu_285_p0, "mul_ln60_fu_285_p0");
    sc_trace(mVcdFile, mul_ln60_fu_285_p1, "mul_ln60_fu_285_p1");
    sc_trace(mVcdFile, tmp_4_fu_291_p4, "tmp_4_fu_291_p4");
    sc_trace(mVcdFile, tmp_5_fu_305_p4, "tmp_5_fu_305_p4");
    sc_trace(mVcdFile, tmp_6_fu_319_p4, "tmp_6_fu_319_p4");
    sc_trace(mVcdFile, tmp_7_fu_333_p4, "tmp_7_fu_333_p4");
    sc_trace(mVcdFile, tmp_8_fu_347_p4, "tmp_8_fu_347_p4");
    sc_trace(mVcdFile, tmp_9_fu_361_p4, "tmp_9_fu_361_p4");
    sc_trace(mVcdFile, mul_ln60_3_fu_375_p0, "mul_ln60_3_fu_375_p0");
    sc_trace(mVcdFile, mul_ln60_3_fu_375_p1, "mul_ln60_3_fu_375_p1");
    sc_trace(mVcdFile, tmp_s_fu_381_p4, "tmp_s_fu_381_p4");
    sc_trace(mVcdFile, tmp_2_fu_395_p4, "tmp_2_fu_395_p4");
    sc_trace(mVcdFile, tmp_3_fu_409_p4, "tmp_3_fu_409_p4");
    sc_trace(mVcdFile, tmp_10_fu_423_p4, "tmp_10_fu_423_p4");
    sc_trace(mVcdFile, mul_ln60_5_fu_437_p0, "mul_ln60_5_fu_437_p0");
    sc_trace(mVcdFile, mul_ln60_5_fu_437_p1, "mul_ln60_5_fu_437_p1");
    sc_trace(mVcdFile, tmp_11_fu_443_p4, "tmp_11_fu_443_p4");
    sc_trace(mVcdFile, tmp_12_fu_457_p4, "tmp_12_fu_457_p4");
    sc_trace(mVcdFile, tmp_13_fu_471_p4, "tmp_13_fu_471_p4");
    sc_trace(mVcdFile, tmp_14_fu_485_p4, "tmp_14_fu_485_p4");
    sc_trace(mVcdFile, mul_ln60_7_fu_499_p0, "mul_ln60_7_fu_499_p0");
    sc_trace(mVcdFile, mul_ln60_7_fu_499_p1, "mul_ln60_7_fu_499_p1");
    sc_trace(mVcdFile, tmp_15_fu_505_p4, "tmp_15_fu_505_p4");
    sc_trace(mVcdFile, tmp_16_fu_519_p4, "tmp_16_fu_519_p4");
    sc_trace(mVcdFile, tmp_17_fu_533_p4, "tmp_17_fu_533_p4");
    sc_trace(mVcdFile, tmp_18_fu_547_p4, "tmp_18_fu_547_p4");
    sc_trace(mVcdFile, mul_ln60_9_fu_561_p0, "mul_ln60_9_fu_561_p0");
    sc_trace(mVcdFile, mul_ln60_9_fu_561_p1, "mul_ln60_9_fu_561_p1");
    sc_trace(mVcdFile, tmp_19_fu_567_p4, "tmp_19_fu_567_p4");
    sc_trace(mVcdFile, tmp_20_fu_581_p4, "tmp_20_fu_581_p4");
    sc_trace(mVcdFile, tmp_21_fu_595_p4, "tmp_21_fu_595_p4");
    sc_trace(mVcdFile, tmp_22_fu_609_p4, "tmp_22_fu_609_p4");
    sc_trace(mVcdFile, mul_ln60_11_fu_623_p0, "mul_ln60_11_fu_623_p0");
    sc_trace(mVcdFile, mul_ln60_11_fu_623_p1, "mul_ln60_11_fu_623_p1");
    sc_trace(mVcdFile, tmp_23_fu_629_p4, "tmp_23_fu_629_p4");
    sc_trace(mVcdFile, tmp_24_fu_643_p4, "tmp_24_fu_643_p4");
    sc_trace(mVcdFile, tmp_25_fu_657_p4, "tmp_25_fu_657_p4");
    sc_trace(mVcdFile, tmp_26_fu_671_p4, "tmp_26_fu_671_p4");
    sc_trace(mVcdFile, mul_ln60_13_fu_685_p0, "mul_ln60_13_fu_685_p0");
    sc_trace(mVcdFile, mul_ln60_13_fu_685_p1, "mul_ln60_13_fu_685_p1");
    sc_trace(mVcdFile, tmp_27_fu_691_p4, "tmp_27_fu_691_p4");
    sc_trace(mVcdFile, tmp_28_fu_705_p4, "tmp_28_fu_705_p4");
    sc_trace(mVcdFile, tmp_29_fu_719_p4, "tmp_29_fu_719_p4");
    sc_trace(mVcdFile, tmp_30_fu_733_p4, "tmp_30_fu_733_p4");
    sc_trace(mVcdFile, mul_ln60_15_fu_747_p0, "mul_ln60_15_fu_747_p0");
    sc_trace(mVcdFile, mul_ln60_15_fu_747_p1, "mul_ln60_15_fu_747_p1");
    sc_trace(mVcdFile, grp_fu_788_p3, "grp_fu_788_p3");
    sc_trace(mVcdFile, grp_fu_797_p3, "grp_fu_797_p3");
    sc_trace(mVcdFile, grp_fu_806_p3, "grp_fu_806_p3");
    sc_trace(mVcdFile, grp_fu_815_p3, "grp_fu_815_p3");
    sc_trace(mVcdFile, add_ln60_2_fu_753_p2, "add_ln60_2_fu_753_p2");
    sc_trace(mVcdFile, add_ln60_5_fu_757_p2, "add_ln60_5_fu_757_p2");
    sc_trace(mVcdFile, grp_fu_824_p3, "grp_fu_824_p3");
    sc_trace(mVcdFile, grp_fu_833_p3, "grp_fu_833_p3");
    sc_trace(mVcdFile, grp_fu_842_p3, "grp_fu_842_p3");
    sc_trace(mVcdFile, grp_fu_851_p3, "grp_fu_851_p3");
    sc_trace(mVcdFile, add_ln60_9_fu_767_p2, "add_ln60_9_fu_767_p2");
    sc_trace(mVcdFile, add_ln60_12_fu_771_p2, "add_ln60_12_fu_771_p2");
    sc_trace(mVcdFile, add_ln60_6_fu_761_p2, "add_ln60_6_fu_761_p2");
    sc_trace(mVcdFile, add_ln60_13_fu_775_p2, "add_ln60_13_fu_775_p2");
    sc_trace(mVcdFile, grp_fu_788_p2, "grp_fu_788_p2");
    sc_trace(mVcdFile, grp_fu_797_p2, "grp_fu_797_p2");
    sc_trace(mVcdFile, grp_fu_806_p2, "grp_fu_806_p2");
    sc_trace(mVcdFile, grp_fu_815_p2, "grp_fu_815_p2");
    sc_trace(mVcdFile, grp_fu_824_p2, "grp_fu_824_p2");
    sc_trace(mVcdFile, grp_fu_833_p2, "grp_fu_833_p2");
    sc_trace(mVcdFile, grp_fu_842_p2, "grp_fu_842_p2");
    sc_trace(mVcdFile, grp_fu_851_p2, "grp_fu_851_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("matrixmul.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul.hdltvout.dat");
}

matrixmul::~matrixmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrixmul_mac_mulbkb_U1;
    delete matrixmul_mac_mulbkb_U2;
    delete matrixmul_mac_mulbkb_U3;
    delete matrixmul_mac_mulbkb_U4;
    delete matrixmul_mac_mulbkb_U5;
    delete matrixmul_mac_mulbkb_U6;
    delete matrixmul_mac_mulbkb_U7;
    delete matrixmul_mac_mulbkb_U8;
}

void matrixmul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_reg_860.read(), ap_const_lv1_0))) {
        i_0_reg_166 = select_ln57_1_reg_874.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_166 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_fu_188_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_155 = add_ln54_fu_194_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_155 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_fu_188_p2.read(), ap_const_lv1_0))) {
        j_0_reg_177 = j_fu_238_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_177 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln54_reg_860 = icmp_ln54_fu_188_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln54_fu_188_p2.read(), ap_const_lv1_0))) {
        select_ln57_1_reg_874 = select_ln57_1_fu_220_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln54_fu_188_p2.read(), ap_const_lv1_0))) {
        select_ln57_reg_869 = select_ln57_fu_212_p3.read();
    }
}

void matrixmul::thread_a_address0() {
    a_address0 =  (sc_lv<4>) (zext_ln57_fu_228_p1.read());
}

void matrixmul::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_add_ln54_fu_194_p2() {
    add_ln54_fu_194_p2 = (!indvar_flatten_reg_155.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(indvar_flatten_reg_155.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void matrixmul::thread_add_ln57_fu_258_p2() {
    add_ln57_fu_258_p2 = (!zext_ln56_fu_251_p1.read().is_01() || !zext_ln57_2_fu_255_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln56_fu_251_p1.read()) + sc_biguint<10>(zext_ln57_2_fu_255_p1.read()));
}

void matrixmul::thread_add_ln60_12_fu_771_p2() {
    add_ln60_12_fu_771_p2 = (!grp_fu_842_p3.read().is_01() || !grp_fu_851_p3.read().is_01())? sc_lv<16>(): (sc_bigint<16>(grp_fu_842_p3.read()) + sc_bigint<16>(grp_fu_851_p3.read()));
}

void matrixmul::thread_add_ln60_13_fu_775_p2() {
    add_ln60_13_fu_775_p2 = (!add_ln60_9_fu_767_p2.read().is_01() || !add_ln60_12_fu_771_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln60_9_fu_767_p2.read()) + sc_biguint<16>(add_ln60_12_fu_771_p2.read()));
}

void matrixmul::thread_add_ln60_2_fu_753_p2() {
    add_ln60_2_fu_753_p2 = (!grp_fu_788_p3.read().is_01() || !grp_fu_797_p3.read().is_01())? sc_lv<16>(): (sc_bigint<16>(grp_fu_788_p3.read()) + sc_bigint<16>(grp_fu_797_p3.read()));
}

void matrixmul::thread_add_ln60_5_fu_757_p2() {
    add_ln60_5_fu_757_p2 = (!grp_fu_806_p3.read().is_01() || !grp_fu_815_p3.read().is_01())? sc_lv<16>(): (sc_bigint<16>(grp_fu_806_p3.read()) + sc_bigint<16>(grp_fu_815_p3.read()));
}

void matrixmul::thread_add_ln60_6_fu_761_p2() {
    add_ln60_6_fu_761_p2 = (!add_ln60_2_fu_753_p2.read().is_01() || !add_ln60_5_fu_757_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln60_2_fu_753_p2.read()) + sc_biguint<16>(add_ln60_5_fu_757_p2.read()));
}

void matrixmul::thread_add_ln60_9_fu_767_p2() {
    add_ln60_9_fu_767_p2 = (!grp_fu_824_p3.read().is_01() || !grp_fu_833_p3.read().is_01())? sc_lv<16>(): (sc_bigint<16>(grp_fu_824_p3.read()) + sc_bigint<16>(grp_fu_833_p3.read()));
}

void matrixmul::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void matrixmul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrixmul::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void matrixmul::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln54_fu_188_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void matrixmul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_phi_mux_i_0_phi_fu_170_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_reg_860.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_170_p4 = select_ln57_1_reg_874.read();
    } else {
        ap_phi_mux_i_0_phi_fu_170_p4 = i_0_reg_166.read();
    }
}

void matrixmul::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul::thread_b_address0() {
    b_address0 =  (sc_lv<4>) (zext_ln57_1_fu_233_p1.read());
}

void matrixmul::thread_b_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_grp_fu_788_p2() {
    grp_fu_788_p2 = (!mul_ln60_fu_285_p0.read().is_01() || !mul_ln60_fu_285_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_fu_285_p0.read()) * sc_bigint<8>(mul_ln60_fu_285_p1.read());
}

void matrixmul::thread_grp_fu_797_p2() {
    grp_fu_797_p2 = (!mul_ln60_3_fu_375_p0.read().is_01() || !mul_ln60_3_fu_375_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_3_fu_375_p0.read()) * sc_bigint<8>(mul_ln60_3_fu_375_p1.read());
}

void matrixmul::thread_grp_fu_806_p2() {
    grp_fu_806_p2 = (!mul_ln60_5_fu_437_p0.read().is_01() || !mul_ln60_5_fu_437_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_5_fu_437_p0.read()) * sc_bigint<8>(mul_ln60_5_fu_437_p1.read());
}

void matrixmul::thread_grp_fu_815_p2() {
    grp_fu_815_p2 = (!mul_ln60_7_fu_499_p0.read().is_01() || !mul_ln60_7_fu_499_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_7_fu_499_p0.read()) * sc_bigint<8>(mul_ln60_7_fu_499_p1.read());
}

void matrixmul::thread_grp_fu_824_p2() {
    grp_fu_824_p2 = (!mul_ln60_9_fu_561_p0.read().is_01() || !mul_ln60_9_fu_561_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_9_fu_561_p0.read()) * sc_bigint<8>(mul_ln60_9_fu_561_p1.read());
}

void matrixmul::thread_grp_fu_833_p2() {
    grp_fu_833_p2 = (!mul_ln60_11_fu_623_p0.read().is_01() || !mul_ln60_11_fu_623_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_11_fu_623_p0.read()) * sc_bigint<8>(mul_ln60_11_fu_623_p1.read());
}

void matrixmul::thread_grp_fu_842_p2() {
    grp_fu_842_p2 = (!mul_ln60_13_fu_685_p0.read().is_01() || !mul_ln60_13_fu_685_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_13_fu_685_p0.read()) * sc_bigint<8>(mul_ln60_13_fu_685_p1.read());
}

void matrixmul::thread_grp_fu_851_p2() {
    grp_fu_851_p2 = (!mul_ln60_15_fu_747_p0.read().is_01() || !mul_ln60_15_fu_747_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(mul_ln60_15_fu_747_p0.read()) * sc_bigint<8>(mul_ln60_15_fu_747_p1.read());
}

void matrixmul::thread_i_fu_200_p2() {
    i_fu_200_p2 = (!ap_const_lv5_1.is_01() || !ap_phi_mux_i_0_phi_fu_170_p4.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(ap_phi_mux_i_0_phi_fu_170_p4.read()));
}

void matrixmul::thread_icmp_ln54_fu_188_p2() {
    icmp_ln54_fu_188_p2 = (!indvar_flatten_reg_155.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_155.read() == ap_const_lv9_100);
}

void matrixmul::thread_icmp_ln56_fu_206_p2() {
    icmp_ln56_fu_206_p2 = (!j_0_reg_177.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_177.read() == ap_const_lv5_10);
}

void matrixmul::thread_j_fu_238_p2() {
    j_fu_238_p2 = (!ap_const_lv5_1.is_01() || !select_ln57_fu_212_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(select_ln57_fu_212_p3.read()));
}

void matrixmul::thread_mul_ln60_11_fu_623_p0() {
    mul_ln60_11_fu_623_p0 = tmp_22_fu_609_p4.read();
}

void matrixmul::thread_mul_ln60_11_fu_623_p1() {
    mul_ln60_11_fu_623_p1 = tmp_21_fu_595_p4.read();
}

void matrixmul::thread_mul_ln60_13_fu_685_p0() {
    mul_ln60_13_fu_685_p0 = tmp_26_fu_671_p4.read();
}

void matrixmul::thread_mul_ln60_13_fu_685_p1() {
    mul_ln60_13_fu_685_p1 = tmp_25_fu_657_p4.read();
}

void matrixmul::thread_mul_ln60_15_fu_747_p0() {
    mul_ln60_15_fu_747_p0 = tmp_30_fu_733_p4.read();
}

void matrixmul::thread_mul_ln60_15_fu_747_p1() {
    mul_ln60_15_fu_747_p1 = tmp_29_fu_719_p4.read();
}

void matrixmul::thread_mul_ln60_3_fu_375_p0() {
    mul_ln60_3_fu_375_p0 = tmp_9_fu_361_p4.read();
}

void matrixmul::thread_mul_ln60_3_fu_375_p1() {
    mul_ln60_3_fu_375_p1 = tmp_8_fu_347_p4.read();
}

void matrixmul::thread_mul_ln60_5_fu_437_p0() {
    mul_ln60_5_fu_437_p0 = tmp_10_fu_423_p4.read();
}

void matrixmul::thread_mul_ln60_5_fu_437_p1() {
    mul_ln60_5_fu_437_p1 = tmp_3_fu_409_p4.read();
}

void matrixmul::thread_mul_ln60_7_fu_499_p0() {
    mul_ln60_7_fu_499_p0 = tmp_14_fu_485_p4.read();
}

void matrixmul::thread_mul_ln60_7_fu_499_p1() {
    mul_ln60_7_fu_499_p1 = tmp_13_fu_471_p4.read();
}

void matrixmul::thread_mul_ln60_9_fu_561_p0() {
    mul_ln60_9_fu_561_p0 = tmp_18_fu_547_p4.read();
}

void matrixmul::thread_mul_ln60_9_fu_561_p1() {
    mul_ln60_9_fu_561_p1 = tmp_17_fu_533_p4.read();
}

void matrixmul::thread_mul_ln60_fu_285_p0() {
    mul_ln60_fu_285_p0 = trunc_ln60_1_fu_277_p1.read();
}

void matrixmul::thread_mul_ln60_fu_285_p1() {
    mul_ln60_fu_285_p1 = trunc_ln60_fu_269_p1.read();
}

void matrixmul::thread_res_address0() {
    res_address0 =  (sc_lv<8>) (zext_ln57_3_fu_264_p1.read());
}

void matrixmul::thread_res_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        res_ce0 = ap_const_logic_1;
    } else {
        res_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_res_d0() {
    res_d0 = (!add_ln60_6_fu_761_p2.read().is_01() || !add_ln60_13_fu_775_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(add_ln60_6_fu_761_p2.read()) + sc_biguint<16>(add_ln60_13_fu_775_p2.read()));
}

void matrixmul::thread_res_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_reg_860.read(), ap_const_lv1_0))) {
        res_we0 = ap_const_logic_1;
    } else {
        res_we0 = ap_const_logic_0;
    }
}

void matrixmul::thread_select_ln57_1_fu_220_p3() {
    select_ln57_1_fu_220_p3 = (!icmp_ln56_fu_206_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln56_fu_206_p2.read()[0].to_bool())? i_fu_200_p2.read(): ap_phi_mux_i_0_phi_fu_170_p4.read());
}

void matrixmul::thread_select_ln57_fu_212_p3() {
    select_ln57_fu_212_p3 = (!icmp_ln56_fu_206_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln56_fu_206_p2.read()[0].to_bool())? ap_const_lv5_0: j_0_reg_177.read());
}

void matrixmul::thread_tmp_10_fu_423_p4() {
    tmp_10_fu_423_p4 = b_q0.read().range(47, 40);
}

void matrixmul::thread_tmp_11_fu_443_p4() {
    tmp_11_fu_443_p4 = a_q0.read().range(55, 48);
}

void matrixmul::thread_tmp_12_fu_457_p4() {
    tmp_12_fu_457_p4 = b_q0.read().range(55, 48);
}

void matrixmul::thread_tmp_13_fu_471_p4() {
    tmp_13_fu_471_p4 = a_q0.read().range(63, 56);
}

void matrixmul::thread_tmp_14_fu_485_p4() {
    tmp_14_fu_485_p4 = b_q0.read().range(63, 56);
}

void matrixmul::thread_tmp_15_fu_505_p4() {
    tmp_15_fu_505_p4 = a_q0.read().range(71, 64);
}

void matrixmul::thread_tmp_16_fu_519_p4() {
    tmp_16_fu_519_p4 = b_q0.read().range(71, 64);
}

void matrixmul::thread_tmp_17_fu_533_p4() {
    tmp_17_fu_533_p4 = a_q0.read().range(79, 72);
}

void matrixmul::thread_tmp_18_fu_547_p4() {
    tmp_18_fu_547_p4 = b_q0.read().range(79, 72);
}

void matrixmul::thread_tmp_19_fu_567_p4() {
    tmp_19_fu_567_p4 = a_q0.read().range(87, 80);
}

void matrixmul::thread_tmp_20_fu_581_p4() {
    tmp_20_fu_581_p4 = b_q0.read().range(87, 80);
}

void matrixmul::thread_tmp_21_fu_595_p4() {
    tmp_21_fu_595_p4 = a_q0.read().range(95, 88);
}

void matrixmul::thread_tmp_22_fu_609_p4() {
    tmp_22_fu_609_p4 = b_q0.read().range(95, 88);
}

void matrixmul::thread_tmp_23_fu_629_p4() {
    tmp_23_fu_629_p4 = a_q0.read().range(103, 96);
}

void matrixmul::thread_tmp_24_fu_643_p4() {
    tmp_24_fu_643_p4 = b_q0.read().range(103, 96);
}

void matrixmul::thread_tmp_25_fu_657_p4() {
    tmp_25_fu_657_p4 = a_q0.read().range(111, 104);
}

void matrixmul::thread_tmp_26_fu_671_p4() {
    tmp_26_fu_671_p4 = b_q0.read().range(111, 104);
}

void matrixmul::thread_tmp_27_fu_691_p4() {
    tmp_27_fu_691_p4 = a_q0.read().range(119, 112);
}

void matrixmul::thread_tmp_28_fu_705_p4() {
    tmp_28_fu_705_p4 = b_q0.read().range(119, 112);
}

void matrixmul::thread_tmp_29_fu_719_p4() {
    tmp_29_fu_719_p4 = a_q0.read().range(127, 120);
}

void matrixmul::thread_tmp_2_fu_395_p4() {
    tmp_2_fu_395_p4 = b_q0.read().range(39, 32);
}

void matrixmul::thread_tmp_30_fu_733_p4() {
    tmp_30_fu_733_p4 = b_q0.read().range(127, 120);
}

void matrixmul::thread_tmp_3_fu_409_p4() {
    tmp_3_fu_409_p4 = a_q0.read().range(47, 40);
}

void matrixmul::thread_tmp_4_fu_291_p4() {
    tmp_4_fu_291_p4 = a_q0.read().range(15, 8);
}

void matrixmul::thread_tmp_5_fu_305_p4() {
    tmp_5_fu_305_p4 = b_q0.read().range(15, 8);
}

void matrixmul::thread_tmp_6_fu_319_p4() {
    tmp_6_fu_319_p4 = a_q0.read().range(23, 16);
}

void matrixmul::thread_tmp_7_fu_333_p4() {
    tmp_7_fu_333_p4 = b_q0.read().range(23, 16);
}

void matrixmul::thread_tmp_8_fu_347_p4() {
    tmp_8_fu_347_p4 = a_q0.read().range(31, 24);
}

void matrixmul::thread_tmp_9_fu_361_p4() {
    tmp_9_fu_361_p4 = b_q0.read().range(31, 24);
}

void matrixmul::thread_tmp_fu_244_p3() {
    tmp_fu_244_p3 = esl_concat<5,4>(select_ln57_1_reg_874.read(), ap_const_lv4_0);
}

void matrixmul::thread_tmp_s_fu_381_p4() {
    tmp_s_fu_381_p4 = a_q0.read().range(39, 32);
}

void matrixmul::thread_trunc_ln60_1_fu_277_p1() {
    trunc_ln60_1_fu_277_p1 = b_q0.read().range(8-1, 0);
}

void matrixmul::thread_trunc_ln60_fu_269_p1() {
    trunc_ln60_fu_269_p1 = a_q0.read().range(8-1, 0);
}

void matrixmul::thread_zext_ln56_fu_251_p1() {
    zext_ln56_fu_251_p1 = esl_zext<10,9>(tmp_fu_244_p3.read());
}

void matrixmul::thread_zext_ln57_1_fu_233_p1() {
    zext_ln57_1_fu_233_p1 = esl_zext<64,5>(select_ln57_fu_212_p3.read());
}

void matrixmul::thread_zext_ln57_2_fu_255_p1() {
    zext_ln57_2_fu_255_p1 = esl_zext<10,5>(select_ln57_reg_869.read());
}

void matrixmul::thread_zext_ln57_3_fu_264_p1() {
    zext_ln57_3_fu_264_p1 = esl_zext<64,10>(add_ln57_fu_258_p2.read());
}

void matrixmul::thread_zext_ln57_fu_228_p1() {
    zext_ln57_fu_228_p1 = esl_zext<64,5>(select_ln57_1_fu_220_p3.read());
}

void matrixmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln54_fu_188_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln54_fu_188_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void matrixmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_address0\" :  \"" << res_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_ce0\" :  \"" << res_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_we0\" :  \"" << res_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_d0\" :  \"" << res_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

