// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_fft_exec_Pipeline_DFT_Loop10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Stage3_I_3_address0,
        Stage3_I_3_ce0,
        Stage3_I_3_we0,
        Stage3_I_3_d0,
        Stage3_I_3_address1,
        Stage3_I_3_ce1,
        Stage3_I_3_we1,
        Stage3_I_3_d1,
        Stage3_I_2_address0,
        Stage3_I_2_ce0,
        Stage3_I_2_we0,
        Stage3_I_2_d0,
        Stage3_I_2_address1,
        Stage3_I_2_ce1,
        Stage3_I_2_we1,
        Stage3_I_2_d1,
        Stage3_I_1_address0,
        Stage3_I_1_ce0,
        Stage3_I_1_we0,
        Stage3_I_1_d0,
        Stage3_I_1_address1,
        Stage3_I_1_ce1,
        Stage3_I_1_we1,
        Stage3_I_1_d1,
        Stage3_I_address0,
        Stage3_I_ce0,
        Stage3_I_we0,
        Stage3_I_d0,
        Stage3_I_address1,
        Stage3_I_ce1,
        Stage3_I_we1,
        Stage3_I_d1,
        Stage3_R_3_address0,
        Stage3_R_3_ce0,
        Stage3_R_3_we0,
        Stage3_R_3_d0,
        Stage3_R_3_address1,
        Stage3_R_3_ce1,
        Stage3_R_3_we1,
        Stage3_R_3_d1,
        Stage3_R_2_address0,
        Stage3_R_2_ce0,
        Stage3_R_2_we0,
        Stage3_R_2_d0,
        Stage3_R_2_address1,
        Stage3_R_2_ce1,
        Stage3_R_2_we1,
        Stage3_R_2_d1,
        Stage3_R_1_address0,
        Stage3_R_1_ce0,
        Stage3_R_1_we0,
        Stage3_R_1_d0,
        Stage3_R_1_address1,
        Stage3_R_1_ce1,
        Stage3_R_1_we1,
        Stage3_R_1_d1,
        Stage3_R_address0,
        Stage3_R_ce0,
        Stage3_R_we0,
        Stage3_R_d0,
        Stage3_R_address1,
        Stage3_R_ce1,
        Stage3_R_we1,
        Stage3_R_d1,
        Stage2_R_address0,
        Stage2_R_ce0,
        Stage2_R_q0,
        Stage2_R_address1,
        Stage2_R_ce1,
        Stage2_R_q1,
        Stage2_I_address0,
        Stage2_I_ce0,
        Stage2_I_q0,
        Stage2_I_address1,
        Stage2_I_ce1,
        Stage2_I_q1,
        Stage2_R_1_address0,
        Stage2_R_1_ce0,
        Stage2_R_1_q0,
        Stage2_R_1_address1,
        Stage2_R_1_ce1,
        Stage2_R_1_q1,
        Stage2_I_1_address0,
        Stage2_I_1_ce0,
        Stage2_I_1_q0,
        Stage2_I_1_address1,
        Stage2_I_1_ce1,
        Stage2_I_1_q1,
        Stage2_R_2_address0,
        Stage2_R_2_ce0,
        Stage2_R_2_q0,
        Stage2_R_2_address1,
        Stage2_R_2_ce1,
        Stage2_R_2_q1,
        Stage2_I_2_address0,
        Stage2_I_2_ce0,
        Stage2_I_2_q0,
        Stage2_I_2_address1,
        Stage2_I_2_ce1,
        Stage2_I_2_q1,
        Stage2_R_3_address0,
        Stage2_R_3_ce0,
        Stage2_R_3_q0,
        Stage2_R_3_address1,
        Stage2_R_3_ce1,
        Stage2_R_3_q1,
        Stage2_I_3_address0,
        Stage2_I_3_ce0,
        Stage2_I_3_q0,
        Stage2_I_3_address1,
        Stage2_I_3_ce1,
        Stage2_I_3_q1,
        grp_fu_628_p_din0,
        grp_fu_628_p_din1,
        grp_fu_628_p_opcode,
        grp_fu_628_p_dout0,
        grp_fu_628_p_ce,
        grp_fu_632_p_din0,
        grp_fu_632_p_din1,
        grp_fu_632_p_opcode,
        grp_fu_632_p_dout0,
        grp_fu_632_p_ce,
        grp_fu_636_p_din0,
        grp_fu_636_p_din1,
        grp_fu_636_p_opcode,
        grp_fu_636_p_dout0,
        grp_fu_636_p_ce,
        grp_fu_640_p_din0,
        grp_fu_640_p_din1,
        grp_fu_640_p_opcode,
        grp_fu_640_p_dout0,
        grp_fu_640_p_ce,
        grp_fu_644_p_din0,
        grp_fu_644_p_din1,
        grp_fu_644_p_opcode,
        grp_fu_644_p_dout0,
        grp_fu_644_p_ce,
        grp_fu_648_p_din0,
        grp_fu_648_p_din1,
        grp_fu_648_p_opcode,
        grp_fu_648_p_dout0,
        grp_fu_648_p_ce,
        grp_fu_652_p_din0,
        grp_fu_652_p_din1,
        grp_fu_652_p_opcode,
        grp_fu_652_p_dout0,
        grp_fu_652_p_ce,
        grp_fu_656_p_din0,
        grp_fu_656_p_din1,
        grp_fu_656_p_opcode,
        grp_fu_656_p_dout0,
        grp_fu_656_p_ce,
        grp_fu_660_p_din0,
        grp_fu_660_p_din1,
        grp_fu_660_p_opcode,
        grp_fu_660_p_dout0,
        grp_fu_660_p_ce,
        grp_fu_664_p_din0,
        grp_fu_664_p_din1,
        grp_fu_664_p_opcode,
        grp_fu_664_p_dout0,
        grp_fu_664_p_ce,
        grp_fu_668_p_din0,
        grp_fu_668_p_din1,
        grp_fu_668_p_opcode,
        grp_fu_668_p_dout0,
        grp_fu_668_p_ce,
        grp_fu_672_p_din0,
        grp_fu_672_p_din1,
        grp_fu_672_p_opcode,
        grp_fu_672_p_dout0,
        grp_fu_672_p_ce,
        grp_fu_676_p_din0,
        grp_fu_676_p_din1,
        grp_fu_676_p_opcode,
        grp_fu_676_p_dout0,
        grp_fu_676_p_ce,
        grp_fu_680_p_din0,
        grp_fu_680_p_din1,
        grp_fu_680_p_opcode,
        grp_fu_680_p_dout0,
        grp_fu_680_p_ce,
        grp_fu_684_p_din0,
        grp_fu_684_p_din1,
        grp_fu_684_p_opcode,
        grp_fu_684_p_dout0,
        grp_fu_684_p_ce,
        grp_fu_688_p_din0,
        grp_fu_688_p_din1,
        grp_fu_688_p_opcode,
        grp_fu_688_p_dout0,
        grp_fu_688_p_ce,
        grp_fu_692_p_din0,
        grp_fu_692_p_din1,
        grp_fu_692_p_opcode,
        grp_fu_692_p_dout0,
        grp_fu_692_p_ce,
        grp_fu_696_p_din0,
        grp_fu_696_p_din1,
        grp_fu_696_p_opcode,
        grp_fu_696_p_dout0,
        grp_fu_696_p_ce,
        grp_fu_700_p_din0,
        grp_fu_700_p_din1,
        grp_fu_700_p_opcode,
        grp_fu_700_p_dout0,
        grp_fu_700_p_ce,
        grp_fu_704_p_din0,
        grp_fu_704_p_din1,
        grp_fu_704_p_opcode,
        grp_fu_704_p_dout0,
        grp_fu_704_p_ce,
        grp_fu_708_p_din0,
        grp_fu_708_p_din1,
        grp_fu_708_p_opcode,
        grp_fu_708_p_dout0,
        grp_fu_708_p_ce,
        grp_fu_712_p_din0,
        grp_fu_712_p_din1,
        grp_fu_712_p_opcode,
        grp_fu_712_p_dout0,
        grp_fu_712_p_ce,
        grp_fu_716_p_din0,
        grp_fu_716_p_din1,
        grp_fu_716_p_opcode,
        grp_fu_716_p_dout0,
        grp_fu_716_p_ce,
        grp_fu_720_p_din0,
        grp_fu_720_p_din1,
        grp_fu_720_p_opcode,
        grp_fu_720_p_dout0,
        grp_fu_720_p_ce,
        grp_fu_724_p_din0,
        grp_fu_724_p_din1,
        grp_fu_724_p_dout0,
        grp_fu_724_p_ce,
        grp_fu_728_p_din0,
        grp_fu_728_p_din1,
        grp_fu_728_p_dout0,
        grp_fu_728_p_ce,
        grp_fu_732_p_din0,
        grp_fu_732_p_din1,
        grp_fu_732_p_dout0,
        grp_fu_732_p_ce,
        grp_fu_736_p_din0,
        grp_fu_736_p_din1,
        grp_fu_736_p_dout0,
        grp_fu_736_p_ce,
        grp_fu_740_p_din0,
        grp_fu_740_p_din1,
        grp_fu_740_p_dout0,
        grp_fu_740_p_ce,
        grp_fu_744_p_din0,
        grp_fu_744_p_din1,
        grp_fu_744_p_dout0,
        grp_fu_744_p_ce,
        grp_fu_748_p_din0,
        grp_fu_748_p_din1,
        grp_fu_748_p_dout0,
        grp_fu_748_p_ce,
        grp_fu_752_p_din0,
        grp_fu_752_p_din1,
        grp_fu_752_p_dout0,
        grp_fu_752_p_ce,
        grp_fu_756_p_din0,
        grp_fu_756_p_din1,
        grp_fu_756_p_dout0,
        grp_fu_756_p_ce,
        grp_fu_760_p_din0,
        grp_fu_760_p_din1,
        grp_fu_760_p_dout0,
        grp_fu_760_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] Stage3_I_3_address0;
output   Stage3_I_3_ce0;
output   Stage3_I_3_we0;
output  [31:0] Stage3_I_3_d0;
output  [7:0] Stage3_I_3_address1;
output   Stage3_I_3_ce1;
output   Stage3_I_3_we1;
output  [31:0] Stage3_I_3_d1;
output  [7:0] Stage3_I_2_address0;
output   Stage3_I_2_ce0;
output   Stage3_I_2_we0;
output  [31:0] Stage3_I_2_d0;
output  [7:0] Stage3_I_2_address1;
output   Stage3_I_2_ce1;
output   Stage3_I_2_we1;
output  [31:0] Stage3_I_2_d1;
output  [7:0] Stage3_I_1_address0;
output   Stage3_I_1_ce0;
output   Stage3_I_1_we0;
output  [31:0] Stage3_I_1_d0;
output  [7:0] Stage3_I_1_address1;
output   Stage3_I_1_ce1;
output   Stage3_I_1_we1;
output  [31:0] Stage3_I_1_d1;
output  [7:0] Stage3_I_address0;
output   Stage3_I_ce0;
output   Stage3_I_we0;
output  [31:0] Stage3_I_d0;
output  [7:0] Stage3_I_address1;
output   Stage3_I_ce1;
output   Stage3_I_we1;
output  [31:0] Stage3_I_d1;
output  [7:0] Stage3_R_3_address0;
output   Stage3_R_3_ce0;
output   Stage3_R_3_we0;
output  [31:0] Stage3_R_3_d0;
output  [7:0] Stage3_R_3_address1;
output   Stage3_R_3_ce1;
output   Stage3_R_3_we1;
output  [31:0] Stage3_R_3_d1;
output  [7:0] Stage3_R_2_address0;
output   Stage3_R_2_ce0;
output   Stage3_R_2_we0;
output  [31:0] Stage3_R_2_d0;
output  [7:0] Stage3_R_2_address1;
output   Stage3_R_2_ce1;
output   Stage3_R_2_we1;
output  [31:0] Stage3_R_2_d1;
output  [7:0] Stage3_R_1_address0;
output   Stage3_R_1_ce0;
output   Stage3_R_1_we0;
output  [31:0] Stage3_R_1_d0;
output  [7:0] Stage3_R_1_address1;
output   Stage3_R_1_ce1;
output   Stage3_R_1_we1;
output  [31:0] Stage3_R_1_d1;
output  [7:0] Stage3_R_address0;
output   Stage3_R_ce0;
output   Stage3_R_we0;
output  [31:0] Stage3_R_d0;
output  [7:0] Stage3_R_address1;
output   Stage3_R_ce1;
output   Stage3_R_we1;
output  [31:0] Stage3_R_d1;
output  [7:0] Stage2_R_address0;
output   Stage2_R_ce0;
input  [31:0] Stage2_R_q0;
output  [7:0] Stage2_R_address1;
output   Stage2_R_ce1;
input  [31:0] Stage2_R_q1;
output  [7:0] Stage2_I_address0;
output   Stage2_I_ce0;
input  [31:0] Stage2_I_q0;
output  [7:0] Stage2_I_address1;
output   Stage2_I_ce1;
input  [31:0] Stage2_I_q1;
output  [7:0] Stage2_R_1_address0;
output   Stage2_R_1_ce0;
input  [31:0] Stage2_R_1_q0;
output  [7:0] Stage2_R_1_address1;
output   Stage2_R_1_ce1;
input  [31:0] Stage2_R_1_q1;
output  [7:0] Stage2_I_1_address0;
output   Stage2_I_1_ce0;
input  [31:0] Stage2_I_1_q0;
output  [7:0] Stage2_I_1_address1;
output   Stage2_I_1_ce1;
input  [31:0] Stage2_I_1_q1;
output  [7:0] Stage2_R_2_address0;
output   Stage2_R_2_ce0;
input  [31:0] Stage2_R_2_q0;
output  [7:0] Stage2_R_2_address1;
output   Stage2_R_2_ce1;
input  [31:0] Stage2_R_2_q1;
output  [7:0] Stage2_I_2_address0;
output   Stage2_I_2_ce0;
input  [31:0] Stage2_I_2_q0;
output  [7:0] Stage2_I_2_address1;
output   Stage2_I_2_ce1;
input  [31:0] Stage2_I_2_q1;
output  [7:0] Stage2_R_3_address0;
output   Stage2_R_3_ce0;
input  [31:0] Stage2_R_3_q0;
output  [7:0] Stage2_R_3_address1;
output   Stage2_R_3_ce1;
input  [31:0] Stage2_R_3_q1;
output  [7:0] Stage2_I_3_address0;
output   Stage2_I_3_ce0;
input  [31:0] Stage2_I_3_q0;
output  [7:0] Stage2_I_3_address1;
output   Stage2_I_3_ce1;
input  [31:0] Stage2_I_3_q1;
output  [31:0] grp_fu_628_p_din0;
output  [31:0] grp_fu_628_p_din1;
output  [1:0] grp_fu_628_p_opcode;
input  [31:0] grp_fu_628_p_dout0;
output   grp_fu_628_p_ce;
output  [31:0] grp_fu_632_p_din0;
output  [31:0] grp_fu_632_p_din1;
output  [1:0] grp_fu_632_p_opcode;
input  [31:0] grp_fu_632_p_dout0;
output   grp_fu_632_p_ce;
output  [31:0] grp_fu_636_p_din0;
output  [31:0] grp_fu_636_p_din1;
output  [1:0] grp_fu_636_p_opcode;
input  [31:0] grp_fu_636_p_dout0;
output   grp_fu_636_p_ce;
output  [31:0] grp_fu_640_p_din0;
output  [31:0] grp_fu_640_p_din1;
output  [1:0] grp_fu_640_p_opcode;
input  [31:0] grp_fu_640_p_dout0;
output   grp_fu_640_p_ce;
output  [31:0] grp_fu_644_p_din0;
output  [31:0] grp_fu_644_p_din1;
output  [1:0] grp_fu_644_p_opcode;
input  [31:0] grp_fu_644_p_dout0;
output   grp_fu_644_p_ce;
output  [31:0] grp_fu_648_p_din0;
output  [31:0] grp_fu_648_p_din1;
output  [1:0] grp_fu_648_p_opcode;
input  [31:0] grp_fu_648_p_dout0;
output   grp_fu_648_p_ce;
output  [31:0] grp_fu_652_p_din0;
output  [31:0] grp_fu_652_p_din1;
output  [1:0] grp_fu_652_p_opcode;
input  [31:0] grp_fu_652_p_dout0;
output   grp_fu_652_p_ce;
output  [31:0] grp_fu_656_p_din0;
output  [31:0] grp_fu_656_p_din1;
output  [1:0] grp_fu_656_p_opcode;
input  [31:0] grp_fu_656_p_dout0;
output   grp_fu_656_p_ce;
output  [31:0] grp_fu_660_p_din0;
output  [31:0] grp_fu_660_p_din1;
output  [1:0] grp_fu_660_p_opcode;
input  [31:0] grp_fu_660_p_dout0;
output   grp_fu_660_p_ce;
output  [31:0] grp_fu_664_p_din0;
output  [31:0] grp_fu_664_p_din1;
output  [1:0] grp_fu_664_p_opcode;
input  [31:0] grp_fu_664_p_dout0;
output   grp_fu_664_p_ce;
output  [31:0] grp_fu_668_p_din0;
output  [31:0] grp_fu_668_p_din1;
output  [1:0] grp_fu_668_p_opcode;
input  [31:0] grp_fu_668_p_dout0;
output   grp_fu_668_p_ce;
output  [31:0] grp_fu_672_p_din0;
output  [31:0] grp_fu_672_p_din1;
output  [1:0] grp_fu_672_p_opcode;
input  [31:0] grp_fu_672_p_dout0;
output   grp_fu_672_p_ce;
output  [31:0] grp_fu_676_p_din0;
output  [31:0] grp_fu_676_p_din1;
output  [1:0] grp_fu_676_p_opcode;
input  [31:0] grp_fu_676_p_dout0;
output   grp_fu_676_p_ce;
output  [31:0] grp_fu_680_p_din0;
output  [31:0] grp_fu_680_p_din1;
output  [1:0] grp_fu_680_p_opcode;
input  [31:0] grp_fu_680_p_dout0;
output   grp_fu_680_p_ce;
output  [31:0] grp_fu_684_p_din0;
output  [31:0] grp_fu_684_p_din1;
output  [1:0] grp_fu_684_p_opcode;
input  [31:0] grp_fu_684_p_dout0;
output   grp_fu_684_p_ce;
output  [31:0] grp_fu_688_p_din0;
output  [31:0] grp_fu_688_p_din1;
output  [1:0] grp_fu_688_p_opcode;
input  [31:0] grp_fu_688_p_dout0;
output   grp_fu_688_p_ce;
output  [31:0] grp_fu_692_p_din0;
output  [31:0] grp_fu_692_p_din1;
output  [1:0] grp_fu_692_p_opcode;
input  [31:0] grp_fu_692_p_dout0;
output   grp_fu_692_p_ce;
output  [31:0] grp_fu_696_p_din0;
output  [31:0] grp_fu_696_p_din1;
output  [1:0] grp_fu_696_p_opcode;
input  [31:0] grp_fu_696_p_dout0;
output   grp_fu_696_p_ce;
output  [31:0] grp_fu_700_p_din0;
output  [31:0] grp_fu_700_p_din1;
output  [1:0] grp_fu_700_p_opcode;
input  [31:0] grp_fu_700_p_dout0;
output   grp_fu_700_p_ce;
output  [31:0] grp_fu_704_p_din0;
output  [31:0] grp_fu_704_p_din1;
output  [1:0] grp_fu_704_p_opcode;
input  [31:0] grp_fu_704_p_dout0;
output   grp_fu_704_p_ce;
output  [31:0] grp_fu_708_p_din0;
output  [31:0] grp_fu_708_p_din1;
output  [1:0] grp_fu_708_p_opcode;
input  [31:0] grp_fu_708_p_dout0;
output   grp_fu_708_p_ce;
output  [31:0] grp_fu_712_p_din0;
output  [31:0] grp_fu_712_p_din1;
output  [1:0] grp_fu_712_p_opcode;
input  [31:0] grp_fu_712_p_dout0;
output   grp_fu_712_p_ce;
output  [31:0] grp_fu_716_p_din0;
output  [31:0] grp_fu_716_p_din1;
output  [1:0] grp_fu_716_p_opcode;
input  [31:0] grp_fu_716_p_dout0;
output   grp_fu_716_p_ce;
output  [31:0] grp_fu_720_p_din0;
output  [31:0] grp_fu_720_p_din1;
output  [1:0] grp_fu_720_p_opcode;
input  [31:0] grp_fu_720_p_dout0;
output   grp_fu_720_p_ce;
output  [31:0] grp_fu_724_p_din0;
output  [31:0] grp_fu_724_p_din1;
input  [31:0] grp_fu_724_p_dout0;
output   grp_fu_724_p_ce;
output  [31:0] grp_fu_728_p_din0;
output  [31:0] grp_fu_728_p_din1;
input  [31:0] grp_fu_728_p_dout0;
output   grp_fu_728_p_ce;
output  [31:0] grp_fu_732_p_din0;
output  [31:0] grp_fu_732_p_din1;
input  [31:0] grp_fu_732_p_dout0;
output   grp_fu_732_p_ce;
output  [31:0] grp_fu_736_p_din0;
output  [31:0] grp_fu_736_p_din1;
input  [31:0] grp_fu_736_p_dout0;
output   grp_fu_736_p_ce;
output  [31:0] grp_fu_740_p_din0;
output  [31:0] grp_fu_740_p_din1;
input  [31:0] grp_fu_740_p_dout0;
output   grp_fu_740_p_ce;
output  [31:0] grp_fu_744_p_din0;
output  [31:0] grp_fu_744_p_din1;
input  [31:0] grp_fu_744_p_dout0;
output   grp_fu_744_p_ce;
output  [31:0] grp_fu_748_p_din0;
output  [31:0] grp_fu_748_p_din1;
input  [31:0] grp_fu_748_p_dout0;
output   grp_fu_748_p_ce;
output  [31:0] grp_fu_752_p_din0;
output  [31:0] grp_fu_752_p_din1;
input  [31:0] grp_fu_752_p_dout0;
output   grp_fu_752_p_ce;
output  [31:0] grp_fu_756_p_din0;
output  [31:0] grp_fu_756_p_din1;
input  [31:0] grp_fu_756_p_dout0;
output   grp_fu_756_p_ce;
output  [31:0] grp_fu_760_p_din0;
output  [31:0] grp_fu_760_p_din1;
input  [31:0] grp_fu_760_p_dout0;
output   grp_fu_760_p_ce;

reg ap_idle;
reg Stage3_I_3_ce0;
reg Stage3_I_3_we0;
reg Stage3_I_3_ce1;
reg Stage3_I_3_we1;
reg Stage3_I_2_ce0;
reg Stage3_I_2_we0;
reg Stage3_I_2_ce1;
reg Stage3_I_2_we1;
reg Stage3_I_1_ce0;
reg Stage3_I_1_we0;
reg Stage3_I_1_ce1;
reg Stage3_I_1_we1;
reg Stage3_I_ce0;
reg Stage3_I_we0;
reg Stage3_I_ce1;
reg Stage3_I_we1;
reg Stage3_R_3_ce0;
reg Stage3_R_3_we0;
reg Stage3_R_3_ce1;
reg Stage3_R_3_we1;
reg Stage3_R_2_ce0;
reg Stage3_R_2_we0;
reg Stage3_R_2_ce1;
reg Stage3_R_2_we1;
reg Stage3_R_1_ce0;
reg Stage3_R_1_we0;
reg Stage3_R_1_ce1;
reg Stage3_R_1_we1;
reg Stage3_R_ce0;
reg Stage3_R_we0;
reg Stage3_R_ce1;
reg Stage3_R_we1;
reg Stage2_R_ce0;
reg Stage2_R_ce1;
reg Stage2_I_ce0;
reg Stage2_I_ce1;
reg Stage2_R_1_ce0;
reg Stage2_R_1_ce1;
reg Stage2_I_1_ce0;
reg Stage2_I_1_ce1;
reg Stage2_R_2_ce0;
reg Stage2_R_2_ce1;
reg Stage2_I_2_ce0;
reg Stage2_I_2_ce1;
reg Stage2_R_3_ce0;
reg Stage2_R_3_ce1;
reg Stage2_I_3_ce0;
reg Stage2_I_3_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_640_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] trunc_ln118_2_fu_650_p4;
reg   [7:0] trunc_ln118_2_reg_884;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter1_reg;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter2_reg;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter3_reg;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter4_reg;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter5_reg;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter6_reg;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter7_reg;
reg   [7:0] trunc_ln118_2_reg_884_pp0_iter8_reg;
wire   [63:0] zext_ln120_1_fu_666_p1;
reg   [63:0] zext_ln120_1_reg_889;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter1_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter2_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter3_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter4_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter5_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter6_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter7_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter8_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter9_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter10_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter11_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter12_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter13_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter14_reg;
reg   [63:0] zext_ln120_1_reg_889_pp0_iter15_reg;
reg   [7:0] lshr_ln118_5_reg_905;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter1_reg;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter2_reg;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter3_reg;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter4_reg;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter5_reg;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter6_reg;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter7_reg;
reg   [7:0] lshr_ln118_5_reg_905_pp0_iter8_reg;
wire   [63:0] zext_ln120_2_fu_714_p1;
reg   [63:0] zext_ln120_2_reg_910;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter1_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter2_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter3_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter4_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter5_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter6_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter7_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter8_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter9_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter10_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter11_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter12_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter13_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter14_reg;
reg   [63:0] zext_ln120_2_reg_910_pp0_iter15_reg;
reg   [7:0] lshr_ln118_6_reg_926;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter1_reg;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter2_reg;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter3_reg;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter4_reg;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter5_reg;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter6_reg;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter7_reg;
reg   [7:0] lshr_ln118_6_reg_926_pp0_iter8_reg;
wire   [63:0] zext_ln120_3_fu_762_p1;
reg   [63:0] zext_ln120_3_reg_931;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter1_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter2_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter3_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter4_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter5_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter6_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter7_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter8_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter9_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter10_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter11_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter12_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter13_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter14_reg;
reg   [63:0] zext_ln120_3_reg_931_pp0_iter15_reg;
reg   [7:0] lshr_ln118_7_reg_947;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter1_reg;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter2_reg;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter3_reg;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter4_reg;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter5_reg;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter6_reg;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter7_reg;
reg   [7:0] lshr_ln118_7_reg_947_pp0_iter8_reg;
wire   [63:0] zext_ln120_4_fu_810_p1;
reg   [63:0] zext_ln120_4_reg_952;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter1_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter2_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter3_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter4_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter5_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter6_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter7_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter8_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter9_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter10_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter11_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter12_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter13_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter14_reg;
reg   [63:0] zext_ln120_4_reg_952_pp0_iter15_reg;
reg   [31:0] Stage2_R_load_1_reg_968;
reg   [31:0] Stage2_R_load_1_reg_968_pp0_iter2_reg;
reg   [31:0] Stage2_R_load_1_reg_968_pp0_iter3_reg;
reg   [31:0] Stage2_R_load_1_reg_968_pp0_iter4_reg;
reg   [31:0] Stage2_R_load_1_reg_968_pp0_iter5_reg;
reg   [31:0] Stage2_I_load_1_reg_974;
reg   [31:0] Stage2_I_load_1_reg_974_pp0_iter2_reg;
reg   [31:0] Stage2_I_load_1_reg_974_pp0_iter3_reg;
reg   [31:0] Stage2_I_load_1_reg_974_pp0_iter4_reg;
reg   [31:0] Stage2_I_load_1_reg_974_pp0_iter5_reg;
reg   [31:0] Stage2_R_1_load_1_reg_980;
reg   [31:0] Stage2_I_1_load_1_reg_986;
reg   [31:0] Stage2_R_2_load_1_reg_992;
reg   [31:0] Stage2_I_2_load_1_reg_998;
reg   [31:0] Stage2_R_3_load_1_reg_1004;
reg   [31:0] Stage2_I_3_load_1_reg_1009;
wire   [31:0] xor_ln123_fu_830_p2;
reg   [31:0] xor_ln123_reg_1014;
reg   [31:0] xor_ln123_reg_1014_pp0_iter3_reg;
reg   [31:0] xor_ln123_reg_1014_pp0_iter4_reg;
reg   [31:0] xor_ln123_reg_1014_pp0_iter5_reg;
wire   [31:0] xor_ln124_fu_839_p2;
reg   [31:0] xor_ln124_reg_1019;
reg   [31:0] xor_ln124_reg_1019_pp0_iter3_reg;
reg   [31:0] xor_ln124_reg_1019_pp0_iter4_reg;
reg   [31:0] xor_ln124_reg_1019_pp0_iter5_reg;
reg   [31:0] mul23_i2_reg_1024;
reg   [31:0] mul25_i2_reg_1029;
reg   [31:0] mul22_i1_1_reg_1034;
reg   [31:0] mul23_i2_1_reg_1039;
reg   [31:0] mul24_i1_1_reg_1044;
reg   [31:0] mul25_i2_1_reg_1049;
reg   [31:0] mul22_i1_2_reg_1054;
reg   [31:0] mul24_i1_2_reg_1059;
reg   [31:0] mul22_i1_3_reg_1064;
reg   [31:0] mul23_i2_3_reg_1070;
wire   [31:0] bitcast_ln123_4_fu_845_p1;
wire   [31:0] bitcast_ln124_4_fu_849_p1;
wire   [63:0] zext_ln118_6_fu_853_p1;
reg   [63:0] zext_ln118_6_reg_1086;
reg   [63:0] zext_ln118_6_reg_1086_pp0_iter10_reg;
reg   [63:0] zext_ln118_6_reg_1086_pp0_iter11_reg;
reg   [63:0] zext_ln118_6_reg_1086_pp0_iter12_reg;
reg   [63:0] zext_ln118_6_reg_1086_pp0_iter13_reg;
reg   [63:0] zext_ln118_6_reg_1086_pp0_iter14_reg;
reg   [63:0] zext_ln118_6_reg_1086_pp0_iter15_reg;
wire   [63:0] zext_ln118_7_fu_858_p1;
reg   [63:0] zext_ln118_7_reg_1102;
reg   [63:0] zext_ln118_7_reg_1102_pp0_iter10_reg;
reg   [63:0] zext_ln118_7_reg_1102_pp0_iter11_reg;
reg   [63:0] zext_ln118_7_reg_1102_pp0_iter12_reg;
reg   [63:0] zext_ln118_7_reg_1102_pp0_iter13_reg;
reg   [63:0] zext_ln118_7_reg_1102_pp0_iter14_reg;
reg   [63:0] zext_ln118_7_reg_1102_pp0_iter15_reg;
reg   [63:0] zext_ln118_7_reg_1102_pp0_iter16_reg;
wire   [63:0] zext_ln118_8_fu_863_p1;
reg   [63:0] zext_ln118_8_reg_1118;
reg   [63:0] zext_ln118_8_reg_1118_pp0_iter10_reg;
reg   [63:0] zext_ln118_8_reg_1118_pp0_iter11_reg;
reg   [63:0] zext_ln118_8_reg_1118_pp0_iter12_reg;
reg   [63:0] zext_ln118_8_reg_1118_pp0_iter13_reg;
reg   [63:0] zext_ln118_8_reg_1118_pp0_iter14_reg;
reg   [63:0] zext_ln118_8_reg_1118_pp0_iter15_reg;
reg   [63:0] zext_ln118_8_reg_1118_pp0_iter16_reg;
wire   [63:0] zext_ln118_9_fu_868_p1;
reg   [63:0] zext_ln118_9_reg_1134;
reg   [63:0] zext_ln118_9_reg_1134_pp0_iter10_reg;
reg   [63:0] zext_ln118_9_reg_1134_pp0_iter11_reg;
reg   [63:0] zext_ln118_9_reg_1134_pp0_iter12_reg;
reg   [63:0] zext_ln118_9_reg_1134_pp0_iter13_reg;
reg   [63:0] zext_ln118_9_reg_1134_pp0_iter14_reg;
reg   [63:0] zext_ln118_9_reg_1134_pp0_iter15_reg;
reg   [63:0] zext_ln118_9_reg_1134_pp0_iter16_reg;
reg   [31:0] Stage2_R_load_reg_1150;
reg   [31:0] Stage2_I_load_reg_1156;
reg   [31:0] t_R_s_reg_1162;
reg   [31:0] t_I_s_reg_1168;
reg   [31:0] Stage2_R_1_load_reg_1174;
reg   [31:0] Stage2_I_1_load_reg_1180;
reg   [31:0] t_R_2_1_reg_1186;
reg   [31:0] t_I_2_1_reg_1192;
reg   [31:0] Stage2_R_2_load_reg_1198;
reg   [31:0] Stage2_I_2_load_reg_1204;
reg   [31:0] t_R_2_2_reg_1210;
reg   [31:0] t_I_2_2_reg_1216;
reg   [31:0] Stage2_R_3_load_reg_1222;
reg   [31:0] Stage2_I_3_load_reg_1228;
reg   [31:0] t_R_2_3_reg_1234;
reg   [31:0] t_I_2_3_reg_1240;
reg   [31:0] sub27_i2_reg_1246;
reg   [31:0] sub30_i2_reg_1251;
reg   [31:0] add33_i2_reg_1256;
reg   [31:0] add36_i2_reg_1261;
reg   [31:0] sub27_i2_1_reg_1266;
reg   [31:0] sub30_i2_1_reg_1271;
reg   [31:0] add33_i2_1_reg_1276;
reg   [31:0] add33_i2_1_reg_1276_pp0_iter16_reg;
reg   [31:0] add36_i2_1_reg_1281;
reg   [31:0] add36_i2_1_reg_1281_pp0_iter16_reg;
reg   [31:0] sub27_i2_2_reg_1286;
reg   [31:0] sub30_i2_2_reg_1291;
reg   [31:0] add33_i2_2_reg_1296;
reg   [31:0] add33_i2_2_reg_1296_pp0_iter16_reg;
reg   [31:0] add36_i2_2_reg_1301;
reg   [31:0] add36_i2_2_reg_1301_pp0_iter16_reg;
reg   [31:0] sub27_i2_3_reg_1306;
reg   [31:0] sub30_i2_3_reg_1311;
reg   [31:0] add33_i2_3_reg_1316;
reg   [31:0] add33_i2_3_reg_1316_pp0_iter16_reg;
reg   [31:0] add36_i2_3_reg_1321;
reg   [31:0] add36_i2_3_reg_1321_pp0_iter16_reg;
wire    ap_block_pp0_stage0;
reg   [9:0] i_4_0_fu_82;
wire   [9:0] add_ln109_fu_816_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_4_0_load;
wire   [7:0] or_ln120_fu_660_p2;
wire   [8:0] empty_42_fu_646_p1;
wire   [8:0] or_ln109_2_fu_672_p2;
wire   [9:0] zext_ln109_2_fu_678_p1;
wire   [9:0] add_ln115_2_fu_682_p2;
wire   [9:0] add_ln116_1_fu_688_p2;
wire   [7:0] lshr_ln120_1_fu_704_p4;
wire   [8:0] or_ln109_3_fu_720_p2;
wire   [9:0] zext_ln109_3_fu_726_p1;
wire   [9:0] add_ln115_3_fu_730_p2;
wire   [9:0] add_ln116_2_fu_736_p2;
wire   [7:0] lshr_ln120_2_fu_752_p4;
wire   [8:0] or_ln109_4_fu_768_p2;
wire   [9:0] zext_ln109_4_fu_774_p1;
wire   [9:0] add_ln115_4_fu_778_p2;
wire   [9:0] add_ln116_3_fu_784_p2;
wire   [7:0] lshr_ln120_3_fu_800_p4;
wire   [31:0] bitcast_ln123_fu_827_p1;
wire   [31:0] bitcast_ln124_fu_836_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
wire    ap_enable_operation_274;
reg    ap_enable_state17_pp0_iter16_stage0;
wire    ap_enable_operation_278;
wire    ap_enable_operation_276;
wire    ap_enable_operation_280;
wire    ap_enable_operation_282;
wire    ap_enable_operation_296;
reg    ap_enable_state18_pp0_iter17_stage0;
wire    ap_enable_operation_284;
wire    ap_enable_operation_298;
wire    ap_enable_operation_286;
wire    ap_enable_operation_300;
wire    ap_enable_operation_288;
wire    ap_enable_operation_302;
wire    ap_enable_operation_290;
wire    ap_enable_operation_304;
wire    ap_enable_operation_292;
wire    ap_enable_operation_306;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln109_fu_640_p2 == 1'd0))) begin
            i_4_0_fu_82 <= add_ln109_fu_816_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_4_0_fu_82 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_I_1_load_1_reg_986 <= Stage2_I_1_q1;
        Stage2_I_2_load_1_reg_998 <= Stage2_I_2_q1;
        Stage2_I_3_load_1_reg_1009 <= Stage2_I_3_q1;
        Stage2_I_load_1_reg_974 <= Stage2_I_q1;
        Stage2_R_1_load_1_reg_980 <= Stage2_R_1_q1;
        Stage2_R_2_load_1_reg_992 <= Stage2_R_2_q1;
        Stage2_R_3_load_1_reg_1004 <= Stage2_R_3_q1;
        Stage2_R_load_1_reg_968 <= Stage2_R_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        Stage2_I_1_load_reg_1180 <= Stage2_I_1_q0;
        Stage2_I_2_load_reg_1204 <= Stage2_I_2_q0;
        Stage2_I_3_load_reg_1228 <= Stage2_I_3_q0;
        Stage2_I_load_reg_1156 <= Stage2_I_q0;
        Stage2_R_1_load_reg_1174 <= Stage2_R_1_q0;
        Stage2_R_2_load_reg_1198 <= Stage2_R_2_q0;
        Stage2_R_3_load_reg_1222 <= Stage2_R_3_q0;
        Stage2_R_load_reg_1150 <= Stage2_R_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Stage2_I_load_1_reg_974_pp0_iter2_reg <= Stage2_I_load_1_reg_974;
        Stage2_I_load_1_reg_974_pp0_iter3_reg <= Stage2_I_load_1_reg_974_pp0_iter2_reg;
        Stage2_I_load_1_reg_974_pp0_iter4_reg <= Stage2_I_load_1_reg_974_pp0_iter3_reg;
        Stage2_I_load_1_reg_974_pp0_iter5_reg <= Stage2_I_load_1_reg_974_pp0_iter4_reg;
        Stage2_R_load_1_reg_968_pp0_iter2_reg <= Stage2_R_load_1_reg_968;
        Stage2_R_load_1_reg_968_pp0_iter3_reg <= Stage2_R_load_1_reg_968_pp0_iter2_reg;
        Stage2_R_load_1_reg_968_pp0_iter4_reg <= Stage2_R_load_1_reg_968_pp0_iter3_reg;
        Stage2_R_load_1_reg_968_pp0_iter5_reg <= Stage2_R_load_1_reg_968_pp0_iter4_reg;
        add33_i2_1_reg_1276 <= grp_fu_684_p_dout0;
        add33_i2_1_reg_1276_pp0_iter16_reg <= add33_i2_1_reg_1276;
        add33_i2_2_reg_1296 <= grp_fu_700_p_dout0;
        add33_i2_2_reg_1296_pp0_iter16_reg <= add33_i2_2_reg_1296;
        add33_i2_3_reg_1316 <= grp_fu_716_p_dout0;
        add33_i2_3_reg_1316_pp0_iter16_reg <= add33_i2_3_reg_1316;
        add33_i2_reg_1256 <= grp_fu_668_p_dout0;
        add36_i2_1_reg_1281 <= grp_fu_688_p_dout0;
        add36_i2_1_reg_1281_pp0_iter16_reg <= add36_i2_1_reg_1281;
        add36_i2_2_reg_1301 <= grp_fu_704_p_dout0;
        add36_i2_2_reg_1301_pp0_iter16_reg <= add36_i2_2_reg_1301;
        add36_i2_3_reg_1321 <= grp_fu_720_p_dout0;
        add36_i2_3_reg_1321_pp0_iter16_reg <= add36_i2_3_reg_1321;
        add36_i2_reg_1261 <= grp_fu_672_p_dout0;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        lshr_ln118_5_reg_905_pp0_iter2_reg <= lshr_ln118_5_reg_905_pp0_iter1_reg;
        lshr_ln118_5_reg_905_pp0_iter3_reg <= lshr_ln118_5_reg_905_pp0_iter2_reg;
        lshr_ln118_5_reg_905_pp0_iter4_reg <= lshr_ln118_5_reg_905_pp0_iter3_reg;
        lshr_ln118_5_reg_905_pp0_iter5_reg <= lshr_ln118_5_reg_905_pp0_iter4_reg;
        lshr_ln118_5_reg_905_pp0_iter6_reg <= lshr_ln118_5_reg_905_pp0_iter5_reg;
        lshr_ln118_5_reg_905_pp0_iter7_reg <= lshr_ln118_5_reg_905_pp0_iter6_reg;
        lshr_ln118_5_reg_905_pp0_iter8_reg <= lshr_ln118_5_reg_905_pp0_iter7_reg;
        lshr_ln118_6_reg_926_pp0_iter2_reg <= lshr_ln118_6_reg_926_pp0_iter1_reg;
        lshr_ln118_6_reg_926_pp0_iter3_reg <= lshr_ln118_6_reg_926_pp0_iter2_reg;
        lshr_ln118_6_reg_926_pp0_iter4_reg <= lshr_ln118_6_reg_926_pp0_iter3_reg;
        lshr_ln118_6_reg_926_pp0_iter5_reg <= lshr_ln118_6_reg_926_pp0_iter4_reg;
        lshr_ln118_6_reg_926_pp0_iter6_reg <= lshr_ln118_6_reg_926_pp0_iter5_reg;
        lshr_ln118_6_reg_926_pp0_iter7_reg <= lshr_ln118_6_reg_926_pp0_iter6_reg;
        lshr_ln118_6_reg_926_pp0_iter8_reg <= lshr_ln118_6_reg_926_pp0_iter7_reg;
        lshr_ln118_7_reg_947_pp0_iter2_reg <= lshr_ln118_7_reg_947_pp0_iter1_reg;
        lshr_ln118_7_reg_947_pp0_iter3_reg <= lshr_ln118_7_reg_947_pp0_iter2_reg;
        lshr_ln118_7_reg_947_pp0_iter4_reg <= lshr_ln118_7_reg_947_pp0_iter3_reg;
        lshr_ln118_7_reg_947_pp0_iter5_reg <= lshr_ln118_7_reg_947_pp0_iter4_reg;
        lshr_ln118_7_reg_947_pp0_iter6_reg <= lshr_ln118_7_reg_947_pp0_iter5_reg;
        lshr_ln118_7_reg_947_pp0_iter7_reg <= lshr_ln118_7_reg_947_pp0_iter6_reg;
        lshr_ln118_7_reg_947_pp0_iter8_reg <= lshr_ln118_7_reg_947_pp0_iter7_reg;
        mul22_i1_1_reg_1034 <= grp_fu_732_p_dout0;
        mul22_i1_2_reg_1054 <= grp_fu_748_p_dout0;
        mul22_i1_3_reg_1064 <= grp_fu_756_p_dout0;
        mul23_i2_1_reg_1039 <= grp_fu_736_p_dout0;
        mul23_i2_3_reg_1070 <= grp_fu_760_p_dout0;
        mul23_i2_reg_1024 <= grp_fu_724_p_dout0;
        mul24_i1_1_reg_1044 <= grp_fu_740_p_dout0;
        mul24_i1_2_reg_1059 <= grp_fu_752_p_dout0;
        mul25_i2_1_reg_1049 <= grp_fu_744_p_dout0;
        mul25_i2_reg_1029 <= grp_fu_728_p_dout0;
        sub27_i2_1_reg_1266 <= grp_fu_676_p_dout0;
        sub27_i2_2_reg_1286 <= grp_fu_692_p_dout0;
        sub27_i2_3_reg_1306 <= grp_fu_708_p_dout0;
        sub27_i2_reg_1246 <= grp_fu_660_p_dout0;
        sub30_i2_1_reg_1271 <= grp_fu_680_p_dout0;
        sub30_i2_2_reg_1291 <= grp_fu_696_p_dout0;
        sub30_i2_3_reg_1311 <= grp_fu_712_p_dout0;
        sub30_i2_reg_1251 <= grp_fu_664_p_dout0;
        t_I_2_1_reg_1192 <= grp_fu_640_p_dout0;
        t_I_2_2_reg_1216 <= grp_fu_648_p_dout0;
        t_I_2_3_reg_1240 <= grp_fu_656_p_dout0;
        t_I_s_reg_1168 <= grp_fu_632_p_dout0;
        t_R_2_1_reg_1186 <= grp_fu_636_p_dout0;
        t_R_2_2_reg_1210 <= grp_fu_644_p_dout0;
        t_R_2_3_reg_1234 <= grp_fu_652_p_dout0;
        t_R_s_reg_1162 <= grp_fu_628_p_dout0;
        trunc_ln118_2_reg_884_pp0_iter2_reg <= trunc_ln118_2_reg_884_pp0_iter1_reg;
        trunc_ln118_2_reg_884_pp0_iter3_reg <= trunc_ln118_2_reg_884_pp0_iter2_reg;
        trunc_ln118_2_reg_884_pp0_iter4_reg <= trunc_ln118_2_reg_884_pp0_iter3_reg;
        trunc_ln118_2_reg_884_pp0_iter5_reg <= trunc_ln118_2_reg_884_pp0_iter4_reg;
        trunc_ln118_2_reg_884_pp0_iter6_reg <= trunc_ln118_2_reg_884_pp0_iter5_reg;
        trunc_ln118_2_reg_884_pp0_iter7_reg <= trunc_ln118_2_reg_884_pp0_iter6_reg;
        trunc_ln118_2_reg_884_pp0_iter8_reg <= trunc_ln118_2_reg_884_pp0_iter7_reg;
        xor_ln123_reg_1014 <= xor_ln123_fu_830_p2;
        xor_ln123_reg_1014_pp0_iter3_reg <= xor_ln123_reg_1014;
        xor_ln123_reg_1014_pp0_iter4_reg <= xor_ln123_reg_1014_pp0_iter3_reg;
        xor_ln123_reg_1014_pp0_iter5_reg <= xor_ln123_reg_1014_pp0_iter4_reg;
        xor_ln124_reg_1019 <= xor_ln124_fu_839_p2;
        xor_ln124_reg_1019_pp0_iter3_reg <= xor_ln124_reg_1019;
        xor_ln124_reg_1019_pp0_iter4_reg <= xor_ln124_reg_1019_pp0_iter3_reg;
        xor_ln124_reg_1019_pp0_iter5_reg <= xor_ln124_reg_1019_pp0_iter4_reg;
        zext_ln118_6_reg_1086[7 : 0] <= zext_ln118_6_fu_853_p1[7 : 0];
        zext_ln118_6_reg_1086_pp0_iter10_reg[7 : 0] <= zext_ln118_6_reg_1086[7 : 0];
        zext_ln118_6_reg_1086_pp0_iter11_reg[7 : 0] <= zext_ln118_6_reg_1086_pp0_iter10_reg[7 : 0];
        zext_ln118_6_reg_1086_pp0_iter12_reg[7 : 0] <= zext_ln118_6_reg_1086_pp0_iter11_reg[7 : 0];
        zext_ln118_6_reg_1086_pp0_iter13_reg[7 : 0] <= zext_ln118_6_reg_1086_pp0_iter12_reg[7 : 0];
        zext_ln118_6_reg_1086_pp0_iter14_reg[7 : 0] <= zext_ln118_6_reg_1086_pp0_iter13_reg[7 : 0];
        zext_ln118_6_reg_1086_pp0_iter15_reg[7 : 0] <= zext_ln118_6_reg_1086_pp0_iter14_reg[7 : 0];
        zext_ln118_7_reg_1102[7 : 0] <= zext_ln118_7_fu_858_p1[7 : 0];
        zext_ln118_7_reg_1102_pp0_iter10_reg[7 : 0] <= zext_ln118_7_reg_1102[7 : 0];
        zext_ln118_7_reg_1102_pp0_iter11_reg[7 : 0] <= zext_ln118_7_reg_1102_pp0_iter10_reg[7 : 0];
        zext_ln118_7_reg_1102_pp0_iter12_reg[7 : 0] <= zext_ln118_7_reg_1102_pp0_iter11_reg[7 : 0];
        zext_ln118_7_reg_1102_pp0_iter13_reg[7 : 0] <= zext_ln118_7_reg_1102_pp0_iter12_reg[7 : 0];
        zext_ln118_7_reg_1102_pp0_iter14_reg[7 : 0] <= zext_ln118_7_reg_1102_pp0_iter13_reg[7 : 0];
        zext_ln118_7_reg_1102_pp0_iter15_reg[7 : 0] <= zext_ln118_7_reg_1102_pp0_iter14_reg[7 : 0];
        zext_ln118_7_reg_1102_pp0_iter16_reg[7 : 0] <= zext_ln118_7_reg_1102_pp0_iter15_reg[7 : 0];
        zext_ln118_8_reg_1118[7 : 0] <= zext_ln118_8_fu_863_p1[7 : 0];
        zext_ln118_8_reg_1118_pp0_iter10_reg[7 : 0] <= zext_ln118_8_reg_1118[7 : 0];
        zext_ln118_8_reg_1118_pp0_iter11_reg[7 : 0] <= zext_ln118_8_reg_1118_pp0_iter10_reg[7 : 0];
        zext_ln118_8_reg_1118_pp0_iter12_reg[7 : 0] <= zext_ln118_8_reg_1118_pp0_iter11_reg[7 : 0];
        zext_ln118_8_reg_1118_pp0_iter13_reg[7 : 0] <= zext_ln118_8_reg_1118_pp0_iter12_reg[7 : 0];
        zext_ln118_8_reg_1118_pp0_iter14_reg[7 : 0] <= zext_ln118_8_reg_1118_pp0_iter13_reg[7 : 0];
        zext_ln118_8_reg_1118_pp0_iter15_reg[7 : 0] <= zext_ln118_8_reg_1118_pp0_iter14_reg[7 : 0];
        zext_ln118_8_reg_1118_pp0_iter16_reg[7 : 0] <= zext_ln118_8_reg_1118_pp0_iter15_reg[7 : 0];
        zext_ln118_9_reg_1134[7 : 0] <= zext_ln118_9_fu_868_p1[7 : 0];
        zext_ln118_9_reg_1134_pp0_iter10_reg[7 : 0] <= zext_ln118_9_reg_1134[7 : 0];
        zext_ln118_9_reg_1134_pp0_iter11_reg[7 : 0] <= zext_ln118_9_reg_1134_pp0_iter10_reg[7 : 0];
        zext_ln118_9_reg_1134_pp0_iter12_reg[7 : 0] <= zext_ln118_9_reg_1134_pp0_iter11_reg[7 : 0];
        zext_ln118_9_reg_1134_pp0_iter13_reg[7 : 0] <= zext_ln118_9_reg_1134_pp0_iter12_reg[7 : 0];
        zext_ln118_9_reg_1134_pp0_iter14_reg[7 : 0] <= zext_ln118_9_reg_1134_pp0_iter13_reg[7 : 0];
        zext_ln118_9_reg_1134_pp0_iter15_reg[7 : 0] <= zext_ln118_9_reg_1134_pp0_iter14_reg[7 : 0];
        zext_ln118_9_reg_1134_pp0_iter16_reg[7 : 0] <= zext_ln118_9_reg_1134_pp0_iter15_reg[7 : 0];
        zext_ln120_1_reg_889_pp0_iter10_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter9_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter11_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter10_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter12_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter11_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter13_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter12_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter14_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter13_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter15_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter14_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter2_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter1_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter3_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter2_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter4_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter3_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter5_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter4_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter6_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter5_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter7_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter6_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter8_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter7_reg[7 : 1];
        zext_ln120_1_reg_889_pp0_iter9_reg[7 : 1] <= zext_ln120_1_reg_889_pp0_iter8_reg[7 : 1];
        zext_ln120_2_reg_910_pp0_iter10_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter9_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter11_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter10_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter12_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter11_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter13_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter12_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter14_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter13_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter15_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter14_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter2_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter1_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter3_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter2_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter4_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter3_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter5_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter4_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter6_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter5_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter7_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter6_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter8_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter7_reg[7 : 0];
        zext_ln120_2_reg_910_pp0_iter9_reg[7 : 0] <= zext_ln120_2_reg_910_pp0_iter8_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter10_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter9_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter11_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter10_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter12_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter11_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter13_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter12_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter14_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter13_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter15_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter14_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter2_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter1_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter3_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter2_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter4_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter3_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter5_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter4_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter6_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter5_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter7_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter6_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter8_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter7_reg[7 : 0];
        zext_ln120_3_reg_931_pp0_iter9_reg[7 : 0] <= zext_ln120_3_reg_931_pp0_iter8_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter10_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter9_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter11_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter10_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter12_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter11_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter13_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter12_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter14_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter13_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter15_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter14_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter2_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter1_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter3_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter2_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter4_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter3_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter5_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter4_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter6_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter5_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter7_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter6_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter8_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter7_reg[7 : 0];
        zext_ln120_4_reg_952_pp0_iter9_reg[7 : 0] <= zext_ln120_4_reg_952_pp0_iter8_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        lshr_ln118_5_reg_905_pp0_iter1_reg <= lshr_ln118_5_reg_905;
        lshr_ln118_6_reg_926_pp0_iter1_reg <= lshr_ln118_6_reg_926;
        lshr_ln118_7_reg_947_pp0_iter1_reg <= lshr_ln118_7_reg_947;
        trunc_ln118_2_reg_884_pp0_iter1_reg <= trunc_ln118_2_reg_884;
        zext_ln120_1_reg_889_pp0_iter1_reg[7 : 1] <= zext_ln120_1_reg_889[7 : 1];
        zext_ln120_2_reg_910_pp0_iter1_reg[7 : 0] <= zext_ln120_2_reg_910[7 : 0];
        zext_ln120_3_reg_931_pp0_iter1_reg[7 : 0] <= zext_ln120_3_reg_931[7 : 0];
        zext_ln120_4_reg_952_pp0_iter1_reg[7 : 0] <= zext_ln120_4_reg_952[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_640_p2 == 1'd0))) begin
        lshr_ln118_5_reg_905 <= {{add_ln115_2_fu_682_p2[9:2]}};
        lshr_ln118_6_reg_926 <= {{add_ln115_3_fu_730_p2[9:2]}};
        lshr_ln118_7_reg_947 <= {{add_ln115_4_fu_778_p2[9:2]}};
        trunc_ln118_2_reg_884 <= {{ap_sig_allocacmp_i_4_0_load[8:1]}};
        zext_ln120_1_reg_889[7 : 1] <= zext_ln120_1_fu_666_p1[7 : 1];
        zext_ln120_2_reg_910[7 : 0] <= zext_ln120_2_fu_714_p1[7 : 0];
        zext_ln120_3_reg_931[7 : 0] <= zext_ln120_3_fu_762_p1[7 : 0];
        zext_ln120_4_reg_952[7 : 0] <= zext_ln120_4_fu_810_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_I_1_ce0 = 1'b1;
    end else begin
        Stage2_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_I_1_ce1 = 1'b1;
    end else begin
        Stage2_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_I_2_ce0 = 1'b1;
    end else begin
        Stage2_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_I_2_ce1 = 1'b1;
    end else begin
        Stage2_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_I_3_ce0 = 1'b1;
    end else begin
        Stage2_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_I_3_ce1 = 1'b1;
    end else begin
        Stage2_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_I_ce0 = 1'b1;
    end else begin
        Stage2_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_I_ce1 = 1'b1;
    end else begin
        Stage2_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_R_1_ce0 = 1'b1;
    end else begin
        Stage2_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_R_1_ce1 = 1'b1;
    end else begin
        Stage2_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_R_2_ce0 = 1'b1;
    end else begin
        Stage2_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_R_2_ce1 = 1'b1;
    end else begin
        Stage2_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_R_3_ce0 = 1'b1;
    end else begin
        Stage2_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_R_3_ce1 = 1'b1;
    end else begin
        Stage2_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage2_R_ce0 = 1'b1;
    end else begin
        Stage2_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage2_R_ce1 = 1'b1;
    end else begin
        Stage2_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_I_1_ce0 = 1'b1;
    end else begin
        Stage3_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_1_ce1 = 1'b1;
    end else begin
        Stage3_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_I_1_we0 = 1'b1;
    end else begin
        Stage3_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_1_we1 = 1'b1;
    end else begin
        Stage3_I_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_I_2_ce0 = 1'b1;
    end else begin
        Stage3_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_2_ce1 = 1'b1;
    end else begin
        Stage3_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_I_2_we0 = 1'b1;
    end else begin
        Stage3_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_2_we1 = 1'b1;
    end else begin
        Stage3_I_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_I_3_ce0 = 1'b1;
    end else begin
        Stage3_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_3_ce1 = 1'b1;
    end else begin
        Stage3_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_I_3_we0 = 1'b1;
    end else begin
        Stage3_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_3_we1 = 1'b1;
    end else begin
        Stage3_I_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_ce0 = 1'b1;
    end else begin
        Stage3_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_ce1 = 1'b1;
    end else begin
        Stage3_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_we0 = 1'b1;
    end else begin
        Stage3_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_I_we1 = 1'b1;
    end else begin
        Stage3_I_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_R_1_ce0 = 1'b1;
    end else begin
        Stage3_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_1_ce1 = 1'b1;
    end else begin
        Stage3_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_R_1_we0 = 1'b1;
    end else begin
        Stage3_R_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_1_we1 = 1'b1;
    end else begin
        Stage3_R_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_R_2_ce0 = 1'b1;
    end else begin
        Stage3_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_2_ce1 = 1'b1;
    end else begin
        Stage3_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_R_2_we0 = 1'b1;
    end else begin
        Stage3_R_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_2_we1 = 1'b1;
    end else begin
        Stage3_R_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_R_3_ce0 = 1'b1;
    end else begin
        Stage3_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_3_ce1 = 1'b1;
    end else begin
        Stage3_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage3_R_3_we0 = 1'b1;
    end else begin
        Stage3_R_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_3_we1 = 1'b1;
    end else begin
        Stage3_R_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_ce0 = 1'b1;
    end else begin
        Stage3_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_ce1 = 1'b1;
    end else begin
        Stage3_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_we0 = 1'b1;
    end else begin
        Stage3_R_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage3_R_we1 = 1'b1;
    end else begin
        Stage3_R_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_640_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_4_0_load = 10'd0;
    end else begin
        ap_sig_allocacmp_i_4_0_load = i_4_0_fu_82;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Stage2_I_1_address0 = zext_ln118_7_fu_858_p1;

assign Stage2_I_1_address1 = zext_ln120_2_fu_714_p1;

assign Stage2_I_2_address0 = zext_ln118_8_fu_863_p1;

assign Stage2_I_2_address1 = zext_ln120_3_fu_762_p1;

assign Stage2_I_3_address0 = zext_ln118_9_fu_868_p1;

assign Stage2_I_3_address1 = zext_ln120_4_fu_810_p1;

assign Stage2_I_address0 = zext_ln118_6_fu_853_p1;

assign Stage2_I_address1 = zext_ln120_1_fu_666_p1;

assign Stage2_R_1_address0 = zext_ln118_7_fu_858_p1;

assign Stage2_R_1_address1 = zext_ln120_2_fu_714_p1;

assign Stage2_R_2_address0 = zext_ln118_8_fu_863_p1;

assign Stage2_R_2_address1 = zext_ln120_3_fu_762_p1;

assign Stage2_R_3_address0 = zext_ln118_9_fu_868_p1;

assign Stage2_R_3_address1 = zext_ln120_4_fu_810_p1;

assign Stage2_R_address0 = zext_ln118_6_fu_853_p1;

assign Stage2_R_address1 = zext_ln120_1_fu_666_p1;

assign Stage3_I_1_address0 = zext_ln118_7_reg_1102_pp0_iter16_reg;

assign Stage3_I_1_address1 = zext_ln120_2_reg_910_pp0_iter15_reg;

assign Stage3_I_1_d0 = add36_i2_1_reg_1281_pp0_iter16_reg;

assign Stage3_I_1_d1 = sub30_i2_1_reg_1271;

assign Stage3_I_2_address0 = zext_ln118_8_reg_1118_pp0_iter16_reg;

assign Stage3_I_2_address1 = zext_ln120_3_reg_931_pp0_iter15_reg;

assign Stage3_I_2_d0 = add36_i2_2_reg_1301_pp0_iter16_reg;

assign Stage3_I_2_d1 = sub30_i2_2_reg_1291;

assign Stage3_I_3_address0 = zext_ln118_9_reg_1134_pp0_iter16_reg;

assign Stage3_I_3_address1 = zext_ln120_4_reg_952_pp0_iter15_reg;

assign Stage3_I_3_d0 = add36_i2_3_reg_1321_pp0_iter16_reg;

assign Stage3_I_3_d1 = sub30_i2_3_reg_1311;

assign Stage3_I_address0 = zext_ln118_6_reg_1086_pp0_iter15_reg;

assign Stage3_I_address1 = zext_ln120_1_reg_889_pp0_iter15_reg;

assign Stage3_I_d0 = add36_i2_reg_1261;

assign Stage3_I_d1 = sub30_i2_reg_1251;

assign Stage3_R_1_address0 = zext_ln118_7_reg_1102_pp0_iter16_reg;

assign Stage3_R_1_address1 = zext_ln120_2_reg_910_pp0_iter15_reg;

assign Stage3_R_1_d0 = add33_i2_1_reg_1276_pp0_iter16_reg;

assign Stage3_R_1_d1 = sub27_i2_1_reg_1266;

assign Stage3_R_2_address0 = zext_ln118_8_reg_1118_pp0_iter16_reg;

assign Stage3_R_2_address1 = zext_ln120_3_reg_931_pp0_iter15_reg;

assign Stage3_R_2_d0 = add33_i2_2_reg_1296_pp0_iter16_reg;

assign Stage3_R_2_d1 = sub27_i2_2_reg_1286;

assign Stage3_R_3_address0 = zext_ln118_9_reg_1134_pp0_iter16_reg;

assign Stage3_R_3_address1 = zext_ln120_4_reg_952_pp0_iter15_reg;

assign Stage3_R_3_d0 = add33_i2_3_reg_1316_pp0_iter16_reg;

assign Stage3_R_3_d1 = sub27_i2_3_reg_1306;

assign Stage3_R_address0 = zext_ln118_6_reg_1086_pp0_iter15_reg;

assign Stage3_R_address1 = zext_ln120_1_reg_889_pp0_iter15_reg;

assign Stage3_R_d0 = add33_i2_reg_1256;

assign Stage3_R_d1 = sub27_i2_reg_1246;

assign add_ln109_fu_816_p2 = (ap_sig_allocacmp_i_4_0_load + 10'd4);

assign add_ln115_2_fu_682_p2 = (ap_sig_allocacmp_i_4_0_load + zext_ln109_2_fu_678_p1);

assign add_ln115_3_fu_730_p2 = (ap_sig_allocacmp_i_4_0_load + zext_ln109_3_fu_726_p1);

assign add_ln115_4_fu_778_p2 = (ap_sig_allocacmp_i_4_0_load + zext_ln109_4_fu_774_p1);

assign add_ln116_1_fu_688_p2 = (add_ln115_2_fu_682_p2 + 10'd4);

assign add_ln116_2_fu_736_p2 = (add_ln115_3_fu_730_p2 + 10'd4);

assign add_ln116_3_fu_784_p2 = (add_ln115_4_fu_778_p2 + 10'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_operation_274 = (1'b1 == 1'b1);

assign ap_enable_operation_276 = (1'b1 == 1'b1);

assign ap_enable_operation_278 = (1'b1 == 1'b1);

assign ap_enable_operation_280 = (1'b1 == 1'b1);

assign ap_enable_operation_282 = (1'b1 == 1'b1);

assign ap_enable_operation_284 = (1'b1 == 1'b1);

assign ap_enable_operation_286 = (1'b1 == 1'b1);

assign ap_enable_operation_288 = (1'b1 == 1'b1);

assign ap_enable_operation_290 = (1'b1 == 1'b1);

assign ap_enable_operation_292 = (1'b1 == 1'b1);

assign ap_enable_operation_296 = (1'b1 == 1'b1);

assign ap_enable_operation_298 = (1'b1 == 1'b1);

assign ap_enable_operation_300 = (1'b1 == 1'b1);

assign ap_enable_operation_302 = (1'b1 == 1'b1);

assign ap_enable_operation_304 = (1'b1 == 1'b1);

assign ap_enable_operation_306 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state17_pp0_iter16_stage0 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state18_pp0_iter17_stage0 = ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln123_4_fu_845_p1 = xor_ln123_reg_1014_pp0_iter5_reg;

assign bitcast_ln123_fu_827_p1 = Stage2_I_2_load_1_reg_998;

assign bitcast_ln124_4_fu_849_p1 = xor_ln124_reg_1019_pp0_iter5_reg;

assign bitcast_ln124_fu_836_p1 = Stage2_R_2_load_1_reg_992;

assign empty_42_fu_646_p1 = ap_sig_allocacmp_i_4_0_load[8:0];

assign grp_fu_628_p_ce = 1'b1;

assign grp_fu_628_p_din0 = Stage2_R_load_1_reg_968_pp0_iter5_reg;

assign grp_fu_628_p_din1 = mul23_i2_reg_1024;

assign grp_fu_628_p_opcode = 2'd1;

assign grp_fu_632_p_ce = 1'b1;

assign grp_fu_632_p_din0 = Stage2_I_load_1_reg_974_pp0_iter5_reg;

assign grp_fu_632_p_din1 = mul25_i2_reg_1029;

assign grp_fu_632_p_opcode = 2'd0;

assign grp_fu_636_p_ce = 1'b1;

assign grp_fu_636_p_din0 = mul22_i1_1_reg_1034;

assign grp_fu_636_p_din1 = mul23_i2_1_reg_1039;

assign grp_fu_636_p_opcode = 2'd1;

assign grp_fu_640_p_ce = 1'b1;

assign grp_fu_640_p_din0 = mul24_i1_1_reg_1044;

assign grp_fu_640_p_din1 = mul25_i2_1_reg_1049;

assign grp_fu_640_p_opcode = 2'd0;

assign grp_fu_644_p_ce = 1'b1;

assign grp_fu_644_p_din0 = mul22_i1_2_reg_1054;

assign grp_fu_644_p_din1 = bitcast_ln123_4_fu_845_p1;

assign grp_fu_644_p_opcode = 2'd1;

assign grp_fu_648_p_ce = 1'b1;

assign grp_fu_648_p_din0 = mul24_i1_2_reg_1059;

assign grp_fu_648_p_din1 = bitcast_ln124_4_fu_849_p1;

assign grp_fu_648_p_opcode = 2'd0;

assign grp_fu_652_p_ce = 1'b1;

assign grp_fu_652_p_din0 = mul22_i1_3_reg_1064;

assign grp_fu_652_p_din1 = mul23_i2_3_reg_1070;

assign grp_fu_652_p_opcode = 2'd1;

assign grp_fu_656_p_ce = 1'b1;

assign grp_fu_656_p_din0 = mul23_i2_3_reg_1070;

assign grp_fu_656_p_din1 = mul22_i1_3_reg_1064;

assign grp_fu_656_p_opcode = 2'd0;

assign grp_fu_660_p_ce = 1'b1;

assign grp_fu_660_p_din0 = Stage2_R_load_reg_1150;

assign grp_fu_660_p_din1 = t_R_s_reg_1162;

assign grp_fu_660_p_opcode = 2'd1;

assign grp_fu_664_p_ce = 1'b1;

assign grp_fu_664_p_din0 = Stage2_I_load_reg_1156;

assign grp_fu_664_p_din1 = t_I_s_reg_1168;

assign grp_fu_664_p_opcode = 2'd1;

assign grp_fu_668_p_ce = 1'b1;

assign grp_fu_668_p_din0 = Stage2_R_load_reg_1150;

assign grp_fu_668_p_din1 = t_R_s_reg_1162;

assign grp_fu_668_p_opcode = 2'd0;

assign grp_fu_672_p_ce = 1'b1;

assign grp_fu_672_p_din0 = Stage2_I_load_reg_1156;

assign grp_fu_672_p_din1 = t_I_s_reg_1168;

assign grp_fu_672_p_opcode = 2'd0;

assign grp_fu_676_p_ce = 1'b1;

assign grp_fu_676_p_din0 = Stage2_R_1_load_reg_1174;

assign grp_fu_676_p_din1 = t_R_2_1_reg_1186;

assign grp_fu_676_p_opcode = 2'd1;

assign grp_fu_680_p_ce = 1'b1;

assign grp_fu_680_p_din0 = Stage2_I_1_load_reg_1180;

assign grp_fu_680_p_din1 = t_I_2_1_reg_1192;

assign grp_fu_680_p_opcode = 2'd1;

assign grp_fu_684_p_ce = 1'b1;

assign grp_fu_684_p_din0 = Stage2_R_1_load_reg_1174;

assign grp_fu_684_p_din1 = t_R_2_1_reg_1186;

assign grp_fu_684_p_opcode = 2'd0;

assign grp_fu_688_p_ce = 1'b1;

assign grp_fu_688_p_din0 = Stage2_I_1_load_reg_1180;

assign grp_fu_688_p_din1 = t_I_2_1_reg_1192;

assign grp_fu_688_p_opcode = 2'd0;

assign grp_fu_692_p_ce = 1'b1;

assign grp_fu_692_p_din0 = Stage2_R_2_load_reg_1198;

assign grp_fu_692_p_din1 = t_R_2_2_reg_1210;

assign grp_fu_692_p_opcode = 2'd1;

assign grp_fu_696_p_ce = 1'b1;

assign grp_fu_696_p_din0 = Stage2_I_2_load_reg_1204;

assign grp_fu_696_p_din1 = t_I_2_2_reg_1216;

assign grp_fu_696_p_opcode = 2'd1;

assign grp_fu_700_p_ce = 1'b1;

assign grp_fu_700_p_din0 = Stage2_R_2_load_reg_1198;

assign grp_fu_700_p_din1 = t_R_2_2_reg_1210;

assign grp_fu_700_p_opcode = 2'd0;

assign grp_fu_704_p_ce = 1'b1;

assign grp_fu_704_p_din0 = Stage2_I_2_load_reg_1204;

assign grp_fu_704_p_din1 = t_I_2_2_reg_1216;

assign grp_fu_704_p_opcode = 2'd0;

assign grp_fu_708_p_ce = 1'b1;

assign grp_fu_708_p_din0 = Stage2_R_3_load_reg_1222;

assign grp_fu_708_p_din1 = t_R_2_3_reg_1234;

assign grp_fu_708_p_opcode = 2'd1;

assign grp_fu_712_p_ce = 1'b1;

assign grp_fu_712_p_din0 = Stage2_I_3_load_reg_1228;

assign grp_fu_712_p_din1 = t_I_2_3_reg_1240;

assign grp_fu_712_p_opcode = 2'd1;

assign grp_fu_716_p_ce = 1'b1;

assign grp_fu_716_p_din0 = Stage2_R_3_load_reg_1222;

assign grp_fu_716_p_din1 = t_R_2_3_reg_1234;

assign grp_fu_716_p_opcode = 2'd0;

assign grp_fu_720_p_ce = 1'b1;

assign grp_fu_720_p_din0 = Stage2_I_3_load_reg_1228;

assign grp_fu_720_p_din1 = t_I_2_3_reg_1240;

assign grp_fu_720_p_opcode = 2'd0;

assign grp_fu_724_p_ce = 1'b1;

assign grp_fu_724_p_din0 = Stage2_I_load_1_reg_974;

assign grp_fu_724_p_din1 = 32'd2147483648;

assign grp_fu_728_p_ce = 1'b1;

assign grp_fu_728_p_din0 = Stage2_R_load_1_reg_968;

assign grp_fu_728_p_din1 = 32'd2147483648;

assign grp_fu_732_p_ce = 1'b1;

assign grp_fu_732_p_din0 = Stage2_R_1_load_1_reg_980;

assign grp_fu_732_p_din1 = 32'd1060439287;

assign grp_fu_736_p_ce = 1'b1;

assign grp_fu_736_p_din0 = Stage2_I_1_load_1_reg_986;

assign grp_fu_736_p_din1 = 32'd3207922935;

assign grp_fu_740_p_ce = 1'b1;

assign grp_fu_740_p_din0 = Stage2_I_1_load_1_reg_986;

assign grp_fu_740_p_din1 = 32'd1060439287;

assign grp_fu_744_p_ce = 1'b1;

assign grp_fu_744_p_din0 = Stage2_R_1_load_1_reg_980;

assign grp_fu_744_p_din1 = 32'd3207922935;

assign grp_fu_748_p_ce = 1'b1;

assign grp_fu_748_p_din0 = Stage2_R_2_load_1_reg_992;

assign grp_fu_748_p_din1 = 32'd2147483648;

assign grp_fu_752_p_ce = 1'b1;

assign grp_fu_752_p_din0 = Stage2_I_2_load_1_reg_998;

assign grp_fu_752_p_din1 = 32'd2147483648;

assign grp_fu_756_p_ce = 1'b1;

assign grp_fu_756_p_din0 = Stage2_R_3_load_1_reg_1004;

assign grp_fu_756_p_din1 = 32'd3207922935;

assign grp_fu_760_p_ce = 1'b1;

assign grp_fu_760_p_din0 = Stage2_I_3_load_1_reg_1009;

assign grp_fu_760_p_din1 = 32'd3207922935;

assign icmp_ln109_fu_640_p2 = ((ap_sig_allocacmp_i_4_0_load == 10'd512) ? 1'b1 : 1'b0);

assign lshr_ln120_1_fu_704_p4 = {{add_ln116_1_fu_688_p2[9:2]}};

assign lshr_ln120_2_fu_752_p4 = {{add_ln116_2_fu_736_p2[9:2]}};

assign lshr_ln120_3_fu_800_p4 = {{add_ln116_3_fu_784_p2[9:2]}};

assign or_ln109_2_fu_672_p2 = (empty_42_fu_646_p1 | 9'd1);

assign or_ln109_3_fu_720_p2 = (empty_42_fu_646_p1 | 9'd2);

assign or_ln109_4_fu_768_p2 = (empty_42_fu_646_p1 | 9'd3);

assign or_ln120_fu_660_p2 = (trunc_ln118_2_fu_650_p4 | 8'd1);

assign trunc_ln118_2_fu_650_p4 = {{ap_sig_allocacmp_i_4_0_load[8:1]}};

assign xor_ln123_fu_830_p2 = (bitcast_ln123_fu_827_p1 ^ 32'd2147483648);

assign xor_ln124_fu_839_p2 = (bitcast_ln124_fu_836_p1 ^ 32'd2147483648);

assign zext_ln109_2_fu_678_p1 = or_ln109_2_fu_672_p2;

assign zext_ln109_3_fu_726_p1 = or_ln109_3_fu_720_p2;

assign zext_ln109_4_fu_774_p1 = or_ln109_4_fu_768_p2;

assign zext_ln118_6_fu_853_p1 = trunc_ln118_2_reg_884_pp0_iter8_reg;

assign zext_ln118_7_fu_858_p1 = lshr_ln118_5_reg_905_pp0_iter8_reg;

assign zext_ln118_8_fu_863_p1 = lshr_ln118_6_reg_926_pp0_iter8_reg;

assign zext_ln118_9_fu_868_p1 = lshr_ln118_7_reg_947_pp0_iter8_reg;

assign zext_ln120_1_fu_666_p1 = or_ln120_fu_660_p2;

assign zext_ln120_2_fu_714_p1 = lshr_ln120_1_fu_704_p4;

assign zext_ln120_3_fu_762_p1 = lshr_ln120_2_fu_752_p4;

assign zext_ln120_4_fu_810_p1 = lshr_ln120_3_fu_800_p4;

always @ (posedge ap_clk) begin
    zext_ln120_1_reg_889[0] <= 1'b1;
    zext_ln120_1_reg_889[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter1_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter2_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter3_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter4_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter5_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter6_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter7_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter8_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter9_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter10_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter11_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter12_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter13_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter14_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_889_pp0_iter15_reg[0] <= 1'b1;
    zext_ln120_1_reg_889_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_2_reg_910_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_3_reg_931_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_4_reg_952_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_6_reg_1086[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_6_reg_1086_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_6_reg_1086_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_6_reg_1086_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_6_reg_1086_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_6_reg_1086_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_6_reg_1086_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_7_reg_1102_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_8_reg_1118_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_9_reg_1134_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //fft_fft_exec_Pipeline_DFT_Loop10
