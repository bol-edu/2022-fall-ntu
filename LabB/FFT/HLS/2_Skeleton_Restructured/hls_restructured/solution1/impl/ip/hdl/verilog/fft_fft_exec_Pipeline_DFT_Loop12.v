// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_fft_exec_Pipeline_DFT_Loop12 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Stage5_I_3_address0,
        Stage5_I_3_ce0,
        Stage5_I_3_we0,
        Stage5_I_3_d0,
        Stage5_I_3_address1,
        Stage5_I_3_ce1,
        Stage5_I_3_we1,
        Stage5_I_3_d1,
        Stage5_I_2_address0,
        Stage5_I_2_ce0,
        Stage5_I_2_we0,
        Stage5_I_2_d0,
        Stage5_I_2_address1,
        Stage5_I_2_ce1,
        Stage5_I_2_we1,
        Stage5_I_2_d1,
        Stage5_I_1_address0,
        Stage5_I_1_ce0,
        Stage5_I_1_we0,
        Stage5_I_1_d0,
        Stage5_I_1_address1,
        Stage5_I_1_ce1,
        Stage5_I_1_we1,
        Stage5_I_1_d1,
        Stage5_I_address0,
        Stage5_I_ce0,
        Stage5_I_we0,
        Stage5_I_d0,
        Stage5_I_address1,
        Stage5_I_ce1,
        Stage5_I_we1,
        Stage5_I_d1,
        Stage5_R_3_address0,
        Stage5_R_3_ce0,
        Stage5_R_3_we0,
        Stage5_R_3_d0,
        Stage5_R_3_address1,
        Stage5_R_3_ce1,
        Stage5_R_3_we1,
        Stage5_R_3_d1,
        Stage5_R_2_address0,
        Stage5_R_2_ce0,
        Stage5_R_2_we0,
        Stage5_R_2_d0,
        Stage5_R_2_address1,
        Stage5_R_2_ce1,
        Stage5_R_2_we1,
        Stage5_R_2_d1,
        Stage5_R_1_address0,
        Stage5_R_1_ce0,
        Stage5_R_1_we0,
        Stage5_R_1_d0,
        Stage5_R_1_address1,
        Stage5_R_1_ce1,
        Stage5_R_1_we1,
        Stage5_R_1_d1,
        Stage5_R_address0,
        Stage5_R_ce0,
        Stage5_R_we0,
        Stage5_R_d0,
        Stage5_R_address1,
        Stage5_R_ce1,
        Stage5_R_we1,
        Stage5_R_d1,
        Stage4_R_address0,
        Stage4_R_ce0,
        Stage4_R_q0,
        Stage4_R_address1,
        Stage4_R_ce1,
        Stage4_R_q1,
        Stage4_I_address0,
        Stage4_I_ce0,
        Stage4_I_q0,
        Stage4_I_address1,
        Stage4_I_ce1,
        Stage4_I_q1,
        Stage4_R_1_address0,
        Stage4_R_1_ce0,
        Stage4_R_1_q0,
        Stage4_R_1_address1,
        Stage4_R_1_ce1,
        Stage4_R_1_q1,
        Stage4_I_1_address0,
        Stage4_I_1_ce0,
        Stage4_I_1_q0,
        Stage4_I_1_address1,
        Stage4_I_1_ce1,
        Stage4_I_1_q1,
        Stage4_R_2_address0,
        Stage4_R_2_ce0,
        Stage4_R_2_q0,
        Stage4_R_2_address1,
        Stage4_R_2_ce1,
        Stage4_R_2_q1,
        Stage4_I_2_address0,
        Stage4_I_2_ce0,
        Stage4_I_2_q0,
        Stage4_I_2_address1,
        Stage4_I_2_ce1,
        Stage4_I_2_q1,
        Stage4_R_3_address0,
        Stage4_R_3_ce0,
        Stage4_R_3_q0,
        Stage4_R_3_address1,
        Stage4_R_3_ce1,
        Stage4_R_3_q1,
        Stage4_I_3_address0,
        Stage4_I_3_ce0,
        Stage4_I_3_q0,
        Stage4_I_3_address1,
        Stage4_I_3_ce1,
        Stage4_I_3_q1,
        W_real_address0,
        W_real_ce0,
        W_real_q0,
        W_real_address1,
        W_real_ce1,
        W_real_q1,
        W_real_address2,
        W_real_ce2,
        W_real_q2,
        W_real_address3,
        W_real_ce3,
        W_real_q3,
        W_imag_address0,
        W_imag_ce0,
        W_imag_q0,
        W_imag_address1,
        W_imag_ce1,
        W_imag_q1,
        W_imag_address2,
        W_imag_ce2,
        W_imag_q2,
        W_imag_address3,
        W_imag_ce3,
        W_imag_q3,
        grp_fu_628_p_din0,
        grp_fu_628_p_din1,
        grp_fu_628_p_opcode,
        grp_fu_628_p_dout0,
        grp_fu_628_p_ce,
        grp_fu_632_p_din0,
        grp_fu_632_p_din1,
        grp_fu_632_p_opcode,
        grp_fu_632_p_dout0,
        grp_fu_632_p_ce,
        grp_fu_636_p_din0,
        grp_fu_636_p_din1,
        grp_fu_636_p_opcode,
        grp_fu_636_p_dout0,
        grp_fu_636_p_ce,
        grp_fu_640_p_din0,
        grp_fu_640_p_din1,
        grp_fu_640_p_opcode,
        grp_fu_640_p_dout0,
        grp_fu_640_p_ce,
        grp_fu_644_p_din0,
        grp_fu_644_p_din1,
        grp_fu_644_p_opcode,
        grp_fu_644_p_dout0,
        grp_fu_644_p_ce,
        grp_fu_648_p_din0,
        grp_fu_648_p_din1,
        grp_fu_648_p_opcode,
        grp_fu_648_p_dout0,
        grp_fu_648_p_ce,
        grp_fu_652_p_din0,
        grp_fu_652_p_din1,
        grp_fu_652_p_opcode,
        grp_fu_652_p_dout0,
        grp_fu_652_p_ce,
        grp_fu_656_p_din0,
        grp_fu_656_p_din1,
        grp_fu_656_p_opcode,
        grp_fu_656_p_dout0,
        grp_fu_656_p_ce,
        grp_fu_660_p_din0,
        grp_fu_660_p_din1,
        grp_fu_660_p_opcode,
        grp_fu_660_p_dout0,
        grp_fu_660_p_ce,
        grp_fu_664_p_din0,
        grp_fu_664_p_din1,
        grp_fu_664_p_opcode,
        grp_fu_664_p_dout0,
        grp_fu_664_p_ce,
        grp_fu_668_p_din0,
        grp_fu_668_p_din1,
        grp_fu_668_p_opcode,
        grp_fu_668_p_dout0,
        grp_fu_668_p_ce,
        grp_fu_672_p_din0,
        grp_fu_672_p_din1,
        grp_fu_672_p_opcode,
        grp_fu_672_p_dout0,
        grp_fu_672_p_ce,
        grp_fu_676_p_din0,
        grp_fu_676_p_din1,
        grp_fu_676_p_opcode,
        grp_fu_676_p_dout0,
        grp_fu_676_p_ce,
        grp_fu_680_p_din0,
        grp_fu_680_p_din1,
        grp_fu_680_p_opcode,
        grp_fu_680_p_dout0,
        grp_fu_680_p_ce,
        grp_fu_684_p_din0,
        grp_fu_684_p_din1,
        grp_fu_684_p_opcode,
        grp_fu_684_p_dout0,
        grp_fu_684_p_ce,
        grp_fu_688_p_din0,
        grp_fu_688_p_din1,
        grp_fu_688_p_opcode,
        grp_fu_688_p_dout0,
        grp_fu_688_p_ce,
        grp_fu_692_p_din0,
        grp_fu_692_p_din1,
        grp_fu_692_p_opcode,
        grp_fu_692_p_dout0,
        grp_fu_692_p_ce,
        grp_fu_696_p_din0,
        grp_fu_696_p_din1,
        grp_fu_696_p_opcode,
        grp_fu_696_p_dout0,
        grp_fu_696_p_ce,
        grp_fu_700_p_din0,
        grp_fu_700_p_din1,
        grp_fu_700_p_opcode,
        grp_fu_700_p_dout0,
        grp_fu_700_p_ce,
        grp_fu_704_p_din0,
        grp_fu_704_p_din1,
        grp_fu_704_p_opcode,
        grp_fu_704_p_dout0,
        grp_fu_704_p_ce,
        grp_fu_708_p_din0,
        grp_fu_708_p_din1,
        grp_fu_708_p_opcode,
        grp_fu_708_p_dout0,
        grp_fu_708_p_ce,
        grp_fu_712_p_din0,
        grp_fu_712_p_din1,
        grp_fu_712_p_opcode,
        grp_fu_712_p_dout0,
        grp_fu_712_p_ce,
        grp_fu_716_p_din0,
        grp_fu_716_p_din1,
        grp_fu_716_p_opcode,
        grp_fu_716_p_dout0,
        grp_fu_716_p_ce,
        grp_fu_720_p_din0,
        grp_fu_720_p_din1,
        grp_fu_720_p_opcode,
        grp_fu_720_p_dout0,
        grp_fu_720_p_ce,
        grp_fu_724_p_din0,
        grp_fu_724_p_din1,
        grp_fu_724_p_dout0,
        grp_fu_724_p_ce,
        grp_fu_728_p_din0,
        grp_fu_728_p_din1,
        grp_fu_728_p_dout0,
        grp_fu_728_p_ce,
        grp_fu_732_p_din0,
        grp_fu_732_p_din1,
        grp_fu_732_p_dout0,
        grp_fu_732_p_ce,
        grp_fu_736_p_din0,
        grp_fu_736_p_din1,
        grp_fu_736_p_dout0,
        grp_fu_736_p_ce,
        grp_fu_740_p_din0,
        grp_fu_740_p_din1,
        grp_fu_740_p_dout0,
        grp_fu_740_p_ce,
        grp_fu_744_p_din0,
        grp_fu_744_p_din1,
        grp_fu_744_p_dout0,
        grp_fu_744_p_ce,
        grp_fu_748_p_din0,
        grp_fu_748_p_din1,
        grp_fu_748_p_dout0,
        grp_fu_748_p_ce,
        grp_fu_752_p_din0,
        grp_fu_752_p_din1,
        grp_fu_752_p_dout0,
        grp_fu_752_p_ce,
        grp_fu_756_p_din0,
        grp_fu_756_p_din1,
        grp_fu_756_p_dout0,
        grp_fu_756_p_ce,
        grp_fu_760_p_din0,
        grp_fu_760_p_din1,
        grp_fu_760_p_dout0,
        grp_fu_760_p_ce,
        grp_fu_764_p_din0,
        grp_fu_764_p_din1,
        grp_fu_764_p_dout0,
        grp_fu_764_p_ce,
        grp_fu_768_p_din0,
        grp_fu_768_p_din1,
        grp_fu_768_p_dout0,
        grp_fu_768_p_ce,
        grp_fu_772_p_din0,
        grp_fu_772_p_din1,
        grp_fu_772_p_dout0,
        grp_fu_772_p_ce,
        grp_fu_776_p_din0,
        grp_fu_776_p_din1,
        grp_fu_776_p_dout0,
        grp_fu_776_p_ce,
        grp_fu_780_p_din0,
        grp_fu_780_p_din1,
        grp_fu_780_p_dout0,
        grp_fu_780_p_ce,
        grp_fu_784_p_din0,
        grp_fu_784_p_din1,
        grp_fu_784_p_dout0,
        grp_fu_784_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] Stage5_I_3_address0;
output   Stage5_I_3_ce0;
output   Stage5_I_3_we0;
output  [31:0] Stage5_I_3_d0;
output  [7:0] Stage5_I_3_address1;
output   Stage5_I_3_ce1;
output   Stage5_I_3_we1;
output  [31:0] Stage5_I_3_d1;
output  [7:0] Stage5_I_2_address0;
output   Stage5_I_2_ce0;
output   Stage5_I_2_we0;
output  [31:0] Stage5_I_2_d0;
output  [7:0] Stage5_I_2_address1;
output   Stage5_I_2_ce1;
output   Stage5_I_2_we1;
output  [31:0] Stage5_I_2_d1;
output  [7:0] Stage5_I_1_address0;
output   Stage5_I_1_ce0;
output   Stage5_I_1_we0;
output  [31:0] Stage5_I_1_d0;
output  [7:0] Stage5_I_1_address1;
output   Stage5_I_1_ce1;
output   Stage5_I_1_we1;
output  [31:0] Stage5_I_1_d1;
output  [7:0] Stage5_I_address0;
output   Stage5_I_ce0;
output   Stage5_I_we0;
output  [31:0] Stage5_I_d0;
output  [7:0] Stage5_I_address1;
output   Stage5_I_ce1;
output   Stage5_I_we1;
output  [31:0] Stage5_I_d1;
output  [7:0] Stage5_R_3_address0;
output   Stage5_R_3_ce0;
output   Stage5_R_3_we0;
output  [31:0] Stage5_R_3_d0;
output  [7:0] Stage5_R_3_address1;
output   Stage5_R_3_ce1;
output   Stage5_R_3_we1;
output  [31:0] Stage5_R_3_d1;
output  [7:0] Stage5_R_2_address0;
output   Stage5_R_2_ce0;
output   Stage5_R_2_we0;
output  [31:0] Stage5_R_2_d0;
output  [7:0] Stage5_R_2_address1;
output   Stage5_R_2_ce1;
output   Stage5_R_2_we1;
output  [31:0] Stage5_R_2_d1;
output  [7:0] Stage5_R_1_address0;
output   Stage5_R_1_ce0;
output   Stage5_R_1_we0;
output  [31:0] Stage5_R_1_d0;
output  [7:0] Stage5_R_1_address1;
output   Stage5_R_1_ce1;
output   Stage5_R_1_we1;
output  [31:0] Stage5_R_1_d1;
output  [7:0] Stage5_R_address0;
output   Stage5_R_ce0;
output   Stage5_R_we0;
output  [31:0] Stage5_R_d0;
output  [7:0] Stage5_R_address1;
output   Stage5_R_ce1;
output   Stage5_R_we1;
output  [31:0] Stage5_R_d1;
output  [7:0] Stage4_R_address0;
output   Stage4_R_ce0;
input  [31:0] Stage4_R_q0;
output  [7:0] Stage4_R_address1;
output   Stage4_R_ce1;
input  [31:0] Stage4_R_q1;
output  [7:0] Stage4_I_address0;
output   Stage4_I_ce0;
input  [31:0] Stage4_I_q0;
output  [7:0] Stage4_I_address1;
output   Stage4_I_ce1;
input  [31:0] Stage4_I_q1;
output  [7:0] Stage4_R_1_address0;
output   Stage4_R_1_ce0;
input  [31:0] Stage4_R_1_q0;
output  [7:0] Stage4_R_1_address1;
output   Stage4_R_1_ce1;
input  [31:0] Stage4_R_1_q1;
output  [7:0] Stage4_I_1_address0;
output   Stage4_I_1_ce0;
input  [31:0] Stage4_I_1_q0;
output  [7:0] Stage4_I_1_address1;
output   Stage4_I_1_ce1;
input  [31:0] Stage4_I_1_q1;
output  [7:0] Stage4_R_2_address0;
output   Stage4_R_2_ce0;
input  [31:0] Stage4_R_2_q0;
output  [7:0] Stage4_R_2_address1;
output   Stage4_R_2_ce1;
input  [31:0] Stage4_R_2_q1;
output  [7:0] Stage4_I_2_address0;
output   Stage4_I_2_ce0;
input  [31:0] Stage4_I_2_q0;
output  [7:0] Stage4_I_2_address1;
output   Stage4_I_2_ce1;
input  [31:0] Stage4_I_2_q1;
output  [7:0] Stage4_R_3_address0;
output   Stage4_R_3_ce0;
input  [31:0] Stage4_R_3_q0;
output  [7:0] Stage4_R_3_address1;
output   Stage4_R_3_ce1;
input  [31:0] Stage4_R_3_q1;
output  [7:0] Stage4_I_3_address0;
output   Stage4_I_3_ce0;
input  [31:0] Stage4_I_3_q0;
output  [7:0] Stage4_I_3_address1;
output   Stage4_I_3_ce1;
input  [31:0] Stage4_I_3_q1;
output  [8:0] W_real_address0;
output   W_real_ce0;
input  [31:0] W_real_q0;
output  [8:0] W_real_address1;
output   W_real_ce1;
input  [31:0] W_real_q1;
output  [8:0] W_real_address2;
output   W_real_ce2;
input  [31:0] W_real_q2;
output  [8:0] W_real_address3;
output   W_real_ce3;
input  [31:0] W_real_q3;
output  [8:0] W_imag_address0;
output   W_imag_ce0;
input  [31:0] W_imag_q0;
output  [8:0] W_imag_address1;
output   W_imag_ce1;
input  [31:0] W_imag_q1;
output  [8:0] W_imag_address2;
output   W_imag_ce2;
input  [31:0] W_imag_q2;
output  [8:0] W_imag_address3;
output   W_imag_ce3;
input  [31:0] W_imag_q3;
output  [31:0] grp_fu_628_p_din0;
output  [31:0] grp_fu_628_p_din1;
output  [1:0] grp_fu_628_p_opcode;
input  [31:0] grp_fu_628_p_dout0;
output   grp_fu_628_p_ce;
output  [31:0] grp_fu_632_p_din0;
output  [31:0] grp_fu_632_p_din1;
output  [1:0] grp_fu_632_p_opcode;
input  [31:0] grp_fu_632_p_dout0;
output   grp_fu_632_p_ce;
output  [31:0] grp_fu_636_p_din0;
output  [31:0] grp_fu_636_p_din1;
output  [1:0] grp_fu_636_p_opcode;
input  [31:0] grp_fu_636_p_dout0;
output   grp_fu_636_p_ce;
output  [31:0] grp_fu_640_p_din0;
output  [31:0] grp_fu_640_p_din1;
output  [1:0] grp_fu_640_p_opcode;
input  [31:0] grp_fu_640_p_dout0;
output   grp_fu_640_p_ce;
output  [31:0] grp_fu_644_p_din0;
output  [31:0] grp_fu_644_p_din1;
output  [1:0] grp_fu_644_p_opcode;
input  [31:0] grp_fu_644_p_dout0;
output   grp_fu_644_p_ce;
output  [31:0] grp_fu_648_p_din0;
output  [31:0] grp_fu_648_p_din1;
output  [1:0] grp_fu_648_p_opcode;
input  [31:0] grp_fu_648_p_dout0;
output   grp_fu_648_p_ce;
output  [31:0] grp_fu_652_p_din0;
output  [31:0] grp_fu_652_p_din1;
output  [1:0] grp_fu_652_p_opcode;
input  [31:0] grp_fu_652_p_dout0;
output   grp_fu_652_p_ce;
output  [31:0] grp_fu_656_p_din0;
output  [31:0] grp_fu_656_p_din1;
output  [1:0] grp_fu_656_p_opcode;
input  [31:0] grp_fu_656_p_dout0;
output   grp_fu_656_p_ce;
output  [31:0] grp_fu_660_p_din0;
output  [31:0] grp_fu_660_p_din1;
output  [1:0] grp_fu_660_p_opcode;
input  [31:0] grp_fu_660_p_dout0;
output   grp_fu_660_p_ce;
output  [31:0] grp_fu_664_p_din0;
output  [31:0] grp_fu_664_p_din1;
output  [1:0] grp_fu_664_p_opcode;
input  [31:0] grp_fu_664_p_dout0;
output   grp_fu_664_p_ce;
output  [31:0] grp_fu_668_p_din0;
output  [31:0] grp_fu_668_p_din1;
output  [1:0] grp_fu_668_p_opcode;
input  [31:0] grp_fu_668_p_dout0;
output   grp_fu_668_p_ce;
output  [31:0] grp_fu_672_p_din0;
output  [31:0] grp_fu_672_p_din1;
output  [1:0] grp_fu_672_p_opcode;
input  [31:0] grp_fu_672_p_dout0;
output   grp_fu_672_p_ce;
output  [31:0] grp_fu_676_p_din0;
output  [31:0] grp_fu_676_p_din1;
output  [1:0] grp_fu_676_p_opcode;
input  [31:0] grp_fu_676_p_dout0;
output   grp_fu_676_p_ce;
output  [31:0] grp_fu_680_p_din0;
output  [31:0] grp_fu_680_p_din1;
output  [1:0] grp_fu_680_p_opcode;
input  [31:0] grp_fu_680_p_dout0;
output   grp_fu_680_p_ce;
output  [31:0] grp_fu_684_p_din0;
output  [31:0] grp_fu_684_p_din1;
output  [1:0] grp_fu_684_p_opcode;
input  [31:0] grp_fu_684_p_dout0;
output   grp_fu_684_p_ce;
output  [31:0] grp_fu_688_p_din0;
output  [31:0] grp_fu_688_p_din1;
output  [1:0] grp_fu_688_p_opcode;
input  [31:0] grp_fu_688_p_dout0;
output   grp_fu_688_p_ce;
output  [31:0] grp_fu_692_p_din0;
output  [31:0] grp_fu_692_p_din1;
output  [1:0] grp_fu_692_p_opcode;
input  [31:0] grp_fu_692_p_dout0;
output   grp_fu_692_p_ce;
output  [31:0] grp_fu_696_p_din0;
output  [31:0] grp_fu_696_p_din1;
output  [1:0] grp_fu_696_p_opcode;
input  [31:0] grp_fu_696_p_dout0;
output   grp_fu_696_p_ce;
output  [31:0] grp_fu_700_p_din0;
output  [31:0] grp_fu_700_p_din1;
output  [1:0] grp_fu_700_p_opcode;
input  [31:0] grp_fu_700_p_dout0;
output   grp_fu_700_p_ce;
output  [31:0] grp_fu_704_p_din0;
output  [31:0] grp_fu_704_p_din1;
output  [1:0] grp_fu_704_p_opcode;
input  [31:0] grp_fu_704_p_dout0;
output   grp_fu_704_p_ce;
output  [31:0] grp_fu_708_p_din0;
output  [31:0] grp_fu_708_p_din1;
output  [1:0] grp_fu_708_p_opcode;
input  [31:0] grp_fu_708_p_dout0;
output   grp_fu_708_p_ce;
output  [31:0] grp_fu_712_p_din0;
output  [31:0] grp_fu_712_p_din1;
output  [1:0] grp_fu_712_p_opcode;
input  [31:0] grp_fu_712_p_dout0;
output   grp_fu_712_p_ce;
output  [31:0] grp_fu_716_p_din0;
output  [31:0] grp_fu_716_p_din1;
output  [1:0] grp_fu_716_p_opcode;
input  [31:0] grp_fu_716_p_dout0;
output   grp_fu_716_p_ce;
output  [31:0] grp_fu_720_p_din0;
output  [31:0] grp_fu_720_p_din1;
output  [1:0] grp_fu_720_p_opcode;
input  [31:0] grp_fu_720_p_dout0;
output   grp_fu_720_p_ce;
output  [31:0] grp_fu_724_p_din0;
output  [31:0] grp_fu_724_p_din1;
input  [31:0] grp_fu_724_p_dout0;
output   grp_fu_724_p_ce;
output  [31:0] grp_fu_728_p_din0;
output  [31:0] grp_fu_728_p_din1;
input  [31:0] grp_fu_728_p_dout0;
output   grp_fu_728_p_ce;
output  [31:0] grp_fu_732_p_din0;
output  [31:0] grp_fu_732_p_din1;
input  [31:0] grp_fu_732_p_dout0;
output   grp_fu_732_p_ce;
output  [31:0] grp_fu_736_p_din0;
output  [31:0] grp_fu_736_p_din1;
input  [31:0] grp_fu_736_p_dout0;
output   grp_fu_736_p_ce;
output  [31:0] grp_fu_740_p_din0;
output  [31:0] grp_fu_740_p_din1;
input  [31:0] grp_fu_740_p_dout0;
output   grp_fu_740_p_ce;
output  [31:0] grp_fu_744_p_din0;
output  [31:0] grp_fu_744_p_din1;
input  [31:0] grp_fu_744_p_dout0;
output   grp_fu_744_p_ce;
output  [31:0] grp_fu_748_p_din0;
output  [31:0] grp_fu_748_p_din1;
input  [31:0] grp_fu_748_p_dout0;
output   grp_fu_748_p_ce;
output  [31:0] grp_fu_752_p_din0;
output  [31:0] grp_fu_752_p_din1;
input  [31:0] grp_fu_752_p_dout0;
output   grp_fu_752_p_ce;
output  [31:0] grp_fu_756_p_din0;
output  [31:0] grp_fu_756_p_din1;
input  [31:0] grp_fu_756_p_dout0;
output   grp_fu_756_p_ce;
output  [31:0] grp_fu_760_p_din0;
output  [31:0] grp_fu_760_p_din1;
input  [31:0] grp_fu_760_p_dout0;
output   grp_fu_760_p_ce;
output  [31:0] grp_fu_764_p_din0;
output  [31:0] grp_fu_764_p_din1;
input  [31:0] grp_fu_764_p_dout0;
output   grp_fu_764_p_ce;
output  [31:0] grp_fu_768_p_din0;
output  [31:0] grp_fu_768_p_din1;
input  [31:0] grp_fu_768_p_dout0;
output   grp_fu_768_p_ce;
output  [31:0] grp_fu_772_p_din0;
output  [31:0] grp_fu_772_p_din1;
input  [31:0] grp_fu_772_p_dout0;
output   grp_fu_772_p_ce;
output  [31:0] grp_fu_776_p_din0;
output  [31:0] grp_fu_776_p_din1;
input  [31:0] grp_fu_776_p_dout0;
output   grp_fu_776_p_ce;
output  [31:0] grp_fu_780_p_din0;
output  [31:0] grp_fu_780_p_din1;
input  [31:0] grp_fu_780_p_dout0;
output   grp_fu_780_p_ce;
output  [31:0] grp_fu_784_p_din0;
output  [31:0] grp_fu_784_p_din1;
input  [31:0] grp_fu_784_p_dout0;
output   grp_fu_784_p_ce;

reg ap_idle;
reg Stage5_I_3_ce0;
reg Stage5_I_3_we0;
reg Stage5_I_3_ce1;
reg Stage5_I_3_we1;
reg Stage5_I_2_ce0;
reg Stage5_I_2_we0;
reg Stage5_I_2_ce1;
reg Stage5_I_2_we1;
reg Stage5_I_1_ce0;
reg Stage5_I_1_we0;
reg Stage5_I_1_ce1;
reg Stage5_I_1_we1;
reg Stage5_I_ce0;
reg Stage5_I_we0;
reg Stage5_I_ce1;
reg Stage5_I_we1;
reg Stage5_R_3_ce0;
reg Stage5_R_3_we0;
reg Stage5_R_3_ce1;
reg Stage5_R_3_we1;
reg Stage5_R_2_ce0;
reg Stage5_R_2_we0;
reg Stage5_R_2_ce1;
reg Stage5_R_2_we1;
reg Stage5_R_1_ce0;
reg Stage5_R_1_we0;
reg Stage5_R_1_ce1;
reg Stage5_R_1_we1;
reg Stage5_R_ce0;
reg Stage5_R_we0;
reg Stage5_R_ce1;
reg Stage5_R_we1;
reg Stage4_R_ce0;
reg Stage4_R_ce1;
reg Stage4_I_ce0;
reg Stage4_I_ce1;
reg Stage4_R_1_ce0;
reg Stage4_R_1_ce1;
reg Stage4_I_1_ce0;
reg Stage4_I_1_ce1;
reg Stage4_R_2_ce0;
reg Stage4_R_2_ce1;
reg Stage4_I_2_ce0;
reg Stage4_I_2_ce1;
reg Stage4_R_3_ce0;
reg Stage4_R_3_ce1;
reg Stage4_I_3_ce0;
reg Stage4_I_3_ce1;
reg W_real_ce0;
reg W_real_ce1;
reg W_real_ce2;
reg W_real_ce3;
reg W_imag_ce0;
reg W_imag_ce1;
reg W_imag_ce2;
reg W_imag_ce3;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_766_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] lshr_ln118_4_reg_1110;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter1_reg;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter2_reg;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter3_reg;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter4_reg;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter5_reg;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter6_reg;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter7_reg;
reg   [7:0] lshr_ln118_4_reg_1110_pp0_iter8_reg;
wire   [63:0] zext_ln120_9_fu_848_p1;
reg   [63:0] zext_ln120_9_reg_1115;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter1_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter2_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter3_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter4_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter5_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter6_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter7_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter8_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter9_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter10_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter11_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter12_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter13_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter14_reg;
reg   [63:0] zext_ln120_9_reg_1115_pp0_iter15_reg;
reg   [7:0] lshr_ln118_10_reg_1141;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter1_reg;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter2_reg;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter3_reg;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter4_reg;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter5_reg;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter6_reg;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter7_reg;
reg   [7:0] lshr_ln118_10_reg_1141_pp0_iter8_reg;
wire   [63:0] zext_ln120_10_fu_916_p1;
reg   [63:0] zext_ln120_10_reg_1146;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter1_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter2_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter3_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter4_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter5_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter6_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter7_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter8_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter9_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter10_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter11_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter12_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter13_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter14_reg;
reg   [63:0] zext_ln120_10_reg_1146_pp0_iter15_reg;
reg   [7:0] lshr_ln118_11_reg_1172;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter1_reg;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter2_reg;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter3_reg;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter4_reg;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter5_reg;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter6_reg;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter7_reg;
reg   [7:0] lshr_ln118_11_reg_1172_pp0_iter8_reg;
wire   [63:0] zext_ln120_11_fu_984_p1;
reg   [63:0] zext_ln120_11_reg_1177;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter1_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter2_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter3_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter4_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter5_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter6_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter7_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter8_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter9_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter10_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter11_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter12_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter13_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter14_reg;
reg   [63:0] zext_ln120_11_reg_1177_pp0_iter15_reg;
reg   [7:0] lshr_ln118_12_reg_1203;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter1_reg;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter2_reg;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter3_reg;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter4_reg;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter5_reg;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter6_reg;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter7_reg;
reg   [7:0] lshr_ln118_12_reg_1203_pp0_iter8_reg;
wire   [63:0] zext_ln120_12_fu_1052_p1;
reg   [63:0] zext_ln120_12_reg_1208;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter1_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter2_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter3_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter4_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter5_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter6_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter7_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter8_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter9_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter10_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter11_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter12_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter13_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter14_reg;
reg   [63:0] zext_ln120_12_reg_1208_pp0_iter15_reg;
reg   [31:0] W_real_load_4_reg_1224;
reg   [31:0] W_imag_load_4_reg_1230;
reg   [31:0] Stage4_R_load_1_reg_1236;
reg   [31:0] Stage4_I_load_1_reg_1242;
reg   [31:0] W_real_load_5_reg_1248;
reg   [31:0] W_imag_load_5_reg_1254;
reg   [31:0] Stage4_R_1_load_1_reg_1260;
reg   [31:0] Stage4_I_1_load_1_reg_1266;
reg   [31:0] W_real_load_6_reg_1272;
reg   [31:0] W_imag_load_6_reg_1278;
reg   [31:0] Stage4_R_2_load_1_reg_1284;
reg   [31:0] Stage4_I_2_load_1_reg_1290;
reg   [31:0] W_real_load_7_reg_1296;
reg   [31:0] W_imag_load_7_reg_1302;
reg   [31:0] Stage4_R_3_load_1_reg_1308;
reg   [31:0] Stage4_I_3_load_1_reg_1314;
reg   [31:0] mul22_i3_reg_1320;
reg   [31:0] mul23_i4_reg_1325;
reg   [31:0] mul24_i3_reg_1330;
reg   [31:0] mul25_i4_reg_1335;
reg   [31:0] mul22_i3_1_reg_1340;
reg   [31:0] mul23_i4_1_reg_1345;
reg   [31:0] mul24_i3_1_reg_1350;
reg   [31:0] mul25_i4_1_reg_1355;
reg   [31:0] mul22_i3_2_reg_1360;
reg   [31:0] mul23_i4_2_reg_1365;
reg   [31:0] mul24_i3_2_reg_1370;
reg   [31:0] mul25_i4_2_reg_1375;
reg   [31:0] mul22_i3_3_reg_1380;
reg   [31:0] mul23_i4_3_reg_1385;
reg   [31:0] mul24_i3_3_reg_1390;
reg   [31:0] mul25_i4_3_reg_1395;
wire   [63:0] zext_ln118_14_fu_1069_p1;
reg   [63:0] zext_ln118_14_reg_1400;
reg   [63:0] zext_ln118_14_reg_1400_pp0_iter10_reg;
reg   [63:0] zext_ln118_14_reg_1400_pp0_iter11_reg;
reg   [63:0] zext_ln118_14_reg_1400_pp0_iter12_reg;
reg   [63:0] zext_ln118_14_reg_1400_pp0_iter13_reg;
reg   [63:0] zext_ln118_14_reg_1400_pp0_iter14_reg;
reg   [63:0] zext_ln118_14_reg_1400_pp0_iter15_reg;
reg   [63:0] zext_ln118_14_reg_1400_pp0_iter16_reg;
wire   [63:0] zext_ln118_15_fu_1074_p1;
reg   [63:0] zext_ln118_15_reg_1416;
reg   [63:0] zext_ln118_15_reg_1416_pp0_iter10_reg;
reg   [63:0] zext_ln118_15_reg_1416_pp0_iter11_reg;
reg   [63:0] zext_ln118_15_reg_1416_pp0_iter12_reg;
reg   [63:0] zext_ln118_15_reg_1416_pp0_iter13_reg;
reg   [63:0] zext_ln118_15_reg_1416_pp0_iter14_reg;
reg   [63:0] zext_ln118_15_reg_1416_pp0_iter15_reg;
reg   [63:0] zext_ln118_15_reg_1416_pp0_iter16_reg;
wire   [63:0] zext_ln118_16_fu_1079_p1;
reg   [63:0] zext_ln118_16_reg_1432;
reg   [63:0] zext_ln118_16_reg_1432_pp0_iter10_reg;
reg   [63:0] zext_ln118_16_reg_1432_pp0_iter11_reg;
reg   [63:0] zext_ln118_16_reg_1432_pp0_iter12_reg;
reg   [63:0] zext_ln118_16_reg_1432_pp0_iter13_reg;
reg   [63:0] zext_ln118_16_reg_1432_pp0_iter14_reg;
reg   [63:0] zext_ln118_16_reg_1432_pp0_iter15_reg;
reg   [63:0] zext_ln118_16_reg_1432_pp0_iter16_reg;
wire   [63:0] zext_ln118_fu_1084_p1;
reg   [63:0] zext_ln118_reg_1448;
reg   [63:0] zext_ln118_reg_1448_pp0_iter10_reg;
reg   [63:0] zext_ln118_reg_1448_pp0_iter11_reg;
reg   [63:0] zext_ln118_reg_1448_pp0_iter12_reg;
reg   [63:0] zext_ln118_reg_1448_pp0_iter13_reg;
reg   [63:0] zext_ln118_reg_1448_pp0_iter14_reg;
reg   [63:0] zext_ln118_reg_1448_pp0_iter15_reg;
reg   [63:0] zext_ln118_reg_1448_pp0_iter16_reg;
reg   [31:0] Stage4_R_load_reg_1464;
reg   [31:0] Stage4_I_load_reg_1470;
reg   [31:0] t_R_4_reg_1476;
reg   [31:0] t_I_4_reg_1482;
reg   [31:0] Stage4_R_1_load_reg_1488;
reg   [31:0] Stage4_I_1_load_reg_1494;
reg   [31:0] t_R_4_1_reg_1500;
reg   [31:0] t_I_4_1_reg_1506;
reg   [31:0] Stage4_R_2_load_reg_1512;
reg   [31:0] Stage4_I_2_load_reg_1518;
reg   [31:0] t_R_4_2_reg_1524;
reg   [31:0] t_I_4_2_reg_1530;
reg   [31:0] Stage4_R_3_load_reg_1536;
reg   [31:0] Stage4_I_3_load_reg_1542;
reg   [31:0] t_R_4_3_reg_1548;
reg   [31:0] t_I_4_3_reg_1554;
reg   [31:0] sub27_i4_reg_1560;
reg   [31:0] sub30_i4_reg_1565;
reg   [31:0] add33_i4_reg_1570;
reg   [31:0] add33_i4_reg_1570_pp0_iter16_reg;
reg   [31:0] add36_i4_reg_1575;
reg   [31:0] add36_i4_reg_1575_pp0_iter16_reg;
reg   [31:0] sub27_i4_1_reg_1580;
reg   [31:0] sub30_i4_1_reg_1585;
reg   [31:0] add33_i4_1_reg_1590;
reg   [31:0] add33_i4_1_reg_1590_pp0_iter16_reg;
reg   [31:0] add36_i4_1_reg_1595;
reg   [31:0] add36_i4_1_reg_1595_pp0_iter16_reg;
reg   [31:0] sub27_i4_2_reg_1600;
reg   [31:0] sub30_i4_2_reg_1605;
reg   [31:0] add33_i4_2_reg_1610;
reg   [31:0] add33_i4_2_reg_1610_pp0_iter16_reg;
reg   [31:0] add36_i4_2_reg_1615;
reg   [31:0] add36_i4_2_reg_1615_pp0_iter16_reg;
reg   [31:0] sub27_i4_3_reg_1620;
reg   [31:0] sub30_i4_3_reg_1625;
reg   [31:0] add33_i4_3_reg_1630;
reg   [31:0] add33_i4_3_reg_1630_pp0_iter16_reg;
reg   [31:0] add36_i4_3_reg_1635;
reg   [31:0] add36_i4_3_reg_1635_pp0_iter16_reg;
wire   [63:0] zext_ln113_4_fu_788_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln113_5_fu_878_p1;
wire   [63:0] zext_ln113_6_fu_946_p1;
wire   [63:0] zext_ln113_7_fu_1014_p1;
reg   [9:0] i_8_0_fu_96;
wire   [9:0] add_ln109_fu_1058_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_8_0_load;
wire   [3:0] empty_39_fu_776_p1;
wire   [8:0] shl_ln113_4_fu_780_p3;
wire   [4:0] tmp_4_fu_794_p4;
wire   [8:0] and_ln115_2_fu_804_p3;
wire   [9:0] zext_ln115_fu_812_p1;
wire   [9:0] add_ln115_9_fu_816_p2;
wire   [9:0] add_ln116_8_fu_822_p2;
wire   [7:0] lshr_ln120_8_fu_838_p4;
wire   [8:0] empty_38_fu_772_p1;
wire   [8:0] or_ln109_8_fu_854_p2;
wire   [3:0] or_ln109_fu_864_p2;
wire   [8:0] shl_ln113_5_fu_870_p3;
wire   [9:0] zext_ln109_8_fu_860_p1;
wire   [9:0] add_ln115_10_fu_884_p2;
wire   [9:0] add_ln116_9_fu_890_p2;
wire   [7:0] lshr_ln120_9_fu_906_p4;
wire   [8:0] or_ln109_9_fu_922_p2;
wire   [3:0] or_ln109_21_fu_932_p2;
wire   [8:0] shl_ln113_6_fu_938_p3;
wire   [9:0] zext_ln109_9_fu_928_p1;
wire   [9:0] add_ln115_11_fu_952_p2;
wire   [9:0] add_ln116_10_fu_958_p2;
wire   [7:0] lshr_ln120_s_fu_974_p4;
wire   [8:0] or_ln109_10_fu_990_p2;
wire   [3:0] or_ln109_22_fu_1000_p2;
wire   [8:0] shl_ln113_7_fu_1006_p3;
wire   [9:0] zext_ln109_fu_996_p1;
wire   [9:0] add_ln115_12_fu_1020_p2;
wire   [9:0] add_ln116_11_fu_1026_p2;
wire   [7:0] lshr_ln120_10_fu_1042_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
wire    ap_enable_operation_333;
reg    ap_enable_state17_pp0_iter16_stage0;
wire    ap_enable_operation_351;
reg    ap_enable_state18_pp0_iter17_stage0;
wire    ap_enable_operation_335;
wire    ap_enable_operation_353;
wire    ap_enable_operation_337;
wire    ap_enable_operation_355;
wire    ap_enable_operation_339;
wire    ap_enable_operation_357;
wire    ap_enable_operation_341;
wire    ap_enable_operation_359;
wire    ap_enable_operation_343;
wire    ap_enable_operation_361;
wire    ap_enable_operation_345;
wire    ap_enable_operation_363;
wire    ap_enable_operation_347;
wire    ap_enable_operation_365;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln109_fu_766_p2 == 1'd0))) begin
            i_8_0_fu_96 <= add_ln109_fu_1058_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_8_0_fu_96 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_I_1_load_1_reg_1266 <= Stage4_I_1_q1;
        Stage4_I_2_load_1_reg_1290 <= Stage4_I_2_q1;
        Stage4_I_3_load_1_reg_1314 <= Stage4_I_3_q1;
        Stage4_I_load_1_reg_1242 <= Stage4_I_q1;
        Stage4_R_1_load_1_reg_1260 <= Stage4_R_1_q1;
        Stage4_R_2_load_1_reg_1284 <= Stage4_R_2_q1;
        Stage4_R_3_load_1_reg_1308 <= Stage4_R_3_q1;
        Stage4_R_load_1_reg_1236 <= Stage4_R_q1;
        W_imag_load_4_reg_1230 <= W_imag_q3;
        W_imag_load_5_reg_1254 <= W_imag_q2;
        W_imag_load_6_reg_1278 <= W_imag_q1;
        W_imag_load_7_reg_1302 <= W_imag_q0;
        W_real_load_4_reg_1224 <= W_real_q3;
        W_real_load_5_reg_1248 <= W_real_q2;
        W_real_load_6_reg_1272 <= W_real_q1;
        W_real_load_7_reg_1296 <= W_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        Stage4_I_1_load_reg_1494 <= Stage4_I_1_q0;
        Stage4_I_2_load_reg_1518 <= Stage4_I_2_q0;
        Stage4_I_3_load_reg_1542 <= Stage4_I_3_q0;
        Stage4_I_load_reg_1470 <= Stage4_I_q0;
        Stage4_R_1_load_reg_1488 <= Stage4_R_1_q0;
        Stage4_R_2_load_reg_1512 <= Stage4_R_2_q0;
        Stage4_R_3_load_reg_1536 <= Stage4_R_3_q0;
        Stage4_R_load_reg_1464 <= Stage4_R_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add33_i4_1_reg_1590 <= grp_fu_684_p_dout0;
        add33_i4_1_reg_1590_pp0_iter16_reg <= add33_i4_1_reg_1590;
        add33_i4_2_reg_1610 <= grp_fu_700_p_dout0;
        add33_i4_2_reg_1610_pp0_iter16_reg <= add33_i4_2_reg_1610;
        add33_i4_3_reg_1630 <= grp_fu_716_p_dout0;
        add33_i4_3_reg_1630_pp0_iter16_reg <= add33_i4_3_reg_1630;
        add33_i4_reg_1570 <= grp_fu_668_p_dout0;
        add33_i4_reg_1570_pp0_iter16_reg <= add33_i4_reg_1570;
        add36_i4_1_reg_1595 <= grp_fu_688_p_dout0;
        add36_i4_1_reg_1595_pp0_iter16_reg <= add36_i4_1_reg_1595;
        add36_i4_2_reg_1615 <= grp_fu_704_p_dout0;
        add36_i4_2_reg_1615_pp0_iter16_reg <= add36_i4_2_reg_1615;
        add36_i4_3_reg_1635 <= grp_fu_720_p_dout0;
        add36_i4_3_reg_1635_pp0_iter16_reg <= add36_i4_3_reg_1635;
        add36_i4_reg_1575 <= grp_fu_672_p_dout0;
        add36_i4_reg_1575_pp0_iter16_reg <= add36_i4_reg_1575;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        lshr_ln118_10_reg_1141_pp0_iter2_reg <= lshr_ln118_10_reg_1141_pp0_iter1_reg;
        lshr_ln118_10_reg_1141_pp0_iter3_reg <= lshr_ln118_10_reg_1141_pp0_iter2_reg;
        lshr_ln118_10_reg_1141_pp0_iter4_reg <= lshr_ln118_10_reg_1141_pp0_iter3_reg;
        lshr_ln118_10_reg_1141_pp0_iter5_reg <= lshr_ln118_10_reg_1141_pp0_iter4_reg;
        lshr_ln118_10_reg_1141_pp0_iter6_reg <= lshr_ln118_10_reg_1141_pp0_iter5_reg;
        lshr_ln118_10_reg_1141_pp0_iter7_reg <= lshr_ln118_10_reg_1141_pp0_iter6_reg;
        lshr_ln118_10_reg_1141_pp0_iter8_reg <= lshr_ln118_10_reg_1141_pp0_iter7_reg;
        lshr_ln118_11_reg_1172_pp0_iter2_reg <= lshr_ln118_11_reg_1172_pp0_iter1_reg;
        lshr_ln118_11_reg_1172_pp0_iter3_reg <= lshr_ln118_11_reg_1172_pp0_iter2_reg;
        lshr_ln118_11_reg_1172_pp0_iter4_reg <= lshr_ln118_11_reg_1172_pp0_iter3_reg;
        lshr_ln118_11_reg_1172_pp0_iter5_reg <= lshr_ln118_11_reg_1172_pp0_iter4_reg;
        lshr_ln118_11_reg_1172_pp0_iter6_reg <= lshr_ln118_11_reg_1172_pp0_iter5_reg;
        lshr_ln118_11_reg_1172_pp0_iter7_reg <= lshr_ln118_11_reg_1172_pp0_iter6_reg;
        lshr_ln118_11_reg_1172_pp0_iter8_reg <= lshr_ln118_11_reg_1172_pp0_iter7_reg;
        lshr_ln118_12_reg_1203_pp0_iter2_reg <= lshr_ln118_12_reg_1203_pp0_iter1_reg;
        lshr_ln118_12_reg_1203_pp0_iter3_reg <= lshr_ln118_12_reg_1203_pp0_iter2_reg;
        lshr_ln118_12_reg_1203_pp0_iter4_reg <= lshr_ln118_12_reg_1203_pp0_iter3_reg;
        lshr_ln118_12_reg_1203_pp0_iter5_reg <= lshr_ln118_12_reg_1203_pp0_iter4_reg;
        lshr_ln118_12_reg_1203_pp0_iter6_reg <= lshr_ln118_12_reg_1203_pp0_iter5_reg;
        lshr_ln118_12_reg_1203_pp0_iter7_reg <= lshr_ln118_12_reg_1203_pp0_iter6_reg;
        lshr_ln118_12_reg_1203_pp0_iter8_reg <= lshr_ln118_12_reg_1203_pp0_iter7_reg;
        lshr_ln118_4_reg_1110_pp0_iter2_reg <= lshr_ln118_4_reg_1110_pp0_iter1_reg;
        lshr_ln118_4_reg_1110_pp0_iter3_reg <= lshr_ln118_4_reg_1110_pp0_iter2_reg;
        lshr_ln118_4_reg_1110_pp0_iter4_reg <= lshr_ln118_4_reg_1110_pp0_iter3_reg;
        lshr_ln118_4_reg_1110_pp0_iter5_reg <= lshr_ln118_4_reg_1110_pp0_iter4_reg;
        lshr_ln118_4_reg_1110_pp0_iter6_reg <= lshr_ln118_4_reg_1110_pp0_iter5_reg;
        lshr_ln118_4_reg_1110_pp0_iter7_reg <= lshr_ln118_4_reg_1110_pp0_iter6_reg;
        lshr_ln118_4_reg_1110_pp0_iter8_reg <= lshr_ln118_4_reg_1110_pp0_iter7_reg;
        mul22_i3_1_reg_1340 <= grp_fu_740_p_dout0;
        mul22_i3_2_reg_1360 <= grp_fu_756_p_dout0;
        mul22_i3_3_reg_1380 <= grp_fu_772_p_dout0;
        mul22_i3_reg_1320 <= grp_fu_724_p_dout0;
        mul23_i4_1_reg_1345 <= grp_fu_744_p_dout0;
        mul23_i4_2_reg_1365 <= grp_fu_760_p_dout0;
        mul23_i4_3_reg_1385 <= grp_fu_776_p_dout0;
        mul23_i4_reg_1325 <= grp_fu_728_p_dout0;
        mul24_i3_1_reg_1350 <= grp_fu_748_p_dout0;
        mul24_i3_2_reg_1370 <= grp_fu_764_p_dout0;
        mul24_i3_3_reg_1390 <= grp_fu_780_p_dout0;
        mul24_i3_reg_1330 <= grp_fu_732_p_dout0;
        mul25_i4_1_reg_1355 <= grp_fu_752_p_dout0;
        mul25_i4_2_reg_1375 <= grp_fu_768_p_dout0;
        mul25_i4_3_reg_1395 <= grp_fu_784_p_dout0;
        mul25_i4_reg_1335 <= grp_fu_736_p_dout0;
        sub27_i4_1_reg_1580 <= grp_fu_676_p_dout0;
        sub27_i4_2_reg_1600 <= grp_fu_692_p_dout0;
        sub27_i4_3_reg_1620 <= grp_fu_708_p_dout0;
        sub27_i4_reg_1560 <= grp_fu_660_p_dout0;
        sub30_i4_1_reg_1585 <= grp_fu_680_p_dout0;
        sub30_i4_2_reg_1605 <= grp_fu_696_p_dout0;
        sub30_i4_3_reg_1625 <= grp_fu_712_p_dout0;
        sub30_i4_reg_1565 <= grp_fu_664_p_dout0;
        t_I_4_1_reg_1506 <= grp_fu_640_p_dout0;
        t_I_4_2_reg_1530 <= grp_fu_648_p_dout0;
        t_I_4_3_reg_1554 <= grp_fu_656_p_dout0;
        t_I_4_reg_1482 <= grp_fu_632_p_dout0;
        t_R_4_1_reg_1500 <= grp_fu_636_p_dout0;
        t_R_4_2_reg_1524 <= grp_fu_644_p_dout0;
        t_R_4_3_reg_1548 <= grp_fu_652_p_dout0;
        t_R_4_reg_1476 <= grp_fu_628_p_dout0;
        zext_ln118_14_reg_1400[7 : 0] <= zext_ln118_14_fu_1069_p1[7 : 0];
        zext_ln118_14_reg_1400_pp0_iter10_reg[7 : 0] <= zext_ln118_14_reg_1400[7 : 0];
        zext_ln118_14_reg_1400_pp0_iter11_reg[7 : 0] <= zext_ln118_14_reg_1400_pp0_iter10_reg[7 : 0];
        zext_ln118_14_reg_1400_pp0_iter12_reg[7 : 0] <= zext_ln118_14_reg_1400_pp0_iter11_reg[7 : 0];
        zext_ln118_14_reg_1400_pp0_iter13_reg[7 : 0] <= zext_ln118_14_reg_1400_pp0_iter12_reg[7 : 0];
        zext_ln118_14_reg_1400_pp0_iter14_reg[7 : 0] <= zext_ln118_14_reg_1400_pp0_iter13_reg[7 : 0];
        zext_ln118_14_reg_1400_pp0_iter15_reg[7 : 0] <= zext_ln118_14_reg_1400_pp0_iter14_reg[7 : 0];
        zext_ln118_14_reg_1400_pp0_iter16_reg[7 : 0] <= zext_ln118_14_reg_1400_pp0_iter15_reg[7 : 0];
        zext_ln118_15_reg_1416[7 : 0] <= zext_ln118_15_fu_1074_p1[7 : 0];
        zext_ln118_15_reg_1416_pp0_iter10_reg[7 : 0] <= zext_ln118_15_reg_1416[7 : 0];
        zext_ln118_15_reg_1416_pp0_iter11_reg[7 : 0] <= zext_ln118_15_reg_1416_pp0_iter10_reg[7 : 0];
        zext_ln118_15_reg_1416_pp0_iter12_reg[7 : 0] <= zext_ln118_15_reg_1416_pp0_iter11_reg[7 : 0];
        zext_ln118_15_reg_1416_pp0_iter13_reg[7 : 0] <= zext_ln118_15_reg_1416_pp0_iter12_reg[7 : 0];
        zext_ln118_15_reg_1416_pp0_iter14_reg[7 : 0] <= zext_ln118_15_reg_1416_pp0_iter13_reg[7 : 0];
        zext_ln118_15_reg_1416_pp0_iter15_reg[7 : 0] <= zext_ln118_15_reg_1416_pp0_iter14_reg[7 : 0];
        zext_ln118_15_reg_1416_pp0_iter16_reg[7 : 0] <= zext_ln118_15_reg_1416_pp0_iter15_reg[7 : 0];
        zext_ln118_16_reg_1432[7 : 0] <= zext_ln118_16_fu_1079_p1[7 : 0];
        zext_ln118_16_reg_1432_pp0_iter10_reg[7 : 0] <= zext_ln118_16_reg_1432[7 : 0];
        zext_ln118_16_reg_1432_pp0_iter11_reg[7 : 0] <= zext_ln118_16_reg_1432_pp0_iter10_reg[7 : 0];
        zext_ln118_16_reg_1432_pp0_iter12_reg[7 : 0] <= zext_ln118_16_reg_1432_pp0_iter11_reg[7 : 0];
        zext_ln118_16_reg_1432_pp0_iter13_reg[7 : 0] <= zext_ln118_16_reg_1432_pp0_iter12_reg[7 : 0];
        zext_ln118_16_reg_1432_pp0_iter14_reg[7 : 0] <= zext_ln118_16_reg_1432_pp0_iter13_reg[7 : 0];
        zext_ln118_16_reg_1432_pp0_iter15_reg[7 : 0] <= zext_ln118_16_reg_1432_pp0_iter14_reg[7 : 0];
        zext_ln118_16_reg_1432_pp0_iter16_reg[7 : 0] <= zext_ln118_16_reg_1432_pp0_iter15_reg[7 : 0];
        zext_ln118_reg_1448[7 : 0] <= zext_ln118_fu_1084_p1[7 : 0];
        zext_ln118_reg_1448_pp0_iter10_reg[7 : 0] <= zext_ln118_reg_1448[7 : 0];
        zext_ln118_reg_1448_pp0_iter11_reg[7 : 0] <= zext_ln118_reg_1448_pp0_iter10_reg[7 : 0];
        zext_ln118_reg_1448_pp0_iter12_reg[7 : 0] <= zext_ln118_reg_1448_pp0_iter11_reg[7 : 0];
        zext_ln118_reg_1448_pp0_iter13_reg[7 : 0] <= zext_ln118_reg_1448_pp0_iter12_reg[7 : 0];
        zext_ln118_reg_1448_pp0_iter14_reg[7 : 0] <= zext_ln118_reg_1448_pp0_iter13_reg[7 : 0];
        zext_ln118_reg_1448_pp0_iter15_reg[7 : 0] <= zext_ln118_reg_1448_pp0_iter14_reg[7 : 0];
        zext_ln118_reg_1448_pp0_iter16_reg[7 : 0] <= zext_ln118_reg_1448_pp0_iter15_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter10_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter9_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter11_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter10_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter12_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter11_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter13_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter12_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter14_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter13_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter15_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter14_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter2_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter1_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter3_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter2_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter4_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter3_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter5_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter4_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter6_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter5_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter7_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter6_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter8_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter7_reg[7 : 0];
        zext_ln120_10_reg_1146_pp0_iter9_reg[7 : 0] <= zext_ln120_10_reg_1146_pp0_iter8_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter10_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter9_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter11_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter10_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter12_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter11_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter13_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter12_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter14_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter13_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter15_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter14_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter2_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter1_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter3_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter2_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter4_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter3_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter5_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter4_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter6_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter5_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter7_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter6_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter8_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter7_reg[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter9_reg[7 : 0] <= zext_ln120_11_reg_1177_pp0_iter8_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter10_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter9_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter11_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter10_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter12_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter11_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter13_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter12_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter14_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter13_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter15_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter14_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter2_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter1_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter3_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter2_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter4_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter3_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter5_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter4_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter6_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter5_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter7_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter6_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter8_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter7_reg[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter9_reg[7 : 0] <= zext_ln120_12_reg_1208_pp0_iter8_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter10_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter9_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter11_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter10_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter12_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter11_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter13_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter12_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter14_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter13_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter15_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter14_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter2_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter1_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter3_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter2_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter4_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter3_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter5_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter4_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter6_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter5_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter7_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter6_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter8_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter7_reg[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter9_reg[7 : 0] <= zext_ln120_9_reg_1115_pp0_iter8_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        lshr_ln118_10_reg_1141_pp0_iter1_reg <= lshr_ln118_10_reg_1141;
        lshr_ln118_11_reg_1172_pp0_iter1_reg <= lshr_ln118_11_reg_1172;
        lshr_ln118_12_reg_1203_pp0_iter1_reg <= lshr_ln118_12_reg_1203;
        lshr_ln118_4_reg_1110_pp0_iter1_reg <= lshr_ln118_4_reg_1110;
        zext_ln120_10_reg_1146_pp0_iter1_reg[7 : 0] <= zext_ln120_10_reg_1146[7 : 0];
        zext_ln120_11_reg_1177_pp0_iter1_reg[7 : 0] <= zext_ln120_11_reg_1177[7 : 0];
        zext_ln120_12_reg_1208_pp0_iter1_reg[7 : 0] <= zext_ln120_12_reg_1208[7 : 0];
        zext_ln120_9_reg_1115_pp0_iter1_reg[7 : 0] <= zext_ln120_9_reg_1115[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_766_p2 == 1'd0))) begin
        lshr_ln118_10_reg_1141 <= {{add_ln115_10_fu_884_p2[9:2]}};
        lshr_ln118_11_reg_1172 <= {{add_ln115_11_fu_952_p2[9:2]}};
        lshr_ln118_12_reg_1203 <= {{add_ln115_12_fu_1020_p2[9:2]}};
        lshr_ln118_4_reg_1110 <= {{add_ln115_9_fu_816_p2[9:2]}};
        zext_ln120_10_reg_1146[7 : 0] <= zext_ln120_10_fu_916_p1[7 : 0];
        zext_ln120_11_reg_1177[7 : 0] <= zext_ln120_11_fu_984_p1[7 : 0];
        zext_ln120_12_reg_1208[7 : 0] <= zext_ln120_12_fu_1052_p1[7 : 0];
        zext_ln120_9_reg_1115[7 : 0] <= zext_ln120_9_fu_848_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_I_1_ce0 = 1'b1;
    end else begin
        Stage4_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_I_1_ce1 = 1'b1;
    end else begin
        Stage4_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_I_2_ce0 = 1'b1;
    end else begin
        Stage4_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_I_2_ce1 = 1'b1;
    end else begin
        Stage4_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_I_3_ce0 = 1'b1;
    end else begin
        Stage4_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_I_3_ce1 = 1'b1;
    end else begin
        Stage4_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_I_ce0 = 1'b1;
    end else begin
        Stage4_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_I_ce1 = 1'b1;
    end else begin
        Stage4_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_R_1_ce0 = 1'b1;
    end else begin
        Stage4_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_R_1_ce1 = 1'b1;
    end else begin
        Stage4_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_R_2_ce0 = 1'b1;
    end else begin
        Stage4_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_R_2_ce1 = 1'b1;
    end else begin
        Stage4_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_R_3_ce0 = 1'b1;
    end else begin
        Stage4_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_R_3_ce1 = 1'b1;
    end else begin
        Stage4_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage4_R_ce0 = 1'b1;
    end else begin
        Stage4_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage4_R_ce1 = 1'b1;
    end else begin
        Stage4_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_1_ce0 = 1'b1;
    end else begin
        Stage5_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_1_ce1 = 1'b1;
    end else begin
        Stage5_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_1_we0 = 1'b1;
    end else begin
        Stage5_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_1_we1 = 1'b1;
    end else begin
        Stage5_I_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_2_ce0 = 1'b1;
    end else begin
        Stage5_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_2_ce1 = 1'b1;
    end else begin
        Stage5_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_2_we0 = 1'b1;
    end else begin
        Stage5_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_2_we1 = 1'b1;
    end else begin
        Stage5_I_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_3_ce0 = 1'b1;
    end else begin
        Stage5_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_3_ce1 = 1'b1;
    end else begin
        Stage5_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_3_we0 = 1'b1;
    end else begin
        Stage5_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_3_we1 = 1'b1;
    end else begin
        Stage5_I_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_ce0 = 1'b1;
    end else begin
        Stage5_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_ce1 = 1'b1;
    end else begin
        Stage5_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_I_we0 = 1'b1;
    end else begin
        Stage5_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_I_we1 = 1'b1;
    end else begin
        Stage5_I_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_1_ce0 = 1'b1;
    end else begin
        Stage5_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_1_ce1 = 1'b1;
    end else begin
        Stage5_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_1_we0 = 1'b1;
    end else begin
        Stage5_R_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_1_we1 = 1'b1;
    end else begin
        Stage5_R_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_2_ce0 = 1'b1;
    end else begin
        Stage5_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_2_ce1 = 1'b1;
    end else begin
        Stage5_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_2_we0 = 1'b1;
    end else begin
        Stage5_R_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_2_we1 = 1'b1;
    end else begin
        Stage5_R_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_3_ce0 = 1'b1;
    end else begin
        Stage5_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_3_ce1 = 1'b1;
    end else begin
        Stage5_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_3_we0 = 1'b1;
    end else begin
        Stage5_R_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_3_we1 = 1'b1;
    end else begin
        Stage5_R_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_ce0 = 1'b1;
    end else begin
        Stage5_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_ce1 = 1'b1;
    end else begin
        Stage5_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        Stage5_R_we0 = 1'b1;
    end else begin
        Stage5_R_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage5_R_we1 = 1'b1;
    end else begin
        Stage5_R_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce0 = 1'b1;
    end else begin
        W_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce1 = 1'b1;
    end else begin
        W_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce2 = 1'b1;
    end else begin
        W_imag_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce3 = 1'b1;
    end else begin
        W_imag_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce0 = 1'b1;
    end else begin
        W_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce1 = 1'b1;
    end else begin
        W_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce2 = 1'b1;
    end else begin
        W_real_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce3 = 1'b1;
    end else begin
        W_real_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln109_fu_766_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_8_0_load = 10'd0;
    end else begin
        ap_sig_allocacmp_i_8_0_load = i_8_0_fu_96;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Stage4_I_1_address0 = zext_ln118_15_fu_1074_p1;

assign Stage4_I_1_address1 = zext_ln120_10_fu_916_p1;

assign Stage4_I_2_address0 = zext_ln118_16_fu_1079_p1;

assign Stage4_I_2_address1 = zext_ln120_11_fu_984_p1;

assign Stage4_I_3_address0 = zext_ln118_fu_1084_p1;

assign Stage4_I_3_address1 = zext_ln120_12_fu_1052_p1;

assign Stage4_I_address0 = zext_ln118_14_fu_1069_p1;

assign Stage4_I_address1 = zext_ln120_9_fu_848_p1;

assign Stage4_R_1_address0 = zext_ln118_15_fu_1074_p1;

assign Stage4_R_1_address1 = zext_ln120_10_fu_916_p1;

assign Stage4_R_2_address0 = zext_ln118_16_fu_1079_p1;

assign Stage4_R_2_address1 = zext_ln120_11_fu_984_p1;

assign Stage4_R_3_address0 = zext_ln118_fu_1084_p1;

assign Stage4_R_3_address1 = zext_ln120_12_fu_1052_p1;

assign Stage4_R_address0 = zext_ln118_14_fu_1069_p1;

assign Stage4_R_address1 = zext_ln120_9_fu_848_p1;

assign Stage5_I_1_address0 = zext_ln118_15_reg_1416_pp0_iter16_reg;

assign Stage5_I_1_address1 = zext_ln120_10_reg_1146_pp0_iter15_reg;

assign Stage5_I_1_d0 = add36_i4_1_reg_1595_pp0_iter16_reg;

assign Stage5_I_1_d1 = sub30_i4_1_reg_1585;

assign Stage5_I_2_address0 = zext_ln118_16_reg_1432_pp0_iter16_reg;

assign Stage5_I_2_address1 = zext_ln120_11_reg_1177_pp0_iter15_reg;

assign Stage5_I_2_d0 = add36_i4_2_reg_1615_pp0_iter16_reg;

assign Stage5_I_2_d1 = sub30_i4_2_reg_1605;

assign Stage5_I_3_address0 = zext_ln118_reg_1448_pp0_iter16_reg;

assign Stage5_I_3_address1 = zext_ln120_12_reg_1208_pp0_iter15_reg;

assign Stage5_I_3_d0 = add36_i4_3_reg_1635_pp0_iter16_reg;

assign Stage5_I_3_d1 = sub30_i4_3_reg_1625;

assign Stage5_I_address0 = zext_ln118_14_reg_1400_pp0_iter16_reg;

assign Stage5_I_address1 = zext_ln120_9_reg_1115_pp0_iter15_reg;

assign Stage5_I_d0 = add36_i4_reg_1575_pp0_iter16_reg;

assign Stage5_I_d1 = sub30_i4_reg_1565;

assign Stage5_R_1_address0 = zext_ln118_15_reg_1416_pp0_iter16_reg;

assign Stage5_R_1_address1 = zext_ln120_10_reg_1146_pp0_iter15_reg;

assign Stage5_R_1_d0 = add33_i4_1_reg_1590_pp0_iter16_reg;

assign Stage5_R_1_d1 = sub27_i4_1_reg_1580;

assign Stage5_R_2_address0 = zext_ln118_16_reg_1432_pp0_iter16_reg;

assign Stage5_R_2_address1 = zext_ln120_11_reg_1177_pp0_iter15_reg;

assign Stage5_R_2_d0 = add33_i4_2_reg_1610_pp0_iter16_reg;

assign Stage5_R_2_d1 = sub27_i4_2_reg_1600;

assign Stage5_R_3_address0 = zext_ln118_reg_1448_pp0_iter16_reg;

assign Stage5_R_3_address1 = zext_ln120_12_reg_1208_pp0_iter15_reg;

assign Stage5_R_3_d0 = add33_i4_3_reg_1630_pp0_iter16_reg;

assign Stage5_R_3_d1 = sub27_i4_3_reg_1620;

assign Stage5_R_address0 = zext_ln118_14_reg_1400_pp0_iter16_reg;

assign Stage5_R_address1 = zext_ln120_9_reg_1115_pp0_iter15_reg;

assign Stage5_R_d0 = add33_i4_reg_1570_pp0_iter16_reg;

assign Stage5_R_d1 = sub27_i4_reg_1560;

assign W_imag_address0 = zext_ln113_7_fu_1014_p1;

assign W_imag_address1 = zext_ln113_6_fu_946_p1;

assign W_imag_address2 = zext_ln113_5_fu_878_p1;

assign W_imag_address3 = zext_ln113_4_fu_788_p1;

assign W_real_address0 = zext_ln113_7_fu_1014_p1;

assign W_real_address1 = zext_ln113_6_fu_946_p1;

assign W_real_address2 = zext_ln113_5_fu_878_p1;

assign W_real_address3 = zext_ln113_4_fu_788_p1;

assign add_ln109_fu_1058_p2 = (ap_sig_allocacmp_i_8_0_load + 10'd4);

assign add_ln115_10_fu_884_p2 = (zext_ln115_fu_812_p1 + zext_ln109_8_fu_860_p1);

assign add_ln115_11_fu_952_p2 = (zext_ln115_fu_812_p1 + zext_ln109_9_fu_928_p1);

assign add_ln115_12_fu_1020_p2 = (zext_ln115_fu_812_p1 + zext_ln109_fu_996_p1);

assign add_ln115_9_fu_816_p2 = (zext_ln115_fu_812_p1 + ap_sig_allocacmp_i_8_0_load);

assign add_ln116_10_fu_958_p2 = (add_ln115_11_fu_952_p2 + 10'd16);

assign add_ln116_11_fu_1026_p2 = (add_ln115_12_fu_1020_p2 + 10'd16);

assign add_ln116_8_fu_822_p2 = (add_ln115_9_fu_816_p2 + 10'd16);

assign add_ln116_9_fu_890_p2 = (add_ln115_10_fu_884_p2 + 10'd16);

assign and_ln115_2_fu_804_p3 = {{tmp_4_fu_794_p4}, {4'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_operation_333 = (1'b1 == 1'b1);

assign ap_enable_operation_335 = (1'b1 == 1'b1);

assign ap_enable_operation_337 = (1'b1 == 1'b1);

assign ap_enable_operation_339 = (1'b1 == 1'b1);

assign ap_enable_operation_341 = (1'b1 == 1'b1);

assign ap_enable_operation_343 = (1'b1 == 1'b1);

assign ap_enable_operation_345 = (1'b1 == 1'b1);

assign ap_enable_operation_347 = (1'b1 == 1'b1);

assign ap_enable_operation_351 = (1'b1 == 1'b1);

assign ap_enable_operation_353 = (1'b1 == 1'b1);

assign ap_enable_operation_355 = (1'b1 == 1'b1);

assign ap_enable_operation_357 = (1'b1 == 1'b1);

assign ap_enable_operation_359 = (1'b1 == 1'b1);

assign ap_enable_operation_361 = (1'b1 == 1'b1);

assign ap_enable_operation_363 = (1'b1 == 1'b1);

assign ap_enable_operation_365 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state17_pp0_iter16_stage0 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state18_pp0_iter17_stage0 = ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_38_fu_772_p1 = ap_sig_allocacmp_i_8_0_load[8:0];

assign empty_39_fu_776_p1 = ap_sig_allocacmp_i_8_0_load[3:0];

assign grp_fu_628_p_ce = 1'b1;

assign grp_fu_628_p_din0 = mul22_i3_reg_1320;

assign grp_fu_628_p_din1 = mul23_i4_reg_1325;

assign grp_fu_628_p_opcode = 2'd1;

assign grp_fu_632_p_ce = 1'b1;

assign grp_fu_632_p_din0 = mul24_i3_reg_1330;

assign grp_fu_632_p_din1 = mul25_i4_reg_1335;

assign grp_fu_632_p_opcode = 2'd0;

assign grp_fu_636_p_ce = 1'b1;

assign grp_fu_636_p_din0 = mul22_i3_1_reg_1340;

assign grp_fu_636_p_din1 = mul23_i4_1_reg_1345;

assign grp_fu_636_p_opcode = 2'd1;

assign grp_fu_640_p_ce = 1'b1;

assign grp_fu_640_p_din0 = mul24_i3_1_reg_1350;

assign grp_fu_640_p_din1 = mul25_i4_1_reg_1355;

assign grp_fu_640_p_opcode = 2'd0;

assign grp_fu_644_p_ce = 1'b1;

assign grp_fu_644_p_din0 = mul22_i3_2_reg_1360;

assign grp_fu_644_p_din1 = mul23_i4_2_reg_1365;

assign grp_fu_644_p_opcode = 2'd1;

assign grp_fu_648_p_ce = 1'b1;

assign grp_fu_648_p_din0 = mul24_i3_2_reg_1370;

assign grp_fu_648_p_din1 = mul25_i4_2_reg_1375;

assign grp_fu_648_p_opcode = 2'd0;

assign grp_fu_652_p_ce = 1'b1;

assign grp_fu_652_p_din0 = mul22_i3_3_reg_1380;

assign grp_fu_652_p_din1 = mul23_i4_3_reg_1385;

assign grp_fu_652_p_opcode = 2'd1;

assign grp_fu_656_p_ce = 1'b1;

assign grp_fu_656_p_din0 = mul24_i3_3_reg_1390;

assign grp_fu_656_p_din1 = mul25_i4_3_reg_1395;

assign grp_fu_656_p_opcode = 2'd0;

assign grp_fu_660_p_ce = 1'b1;

assign grp_fu_660_p_din0 = Stage4_R_load_reg_1464;

assign grp_fu_660_p_din1 = t_R_4_reg_1476;

assign grp_fu_660_p_opcode = 2'd1;

assign grp_fu_664_p_ce = 1'b1;

assign grp_fu_664_p_din0 = Stage4_I_load_reg_1470;

assign grp_fu_664_p_din1 = t_I_4_reg_1482;

assign grp_fu_664_p_opcode = 2'd1;

assign grp_fu_668_p_ce = 1'b1;

assign grp_fu_668_p_din0 = Stage4_R_load_reg_1464;

assign grp_fu_668_p_din1 = t_R_4_reg_1476;

assign grp_fu_668_p_opcode = 2'd0;

assign grp_fu_672_p_ce = 1'b1;

assign grp_fu_672_p_din0 = Stage4_I_load_reg_1470;

assign grp_fu_672_p_din1 = t_I_4_reg_1482;

assign grp_fu_672_p_opcode = 2'd0;

assign grp_fu_676_p_ce = 1'b1;

assign grp_fu_676_p_din0 = Stage4_R_1_load_reg_1488;

assign grp_fu_676_p_din1 = t_R_4_1_reg_1500;

assign grp_fu_676_p_opcode = 2'd1;

assign grp_fu_680_p_ce = 1'b1;

assign grp_fu_680_p_din0 = Stage4_I_1_load_reg_1494;

assign grp_fu_680_p_din1 = t_I_4_1_reg_1506;

assign grp_fu_680_p_opcode = 2'd1;

assign grp_fu_684_p_ce = 1'b1;

assign grp_fu_684_p_din0 = Stage4_R_1_load_reg_1488;

assign grp_fu_684_p_din1 = t_R_4_1_reg_1500;

assign grp_fu_684_p_opcode = 2'd0;

assign grp_fu_688_p_ce = 1'b1;

assign grp_fu_688_p_din0 = Stage4_I_1_load_reg_1494;

assign grp_fu_688_p_din1 = t_I_4_1_reg_1506;

assign grp_fu_688_p_opcode = 2'd0;

assign grp_fu_692_p_ce = 1'b1;

assign grp_fu_692_p_din0 = Stage4_R_2_load_reg_1512;

assign grp_fu_692_p_din1 = t_R_4_2_reg_1524;

assign grp_fu_692_p_opcode = 2'd1;

assign grp_fu_696_p_ce = 1'b1;

assign grp_fu_696_p_din0 = Stage4_I_2_load_reg_1518;

assign grp_fu_696_p_din1 = t_I_4_2_reg_1530;

assign grp_fu_696_p_opcode = 2'd1;

assign grp_fu_700_p_ce = 1'b1;

assign grp_fu_700_p_din0 = Stage4_R_2_load_reg_1512;

assign grp_fu_700_p_din1 = t_R_4_2_reg_1524;

assign grp_fu_700_p_opcode = 2'd0;

assign grp_fu_704_p_ce = 1'b1;

assign grp_fu_704_p_din0 = Stage4_I_2_load_reg_1518;

assign grp_fu_704_p_din1 = t_I_4_2_reg_1530;

assign grp_fu_704_p_opcode = 2'd0;

assign grp_fu_708_p_ce = 1'b1;

assign grp_fu_708_p_din0 = Stage4_R_3_load_reg_1536;

assign grp_fu_708_p_din1 = t_R_4_3_reg_1548;

assign grp_fu_708_p_opcode = 2'd1;

assign grp_fu_712_p_ce = 1'b1;

assign grp_fu_712_p_din0 = Stage4_I_3_load_reg_1542;

assign grp_fu_712_p_din1 = t_I_4_3_reg_1554;

assign grp_fu_712_p_opcode = 2'd1;

assign grp_fu_716_p_ce = 1'b1;

assign grp_fu_716_p_din0 = Stage4_R_3_load_reg_1536;

assign grp_fu_716_p_din1 = t_R_4_3_reg_1548;

assign grp_fu_716_p_opcode = 2'd0;

assign grp_fu_720_p_ce = 1'b1;

assign grp_fu_720_p_din0 = Stage4_I_3_load_reg_1542;

assign grp_fu_720_p_din1 = t_I_4_3_reg_1554;

assign grp_fu_720_p_opcode = 2'd0;

assign grp_fu_724_p_ce = 1'b1;

assign grp_fu_724_p_din0 = Stage4_R_load_1_reg_1236;

assign grp_fu_724_p_din1 = W_real_load_4_reg_1224;

assign grp_fu_728_p_ce = 1'b1;

assign grp_fu_728_p_din0 = Stage4_I_load_1_reg_1242;

assign grp_fu_728_p_din1 = W_imag_load_4_reg_1230;

assign grp_fu_732_p_ce = 1'b1;

assign grp_fu_732_p_din0 = Stage4_I_load_1_reg_1242;

assign grp_fu_732_p_din1 = W_real_load_4_reg_1224;

assign grp_fu_736_p_ce = 1'b1;

assign grp_fu_736_p_din0 = Stage4_R_load_1_reg_1236;

assign grp_fu_736_p_din1 = W_imag_load_4_reg_1230;

assign grp_fu_740_p_ce = 1'b1;

assign grp_fu_740_p_din0 = Stage4_R_1_load_1_reg_1260;

assign grp_fu_740_p_din1 = W_real_load_5_reg_1248;

assign grp_fu_744_p_ce = 1'b1;

assign grp_fu_744_p_din0 = Stage4_I_1_load_1_reg_1266;

assign grp_fu_744_p_din1 = W_imag_load_5_reg_1254;

assign grp_fu_748_p_ce = 1'b1;

assign grp_fu_748_p_din0 = Stage4_I_1_load_1_reg_1266;

assign grp_fu_748_p_din1 = W_real_load_5_reg_1248;

assign grp_fu_752_p_ce = 1'b1;

assign grp_fu_752_p_din0 = Stage4_R_1_load_1_reg_1260;

assign grp_fu_752_p_din1 = W_imag_load_5_reg_1254;

assign grp_fu_756_p_ce = 1'b1;

assign grp_fu_756_p_din0 = Stage4_R_2_load_1_reg_1284;

assign grp_fu_756_p_din1 = W_real_load_6_reg_1272;

assign grp_fu_760_p_ce = 1'b1;

assign grp_fu_760_p_din0 = Stage4_I_2_load_1_reg_1290;

assign grp_fu_760_p_din1 = W_imag_load_6_reg_1278;

assign grp_fu_764_p_ce = 1'b1;

assign grp_fu_764_p_din0 = Stage4_I_2_load_1_reg_1290;

assign grp_fu_764_p_din1 = W_real_load_6_reg_1272;

assign grp_fu_768_p_ce = 1'b1;

assign grp_fu_768_p_din0 = Stage4_R_2_load_1_reg_1284;

assign grp_fu_768_p_din1 = W_imag_load_6_reg_1278;

assign grp_fu_772_p_ce = 1'b1;

assign grp_fu_772_p_din0 = Stage4_R_3_load_1_reg_1308;

assign grp_fu_772_p_din1 = W_real_load_7_reg_1296;

assign grp_fu_776_p_ce = 1'b1;

assign grp_fu_776_p_din0 = Stage4_I_3_load_1_reg_1314;

assign grp_fu_776_p_din1 = W_imag_load_7_reg_1302;

assign grp_fu_780_p_ce = 1'b1;

assign grp_fu_780_p_din0 = Stage4_I_3_load_1_reg_1314;

assign grp_fu_780_p_din1 = W_real_load_7_reg_1296;

assign grp_fu_784_p_ce = 1'b1;

assign grp_fu_784_p_din0 = Stage4_R_3_load_1_reg_1308;

assign grp_fu_784_p_din1 = W_imag_load_7_reg_1302;

assign icmp_ln109_fu_766_p2 = ((ap_sig_allocacmp_i_8_0_load == 10'd512) ? 1'b1 : 1'b0);

assign lshr_ln120_10_fu_1042_p4 = {{add_ln116_11_fu_1026_p2[9:2]}};

assign lshr_ln120_8_fu_838_p4 = {{add_ln116_8_fu_822_p2[9:2]}};

assign lshr_ln120_9_fu_906_p4 = {{add_ln116_9_fu_890_p2[9:2]}};

assign lshr_ln120_s_fu_974_p4 = {{add_ln116_10_fu_958_p2[9:2]}};

assign or_ln109_10_fu_990_p2 = (empty_38_fu_772_p1 | 9'd3);

assign or_ln109_21_fu_932_p2 = (empty_39_fu_776_p1 | 4'd2);

assign or_ln109_22_fu_1000_p2 = (empty_39_fu_776_p1 | 4'd3);

assign or_ln109_8_fu_854_p2 = (empty_38_fu_772_p1 | 9'd1);

assign or_ln109_9_fu_922_p2 = (empty_38_fu_772_p1 | 9'd2);

assign or_ln109_fu_864_p2 = (empty_39_fu_776_p1 | 4'd1);

assign shl_ln113_4_fu_780_p3 = {{empty_39_fu_776_p1}, {5'd0}};

assign shl_ln113_5_fu_870_p3 = {{or_ln109_fu_864_p2}, {5'd0}};

assign shl_ln113_6_fu_938_p3 = {{or_ln109_21_fu_932_p2}, {5'd0}};

assign shl_ln113_7_fu_1006_p3 = {{or_ln109_22_fu_1000_p2}, {5'd0}};

assign tmp_4_fu_794_p4 = {{ap_sig_allocacmp_i_8_0_load[8:4]}};

assign zext_ln109_8_fu_860_p1 = or_ln109_8_fu_854_p2;

assign zext_ln109_9_fu_928_p1 = or_ln109_9_fu_922_p2;

assign zext_ln109_fu_996_p1 = or_ln109_10_fu_990_p2;

assign zext_ln113_4_fu_788_p1 = shl_ln113_4_fu_780_p3;

assign zext_ln113_5_fu_878_p1 = shl_ln113_5_fu_870_p3;

assign zext_ln113_6_fu_946_p1 = shl_ln113_6_fu_938_p3;

assign zext_ln113_7_fu_1014_p1 = shl_ln113_7_fu_1006_p3;

assign zext_ln115_fu_812_p1 = and_ln115_2_fu_804_p3;

assign zext_ln118_14_fu_1069_p1 = lshr_ln118_4_reg_1110_pp0_iter8_reg;

assign zext_ln118_15_fu_1074_p1 = lshr_ln118_10_reg_1141_pp0_iter8_reg;

assign zext_ln118_16_fu_1079_p1 = lshr_ln118_11_reg_1172_pp0_iter8_reg;

assign zext_ln118_fu_1084_p1 = lshr_ln118_12_reg_1203_pp0_iter8_reg;

assign zext_ln120_10_fu_916_p1 = lshr_ln120_9_fu_906_p4;

assign zext_ln120_11_fu_984_p1 = lshr_ln120_s_fu_974_p4;

assign zext_ln120_12_fu_1052_p1 = lshr_ln120_10_fu_1042_p4;

assign zext_ln120_9_fu_848_p1 = lshr_ln120_8_fu_838_p4;

always @ (posedge ap_clk) begin
    zext_ln120_9_reg_1115[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_9_reg_1115_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_10_reg_1146_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_11_reg_1177_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_12_reg_1208_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_14_reg_1400_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_15_reg_1416_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_16_reg_1432_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1448_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //fft_fft_exec_Pipeline_DFT_Loop12
