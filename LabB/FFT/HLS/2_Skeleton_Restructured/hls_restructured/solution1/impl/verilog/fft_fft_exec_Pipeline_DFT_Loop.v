// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_fft_exec_Pipeline_DFT_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Stage1_I_3_address0,
        Stage1_I_3_ce0,
        Stage1_I_3_we0,
        Stage1_I_3_d0,
        Stage1_I_3_address1,
        Stage1_I_3_ce1,
        Stage1_I_3_we1,
        Stage1_I_3_d1,
        Stage1_I_2_address0,
        Stage1_I_2_ce0,
        Stage1_I_2_we0,
        Stage1_I_2_d0,
        Stage1_I_2_address1,
        Stage1_I_2_ce1,
        Stage1_I_2_we1,
        Stage1_I_2_d1,
        Stage1_I_1_address0,
        Stage1_I_1_ce0,
        Stage1_I_1_we0,
        Stage1_I_1_d0,
        Stage1_I_1_address1,
        Stage1_I_1_ce1,
        Stage1_I_1_we1,
        Stage1_I_1_d1,
        Stage1_I_address0,
        Stage1_I_ce0,
        Stage1_I_we0,
        Stage1_I_d0,
        Stage1_I_address1,
        Stage1_I_ce1,
        Stage1_I_we1,
        Stage1_I_d1,
        Stage1_R_3_address0,
        Stage1_R_3_ce0,
        Stage1_R_3_we0,
        Stage1_R_3_d0,
        Stage1_R_3_address1,
        Stage1_R_3_ce1,
        Stage1_R_3_we1,
        Stage1_R_3_d1,
        Stage1_R_2_address0,
        Stage1_R_2_ce0,
        Stage1_R_2_we0,
        Stage1_R_2_d0,
        Stage1_R_2_address1,
        Stage1_R_2_ce1,
        Stage1_R_2_we1,
        Stage1_R_2_d1,
        Stage1_R_1_address0,
        Stage1_R_1_ce0,
        Stage1_R_1_we0,
        Stage1_R_1_d0,
        Stage1_R_1_address1,
        Stage1_R_1_ce1,
        Stage1_R_1_we1,
        Stage1_R_1_d1,
        Stage1_R_address0,
        Stage1_R_ce0,
        Stage1_R_we0,
        Stage1_R_d0,
        Stage1_R_address1,
        Stage1_R_ce1,
        Stage1_R_we1,
        Stage1_R_d1,
        Stage0_R_address0,
        Stage0_R_ce0,
        Stage0_R_q0,
        Stage0_R_address1,
        Stage0_R_ce1,
        Stage0_R_q1,
        Stage0_R_1_address0,
        Stage0_R_1_ce0,
        Stage0_R_1_q0,
        Stage0_R_1_address1,
        Stage0_R_1_ce1,
        Stage0_R_1_q1,
        Stage0_R_2_address0,
        Stage0_R_2_ce0,
        Stage0_R_2_q0,
        Stage0_R_2_address1,
        Stage0_R_2_ce1,
        Stage0_R_2_q1,
        Stage0_R_3_address0,
        Stage0_R_3_ce0,
        Stage0_R_3_q0,
        Stage0_R_3_address1,
        Stage0_R_3_ce1,
        Stage0_R_3_q1,
        Stage0_I_address0,
        Stage0_I_ce0,
        Stage0_I_q0,
        Stage0_I_address1,
        Stage0_I_ce1,
        Stage0_I_q1,
        Stage0_I_1_address0,
        Stage0_I_1_ce0,
        Stage0_I_1_q0,
        Stage0_I_1_address1,
        Stage0_I_1_ce1,
        Stage0_I_1_q1,
        Stage0_I_2_address0,
        Stage0_I_2_ce0,
        Stage0_I_2_q0,
        Stage0_I_2_address1,
        Stage0_I_2_ce1,
        Stage0_I_2_q1,
        Stage0_I_3_address0,
        Stage0_I_3_ce0,
        Stage0_I_3_q0,
        Stage0_I_3_address1,
        Stage0_I_3_ce1,
        Stage0_I_3_q1,
        grp_fu_628_p_din0,
        grp_fu_628_p_din1,
        grp_fu_628_p_opcode,
        grp_fu_628_p_dout0,
        grp_fu_628_p_ce,
        grp_fu_632_p_din0,
        grp_fu_632_p_din1,
        grp_fu_632_p_opcode,
        grp_fu_632_p_dout0,
        grp_fu_632_p_ce,
        grp_fu_636_p_din0,
        grp_fu_636_p_din1,
        grp_fu_636_p_opcode,
        grp_fu_636_p_dout0,
        grp_fu_636_p_ce,
        grp_fu_640_p_din0,
        grp_fu_640_p_din1,
        grp_fu_640_p_opcode,
        grp_fu_640_p_dout0,
        grp_fu_640_p_ce,
        grp_fu_644_p_din0,
        grp_fu_644_p_din1,
        grp_fu_644_p_opcode,
        grp_fu_644_p_dout0,
        grp_fu_644_p_ce,
        grp_fu_648_p_din0,
        grp_fu_648_p_din1,
        grp_fu_648_p_opcode,
        grp_fu_648_p_dout0,
        grp_fu_648_p_ce,
        grp_fu_652_p_din0,
        grp_fu_652_p_din1,
        grp_fu_652_p_opcode,
        grp_fu_652_p_dout0,
        grp_fu_652_p_ce,
        grp_fu_656_p_din0,
        grp_fu_656_p_din1,
        grp_fu_656_p_opcode,
        grp_fu_656_p_dout0,
        grp_fu_656_p_ce,
        grp_fu_660_p_din0,
        grp_fu_660_p_din1,
        grp_fu_660_p_opcode,
        grp_fu_660_p_dout0,
        grp_fu_660_p_ce,
        grp_fu_664_p_din0,
        grp_fu_664_p_din1,
        grp_fu_664_p_opcode,
        grp_fu_664_p_dout0,
        grp_fu_664_p_ce,
        grp_fu_668_p_din0,
        grp_fu_668_p_din1,
        grp_fu_668_p_opcode,
        grp_fu_668_p_dout0,
        grp_fu_668_p_ce,
        grp_fu_672_p_din0,
        grp_fu_672_p_din1,
        grp_fu_672_p_opcode,
        grp_fu_672_p_dout0,
        grp_fu_672_p_ce,
        grp_fu_676_p_din0,
        grp_fu_676_p_din1,
        grp_fu_676_p_opcode,
        grp_fu_676_p_dout0,
        grp_fu_676_p_ce,
        grp_fu_680_p_din0,
        grp_fu_680_p_din1,
        grp_fu_680_p_opcode,
        grp_fu_680_p_dout0,
        grp_fu_680_p_ce,
        grp_fu_684_p_din0,
        grp_fu_684_p_din1,
        grp_fu_684_p_opcode,
        grp_fu_684_p_dout0,
        grp_fu_684_p_ce,
        grp_fu_688_p_din0,
        grp_fu_688_p_din1,
        grp_fu_688_p_opcode,
        grp_fu_688_p_dout0,
        grp_fu_688_p_ce,
        grp_fu_692_p_din0,
        grp_fu_692_p_din1,
        grp_fu_692_p_opcode,
        grp_fu_692_p_dout0,
        grp_fu_692_p_ce,
        grp_fu_696_p_din0,
        grp_fu_696_p_din1,
        grp_fu_696_p_opcode,
        grp_fu_696_p_dout0,
        grp_fu_696_p_ce,
        grp_fu_700_p_din0,
        grp_fu_700_p_din1,
        grp_fu_700_p_opcode,
        grp_fu_700_p_dout0,
        grp_fu_700_p_ce,
        grp_fu_704_p_din0,
        grp_fu_704_p_din1,
        grp_fu_704_p_opcode,
        grp_fu_704_p_dout0,
        grp_fu_704_p_ce,
        grp_fu_708_p_din0,
        grp_fu_708_p_din1,
        grp_fu_708_p_opcode,
        grp_fu_708_p_dout0,
        grp_fu_708_p_ce,
        grp_fu_712_p_din0,
        grp_fu_712_p_din1,
        grp_fu_712_p_opcode,
        grp_fu_712_p_dout0,
        grp_fu_712_p_ce,
        grp_fu_716_p_din0,
        grp_fu_716_p_din1,
        grp_fu_716_p_opcode,
        grp_fu_716_p_dout0,
        grp_fu_716_p_ce,
        grp_fu_720_p_din0,
        grp_fu_720_p_din1,
        grp_fu_720_p_opcode,
        grp_fu_720_p_dout0,
        grp_fu_720_p_ce,
        grp_fu_724_p_din0,
        grp_fu_724_p_din1,
        grp_fu_724_p_dout0,
        grp_fu_724_p_ce,
        grp_fu_728_p_din0,
        grp_fu_728_p_din1,
        grp_fu_728_p_dout0,
        grp_fu_728_p_ce,
        grp_fu_732_p_din0,
        grp_fu_732_p_din1,
        grp_fu_732_p_dout0,
        grp_fu_732_p_ce,
        grp_fu_736_p_din0,
        grp_fu_736_p_din1,
        grp_fu_736_p_dout0,
        grp_fu_736_p_ce,
        grp_fu_740_p_din0,
        grp_fu_740_p_din1,
        grp_fu_740_p_dout0,
        grp_fu_740_p_ce,
        grp_fu_744_p_din0,
        grp_fu_744_p_din1,
        grp_fu_744_p_dout0,
        grp_fu_744_p_ce,
        grp_fu_748_p_din0,
        grp_fu_748_p_din1,
        grp_fu_748_p_dout0,
        grp_fu_748_p_ce,
        grp_fu_752_p_din0,
        grp_fu_752_p_din1,
        grp_fu_752_p_dout0,
        grp_fu_752_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] Stage1_I_3_address0;
output   Stage1_I_3_ce0;
output   Stage1_I_3_we0;
output  [31:0] Stage1_I_3_d0;
output  [7:0] Stage1_I_3_address1;
output   Stage1_I_3_ce1;
output   Stage1_I_3_we1;
output  [31:0] Stage1_I_3_d1;
output  [7:0] Stage1_I_2_address0;
output   Stage1_I_2_ce0;
output   Stage1_I_2_we0;
output  [31:0] Stage1_I_2_d0;
output  [7:0] Stage1_I_2_address1;
output   Stage1_I_2_ce1;
output   Stage1_I_2_we1;
output  [31:0] Stage1_I_2_d1;
output  [7:0] Stage1_I_1_address0;
output   Stage1_I_1_ce0;
output   Stage1_I_1_we0;
output  [31:0] Stage1_I_1_d0;
output  [7:0] Stage1_I_1_address1;
output   Stage1_I_1_ce1;
output   Stage1_I_1_we1;
output  [31:0] Stage1_I_1_d1;
output  [7:0] Stage1_I_address0;
output   Stage1_I_ce0;
output   Stage1_I_we0;
output  [31:0] Stage1_I_d0;
output  [7:0] Stage1_I_address1;
output   Stage1_I_ce1;
output   Stage1_I_we1;
output  [31:0] Stage1_I_d1;
output  [7:0] Stage1_R_3_address0;
output   Stage1_R_3_ce0;
output   Stage1_R_3_we0;
output  [31:0] Stage1_R_3_d0;
output  [7:0] Stage1_R_3_address1;
output   Stage1_R_3_ce1;
output   Stage1_R_3_we1;
output  [31:0] Stage1_R_3_d1;
output  [7:0] Stage1_R_2_address0;
output   Stage1_R_2_ce0;
output   Stage1_R_2_we0;
output  [31:0] Stage1_R_2_d0;
output  [7:0] Stage1_R_2_address1;
output   Stage1_R_2_ce1;
output   Stage1_R_2_we1;
output  [31:0] Stage1_R_2_d1;
output  [7:0] Stage1_R_1_address0;
output   Stage1_R_1_ce0;
output   Stage1_R_1_we0;
output  [31:0] Stage1_R_1_d0;
output  [7:0] Stage1_R_1_address1;
output   Stage1_R_1_ce1;
output   Stage1_R_1_we1;
output  [31:0] Stage1_R_1_d1;
output  [7:0] Stage1_R_address0;
output   Stage1_R_ce0;
output   Stage1_R_we0;
output  [31:0] Stage1_R_d0;
output  [7:0] Stage1_R_address1;
output   Stage1_R_ce1;
output   Stage1_R_we1;
output  [31:0] Stage1_R_d1;
output  [7:0] Stage0_R_address0;
output   Stage0_R_ce0;
input  [31:0] Stage0_R_q0;
output  [7:0] Stage0_R_address1;
output   Stage0_R_ce1;
input  [31:0] Stage0_R_q1;
output  [7:0] Stage0_R_1_address0;
output   Stage0_R_1_ce0;
input  [31:0] Stage0_R_1_q0;
output  [7:0] Stage0_R_1_address1;
output   Stage0_R_1_ce1;
input  [31:0] Stage0_R_1_q1;
output  [7:0] Stage0_R_2_address0;
output   Stage0_R_2_ce0;
input  [31:0] Stage0_R_2_q0;
output  [7:0] Stage0_R_2_address1;
output   Stage0_R_2_ce1;
input  [31:0] Stage0_R_2_q1;
output  [7:0] Stage0_R_3_address0;
output   Stage0_R_3_ce0;
input  [31:0] Stage0_R_3_q0;
output  [7:0] Stage0_R_3_address1;
output   Stage0_R_3_ce1;
input  [31:0] Stage0_R_3_q1;
output  [7:0] Stage0_I_address0;
output   Stage0_I_ce0;
input  [31:0] Stage0_I_q0;
output  [7:0] Stage0_I_address1;
output   Stage0_I_ce1;
input  [31:0] Stage0_I_q1;
output  [7:0] Stage0_I_1_address0;
output   Stage0_I_1_ce0;
input  [31:0] Stage0_I_1_q0;
output  [7:0] Stage0_I_1_address1;
output   Stage0_I_1_ce1;
input  [31:0] Stage0_I_1_q1;
output  [7:0] Stage0_I_2_address0;
output   Stage0_I_2_ce0;
input  [31:0] Stage0_I_2_q0;
output  [7:0] Stage0_I_2_address1;
output   Stage0_I_2_ce1;
input  [31:0] Stage0_I_2_q1;
output  [7:0] Stage0_I_3_address0;
output   Stage0_I_3_ce0;
input  [31:0] Stage0_I_3_q0;
output  [7:0] Stage0_I_3_address1;
output   Stage0_I_3_ce1;
input  [31:0] Stage0_I_3_q1;
output  [31:0] grp_fu_628_p_din0;
output  [31:0] grp_fu_628_p_din1;
output  [1:0] grp_fu_628_p_opcode;
input  [31:0] grp_fu_628_p_dout0;
output   grp_fu_628_p_ce;
output  [31:0] grp_fu_632_p_din0;
output  [31:0] grp_fu_632_p_din1;
output  [1:0] grp_fu_632_p_opcode;
input  [31:0] grp_fu_632_p_dout0;
output   grp_fu_632_p_ce;
output  [31:0] grp_fu_636_p_din0;
output  [31:0] grp_fu_636_p_din1;
output  [1:0] grp_fu_636_p_opcode;
input  [31:0] grp_fu_636_p_dout0;
output   grp_fu_636_p_ce;
output  [31:0] grp_fu_640_p_din0;
output  [31:0] grp_fu_640_p_din1;
output  [1:0] grp_fu_640_p_opcode;
input  [31:0] grp_fu_640_p_dout0;
output   grp_fu_640_p_ce;
output  [31:0] grp_fu_644_p_din0;
output  [31:0] grp_fu_644_p_din1;
output  [1:0] grp_fu_644_p_opcode;
input  [31:0] grp_fu_644_p_dout0;
output   grp_fu_644_p_ce;
output  [31:0] grp_fu_648_p_din0;
output  [31:0] grp_fu_648_p_din1;
output  [1:0] grp_fu_648_p_opcode;
input  [31:0] grp_fu_648_p_dout0;
output   grp_fu_648_p_ce;
output  [31:0] grp_fu_652_p_din0;
output  [31:0] grp_fu_652_p_din1;
output  [1:0] grp_fu_652_p_opcode;
input  [31:0] grp_fu_652_p_dout0;
output   grp_fu_652_p_ce;
output  [31:0] grp_fu_656_p_din0;
output  [31:0] grp_fu_656_p_din1;
output  [1:0] grp_fu_656_p_opcode;
input  [31:0] grp_fu_656_p_dout0;
output   grp_fu_656_p_ce;
output  [31:0] grp_fu_660_p_din0;
output  [31:0] grp_fu_660_p_din1;
output  [1:0] grp_fu_660_p_opcode;
input  [31:0] grp_fu_660_p_dout0;
output   grp_fu_660_p_ce;
output  [31:0] grp_fu_664_p_din0;
output  [31:0] grp_fu_664_p_din1;
output  [1:0] grp_fu_664_p_opcode;
input  [31:0] grp_fu_664_p_dout0;
output   grp_fu_664_p_ce;
output  [31:0] grp_fu_668_p_din0;
output  [31:0] grp_fu_668_p_din1;
output  [1:0] grp_fu_668_p_opcode;
input  [31:0] grp_fu_668_p_dout0;
output   grp_fu_668_p_ce;
output  [31:0] grp_fu_672_p_din0;
output  [31:0] grp_fu_672_p_din1;
output  [1:0] grp_fu_672_p_opcode;
input  [31:0] grp_fu_672_p_dout0;
output   grp_fu_672_p_ce;
output  [31:0] grp_fu_676_p_din0;
output  [31:0] grp_fu_676_p_din1;
output  [1:0] grp_fu_676_p_opcode;
input  [31:0] grp_fu_676_p_dout0;
output   grp_fu_676_p_ce;
output  [31:0] grp_fu_680_p_din0;
output  [31:0] grp_fu_680_p_din1;
output  [1:0] grp_fu_680_p_opcode;
input  [31:0] grp_fu_680_p_dout0;
output   grp_fu_680_p_ce;
output  [31:0] grp_fu_684_p_din0;
output  [31:0] grp_fu_684_p_din1;
output  [1:0] grp_fu_684_p_opcode;
input  [31:0] grp_fu_684_p_dout0;
output   grp_fu_684_p_ce;
output  [31:0] grp_fu_688_p_din0;
output  [31:0] grp_fu_688_p_din1;
output  [1:0] grp_fu_688_p_opcode;
input  [31:0] grp_fu_688_p_dout0;
output   grp_fu_688_p_ce;
output  [31:0] grp_fu_692_p_din0;
output  [31:0] grp_fu_692_p_din1;
output  [1:0] grp_fu_692_p_opcode;
input  [31:0] grp_fu_692_p_dout0;
output   grp_fu_692_p_ce;
output  [31:0] grp_fu_696_p_din0;
output  [31:0] grp_fu_696_p_din1;
output  [1:0] grp_fu_696_p_opcode;
input  [31:0] grp_fu_696_p_dout0;
output   grp_fu_696_p_ce;
output  [31:0] grp_fu_700_p_din0;
output  [31:0] grp_fu_700_p_din1;
output  [1:0] grp_fu_700_p_opcode;
input  [31:0] grp_fu_700_p_dout0;
output   grp_fu_700_p_ce;
output  [31:0] grp_fu_704_p_din0;
output  [31:0] grp_fu_704_p_din1;
output  [1:0] grp_fu_704_p_opcode;
input  [31:0] grp_fu_704_p_dout0;
output   grp_fu_704_p_ce;
output  [31:0] grp_fu_708_p_din0;
output  [31:0] grp_fu_708_p_din1;
output  [1:0] grp_fu_708_p_opcode;
input  [31:0] grp_fu_708_p_dout0;
output   grp_fu_708_p_ce;
output  [31:0] grp_fu_712_p_din0;
output  [31:0] grp_fu_712_p_din1;
output  [1:0] grp_fu_712_p_opcode;
input  [31:0] grp_fu_712_p_dout0;
output   grp_fu_712_p_ce;
output  [31:0] grp_fu_716_p_din0;
output  [31:0] grp_fu_716_p_din1;
output  [1:0] grp_fu_716_p_opcode;
input  [31:0] grp_fu_716_p_dout0;
output   grp_fu_716_p_ce;
output  [31:0] grp_fu_720_p_din0;
output  [31:0] grp_fu_720_p_din1;
output  [1:0] grp_fu_720_p_opcode;
input  [31:0] grp_fu_720_p_dout0;
output   grp_fu_720_p_ce;
output  [31:0] grp_fu_724_p_din0;
output  [31:0] grp_fu_724_p_din1;
input  [31:0] grp_fu_724_p_dout0;
output   grp_fu_724_p_ce;
output  [31:0] grp_fu_728_p_din0;
output  [31:0] grp_fu_728_p_din1;
input  [31:0] grp_fu_728_p_dout0;
output   grp_fu_728_p_ce;
output  [31:0] grp_fu_732_p_din0;
output  [31:0] grp_fu_732_p_din1;
input  [31:0] grp_fu_732_p_dout0;
output   grp_fu_732_p_ce;
output  [31:0] grp_fu_736_p_din0;
output  [31:0] grp_fu_736_p_din1;
input  [31:0] grp_fu_736_p_dout0;
output   grp_fu_736_p_ce;
output  [31:0] grp_fu_740_p_din0;
output  [31:0] grp_fu_740_p_din1;
input  [31:0] grp_fu_740_p_dout0;
output   grp_fu_740_p_ce;
output  [31:0] grp_fu_744_p_din0;
output  [31:0] grp_fu_744_p_din1;
input  [31:0] grp_fu_744_p_dout0;
output   grp_fu_744_p_ce;
output  [31:0] grp_fu_748_p_din0;
output  [31:0] grp_fu_748_p_din1;
input  [31:0] grp_fu_748_p_dout0;
output   grp_fu_748_p_ce;
output  [31:0] grp_fu_752_p_din0;
output  [31:0] grp_fu_752_p_din1;
input  [31:0] grp_fu_752_p_dout0;
output   grp_fu_752_p_ce;

reg ap_idle;
reg Stage1_I_3_ce0;
reg Stage1_I_3_we0;
reg Stage1_I_3_ce1;
reg Stage1_I_3_we1;
reg Stage1_I_2_ce0;
reg Stage1_I_2_we0;
reg Stage1_I_2_ce1;
reg Stage1_I_2_we1;
reg Stage1_I_1_ce0;
reg Stage1_I_1_we0;
reg Stage1_I_1_ce1;
reg Stage1_I_1_we1;
reg Stage1_I_ce0;
reg Stage1_I_we0;
reg Stage1_I_ce1;
reg Stage1_I_we1;
reg Stage1_R_3_ce0;
reg Stage1_R_3_we0;
reg Stage1_R_3_ce1;
reg Stage1_R_3_we1;
reg Stage1_R_2_ce0;
reg Stage1_R_2_we0;
reg Stage1_R_2_ce1;
reg Stage1_R_2_we1;
reg Stage1_R_1_ce0;
reg Stage1_R_1_we0;
reg Stage1_R_1_ce1;
reg Stage1_R_1_we1;
reg Stage1_R_ce0;
reg Stage1_R_we0;
reg Stage1_R_ce1;
reg Stage1_R_we1;
reg Stage0_R_ce0;
reg Stage0_R_ce1;
reg Stage0_R_1_ce0;
reg Stage0_R_1_ce1;
reg Stage0_R_2_ce0;
reg Stage0_R_2_ce1;
reg Stage0_R_3_ce0;
reg Stage0_R_3_ce1;
reg Stage0_I_ce0;
reg Stage0_I_ce1;
reg Stage0_I_1_ce0;
reg Stage0_I_1_ce1;
reg Stage0_I_2_ce0;
reg Stage0_I_2_ce1;
reg Stage0_I_3_ce0;
reg Stage0_I_3_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_614_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln118_fu_630_p1;
reg   [63:0] zext_ln118_reg_674;
reg   [63:0] zext_ln118_reg_674_pp0_iter1_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter2_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter3_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter4_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter5_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter6_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter7_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter8_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter9_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter10_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter11_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter12_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter13_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter14_reg;
reg   [63:0] zext_ln118_reg_674_pp0_iter15_reg;
wire   [63:0] zext_ln118_1_fu_644_p1;
reg   [63:0] zext_ln118_1_reg_710;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter1_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter2_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter3_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter4_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter5_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter6_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter7_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter8_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter9_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter10_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter11_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter12_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter13_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter14_reg;
reg   [63:0] zext_ln118_1_reg_710_pp0_iter15_reg;
reg   [31:0] Stage0_R_1_load_reg_746;
reg   [31:0] Stage0_R_1_load_reg_746_pp0_iter2_reg;
reg   [31:0] Stage0_R_1_load_reg_746_pp0_iter3_reg;
reg   [31:0] Stage0_R_1_load_reg_746_pp0_iter4_reg;
reg   [31:0] Stage0_R_1_load_reg_746_pp0_iter5_reg;
reg   [31:0] Stage0_R_3_load_reg_752;
reg   [31:0] Stage0_R_3_load_reg_752_pp0_iter2_reg;
reg   [31:0] Stage0_R_3_load_reg_752_pp0_iter3_reg;
reg   [31:0] Stage0_R_3_load_reg_752_pp0_iter4_reg;
reg   [31:0] Stage0_R_3_load_reg_752_pp0_iter5_reg;
reg   [31:0] Stage0_I_1_load_reg_758;
reg   [31:0] Stage0_I_1_load_reg_758_pp0_iter2_reg;
reg   [31:0] Stage0_I_1_load_reg_758_pp0_iter3_reg;
reg   [31:0] Stage0_I_1_load_reg_758_pp0_iter4_reg;
reg   [31:0] Stage0_I_1_load_reg_758_pp0_iter5_reg;
reg   [31:0] Stage0_I_3_load_reg_764;
reg   [31:0] Stage0_I_3_load_reg_764_pp0_iter2_reg;
reg   [31:0] Stage0_I_3_load_reg_764_pp0_iter3_reg;
reg   [31:0] Stage0_I_3_load_reg_764_pp0_iter4_reg;
reg   [31:0] Stage0_I_3_load_reg_764_pp0_iter5_reg;
reg   [31:0] Stage0_R_1_load_1_reg_770;
reg   [31:0] Stage0_R_1_load_1_reg_770_pp0_iter2_reg;
reg   [31:0] Stage0_R_1_load_1_reg_770_pp0_iter3_reg;
reg   [31:0] Stage0_R_1_load_1_reg_770_pp0_iter4_reg;
reg   [31:0] Stage0_R_1_load_1_reg_770_pp0_iter5_reg;
reg   [31:0] Stage0_R_3_load_1_reg_776;
reg   [31:0] Stage0_R_3_load_1_reg_776_pp0_iter2_reg;
reg   [31:0] Stage0_R_3_load_1_reg_776_pp0_iter3_reg;
reg   [31:0] Stage0_R_3_load_1_reg_776_pp0_iter4_reg;
reg   [31:0] Stage0_R_3_load_1_reg_776_pp0_iter5_reg;
reg   [31:0] Stage0_I_1_load_1_reg_782;
reg   [31:0] Stage0_I_1_load_1_reg_782_pp0_iter2_reg;
reg   [31:0] Stage0_I_1_load_1_reg_782_pp0_iter3_reg;
reg   [31:0] Stage0_I_1_load_1_reg_782_pp0_iter4_reg;
reg   [31:0] Stage0_I_1_load_1_reg_782_pp0_iter5_reg;
reg   [31:0] Stage0_I_3_load_1_reg_788;
reg   [31:0] Stage0_I_3_load_1_reg_788_pp0_iter2_reg;
reg   [31:0] Stage0_I_3_load_1_reg_788_pp0_iter3_reg;
reg   [31:0] Stage0_I_3_load_1_reg_788_pp0_iter4_reg;
reg   [31:0] Stage0_I_3_load_1_reg_788_pp0_iter5_reg;
reg   [31:0] mul23_i_reg_794;
reg   [31:0] mul25_i_reg_799;
reg   [31:0] mul23_i_1_reg_804;
reg   [31:0] mul25_i_1_reg_809;
reg   [31:0] mul23_i_2_reg_814;
reg   [31:0] mul25_i_2_reg_819;
reg   [31:0] mul23_i_3_reg_824;
reg   [31:0] mul25_i_3_reg_829;
reg   [31:0] Stage0_R_load_reg_874;
reg   [31:0] Stage0_R_2_load_reg_880;
reg   [31:0] Stage0_I_load_reg_886;
reg   [31:0] Stage0_I_2_load_reg_892;
reg   [31:0] t_R_reg_898;
reg   [31:0] t_I_reg_904;
reg   [31:0] t_R_s_reg_910;
reg   [31:0] t_I_s_reg_916;
reg   [31:0] Stage0_R_load_1_reg_922;
reg   [31:0] Stage0_R_2_load_1_reg_928;
reg   [31:0] Stage0_I_load_1_reg_934;
reg   [31:0] Stage0_I_2_load_1_reg_940;
reg   [31:0] t_R_1_reg_946;
reg   [31:0] t_I_1_reg_952;
reg   [31:0] t_R_2_reg_958;
reg   [31:0] t_I_2_reg_964;
reg   [31:0] sub27_i_reg_970;
reg   [31:0] sub30_i_reg_975;
reg   [31:0] add33_i_reg_980;
reg   [31:0] add36_i_reg_985;
reg   [31:0] sub27_i_1_reg_990;
reg   [31:0] sub30_i_1_reg_995;
reg   [31:0] add33_i_1_reg_1000;
reg   [31:0] add36_i_1_reg_1005;
reg   [31:0] sub27_i_2_reg_1010;
reg   [31:0] sub30_i_2_reg_1015;
reg   [31:0] add33_i_2_reg_1020;
reg   [31:0] add36_i_2_reg_1025;
reg   [31:0] sub27_i_3_reg_1030;
reg   [31:0] sub30_i_3_reg_1035;
reg   [31:0] add33_i_3_reg_1040;
reg   [31:0] add36_i_3_reg_1045;
wire    ap_block_pp0_stage0;
reg   [9:0] i_1_0_fu_66;
wire   [9:0] add_ln109_fu_652_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_1_0_load;
wire   [7:0] trunc_ln1_fu_620_p4;
wire   [7:0] or_ln118_fu_638_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
wire    ap_enable_operation_236;
reg    ap_enable_state17_pp0_iter16_stage0;
wire    ap_enable_operation_252;
wire    ap_enable_operation_238;
wire    ap_enable_operation_254;
wire    ap_enable_operation_240;
wire    ap_enable_operation_256;
wire    ap_enable_operation_242;
wire    ap_enable_operation_258;
wire    ap_enable_operation_244;
wire    ap_enable_operation_260;
wire    ap_enable_operation_246;
wire    ap_enable_operation_262;
wire    ap_enable_operation_248;
wire    ap_enable_operation_264;
wire    ap_enable_operation_250;
wire    ap_enable_operation_266;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln109_fu_614_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_0_fu_66 <= add_ln109_fu_652_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_0_fu_66 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_I_1_load_1_reg_782 <= Stage0_I_1_q0;
        Stage0_I_1_load_reg_758 <= Stage0_I_1_q1;
        Stage0_I_3_load_1_reg_788 <= Stage0_I_3_q0;
        Stage0_I_3_load_reg_764 <= Stage0_I_3_q1;
        Stage0_R_1_load_1_reg_770 <= Stage0_R_1_q0;
        Stage0_R_1_load_reg_746 <= Stage0_R_1_q1;
        Stage0_R_3_load_1_reg_776 <= Stage0_R_3_q0;
        Stage0_R_3_load_reg_752 <= Stage0_R_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Stage0_I_1_load_1_reg_782_pp0_iter2_reg <= Stage0_I_1_load_1_reg_782;
        Stage0_I_1_load_1_reg_782_pp0_iter3_reg <= Stage0_I_1_load_1_reg_782_pp0_iter2_reg;
        Stage0_I_1_load_1_reg_782_pp0_iter4_reg <= Stage0_I_1_load_1_reg_782_pp0_iter3_reg;
        Stage0_I_1_load_1_reg_782_pp0_iter5_reg <= Stage0_I_1_load_1_reg_782_pp0_iter4_reg;
        Stage0_I_1_load_reg_758_pp0_iter2_reg <= Stage0_I_1_load_reg_758;
        Stage0_I_1_load_reg_758_pp0_iter3_reg <= Stage0_I_1_load_reg_758_pp0_iter2_reg;
        Stage0_I_1_load_reg_758_pp0_iter4_reg <= Stage0_I_1_load_reg_758_pp0_iter3_reg;
        Stage0_I_1_load_reg_758_pp0_iter5_reg <= Stage0_I_1_load_reg_758_pp0_iter4_reg;
        Stage0_I_3_load_1_reg_788_pp0_iter2_reg <= Stage0_I_3_load_1_reg_788;
        Stage0_I_3_load_1_reg_788_pp0_iter3_reg <= Stage0_I_3_load_1_reg_788_pp0_iter2_reg;
        Stage0_I_3_load_1_reg_788_pp0_iter4_reg <= Stage0_I_3_load_1_reg_788_pp0_iter3_reg;
        Stage0_I_3_load_1_reg_788_pp0_iter5_reg <= Stage0_I_3_load_1_reg_788_pp0_iter4_reg;
        Stage0_I_3_load_reg_764_pp0_iter2_reg <= Stage0_I_3_load_reg_764;
        Stage0_I_3_load_reg_764_pp0_iter3_reg <= Stage0_I_3_load_reg_764_pp0_iter2_reg;
        Stage0_I_3_load_reg_764_pp0_iter4_reg <= Stage0_I_3_load_reg_764_pp0_iter3_reg;
        Stage0_I_3_load_reg_764_pp0_iter5_reg <= Stage0_I_3_load_reg_764_pp0_iter4_reg;
        Stage0_R_1_load_1_reg_770_pp0_iter2_reg <= Stage0_R_1_load_1_reg_770;
        Stage0_R_1_load_1_reg_770_pp0_iter3_reg <= Stage0_R_1_load_1_reg_770_pp0_iter2_reg;
        Stage0_R_1_load_1_reg_770_pp0_iter4_reg <= Stage0_R_1_load_1_reg_770_pp0_iter3_reg;
        Stage0_R_1_load_1_reg_770_pp0_iter5_reg <= Stage0_R_1_load_1_reg_770_pp0_iter4_reg;
        Stage0_R_1_load_reg_746_pp0_iter2_reg <= Stage0_R_1_load_reg_746;
        Stage0_R_1_load_reg_746_pp0_iter3_reg <= Stage0_R_1_load_reg_746_pp0_iter2_reg;
        Stage0_R_1_load_reg_746_pp0_iter4_reg <= Stage0_R_1_load_reg_746_pp0_iter3_reg;
        Stage0_R_1_load_reg_746_pp0_iter5_reg <= Stage0_R_1_load_reg_746_pp0_iter4_reg;
        Stage0_R_3_load_1_reg_776_pp0_iter2_reg <= Stage0_R_3_load_1_reg_776;
        Stage0_R_3_load_1_reg_776_pp0_iter3_reg <= Stage0_R_3_load_1_reg_776_pp0_iter2_reg;
        Stage0_R_3_load_1_reg_776_pp0_iter4_reg <= Stage0_R_3_load_1_reg_776_pp0_iter3_reg;
        Stage0_R_3_load_1_reg_776_pp0_iter5_reg <= Stage0_R_3_load_1_reg_776_pp0_iter4_reg;
        Stage0_R_3_load_reg_752_pp0_iter2_reg <= Stage0_R_3_load_reg_752;
        Stage0_R_3_load_reg_752_pp0_iter3_reg <= Stage0_R_3_load_reg_752_pp0_iter2_reg;
        Stage0_R_3_load_reg_752_pp0_iter4_reg <= Stage0_R_3_load_reg_752_pp0_iter3_reg;
        Stage0_R_3_load_reg_752_pp0_iter5_reg <= Stage0_R_3_load_reg_752_pp0_iter4_reg;
        add33_i_1_reg_1000 <= grp_fu_684_p_dout0;
        add33_i_2_reg_1020 <= grp_fu_700_p_dout0;
        add33_i_3_reg_1040 <= grp_fu_716_p_dout0;
        add33_i_reg_980 <= grp_fu_668_p_dout0;
        add36_i_1_reg_1005 <= grp_fu_688_p_dout0;
        add36_i_2_reg_1025 <= grp_fu_704_p_dout0;
        add36_i_3_reg_1045 <= grp_fu_720_p_dout0;
        add36_i_reg_985 <= grp_fu_672_p_dout0;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        mul23_i_1_reg_804 <= grp_fu_732_p_dout0;
        mul23_i_2_reg_814 <= grp_fu_740_p_dout0;
        mul23_i_3_reg_824 <= grp_fu_748_p_dout0;
        mul23_i_reg_794 <= grp_fu_724_p_dout0;
        mul25_i_1_reg_809 <= grp_fu_736_p_dout0;
        mul25_i_2_reg_819 <= grp_fu_744_p_dout0;
        mul25_i_3_reg_829 <= grp_fu_752_p_dout0;
        mul25_i_reg_799 <= grp_fu_728_p_dout0;
        sub27_i_1_reg_990 <= grp_fu_676_p_dout0;
        sub27_i_2_reg_1010 <= grp_fu_692_p_dout0;
        sub27_i_3_reg_1030 <= grp_fu_708_p_dout0;
        sub27_i_reg_970 <= grp_fu_660_p_dout0;
        sub30_i_1_reg_995 <= grp_fu_680_p_dout0;
        sub30_i_2_reg_1015 <= grp_fu_696_p_dout0;
        sub30_i_3_reg_1035 <= grp_fu_712_p_dout0;
        sub30_i_reg_975 <= grp_fu_664_p_dout0;
        t_I_1_reg_952 <= grp_fu_648_p_dout0;
        t_I_2_reg_964 <= grp_fu_656_p_dout0;
        t_I_reg_904 <= grp_fu_632_p_dout0;
        t_I_s_reg_916 <= grp_fu_640_p_dout0;
        t_R_1_reg_946 <= grp_fu_644_p_dout0;
        t_R_2_reg_958 <= grp_fu_652_p_dout0;
        t_R_reg_898 <= grp_fu_628_p_dout0;
        t_R_s_reg_910 <= grp_fu_636_p_dout0;
        zext_ln118_1_reg_710_pp0_iter10_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter9_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter11_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter10_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter12_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter11_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter13_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter12_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter14_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter13_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter15_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter14_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter2_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter1_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter3_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter2_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter4_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter3_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter5_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter4_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter6_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter5_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter7_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter6_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter8_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter7_reg[7 : 1];
        zext_ln118_1_reg_710_pp0_iter9_reg[7 : 1] <= zext_ln118_1_reg_710_pp0_iter8_reg[7 : 1];
        zext_ln118_reg_674_pp0_iter10_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter9_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter11_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter10_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter12_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter11_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter13_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter12_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter14_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter13_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter15_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter14_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter2_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter1_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter3_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter2_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter4_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter3_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter5_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter4_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter6_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter5_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter7_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter6_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter8_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter7_reg[7 : 0];
        zext_ln118_reg_674_pp0_iter9_reg[7 : 0] <= zext_ln118_reg_674_pp0_iter8_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        Stage0_I_2_load_1_reg_940 <= Stage0_I_2_q0;
        Stage0_I_2_load_reg_892 <= Stage0_I_2_q1;
        Stage0_I_load_1_reg_934 <= Stage0_I_q0;
        Stage0_I_load_reg_886 <= Stage0_I_q1;
        Stage0_R_2_load_1_reg_928 <= Stage0_R_2_q0;
        Stage0_R_2_load_reg_880 <= Stage0_R_2_q1;
        Stage0_R_load_1_reg_922 <= Stage0_R_q0;
        Stage0_R_load_reg_874 <= Stage0_R_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        zext_ln118_1_reg_710_pp0_iter1_reg[7 : 1] <= zext_ln118_1_reg_710[7 : 1];
        zext_ln118_reg_674_pp0_iter1_reg[7 : 0] <= zext_ln118_reg_674[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_614_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln118_1_reg_710[7 : 1] <= zext_ln118_1_fu_644_p1[7 : 1];
        zext_ln118_reg_674[7 : 0] <= zext_ln118_fu_630_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_I_1_ce0 = 1'b1;
    end else begin
        Stage0_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_I_1_ce1 = 1'b1;
    end else begin
        Stage0_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_I_2_ce0 = 1'b1;
    end else begin
        Stage0_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_I_2_ce1 = 1'b1;
    end else begin
        Stage0_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_I_3_ce0 = 1'b1;
    end else begin
        Stage0_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_I_3_ce1 = 1'b1;
    end else begin
        Stage0_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_I_ce0 = 1'b1;
    end else begin
        Stage0_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_I_ce1 = 1'b1;
    end else begin
        Stage0_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_R_1_ce0 = 1'b1;
    end else begin
        Stage0_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_R_1_ce1 = 1'b1;
    end else begin
        Stage0_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_R_2_ce0 = 1'b1;
    end else begin
        Stage0_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_R_2_ce1 = 1'b1;
    end else begin
        Stage0_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_R_3_ce0 = 1'b1;
    end else begin
        Stage0_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage0_R_3_ce1 = 1'b1;
    end else begin
        Stage0_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_R_ce0 = 1'b1;
    end else begin
        Stage0_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage0_R_ce1 = 1'b1;
    end else begin
        Stage0_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_1_ce0 = 1'b1;
    end else begin
        Stage1_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_1_ce1 = 1'b1;
    end else begin
        Stage1_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_1_we0 = 1'b1;
    end else begin
        Stage1_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_1_we1 = 1'b1;
    end else begin
        Stage1_I_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_2_ce0 = 1'b1;
    end else begin
        Stage1_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_2_ce1 = 1'b1;
    end else begin
        Stage1_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_2_we0 = 1'b1;
    end else begin
        Stage1_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_2_we1 = 1'b1;
    end else begin
        Stage1_I_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_3_ce0 = 1'b1;
    end else begin
        Stage1_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_3_ce1 = 1'b1;
    end else begin
        Stage1_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_3_we0 = 1'b1;
    end else begin
        Stage1_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_3_we1 = 1'b1;
    end else begin
        Stage1_I_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_ce0 = 1'b1;
    end else begin
        Stage1_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_ce1 = 1'b1;
    end else begin
        Stage1_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_we0 = 1'b1;
    end else begin
        Stage1_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_I_we1 = 1'b1;
    end else begin
        Stage1_I_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_1_ce0 = 1'b1;
    end else begin
        Stage1_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_1_ce1 = 1'b1;
    end else begin
        Stage1_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_1_we0 = 1'b1;
    end else begin
        Stage1_R_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_1_we1 = 1'b1;
    end else begin
        Stage1_R_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_2_ce0 = 1'b1;
    end else begin
        Stage1_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_2_ce1 = 1'b1;
    end else begin
        Stage1_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_2_we0 = 1'b1;
    end else begin
        Stage1_R_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_2_we1 = 1'b1;
    end else begin
        Stage1_R_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_3_ce0 = 1'b1;
    end else begin
        Stage1_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_3_ce1 = 1'b1;
    end else begin
        Stage1_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_3_we0 = 1'b1;
    end else begin
        Stage1_R_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_3_we1 = 1'b1;
    end else begin
        Stage1_R_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_ce0 = 1'b1;
    end else begin
        Stage1_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_ce1 = 1'b1;
    end else begin
        Stage1_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_we0 = 1'b1;
    end else begin
        Stage1_R_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        Stage1_R_we1 = 1'b1;
    end else begin
        Stage1_R_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_614_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1_0_load = 10'd0;
    end else begin
        ap_sig_allocacmp_i_1_0_load = i_1_0_fu_66;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Stage0_I_1_address0 = zext_ln118_1_fu_644_p1;

assign Stage0_I_1_address1 = zext_ln118_fu_630_p1;

assign Stage0_I_2_address0 = zext_ln118_1_reg_710_pp0_iter8_reg;

assign Stage0_I_2_address1 = zext_ln118_reg_674_pp0_iter8_reg;

assign Stage0_I_3_address0 = zext_ln118_1_fu_644_p1;

assign Stage0_I_3_address1 = zext_ln118_fu_630_p1;

assign Stage0_I_address0 = zext_ln118_1_reg_710_pp0_iter8_reg;

assign Stage0_I_address1 = zext_ln118_reg_674_pp0_iter8_reg;

assign Stage0_R_1_address0 = zext_ln118_1_fu_644_p1;

assign Stage0_R_1_address1 = zext_ln118_fu_630_p1;

assign Stage0_R_2_address0 = zext_ln118_1_reg_710_pp0_iter8_reg;

assign Stage0_R_2_address1 = zext_ln118_reg_674_pp0_iter8_reg;

assign Stage0_R_3_address0 = zext_ln118_1_fu_644_p1;

assign Stage0_R_3_address1 = zext_ln118_fu_630_p1;

assign Stage0_R_address0 = zext_ln118_1_reg_710_pp0_iter8_reg;

assign Stage0_R_address1 = zext_ln118_reg_674_pp0_iter8_reg;

assign Stage1_I_1_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_I_1_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_I_1_d0 = sub30_i_2_reg_1015;

assign Stage1_I_1_d1 = sub30_i_reg_975;

assign Stage1_I_2_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_I_2_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_I_2_d0 = add36_i_3_reg_1045;

assign Stage1_I_2_d1 = add36_i_1_reg_1005;

assign Stage1_I_3_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_I_3_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_I_3_d0 = sub30_i_3_reg_1035;

assign Stage1_I_3_d1 = sub30_i_1_reg_995;

assign Stage1_I_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_I_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_I_d0 = add36_i_2_reg_1025;

assign Stage1_I_d1 = add36_i_reg_985;

assign Stage1_R_1_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_R_1_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_R_1_d0 = sub27_i_2_reg_1010;

assign Stage1_R_1_d1 = sub27_i_reg_970;

assign Stage1_R_2_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_R_2_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_R_2_d0 = add33_i_3_reg_1040;

assign Stage1_R_2_d1 = add33_i_1_reg_1000;

assign Stage1_R_3_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_R_3_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_R_3_d0 = sub27_i_3_reg_1030;

assign Stage1_R_3_d1 = sub27_i_1_reg_990;

assign Stage1_R_address0 = zext_ln118_1_reg_710_pp0_iter15_reg;

assign Stage1_R_address1 = zext_ln118_reg_674_pp0_iter15_reg;

assign Stage1_R_d0 = add33_i_2_reg_1020;

assign Stage1_R_d1 = add33_i_reg_980;

assign add_ln109_fu_652_p2 = (ap_sig_allocacmp_i_1_0_load + 10'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_operation_236 = (1'b1 == 1'b1);

assign ap_enable_operation_238 = (1'b1 == 1'b1);

assign ap_enable_operation_240 = (1'b1 == 1'b1);

assign ap_enable_operation_242 = (1'b1 == 1'b1);

assign ap_enable_operation_244 = (1'b1 == 1'b1);

assign ap_enable_operation_246 = (1'b1 == 1'b1);

assign ap_enable_operation_248 = (1'b1 == 1'b1);

assign ap_enable_operation_250 = (1'b1 == 1'b1);

assign ap_enable_operation_252 = (1'b1 == 1'b1);

assign ap_enable_operation_254 = (1'b1 == 1'b1);

assign ap_enable_operation_256 = (1'b1 == 1'b1);

assign ap_enable_operation_258 = (1'b1 == 1'b1);

assign ap_enable_operation_260 = (1'b1 == 1'b1);

assign ap_enable_operation_262 = (1'b1 == 1'b1);

assign ap_enable_operation_264 = (1'b1 == 1'b1);

assign ap_enable_operation_266 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state17_pp0_iter16_stage0 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_628_p_ce = 1'b1;

assign grp_fu_628_p_din0 = Stage0_R_1_load_reg_746_pp0_iter5_reg;

assign grp_fu_628_p_din1 = mul23_i_reg_794;

assign grp_fu_628_p_opcode = 2'd1;

assign grp_fu_632_p_ce = 1'b1;

assign grp_fu_632_p_din0 = Stage0_I_1_load_reg_758_pp0_iter5_reg;

assign grp_fu_632_p_din1 = mul25_i_reg_799;

assign grp_fu_632_p_opcode = 2'd0;

assign grp_fu_636_p_ce = 1'b1;

assign grp_fu_636_p_din0 = Stage0_R_3_load_reg_752_pp0_iter5_reg;

assign grp_fu_636_p_din1 = mul23_i_1_reg_804;

assign grp_fu_636_p_opcode = 2'd1;

assign grp_fu_640_p_ce = 1'b1;

assign grp_fu_640_p_din0 = Stage0_I_3_load_reg_764_pp0_iter5_reg;

assign grp_fu_640_p_din1 = mul25_i_1_reg_809;

assign grp_fu_640_p_opcode = 2'd0;

assign grp_fu_644_p_ce = 1'b1;

assign grp_fu_644_p_din0 = Stage0_R_1_load_1_reg_770_pp0_iter5_reg;

assign grp_fu_644_p_din1 = mul23_i_2_reg_814;

assign grp_fu_644_p_opcode = 2'd1;

assign grp_fu_648_p_ce = 1'b1;

assign grp_fu_648_p_din0 = Stage0_I_1_load_1_reg_782_pp0_iter5_reg;

assign grp_fu_648_p_din1 = mul25_i_2_reg_819;

assign grp_fu_648_p_opcode = 2'd0;

assign grp_fu_652_p_ce = 1'b1;

assign grp_fu_652_p_din0 = Stage0_R_3_load_1_reg_776_pp0_iter5_reg;

assign grp_fu_652_p_din1 = mul23_i_3_reg_824;

assign grp_fu_652_p_opcode = 2'd1;

assign grp_fu_656_p_ce = 1'b1;

assign grp_fu_656_p_din0 = Stage0_I_3_load_1_reg_788_pp0_iter5_reg;

assign grp_fu_656_p_din1 = mul25_i_3_reg_829;

assign grp_fu_656_p_opcode = 2'd0;

assign grp_fu_660_p_ce = 1'b1;

assign grp_fu_660_p_din0 = Stage0_R_load_reg_874;

assign grp_fu_660_p_din1 = t_R_reg_898;

assign grp_fu_660_p_opcode = 2'd1;

assign grp_fu_664_p_ce = 1'b1;

assign grp_fu_664_p_din0 = Stage0_I_load_reg_886;

assign grp_fu_664_p_din1 = t_I_reg_904;

assign grp_fu_664_p_opcode = 2'd1;

assign grp_fu_668_p_ce = 1'b1;

assign grp_fu_668_p_din0 = Stage0_R_load_reg_874;

assign grp_fu_668_p_din1 = t_R_reg_898;

assign grp_fu_668_p_opcode = 2'd0;

assign grp_fu_672_p_ce = 1'b1;

assign grp_fu_672_p_din0 = Stage0_I_load_reg_886;

assign grp_fu_672_p_din1 = t_I_reg_904;

assign grp_fu_672_p_opcode = 2'd0;

assign grp_fu_676_p_ce = 1'b1;

assign grp_fu_676_p_din0 = Stage0_R_2_load_reg_880;

assign grp_fu_676_p_din1 = t_R_s_reg_910;

assign grp_fu_676_p_opcode = 2'd1;

assign grp_fu_680_p_ce = 1'b1;

assign grp_fu_680_p_din0 = Stage0_I_2_load_reg_892;

assign grp_fu_680_p_din1 = t_I_s_reg_916;

assign grp_fu_680_p_opcode = 2'd1;

assign grp_fu_684_p_ce = 1'b1;

assign grp_fu_684_p_din0 = Stage0_R_2_load_reg_880;

assign grp_fu_684_p_din1 = t_R_s_reg_910;

assign grp_fu_684_p_opcode = 2'd0;

assign grp_fu_688_p_ce = 1'b1;

assign grp_fu_688_p_din0 = Stage0_I_2_load_reg_892;

assign grp_fu_688_p_din1 = t_I_s_reg_916;

assign grp_fu_688_p_opcode = 2'd0;

assign grp_fu_692_p_ce = 1'b1;

assign grp_fu_692_p_din0 = Stage0_R_load_1_reg_922;

assign grp_fu_692_p_din1 = t_R_1_reg_946;

assign grp_fu_692_p_opcode = 2'd1;

assign grp_fu_696_p_ce = 1'b1;

assign grp_fu_696_p_din0 = Stage0_I_load_1_reg_934;

assign grp_fu_696_p_din1 = t_I_1_reg_952;

assign grp_fu_696_p_opcode = 2'd1;

assign grp_fu_700_p_ce = 1'b1;

assign grp_fu_700_p_din0 = Stage0_R_load_1_reg_922;

assign grp_fu_700_p_din1 = t_R_1_reg_946;

assign grp_fu_700_p_opcode = 2'd0;

assign grp_fu_704_p_ce = 1'b1;

assign grp_fu_704_p_din0 = Stage0_I_load_1_reg_934;

assign grp_fu_704_p_din1 = t_I_1_reg_952;

assign grp_fu_704_p_opcode = 2'd0;

assign grp_fu_708_p_ce = 1'b1;

assign grp_fu_708_p_din0 = Stage0_R_2_load_1_reg_928;

assign grp_fu_708_p_din1 = t_R_2_reg_958;

assign grp_fu_708_p_opcode = 2'd1;

assign grp_fu_712_p_ce = 1'b1;

assign grp_fu_712_p_din0 = Stage0_I_2_load_1_reg_940;

assign grp_fu_712_p_din1 = t_I_2_reg_964;

assign grp_fu_712_p_opcode = 2'd1;

assign grp_fu_716_p_ce = 1'b1;

assign grp_fu_716_p_din0 = Stage0_R_2_load_1_reg_928;

assign grp_fu_716_p_din1 = t_R_2_reg_958;

assign grp_fu_716_p_opcode = 2'd0;

assign grp_fu_720_p_ce = 1'b1;

assign grp_fu_720_p_din0 = Stage0_I_2_load_1_reg_940;

assign grp_fu_720_p_din1 = t_I_2_reg_964;

assign grp_fu_720_p_opcode = 2'd0;

assign grp_fu_724_p_ce = 1'b1;

assign grp_fu_724_p_din0 = Stage0_I_1_load_reg_758;

assign grp_fu_724_p_din1 = 32'd2147483648;

assign grp_fu_728_p_ce = 1'b1;

assign grp_fu_728_p_din0 = Stage0_R_1_load_reg_746;

assign grp_fu_728_p_din1 = 32'd2147483648;

assign grp_fu_732_p_ce = 1'b1;

assign grp_fu_732_p_din0 = Stage0_I_3_load_reg_764;

assign grp_fu_732_p_din1 = 32'd2147483648;

assign grp_fu_736_p_ce = 1'b1;

assign grp_fu_736_p_din0 = Stage0_R_3_load_reg_752;

assign grp_fu_736_p_din1 = 32'd2147483648;

assign grp_fu_740_p_ce = 1'b1;

assign grp_fu_740_p_din0 = Stage0_I_1_load_1_reg_782;

assign grp_fu_740_p_din1 = 32'd2147483648;

assign grp_fu_744_p_ce = 1'b1;

assign grp_fu_744_p_din0 = Stage0_R_1_load_1_reg_770;

assign grp_fu_744_p_din1 = 32'd2147483648;

assign grp_fu_748_p_ce = 1'b1;

assign grp_fu_748_p_din0 = Stage0_I_3_load_1_reg_788;

assign grp_fu_748_p_din1 = 32'd2147483648;

assign grp_fu_752_p_ce = 1'b1;

assign grp_fu_752_p_din0 = Stage0_R_3_load_1_reg_776;

assign grp_fu_752_p_din1 = 32'd2147483648;

assign icmp_ln109_fu_614_p2 = ((ap_sig_allocacmp_i_1_0_load == 10'd512) ? 1'b1 : 1'b0);

assign or_ln118_fu_638_p2 = (trunc_ln1_fu_620_p4 | 8'd1);

assign trunc_ln1_fu_620_p4 = {{ap_sig_allocacmp_i_1_0_load[8:1]}};

assign zext_ln118_1_fu_644_p1 = or_ln118_fu_638_p2;

assign zext_ln118_fu_630_p1 = trunc_ln1_fu_620_p4;

always @ (posedge ap_clk) begin
    zext_ln118_reg_674[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_674_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710[0] <= 1'b1;
    zext_ln118_1_reg_710[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter1_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter2_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter3_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter4_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter5_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter6_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter7_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter8_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter9_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter10_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter11_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter12_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter13_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter14_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_1_reg_710_pp0_iter15_reg[0] <= 1'b1;
    zext_ln118_1_reg_710_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //fft_fft_exec_Pipeline_DFT_Loop
