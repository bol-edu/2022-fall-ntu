// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fft_fft,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=4577,HLS_SYN_TPT=none,HLS_SYN_MEM=192,HLS_SYN_DSP=0,HLS_SYN_FF=40682,HLS_SYN_LUT=40574,HLS_VERSION=2022_1}" *)

module fft (
        ap_clk,
        ap_rst_n,
        m_axi_input_1_AWVALID,
        m_axi_input_1_AWREADY,
        m_axi_input_1_AWADDR,
        m_axi_input_1_AWID,
        m_axi_input_1_AWLEN,
        m_axi_input_1_AWSIZE,
        m_axi_input_1_AWBURST,
        m_axi_input_1_AWLOCK,
        m_axi_input_1_AWCACHE,
        m_axi_input_1_AWPROT,
        m_axi_input_1_AWQOS,
        m_axi_input_1_AWREGION,
        m_axi_input_1_AWUSER,
        m_axi_input_1_WVALID,
        m_axi_input_1_WREADY,
        m_axi_input_1_WDATA,
        m_axi_input_1_WSTRB,
        m_axi_input_1_WLAST,
        m_axi_input_1_WID,
        m_axi_input_1_WUSER,
        m_axi_input_1_ARVALID,
        m_axi_input_1_ARREADY,
        m_axi_input_1_ARADDR,
        m_axi_input_1_ARID,
        m_axi_input_1_ARLEN,
        m_axi_input_1_ARSIZE,
        m_axi_input_1_ARBURST,
        m_axi_input_1_ARLOCK,
        m_axi_input_1_ARCACHE,
        m_axi_input_1_ARPROT,
        m_axi_input_1_ARQOS,
        m_axi_input_1_ARREGION,
        m_axi_input_1_ARUSER,
        m_axi_input_1_RVALID,
        m_axi_input_1_RREADY,
        m_axi_input_1_RDATA,
        m_axi_input_1_RLAST,
        m_axi_input_1_RID,
        m_axi_input_1_RUSER,
        m_axi_input_1_RRESP,
        m_axi_input_1_BVALID,
        m_axi_input_1_BREADY,
        m_axi_input_1_BRESP,
        m_axi_input_1_BID,
        m_axi_input_1_BUSER,
        m_axi_input_0_AWVALID,
        m_axi_input_0_AWREADY,
        m_axi_input_0_AWADDR,
        m_axi_input_0_AWID,
        m_axi_input_0_AWLEN,
        m_axi_input_0_AWSIZE,
        m_axi_input_0_AWBURST,
        m_axi_input_0_AWLOCK,
        m_axi_input_0_AWCACHE,
        m_axi_input_0_AWPROT,
        m_axi_input_0_AWQOS,
        m_axi_input_0_AWREGION,
        m_axi_input_0_AWUSER,
        m_axi_input_0_WVALID,
        m_axi_input_0_WREADY,
        m_axi_input_0_WDATA,
        m_axi_input_0_WSTRB,
        m_axi_input_0_WLAST,
        m_axi_input_0_WID,
        m_axi_input_0_WUSER,
        m_axi_input_0_ARVALID,
        m_axi_input_0_ARREADY,
        m_axi_input_0_ARADDR,
        m_axi_input_0_ARID,
        m_axi_input_0_ARLEN,
        m_axi_input_0_ARSIZE,
        m_axi_input_0_ARBURST,
        m_axi_input_0_ARLOCK,
        m_axi_input_0_ARCACHE,
        m_axi_input_0_ARPROT,
        m_axi_input_0_ARQOS,
        m_axi_input_0_ARREGION,
        m_axi_input_0_ARUSER,
        m_axi_input_0_RVALID,
        m_axi_input_0_RREADY,
        m_axi_input_0_RDATA,
        m_axi_input_0_RLAST,
        m_axi_input_0_RID,
        m_axi_input_0_RUSER,
        m_axi_input_0_RRESP,
        m_axi_input_0_BVALID,
        m_axi_input_0_BREADY,
        m_axi_input_0_BRESP,
        m_axi_input_0_BID,
        m_axi_input_0_BUSER,
        m_axi_output_1_AWVALID,
        m_axi_output_1_AWREADY,
        m_axi_output_1_AWADDR,
        m_axi_output_1_AWID,
        m_axi_output_1_AWLEN,
        m_axi_output_1_AWSIZE,
        m_axi_output_1_AWBURST,
        m_axi_output_1_AWLOCK,
        m_axi_output_1_AWCACHE,
        m_axi_output_1_AWPROT,
        m_axi_output_1_AWQOS,
        m_axi_output_1_AWREGION,
        m_axi_output_1_AWUSER,
        m_axi_output_1_WVALID,
        m_axi_output_1_WREADY,
        m_axi_output_1_WDATA,
        m_axi_output_1_WSTRB,
        m_axi_output_1_WLAST,
        m_axi_output_1_WID,
        m_axi_output_1_WUSER,
        m_axi_output_1_ARVALID,
        m_axi_output_1_ARREADY,
        m_axi_output_1_ARADDR,
        m_axi_output_1_ARID,
        m_axi_output_1_ARLEN,
        m_axi_output_1_ARSIZE,
        m_axi_output_1_ARBURST,
        m_axi_output_1_ARLOCK,
        m_axi_output_1_ARCACHE,
        m_axi_output_1_ARPROT,
        m_axi_output_1_ARQOS,
        m_axi_output_1_ARREGION,
        m_axi_output_1_ARUSER,
        m_axi_output_1_RVALID,
        m_axi_output_1_RREADY,
        m_axi_output_1_RDATA,
        m_axi_output_1_RLAST,
        m_axi_output_1_RID,
        m_axi_output_1_RUSER,
        m_axi_output_1_RRESP,
        m_axi_output_1_BVALID,
        m_axi_output_1_BREADY,
        m_axi_output_1_BRESP,
        m_axi_output_1_BID,
        m_axi_output_1_BUSER,
        m_axi_output_0_AWVALID,
        m_axi_output_0_AWREADY,
        m_axi_output_0_AWADDR,
        m_axi_output_0_AWID,
        m_axi_output_0_AWLEN,
        m_axi_output_0_AWSIZE,
        m_axi_output_0_AWBURST,
        m_axi_output_0_AWLOCK,
        m_axi_output_0_AWCACHE,
        m_axi_output_0_AWPROT,
        m_axi_output_0_AWQOS,
        m_axi_output_0_AWREGION,
        m_axi_output_0_AWUSER,
        m_axi_output_0_WVALID,
        m_axi_output_0_WREADY,
        m_axi_output_0_WDATA,
        m_axi_output_0_WSTRB,
        m_axi_output_0_WLAST,
        m_axi_output_0_WID,
        m_axi_output_0_WUSER,
        m_axi_output_0_ARVALID,
        m_axi_output_0_ARREADY,
        m_axi_output_0_ARADDR,
        m_axi_output_0_ARID,
        m_axi_output_0_ARLEN,
        m_axi_output_0_ARSIZE,
        m_axi_output_0_ARBURST,
        m_axi_output_0_ARLOCK,
        m_axi_output_0_ARCACHE,
        m_axi_output_0_ARPROT,
        m_axi_output_0_ARQOS,
        m_axi_output_0_ARREGION,
        m_axi_output_0_ARUSER,
        m_axi_output_0_RVALID,
        m_axi_output_0_RREADY,
        m_axi_output_0_RDATA,
        m_axi_output_0_RLAST,
        m_axi_output_0_RID,
        m_axi_output_0_RUSER,
        m_axi_output_0_RRESP,
        m_axi_output_0_BVALID,
        m_axi_output_0_BREADY,
        m_axi_output_0_BRESP,
        m_axi_output_0_BID,
        m_axi_output_0_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_0_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT_0_ADDR_WIDTH = 64;
parameter    C_M_AXI_INPUT_0_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_0_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_0_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_0_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_0_USER_VALUE = 0;
parameter    C_M_AXI_INPUT_0_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT_0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_1_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT_1_ADDR_WIDTH = 64;
parameter    C_M_AXI_INPUT_1_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_1_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_1_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_1_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_1_USER_VALUE = 0;
parameter    C_M_AXI_INPUT_1_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT_1_CACHE_VALUE = 3;
parameter    C_M_AXI_OUTPUT_0_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_0_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUTPUT_0_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_0_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_0_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_0_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_0_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT_0_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT_0_CACHE_VALUE = 3;
parameter    C_M_AXI_OUTPUT_1_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_1_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUTPUT_1_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_1_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_1_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_1_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_1_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT_1_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT_1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_INPUT_0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_INPUT_1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUTPUT_0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUTPUT_1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_input_1_AWVALID;
input   m_axi_input_1_AWREADY;
output  [C_M_AXI_INPUT_1_ADDR_WIDTH - 1:0] m_axi_input_1_AWADDR;
output  [C_M_AXI_INPUT_1_ID_WIDTH - 1:0] m_axi_input_1_AWID;
output  [7:0] m_axi_input_1_AWLEN;
output  [2:0] m_axi_input_1_AWSIZE;
output  [1:0] m_axi_input_1_AWBURST;
output  [1:0] m_axi_input_1_AWLOCK;
output  [3:0] m_axi_input_1_AWCACHE;
output  [2:0] m_axi_input_1_AWPROT;
output  [3:0] m_axi_input_1_AWQOS;
output  [3:0] m_axi_input_1_AWREGION;
output  [C_M_AXI_INPUT_1_AWUSER_WIDTH - 1:0] m_axi_input_1_AWUSER;
output   m_axi_input_1_WVALID;
input   m_axi_input_1_WREADY;
output  [C_M_AXI_INPUT_1_DATA_WIDTH - 1:0] m_axi_input_1_WDATA;
output  [C_M_AXI_INPUT_1_WSTRB_WIDTH - 1:0] m_axi_input_1_WSTRB;
output   m_axi_input_1_WLAST;
output  [C_M_AXI_INPUT_1_ID_WIDTH - 1:0] m_axi_input_1_WID;
output  [C_M_AXI_INPUT_1_WUSER_WIDTH - 1:0] m_axi_input_1_WUSER;
output   m_axi_input_1_ARVALID;
input   m_axi_input_1_ARREADY;
output  [C_M_AXI_INPUT_1_ADDR_WIDTH - 1:0] m_axi_input_1_ARADDR;
output  [C_M_AXI_INPUT_1_ID_WIDTH - 1:0] m_axi_input_1_ARID;
output  [7:0] m_axi_input_1_ARLEN;
output  [2:0] m_axi_input_1_ARSIZE;
output  [1:0] m_axi_input_1_ARBURST;
output  [1:0] m_axi_input_1_ARLOCK;
output  [3:0] m_axi_input_1_ARCACHE;
output  [2:0] m_axi_input_1_ARPROT;
output  [3:0] m_axi_input_1_ARQOS;
output  [3:0] m_axi_input_1_ARREGION;
output  [C_M_AXI_INPUT_1_ARUSER_WIDTH - 1:0] m_axi_input_1_ARUSER;
input   m_axi_input_1_RVALID;
output   m_axi_input_1_RREADY;
input  [C_M_AXI_INPUT_1_DATA_WIDTH - 1:0] m_axi_input_1_RDATA;
input   m_axi_input_1_RLAST;
input  [C_M_AXI_INPUT_1_ID_WIDTH - 1:0] m_axi_input_1_RID;
input  [C_M_AXI_INPUT_1_RUSER_WIDTH - 1:0] m_axi_input_1_RUSER;
input  [1:0] m_axi_input_1_RRESP;
input   m_axi_input_1_BVALID;
output   m_axi_input_1_BREADY;
input  [1:0] m_axi_input_1_BRESP;
input  [C_M_AXI_INPUT_1_ID_WIDTH - 1:0] m_axi_input_1_BID;
input  [C_M_AXI_INPUT_1_BUSER_WIDTH - 1:0] m_axi_input_1_BUSER;
output   m_axi_input_0_AWVALID;
input   m_axi_input_0_AWREADY;
output  [C_M_AXI_INPUT_0_ADDR_WIDTH - 1:0] m_axi_input_0_AWADDR;
output  [C_M_AXI_INPUT_0_ID_WIDTH - 1:0] m_axi_input_0_AWID;
output  [7:0] m_axi_input_0_AWLEN;
output  [2:0] m_axi_input_0_AWSIZE;
output  [1:0] m_axi_input_0_AWBURST;
output  [1:0] m_axi_input_0_AWLOCK;
output  [3:0] m_axi_input_0_AWCACHE;
output  [2:0] m_axi_input_0_AWPROT;
output  [3:0] m_axi_input_0_AWQOS;
output  [3:0] m_axi_input_0_AWREGION;
output  [C_M_AXI_INPUT_0_AWUSER_WIDTH - 1:0] m_axi_input_0_AWUSER;
output   m_axi_input_0_WVALID;
input   m_axi_input_0_WREADY;
output  [C_M_AXI_INPUT_0_DATA_WIDTH - 1:0] m_axi_input_0_WDATA;
output  [C_M_AXI_INPUT_0_WSTRB_WIDTH - 1:0] m_axi_input_0_WSTRB;
output   m_axi_input_0_WLAST;
output  [C_M_AXI_INPUT_0_ID_WIDTH - 1:0] m_axi_input_0_WID;
output  [C_M_AXI_INPUT_0_WUSER_WIDTH - 1:0] m_axi_input_0_WUSER;
output   m_axi_input_0_ARVALID;
input   m_axi_input_0_ARREADY;
output  [C_M_AXI_INPUT_0_ADDR_WIDTH - 1:0] m_axi_input_0_ARADDR;
output  [C_M_AXI_INPUT_0_ID_WIDTH - 1:0] m_axi_input_0_ARID;
output  [7:0] m_axi_input_0_ARLEN;
output  [2:0] m_axi_input_0_ARSIZE;
output  [1:0] m_axi_input_0_ARBURST;
output  [1:0] m_axi_input_0_ARLOCK;
output  [3:0] m_axi_input_0_ARCACHE;
output  [2:0] m_axi_input_0_ARPROT;
output  [3:0] m_axi_input_0_ARQOS;
output  [3:0] m_axi_input_0_ARREGION;
output  [C_M_AXI_INPUT_0_ARUSER_WIDTH - 1:0] m_axi_input_0_ARUSER;
input   m_axi_input_0_RVALID;
output   m_axi_input_0_RREADY;
input  [C_M_AXI_INPUT_0_DATA_WIDTH - 1:0] m_axi_input_0_RDATA;
input   m_axi_input_0_RLAST;
input  [C_M_AXI_INPUT_0_ID_WIDTH - 1:0] m_axi_input_0_RID;
input  [C_M_AXI_INPUT_0_RUSER_WIDTH - 1:0] m_axi_input_0_RUSER;
input  [1:0] m_axi_input_0_RRESP;
input   m_axi_input_0_BVALID;
output   m_axi_input_0_BREADY;
input  [1:0] m_axi_input_0_BRESP;
input  [C_M_AXI_INPUT_0_ID_WIDTH - 1:0] m_axi_input_0_BID;
input  [C_M_AXI_INPUT_0_BUSER_WIDTH - 1:0] m_axi_input_0_BUSER;
output   m_axi_output_1_AWVALID;
input   m_axi_output_1_AWREADY;
output  [C_M_AXI_OUTPUT_1_ADDR_WIDTH - 1:0] m_axi_output_1_AWADDR;
output  [C_M_AXI_OUTPUT_1_ID_WIDTH - 1:0] m_axi_output_1_AWID;
output  [7:0] m_axi_output_1_AWLEN;
output  [2:0] m_axi_output_1_AWSIZE;
output  [1:0] m_axi_output_1_AWBURST;
output  [1:0] m_axi_output_1_AWLOCK;
output  [3:0] m_axi_output_1_AWCACHE;
output  [2:0] m_axi_output_1_AWPROT;
output  [3:0] m_axi_output_1_AWQOS;
output  [3:0] m_axi_output_1_AWREGION;
output  [C_M_AXI_OUTPUT_1_AWUSER_WIDTH - 1:0] m_axi_output_1_AWUSER;
output   m_axi_output_1_WVALID;
input   m_axi_output_1_WREADY;
output  [C_M_AXI_OUTPUT_1_DATA_WIDTH - 1:0] m_axi_output_1_WDATA;
output  [C_M_AXI_OUTPUT_1_WSTRB_WIDTH - 1:0] m_axi_output_1_WSTRB;
output   m_axi_output_1_WLAST;
output  [C_M_AXI_OUTPUT_1_ID_WIDTH - 1:0] m_axi_output_1_WID;
output  [C_M_AXI_OUTPUT_1_WUSER_WIDTH - 1:0] m_axi_output_1_WUSER;
output   m_axi_output_1_ARVALID;
input   m_axi_output_1_ARREADY;
output  [C_M_AXI_OUTPUT_1_ADDR_WIDTH - 1:0] m_axi_output_1_ARADDR;
output  [C_M_AXI_OUTPUT_1_ID_WIDTH - 1:0] m_axi_output_1_ARID;
output  [7:0] m_axi_output_1_ARLEN;
output  [2:0] m_axi_output_1_ARSIZE;
output  [1:0] m_axi_output_1_ARBURST;
output  [1:0] m_axi_output_1_ARLOCK;
output  [3:0] m_axi_output_1_ARCACHE;
output  [2:0] m_axi_output_1_ARPROT;
output  [3:0] m_axi_output_1_ARQOS;
output  [3:0] m_axi_output_1_ARREGION;
output  [C_M_AXI_OUTPUT_1_ARUSER_WIDTH - 1:0] m_axi_output_1_ARUSER;
input   m_axi_output_1_RVALID;
output   m_axi_output_1_RREADY;
input  [C_M_AXI_OUTPUT_1_DATA_WIDTH - 1:0] m_axi_output_1_RDATA;
input   m_axi_output_1_RLAST;
input  [C_M_AXI_OUTPUT_1_ID_WIDTH - 1:0] m_axi_output_1_RID;
input  [C_M_AXI_OUTPUT_1_RUSER_WIDTH - 1:0] m_axi_output_1_RUSER;
input  [1:0] m_axi_output_1_RRESP;
input   m_axi_output_1_BVALID;
output   m_axi_output_1_BREADY;
input  [1:0] m_axi_output_1_BRESP;
input  [C_M_AXI_OUTPUT_1_ID_WIDTH - 1:0] m_axi_output_1_BID;
input  [C_M_AXI_OUTPUT_1_BUSER_WIDTH - 1:0] m_axi_output_1_BUSER;
output   m_axi_output_0_AWVALID;
input   m_axi_output_0_AWREADY;
output  [C_M_AXI_OUTPUT_0_ADDR_WIDTH - 1:0] m_axi_output_0_AWADDR;
output  [C_M_AXI_OUTPUT_0_ID_WIDTH - 1:0] m_axi_output_0_AWID;
output  [7:0] m_axi_output_0_AWLEN;
output  [2:0] m_axi_output_0_AWSIZE;
output  [1:0] m_axi_output_0_AWBURST;
output  [1:0] m_axi_output_0_AWLOCK;
output  [3:0] m_axi_output_0_AWCACHE;
output  [2:0] m_axi_output_0_AWPROT;
output  [3:0] m_axi_output_0_AWQOS;
output  [3:0] m_axi_output_0_AWREGION;
output  [C_M_AXI_OUTPUT_0_AWUSER_WIDTH - 1:0] m_axi_output_0_AWUSER;
output   m_axi_output_0_WVALID;
input   m_axi_output_0_WREADY;
output  [C_M_AXI_OUTPUT_0_DATA_WIDTH - 1:0] m_axi_output_0_WDATA;
output  [C_M_AXI_OUTPUT_0_WSTRB_WIDTH - 1:0] m_axi_output_0_WSTRB;
output   m_axi_output_0_WLAST;
output  [C_M_AXI_OUTPUT_0_ID_WIDTH - 1:0] m_axi_output_0_WID;
output  [C_M_AXI_OUTPUT_0_WUSER_WIDTH - 1:0] m_axi_output_0_WUSER;
output   m_axi_output_0_ARVALID;
input   m_axi_output_0_ARREADY;
output  [C_M_AXI_OUTPUT_0_ADDR_WIDTH - 1:0] m_axi_output_0_ARADDR;
output  [C_M_AXI_OUTPUT_0_ID_WIDTH - 1:0] m_axi_output_0_ARID;
output  [7:0] m_axi_output_0_ARLEN;
output  [2:0] m_axi_output_0_ARSIZE;
output  [1:0] m_axi_output_0_ARBURST;
output  [1:0] m_axi_output_0_ARLOCK;
output  [3:0] m_axi_output_0_ARCACHE;
output  [2:0] m_axi_output_0_ARPROT;
output  [3:0] m_axi_output_0_ARQOS;
output  [3:0] m_axi_output_0_ARREGION;
output  [C_M_AXI_OUTPUT_0_ARUSER_WIDTH - 1:0] m_axi_output_0_ARUSER;
input   m_axi_output_0_RVALID;
output   m_axi_output_0_RREADY;
input  [C_M_AXI_OUTPUT_0_DATA_WIDTH - 1:0] m_axi_output_0_RDATA;
input   m_axi_output_0_RLAST;
input  [C_M_AXI_OUTPUT_0_ID_WIDTH - 1:0] m_axi_output_0_RID;
input  [C_M_AXI_OUTPUT_0_RUSER_WIDTH - 1:0] m_axi_output_0_RUSER;
input  [1:0] m_axi_output_0_RRESP;
input   m_axi_output_0_BVALID;
output   m_axi_output_0_BREADY;
input  [1:0] m_axi_output_0_BRESP;
input  [C_M_AXI_OUTPUT_0_ID_WIDTH - 1:0] m_axi_output_0_BID;
input  [C_M_AXI_OUTPUT_0_BUSER_WIDTH - 1:0] m_axi_output_0_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] X_R;
wire   [63:0] X_I;
wire   [63:0] OUT_R;
wire   [63:0] OUT_I;
reg    input_1_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    input_0_blk_n_AR;
reg    output_1_blk_n_AW;
wire    ap_CS_fsm_state12;
reg    output_1_blk_n_B;
wire    ap_CS_fsm_state19;
reg    output_0_blk_n_AW;
reg    output_0_blk_n_B;
reg   [61:0] trunc_ln_reg_322;
reg   [61:0] trunc_ln2_reg_328;
reg   [61:0] trunc_ln3_reg_334;
reg   [61:0] trunc_ln4_reg_340;
reg   [9:0] X_R_i_address0;
reg    X_R_i_ce0;
reg    X_R_i_we0;
wire   [31:0] X_R_i_q0;
reg   [9:0] X_I_i_address0;
reg    X_I_i_ce0;
reg    X_I_i_we0;
wire   [31:0] X_I_i_q0;
reg   [7:0] OUT_R_o_0_address0;
reg    OUT_R_o_0_ce0;
reg    OUT_R_o_0_we0;
wire   [31:0] OUT_R_o_0_q0;
reg    OUT_R_o_0_ce1;
reg    OUT_R_o_0_we1;
reg   [7:0] OUT_R_o_1_address0;
reg    OUT_R_o_1_ce0;
reg    OUT_R_o_1_we0;
wire   [31:0] OUT_R_o_1_q0;
reg    OUT_R_o_1_ce1;
reg    OUT_R_o_1_we1;
reg   [7:0] OUT_R_o_2_address0;
reg    OUT_R_o_2_ce0;
reg    OUT_R_o_2_we0;
wire   [31:0] OUT_R_o_2_q0;
reg    OUT_R_o_2_ce1;
reg    OUT_R_o_2_we1;
reg   [7:0] OUT_R_o_3_address0;
reg    OUT_R_o_3_ce0;
reg    OUT_R_o_3_we0;
wire   [31:0] OUT_R_o_3_q0;
reg    OUT_R_o_3_ce1;
reg    OUT_R_o_3_we1;
reg   [7:0] OUT_I_o_0_address0;
reg    OUT_I_o_0_ce0;
reg    OUT_I_o_0_we0;
wire   [31:0] OUT_I_o_0_q0;
reg    OUT_I_o_0_ce1;
reg    OUT_I_o_0_we1;
reg   [7:0] OUT_I_o_1_address0;
reg    OUT_I_o_1_ce0;
reg    OUT_I_o_1_we0;
wire   [31:0] OUT_I_o_1_q0;
reg    OUT_I_o_1_ce1;
reg    OUT_I_o_1_we1;
reg   [7:0] OUT_I_o_2_address0;
reg    OUT_I_o_2_ce0;
reg    OUT_I_o_2_we0;
wire   [31:0] OUT_I_o_2_q0;
reg    OUT_I_o_2_ce1;
reg    OUT_I_o_2_we1;
reg   [7:0] OUT_I_o_3_address0;
reg    OUT_I_o_3_ce0;
reg    OUT_I_o_3_we0;
wire   [31:0] OUT_I_o_3_q0;
reg    OUT_I_o_3_ce1;
reg    OUT_I_o_3_we1;
wire    grp_fft_Pipeline_1_fu_186_ap_start;
wire    grp_fft_Pipeline_1_fu_186_ap_done;
wire    grp_fft_Pipeline_1_fu_186_ap_idle;
wire    grp_fft_Pipeline_1_fu_186_ap_ready;
wire    grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWVALID;
wire   [63:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWADDR;
wire   [0:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWID;
wire   [31:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWLEN;
wire   [2:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWSIZE;
wire   [1:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWBURST;
wire   [1:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWLOCK;
wire   [3:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWCACHE;
wire   [2:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWPROT;
wire   [3:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWQOS;
wire   [3:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWREGION;
wire   [0:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWUSER;
wire    grp_fft_Pipeline_1_fu_186_m_axi_input_1_WVALID;
wire   [31:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_WDATA;
wire   [3:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_WSTRB;
wire    grp_fft_Pipeline_1_fu_186_m_axi_input_1_WLAST;
wire   [0:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_WID;
wire   [0:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_WUSER;
wire    grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARVALID;
wire   [63:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARADDR;
wire   [0:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARID;
wire   [31:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARLEN;
wire   [2:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARSIZE;
wire   [1:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARBURST;
wire   [1:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARLOCK;
wire   [3:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARCACHE;
wire   [2:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARPROT;
wire   [3:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARQOS;
wire   [3:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARREGION;
wire   [0:0] grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARUSER;
wire    grp_fft_Pipeline_1_fu_186_m_axi_input_1_RREADY;
wire    grp_fft_Pipeline_1_fu_186_m_axi_input_1_BREADY;
wire   [9:0] grp_fft_Pipeline_1_fu_186_X_R_i_address0;
wire    grp_fft_Pipeline_1_fu_186_X_R_i_ce0;
wire    grp_fft_Pipeline_1_fu_186_X_R_i_we0;
wire   [31:0] grp_fft_Pipeline_1_fu_186_X_R_i_d0;
wire    grp_fft_Pipeline_2_fu_194_ap_start;
wire    grp_fft_Pipeline_2_fu_194_ap_done;
wire    grp_fft_Pipeline_2_fu_194_ap_idle;
wire    grp_fft_Pipeline_2_fu_194_ap_ready;
wire    grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWVALID;
wire   [63:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWADDR;
wire   [0:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWID;
wire   [31:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWLEN;
wire   [2:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWSIZE;
wire   [1:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWBURST;
wire   [1:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWLOCK;
wire   [3:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWCACHE;
wire   [2:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWPROT;
wire   [3:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWQOS;
wire   [3:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWREGION;
wire   [0:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWUSER;
wire    grp_fft_Pipeline_2_fu_194_m_axi_input_0_WVALID;
wire   [31:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_WDATA;
wire   [3:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_WSTRB;
wire    grp_fft_Pipeline_2_fu_194_m_axi_input_0_WLAST;
wire   [0:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_WID;
wire   [0:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_WUSER;
wire    grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARVALID;
wire   [63:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARADDR;
wire   [0:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARID;
wire   [31:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARLEN;
wire   [2:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARSIZE;
wire   [1:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARBURST;
wire   [1:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARLOCK;
wire   [3:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARCACHE;
wire   [2:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARPROT;
wire   [3:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARQOS;
wire   [3:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARREGION;
wire   [0:0] grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARUSER;
wire    grp_fft_Pipeline_2_fu_194_m_axi_input_0_RREADY;
wire    grp_fft_Pipeline_2_fu_194_m_axi_input_0_BREADY;
wire   [9:0] grp_fft_Pipeline_2_fu_194_X_I_i_address0;
wire    grp_fft_Pipeline_2_fu_194_X_I_i_ce0;
wire    grp_fft_Pipeline_2_fu_194_X_I_i_we0;
wire   [31:0] grp_fft_Pipeline_2_fu_194_X_I_i_d0;
wire    grp_fft_exec_fu_202_ap_start;
wire    grp_fft_exec_fu_202_ap_done;
wire    grp_fft_exec_fu_202_ap_idle;
wire    grp_fft_exec_fu_202_ap_ready;
wire   [9:0] grp_fft_exec_fu_202_X_R_address0;
wire    grp_fft_exec_fu_202_X_R_ce0;
wire   [9:0] grp_fft_exec_fu_202_X_I_address0;
wire    grp_fft_exec_fu_202_X_I_ce0;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_0_address0;
wire    grp_fft_exec_fu_202_OUT_R_0_ce0;
wire    grp_fft_exec_fu_202_OUT_R_0_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_0_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_0_address1;
wire    grp_fft_exec_fu_202_OUT_R_0_ce1;
wire    grp_fft_exec_fu_202_OUT_R_0_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_0_d1;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_1_address0;
wire    grp_fft_exec_fu_202_OUT_R_1_ce0;
wire    grp_fft_exec_fu_202_OUT_R_1_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_1_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_1_address1;
wire    grp_fft_exec_fu_202_OUT_R_1_ce1;
wire    grp_fft_exec_fu_202_OUT_R_1_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_1_d1;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_2_address0;
wire    grp_fft_exec_fu_202_OUT_R_2_ce0;
wire    grp_fft_exec_fu_202_OUT_R_2_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_2_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_2_address1;
wire    grp_fft_exec_fu_202_OUT_R_2_ce1;
wire    grp_fft_exec_fu_202_OUT_R_2_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_2_d1;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_3_address0;
wire    grp_fft_exec_fu_202_OUT_R_3_ce0;
wire    grp_fft_exec_fu_202_OUT_R_3_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_3_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_R_3_address1;
wire    grp_fft_exec_fu_202_OUT_R_3_ce1;
wire    grp_fft_exec_fu_202_OUT_R_3_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_R_3_d1;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_0_address0;
wire    grp_fft_exec_fu_202_OUT_I_0_ce0;
wire    grp_fft_exec_fu_202_OUT_I_0_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_0_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_0_address1;
wire    grp_fft_exec_fu_202_OUT_I_0_ce1;
wire    grp_fft_exec_fu_202_OUT_I_0_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_0_d1;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_1_address0;
wire    grp_fft_exec_fu_202_OUT_I_1_ce0;
wire    grp_fft_exec_fu_202_OUT_I_1_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_1_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_1_address1;
wire    grp_fft_exec_fu_202_OUT_I_1_ce1;
wire    grp_fft_exec_fu_202_OUT_I_1_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_1_d1;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_2_address0;
wire    grp_fft_exec_fu_202_OUT_I_2_ce0;
wire    grp_fft_exec_fu_202_OUT_I_2_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_2_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_2_address1;
wire    grp_fft_exec_fu_202_OUT_I_2_ce1;
wire    grp_fft_exec_fu_202_OUT_I_2_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_2_d1;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_3_address0;
wire    grp_fft_exec_fu_202_OUT_I_3_ce0;
wire    grp_fft_exec_fu_202_OUT_I_3_we0;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_3_d0;
wire   [7:0] grp_fft_exec_fu_202_OUT_I_3_address1;
wire    grp_fft_exec_fu_202_OUT_I_3_ce1;
wire    grp_fft_exec_fu_202_OUT_I_3_we1;
wire   [31:0] grp_fft_exec_fu_202_OUT_I_3_d1;
wire    grp_fft_Pipeline_3_fu_220_ap_start;
wire    grp_fft_Pipeline_3_fu_220_ap_done;
wire    grp_fft_Pipeline_3_fu_220_ap_idle;
wire    grp_fft_Pipeline_3_fu_220_ap_ready;
wire    grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWVALID;
wire   [63:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWADDR;
wire   [0:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWID;
wire   [31:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWLEN;
wire   [2:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWSIZE;
wire   [1:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWBURST;
wire   [1:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWLOCK;
wire   [3:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWCACHE;
wire   [2:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWPROT;
wire   [3:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWQOS;
wire   [3:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWREGION;
wire   [0:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWUSER;
wire    grp_fft_Pipeline_3_fu_220_m_axi_output_1_WVALID;
wire   [31:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_WDATA;
wire   [3:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_WSTRB;
wire    grp_fft_Pipeline_3_fu_220_m_axi_output_1_WLAST;
wire   [0:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_WID;
wire   [0:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_WUSER;
wire    grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARVALID;
wire   [63:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARADDR;
wire   [0:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARID;
wire   [31:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARLEN;
wire   [2:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARSIZE;
wire   [1:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARBURST;
wire   [1:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARLOCK;
wire   [3:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARCACHE;
wire   [2:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARPROT;
wire   [3:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARQOS;
wire   [3:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARREGION;
wire   [0:0] grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARUSER;
wire    grp_fft_Pipeline_3_fu_220_m_axi_output_1_RREADY;
wire    grp_fft_Pipeline_3_fu_220_m_axi_output_1_BREADY;
wire   [7:0] grp_fft_Pipeline_3_fu_220_OUT_R_o_0_address0;
wire    grp_fft_Pipeline_3_fu_220_OUT_R_o_0_ce0;
wire   [7:0] grp_fft_Pipeline_3_fu_220_OUT_R_o_1_address0;
wire    grp_fft_Pipeline_3_fu_220_OUT_R_o_1_ce0;
wire   [7:0] grp_fft_Pipeline_3_fu_220_OUT_R_o_2_address0;
wire    grp_fft_Pipeline_3_fu_220_OUT_R_o_2_ce0;
wire   [7:0] grp_fft_Pipeline_3_fu_220_OUT_R_o_3_address0;
wire    grp_fft_Pipeline_3_fu_220_OUT_R_o_3_ce0;
wire    grp_fft_Pipeline_4_fu_231_ap_start;
wire    grp_fft_Pipeline_4_fu_231_ap_done;
wire    grp_fft_Pipeline_4_fu_231_ap_idle;
wire    grp_fft_Pipeline_4_fu_231_ap_ready;
wire    grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWVALID;
wire   [63:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWADDR;
wire   [0:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWID;
wire   [31:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWLEN;
wire   [2:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWSIZE;
wire   [1:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWBURST;
wire   [1:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWLOCK;
wire   [3:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWCACHE;
wire   [2:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWPROT;
wire   [3:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWQOS;
wire   [3:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWREGION;
wire   [0:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWUSER;
wire    grp_fft_Pipeline_4_fu_231_m_axi_output_0_WVALID;
wire   [31:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_WDATA;
wire   [3:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_WSTRB;
wire    grp_fft_Pipeline_4_fu_231_m_axi_output_0_WLAST;
wire   [0:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_WID;
wire   [0:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_WUSER;
wire    grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARVALID;
wire   [63:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARADDR;
wire   [0:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARID;
wire   [31:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARLEN;
wire   [2:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARSIZE;
wire   [1:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARBURST;
wire   [1:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARLOCK;
wire   [3:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARCACHE;
wire   [2:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARPROT;
wire   [3:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARQOS;
wire   [3:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARREGION;
wire   [0:0] grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARUSER;
wire    grp_fft_Pipeline_4_fu_231_m_axi_output_0_RREADY;
wire    grp_fft_Pipeline_4_fu_231_m_axi_output_0_BREADY;
wire   [7:0] grp_fft_Pipeline_4_fu_231_OUT_I_o_0_address0;
wire    grp_fft_Pipeline_4_fu_231_OUT_I_o_0_ce0;
wire   [7:0] grp_fft_Pipeline_4_fu_231_OUT_I_o_1_address0;
wire    grp_fft_Pipeline_4_fu_231_OUT_I_o_1_ce0;
wire   [7:0] grp_fft_Pipeline_4_fu_231_OUT_I_o_2_address0;
wire    grp_fft_Pipeline_4_fu_231_OUT_I_o_2_ce0;
wire   [7:0] grp_fft_Pipeline_4_fu_231_OUT_I_o_3_address0;
wire    grp_fft_Pipeline_4_fu_231_OUT_I_o_3_ce0;
wire    input_0_AWREADY;
wire    input_0_WREADY;
reg    input_0_ARVALID;
wire    input_0_ARREADY;
reg   [63:0] input_0_ARADDR;
reg   [31:0] input_0_ARLEN;
wire    input_0_RVALID;
reg    input_0_RREADY;
wire   [31:0] input_0_RDATA;
wire   [8:0] input_0_RFIFONUM;
wire    input_0_BVALID;
wire    input_1_AWREADY;
wire    input_1_WREADY;
reg    input_1_ARVALID;
wire    input_1_ARREADY;
reg   [63:0] input_1_ARADDR;
reg   [31:0] input_1_ARLEN;
wire    input_1_RVALID;
reg    input_1_RREADY;
wire   [31:0] input_1_RDATA;
wire   [8:0] input_1_RFIFONUM;
wire    input_1_BVALID;
reg    output_0_AWVALID;
wire    output_0_AWREADY;
reg   [63:0] output_0_AWADDR;
reg   [31:0] output_0_AWLEN;
reg    output_0_WVALID;
wire    output_0_WREADY;
wire    output_0_ARREADY;
wire    output_0_RVALID;
wire   [31:0] output_0_RDATA;
wire   [8:0] output_0_RFIFONUM;
wire    output_0_BVALID;
reg    output_0_BREADY;
reg    output_1_AWVALID;
wire    output_1_AWREADY;
reg   [63:0] output_1_AWADDR;
reg   [31:0] output_1_AWLEN;
reg    output_1_WVALID;
wire    output_1_WREADY;
wire    output_1_ARREADY;
wire    output_1_RVALID;
wire   [31:0] output_1_RDATA;
wire   [8:0] output_1_RFIFONUM;
wire    output_1_BVALID;
reg    output_1_BREADY;
reg    grp_fft_Pipeline_1_fu_186_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_fft_Pipeline_2_fu_194_ap_start_reg;
reg    grp_fft_exec_fu_202_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_fft_Pipeline_3_fu_220_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_fft_Pipeline_4_fu_231_ap_start_reg;
wire  signed [63:0] sext_ln33_fu_282_p1;
wire  signed [63:0] sext_ln34_fu_292_p1;
wire  signed [63:0] sext_ln36_fu_302_p1;
wire  signed [63:0] sext_ln37_fu_312_p1;
reg    ap_block_state2_io;
reg    ap_block_state12_io;
reg    ap_block_state19;
reg   [18:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_block_state10_on_subcall_done;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_block_state14_on_subcall_done;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 grp_fft_Pipeline_1_fu_186_ap_start_reg = 1'b0;
#0 grp_fft_Pipeline_2_fu_194_ap_start_reg = 1'b0;
#0 grp_fft_exec_fu_202_ap_start_reg = 1'b0;
#0 grp_fft_Pipeline_3_fu_220_ap_start_reg = 1'b0;
#0 grp_fft_Pipeline_4_fu_231_ap_start_reg = 1'b0;
end

fft_X_R_i_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_i_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(X_R_i_address0),
    .ce0(X_R_i_ce0),
    .we0(X_R_i_we0),
    .d0(grp_fft_Pipeline_1_fu_186_X_R_i_d0),
    .q0(X_R_i_q0)
);

fft_X_R_i_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_i_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(X_I_i_address0),
    .ce0(X_I_i_ce0),
    .we0(X_I_i_we0),
    .d0(grp_fft_Pipeline_2_fu_194_X_I_i_d0),
    .q0(X_I_i_q0)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_R_o_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_R_o_0_address0),
    .ce0(OUT_R_o_0_ce0),
    .we0(OUT_R_o_0_we0),
    .d0(grp_fft_exec_fu_202_OUT_R_0_d0),
    .q0(OUT_R_o_0_q0),
    .address1(grp_fft_exec_fu_202_OUT_R_0_address1),
    .ce1(OUT_R_o_0_ce1),
    .we1(OUT_R_o_0_we1),
    .d1(grp_fft_exec_fu_202_OUT_R_0_d1)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_R_o_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_R_o_1_address0),
    .ce0(OUT_R_o_1_ce0),
    .we0(OUT_R_o_1_we0),
    .d0(grp_fft_exec_fu_202_OUT_R_1_d0),
    .q0(OUT_R_o_1_q0),
    .address1(grp_fft_exec_fu_202_OUT_R_1_address1),
    .ce1(OUT_R_o_1_ce1),
    .we1(OUT_R_o_1_we1),
    .d1(grp_fft_exec_fu_202_OUT_R_1_d1)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_R_o_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_R_o_2_address0),
    .ce0(OUT_R_o_2_ce0),
    .we0(OUT_R_o_2_we0),
    .d0(grp_fft_exec_fu_202_OUT_R_2_d0),
    .q0(OUT_R_o_2_q0),
    .address1(grp_fft_exec_fu_202_OUT_R_2_address1),
    .ce1(OUT_R_o_2_ce1),
    .we1(OUT_R_o_2_we1),
    .d1(grp_fft_exec_fu_202_OUT_R_2_d1)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_R_o_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_R_o_3_address0),
    .ce0(OUT_R_o_3_ce0),
    .we0(OUT_R_o_3_we0),
    .d0(grp_fft_exec_fu_202_OUT_R_3_d0),
    .q0(OUT_R_o_3_q0),
    .address1(grp_fft_exec_fu_202_OUT_R_3_address1),
    .ce1(OUT_R_o_3_ce1),
    .we1(OUT_R_o_3_we1),
    .d1(grp_fft_exec_fu_202_OUT_R_3_d1)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_I_o_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_I_o_0_address0),
    .ce0(OUT_I_o_0_ce0),
    .we0(OUT_I_o_0_we0),
    .d0(grp_fft_exec_fu_202_OUT_I_0_d0),
    .q0(OUT_I_o_0_q0),
    .address1(grp_fft_exec_fu_202_OUT_I_0_address1),
    .ce1(OUT_I_o_0_ce1),
    .we1(OUT_I_o_0_we1),
    .d1(grp_fft_exec_fu_202_OUT_I_0_d1)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_I_o_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_I_o_1_address0),
    .ce0(OUT_I_o_1_ce0),
    .we0(OUT_I_o_1_we0),
    .d0(grp_fft_exec_fu_202_OUT_I_1_d0),
    .q0(OUT_I_o_1_q0),
    .address1(grp_fft_exec_fu_202_OUT_I_1_address1),
    .ce1(OUT_I_o_1_ce1),
    .we1(OUT_I_o_1_we1),
    .d1(grp_fft_exec_fu_202_OUT_I_1_d1)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_I_o_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_I_o_2_address0),
    .ce0(OUT_I_o_2_ce0),
    .we0(OUT_I_o_2_we0),
    .d0(grp_fft_exec_fu_202_OUT_I_2_d0),
    .q0(OUT_I_o_2_q0),
    .address1(grp_fft_exec_fu_202_OUT_I_2_address1),
    .ce1(OUT_I_o_2_ce1),
    .we1(OUT_I_o_2_we1),
    .d1(grp_fft_exec_fu_202_OUT_I_2_d1)
);

fft_OUT_R_o_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
OUT_I_o_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(OUT_I_o_3_address0),
    .ce0(OUT_I_o_3_ce0),
    .we0(OUT_I_o_3_we0),
    .d0(grp_fft_exec_fu_202_OUT_I_3_d0),
    .q0(OUT_I_o_3_q0),
    .address1(grp_fft_exec_fu_202_OUT_I_3_address1),
    .ce1(OUT_I_o_3_ce1),
    .we1(OUT_I_o_3_we1),
    .d1(grp_fft_exec_fu_202_OUT_I_3_d1)
);

fft_fft_Pipeline_1 grp_fft_Pipeline_1_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fft_Pipeline_1_fu_186_ap_start),
    .ap_done(grp_fft_Pipeline_1_fu_186_ap_done),
    .ap_idle(grp_fft_Pipeline_1_fu_186_ap_idle),
    .ap_ready(grp_fft_Pipeline_1_fu_186_ap_ready),
    .m_axi_input_1_AWVALID(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWVALID),
    .m_axi_input_1_AWREADY(1'b0),
    .m_axi_input_1_AWADDR(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWADDR),
    .m_axi_input_1_AWID(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWID),
    .m_axi_input_1_AWLEN(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWLEN),
    .m_axi_input_1_AWSIZE(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWSIZE),
    .m_axi_input_1_AWBURST(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWBURST),
    .m_axi_input_1_AWLOCK(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWLOCK),
    .m_axi_input_1_AWCACHE(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWCACHE),
    .m_axi_input_1_AWPROT(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWPROT),
    .m_axi_input_1_AWQOS(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWQOS),
    .m_axi_input_1_AWREGION(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWREGION),
    .m_axi_input_1_AWUSER(grp_fft_Pipeline_1_fu_186_m_axi_input_1_AWUSER),
    .m_axi_input_1_WVALID(grp_fft_Pipeline_1_fu_186_m_axi_input_1_WVALID),
    .m_axi_input_1_WREADY(1'b0),
    .m_axi_input_1_WDATA(grp_fft_Pipeline_1_fu_186_m_axi_input_1_WDATA),
    .m_axi_input_1_WSTRB(grp_fft_Pipeline_1_fu_186_m_axi_input_1_WSTRB),
    .m_axi_input_1_WLAST(grp_fft_Pipeline_1_fu_186_m_axi_input_1_WLAST),
    .m_axi_input_1_WID(grp_fft_Pipeline_1_fu_186_m_axi_input_1_WID),
    .m_axi_input_1_WUSER(grp_fft_Pipeline_1_fu_186_m_axi_input_1_WUSER),
    .m_axi_input_1_ARVALID(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARVALID),
    .m_axi_input_1_ARREADY(input_1_ARREADY),
    .m_axi_input_1_ARADDR(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARADDR),
    .m_axi_input_1_ARID(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARID),
    .m_axi_input_1_ARLEN(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARLEN),
    .m_axi_input_1_ARSIZE(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARSIZE),
    .m_axi_input_1_ARBURST(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARBURST),
    .m_axi_input_1_ARLOCK(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARLOCK),
    .m_axi_input_1_ARCACHE(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARCACHE),
    .m_axi_input_1_ARPROT(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARPROT),
    .m_axi_input_1_ARQOS(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARQOS),
    .m_axi_input_1_ARREGION(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARREGION),
    .m_axi_input_1_ARUSER(grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARUSER),
    .m_axi_input_1_RVALID(input_1_RVALID),
    .m_axi_input_1_RREADY(grp_fft_Pipeline_1_fu_186_m_axi_input_1_RREADY),
    .m_axi_input_1_RDATA(input_1_RDATA),
    .m_axi_input_1_RLAST(1'b0),
    .m_axi_input_1_RID(1'd0),
    .m_axi_input_1_RFIFONUM(input_1_RFIFONUM),
    .m_axi_input_1_RUSER(1'd0),
    .m_axi_input_1_RRESP(2'd0),
    .m_axi_input_1_BVALID(1'b0),
    .m_axi_input_1_BREADY(grp_fft_Pipeline_1_fu_186_m_axi_input_1_BREADY),
    .m_axi_input_1_BRESP(2'd0),
    .m_axi_input_1_BID(1'd0),
    .m_axi_input_1_BUSER(1'd0),
    .sext_ln33(trunc_ln_reg_322),
    .X_R_i_address0(grp_fft_Pipeline_1_fu_186_X_R_i_address0),
    .X_R_i_ce0(grp_fft_Pipeline_1_fu_186_X_R_i_ce0),
    .X_R_i_we0(grp_fft_Pipeline_1_fu_186_X_R_i_we0),
    .X_R_i_d0(grp_fft_Pipeline_1_fu_186_X_R_i_d0)
);

fft_fft_Pipeline_2 grp_fft_Pipeline_2_fu_194(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fft_Pipeline_2_fu_194_ap_start),
    .ap_done(grp_fft_Pipeline_2_fu_194_ap_done),
    .ap_idle(grp_fft_Pipeline_2_fu_194_ap_idle),
    .ap_ready(grp_fft_Pipeline_2_fu_194_ap_ready),
    .m_axi_input_0_AWVALID(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWVALID),
    .m_axi_input_0_AWREADY(1'b0),
    .m_axi_input_0_AWADDR(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWADDR),
    .m_axi_input_0_AWID(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWID),
    .m_axi_input_0_AWLEN(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWLEN),
    .m_axi_input_0_AWSIZE(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWSIZE),
    .m_axi_input_0_AWBURST(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWBURST),
    .m_axi_input_0_AWLOCK(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWLOCK),
    .m_axi_input_0_AWCACHE(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWCACHE),
    .m_axi_input_0_AWPROT(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWPROT),
    .m_axi_input_0_AWQOS(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWQOS),
    .m_axi_input_0_AWREGION(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWREGION),
    .m_axi_input_0_AWUSER(grp_fft_Pipeline_2_fu_194_m_axi_input_0_AWUSER),
    .m_axi_input_0_WVALID(grp_fft_Pipeline_2_fu_194_m_axi_input_0_WVALID),
    .m_axi_input_0_WREADY(1'b0),
    .m_axi_input_0_WDATA(grp_fft_Pipeline_2_fu_194_m_axi_input_0_WDATA),
    .m_axi_input_0_WSTRB(grp_fft_Pipeline_2_fu_194_m_axi_input_0_WSTRB),
    .m_axi_input_0_WLAST(grp_fft_Pipeline_2_fu_194_m_axi_input_0_WLAST),
    .m_axi_input_0_WID(grp_fft_Pipeline_2_fu_194_m_axi_input_0_WID),
    .m_axi_input_0_WUSER(grp_fft_Pipeline_2_fu_194_m_axi_input_0_WUSER),
    .m_axi_input_0_ARVALID(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARVALID),
    .m_axi_input_0_ARREADY(input_0_ARREADY),
    .m_axi_input_0_ARADDR(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARADDR),
    .m_axi_input_0_ARID(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARID),
    .m_axi_input_0_ARLEN(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARLEN),
    .m_axi_input_0_ARSIZE(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARSIZE),
    .m_axi_input_0_ARBURST(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARBURST),
    .m_axi_input_0_ARLOCK(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARLOCK),
    .m_axi_input_0_ARCACHE(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARCACHE),
    .m_axi_input_0_ARPROT(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARPROT),
    .m_axi_input_0_ARQOS(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARQOS),
    .m_axi_input_0_ARREGION(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARREGION),
    .m_axi_input_0_ARUSER(grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARUSER),
    .m_axi_input_0_RVALID(input_0_RVALID),
    .m_axi_input_0_RREADY(grp_fft_Pipeline_2_fu_194_m_axi_input_0_RREADY),
    .m_axi_input_0_RDATA(input_0_RDATA),
    .m_axi_input_0_RLAST(1'b0),
    .m_axi_input_0_RID(1'd0),
    .m_axi_input_0_RFIFONUM(input_0_RFIFONUM),
    .m_axi_input_0_RUSER(1'd0),
    .m_axi_input_0_RRESP(2'd0),
    .m_axi_input_0_BVALID(1'b0),
    .m_axi_input_0_BREADY(grp_fft_Pipeline_2_fu_194_m_axi_input_0_BREADY),
    .m_axi_input_0_BRESP(2'd0),
    .m_axi_input_0_BID(1'd0),
    .m_axi_input_0_BUSER(1'd0),
    .sext_ln34(trunc_ln2_reg_328),
    .X_I_i_address0(grp_fft_Pipeline_2_fu_194_X_I_i_address0),
    .X_I_i_ce0(grp_fft_Pipeline_2_fu_194_X_I_i_ce0),
    .X_I_i_we0(grp_fft_Pipeline_2_fu_194_X_I_i_we0),
    .X_I_i_d0(grp_fft_Pipeline_2_fu_194_X_I_i_d0)
);

fft_fft_exec grp_fft_exec_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fft_exec_fu_202_ap_start),
    .ap_done(grp_fft_exec_fu_202_ap_done),
    .ap_idle(grp_fft_exec_fu_202_ap_idle),
    .ap_ready(grp_fft_exec_fu_202_ap_ready),
    .X_R_address0(grp_fft_exec_fu_202_X_R_address0),
    .X_R_ce0(grp_fft_exec_fu_202_X_R_ce0),
    .X_R_q0(X_R_i_q0),
    .X_I_address0(grp_fft_exec_fu_202_X_I_address0),
    .X_I_ce0(grp_fft_exec_fu_202_X_I_ce0),
    .X_I_q0(X_I_i_q0),
    .OUT_R_0_address0(grp_fft_exec_fu_202_OUT_R_0_address0),
    .OUT_R_0_ce0(grp_fft_exec_fu_202_OUT_R_0_ce0),
    .OUT_R_0_we0(grp_fft_exec_fu_202_OUT_R_0_we0),
    .OUT_R_0_d0(grp_fft_exec_fu_202_OUT_R_0_d0),
    .OUT_R_0_address1(grp_fft_exec_fu_202_OUT_R_0_address1),
    .OUT_R_0_ce1(grp_fft_exec_fu_202_OUT_R_0_ce1),
    .OUT_R_0_we1(grp_fft_exec_fu_202_OUT_R_0_we1),
    .OUT_R_0_d1(grp_fft_exec_fu_202_OUT_R_0_d1),
    .OUT_R_1_address0(grp_fft_exec_fu_202_OUT_R_1_address0),
    .OUT_R_1_ce0(grp_fft_exec_fu_202_OUT_R_1_ce0),
    .OUT_R_1_we0(grp_fft_exec_fu_202_OUT_R_1_we0),
    .OUT_R_1_d0(grp_fft_exec_fu_202_OUT_R_1_d0),
    .OUT_R_1_address1(grp_fft_exec_fu_202_OUT_R_1_address1),
    .OUT_R_1_ce1(grp_fft_exec_fu_202_OUT_R_1_ce1),
    .OUT_R_1_we1(grp_fft_exec_fu_202_OUT_R_1_we1),
    .OUT_R_1_d1(grp_fft_exec_fu_202_OUT_R_1_d1),
    .OUT_R_2_address0(grp_fft_exec_fu_202_OUT_R_2_address0),
    .OUT_R_2_ce0(grp_fft_exec_fu_202_OUT_R_2_ce0),
    .OUT_R_2_we0(grp_fft_exec_fu_202_OUT_R_2_we0),
    .OUT_R_2_d0(grp_fft_exec_fu_202_OUT_R_2_d0),
    .OUT_R_2_address1(grp_fft_exec_fu_202_OUT_R_2_address1),
    .OUT_R_2_ce1(grp_fft_exec_fu_202_OUT_R_2_ce1),
    .OUT_R_2_we1(grp_fft_exec_fu_202_OUT_R_2_we1),
    .OUT_R_2_d1(grp_fft_exec_fu_202_OUT_R_2_d1),
    .OUT_R_3_address0(grp_fft_exec_fu_202_OUT_R_3_address0),
    .OUT_R_3_ce0(grp_fft_exec_fu_202_OUT_R_3_ce0),
    .OUT_R_3_we0(grp_fft_exec_fu_202_OUT_R_3_we0),
    .OUT_R_3_d0(grp_fft_exec_fu_202_OUT_R_3_d0),
    .OUT_R_3_address1(grp_fft_exec_fu_202_OUT_R_3_address1),
    .OUT_R_3_ce1(grp_fft_exec_fu_202_OUT_R_3_ce1),
    .OUT_R_3_we1(grp_fft_exec_fu_202_OUT_R_3_we1),
    .OUT_R_3_d1(grp_fft_exec_fu_202_OUT_R_3_d1),
    .OUT_I_0_address0(grp_fft_exec_fu_202_OUT_I_0_address0),
    .OUT_I_0_ce0(grp_fft_exec_fu_202_OUT_I_0_ce0),
    .OUT_I_0_we0(grp_fft_exec_fu_202_OUT_I_0_we0),
    .OUT_I_0_d0(grp_fft_exec_fu_202_OUT_I_0_d0),
    .OUT_I_0_address1(grp_fft_exec_fu_202_OUT_I_0_address1),
    .OUT_I_0_ce1(grp_fft_exec_fu_202_OUT_I_0_ce1),
    .OUT_I_0_we1(grp_fft_exec_fu_202_OUT_I_0_we1),
    .OUT_I_0_d1(grp_fft_exec_fu_202_OUT_I_0_d1),
    .OUT_I_1_address0(grp_fft_exec_fu_202_OUT_I_1_address0),
    .OUT_I_1_ce0(grp_fft_exec_fu_202_OUT_I_1_ce0),
    .OUT_I_1_we0(grp_fft_exec_fu_202_OUT_I_1_we0),
    .OUT_I_1_d0(grp_fft_exec_fu_202_OUT_I_1_d0),
    .OUT_I_1_address1(grp_fft_exec_fu_202_OUT_I_1_address1),
    .OUT_I_1_ce1(grp_fft_exec_fu_202_OUT_I_1_ce1),
    .OUT_I_1_we1(grp_fft_exec_fu_202_OUT_I_1_we1),
    .OUT_I_1_d1(grp_fft_exec_fu_202_OUT_I_1_d1),
    .OUT_I_2_address0(grp_fft_exec_fu_202_OUT_I_2_address0),
    .OUT_I_2_ce0(grp_fft_exec_fu_202_OUT_I_2_ce0),
    .OUT_I_2_we0(grp_fft_exec_fu_202_OUT_I_2_we0),
    .OUT_I_2_d0(grp_fft_exec_fu_202_OUT_I_2_d0),
    .OUT_I_2_address1(grp_fft_exec_fu_202_OUT_I_2_address1),
    .OUT_I_2_ce1(grp_fft_exec_fu_202_OUT_I_2_ce1),
    .OUT_I_2_we1(grp_fft_exec_fu_202_OUT_I_2_we1),
    .OUT_I_2_d1(grp_fft_exec_fu_202_OUT_I_2_d1),
    .OUT_I_3_address0(grp_fft_exec_fu_202_OUT_I_3_address0),
    .OUT_I_3_ce0(grp_fft_exec_fu_202_OUT_I_3_ce0),
    .OUT_I_3_we0(grp_fft_exec_fu_202_OUT_I_3_we0),
    .OUT_I_3_d0(grp_fft_exec_fu_202_OUT_I_3_d0),
    .OUT_I_3_address1(grp_fft_exec_fu_202_OUT_I_3_address1),
    .OUT_I_3_ce1(grp_fft_exec_fu_202_OUT_I_3_ce1),
    .OUT_I_3_we1(grp_fft_exec_fu_202_OUT_I_3_we1),
    .OUT_I_3_d1(grp_fft_exec_fu_202_OUT_I_3_d1)
);

fft_fft_Pipeline_3 grp_fft_Pipeline_3_fu_220(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fft_Pipeline_3_fu_220_ap_start),
    .ap_done(grp_fft_Pipeline_3_fu_220_ap_done),
    .ap_idle(grp_fft_Pipeline_3_fu_220_ap_idle),
    .ap_ready(grp_fft_Pipeline_3_fu_220_ap_ready),
    .m_axi_output_1_AWVALID(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWVALID),
    .m_axi_output_1_AWREADY(output_1_AWREADY),
    .m_axi_output_1_AWADDR(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWADDR),
    .m_axi_output_1_AWID(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWID),
    .m_axi_output_1_AWLEN(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWLEN),
    .m_axi_output_1_AWSIZE(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWSIZE),
    .m_axi_output_1_AWBURST(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWBURST),
    .m_axi_output_1_AWLOCK(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWLOCK),
    .m_axi_output_1_AWCACHE(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWCACHE),
    .m_axi_output_1_AWPROT(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWPROT),
    .m_axi_output_1_AWQOS(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWQOS),
    .m_axi_output_1_AWREGION(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWREGION),
    .m_axi_output_1_AWUSER(grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWUSER),
    .m_axi_output_1_WVALID(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WVALID),
    .m_axi_output_1_WREADY(output_1_WREADY),
    .m_axi_output_1_WDATA(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WDATA),
    .m_axi_output_1_WSTRB(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WSTRB),
    .m_axi_output_1_WLAST(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WLAST),
    .m_axi_output_1_WID(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WID),
    .m_axi_output_1_WUSER(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WUSER),
    .m_axi_output_1_ARVALID(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARVALID),
    .m_axi_output_1_ARREADY(1'b0),
    .m_axi_output_1_ARADDR(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARADDR),
    .m_axi_output_1_ARID(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARID),
    .m_axi_output_1_ARLEN(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARLEN),
    .m_axi_output_1_ARSIZE(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARSIZE),
    .m_axi_output_1_ARBURST(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARBURST),
    .m_axi_output_1_ARLOCK(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARLOCK),
    .m_axi_output_1_ARCACHE(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARCACHE),
    .m_axi_output_1_ARPROT(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARPROT),
    .m_axi_output_1_ARQOS(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARQOS),
    .m_axi_output_1_ARREGION(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARREGION),
    .m_axi_output_1_ARUSER(grp_fft_Pipeline_3_fu_220_m_axi_output_1_ARUSER),
    .m_axi_output_1_RVALID(1'b0),
    .m_axi_output_1_RREADY(grp_fft_Pipeline_3_fu_220_m_axi_output_1_RREADY),
    .m_axi_output_1_RDATA(32'd0),
    .m_axi_output_1_RLAST(1'b0),
    .m_axi_output_1_RID(1'd0),
    .m_axi_output_1_RFIFONUM(9'd0),
    .m_axi_output_1_RUSER(1'd0),
    .m_axi_output_1_RRESP(2'd0),
    .m_axi_output_1_BVALID(output_1_BVALID),
    .m_axi_output_1_BREADY(grp_fft_Pipeline_3_fu_220_m_axi_output_1_BREADY),
    .m_axi_output_1_BRESP(2'd0),
    .m_axi_output_1_BID(1'd0),
    .m_axi_output_1_BUSER(1'd0),
    .sext_ln36(trunc_ln3_reg_334),
    .OUT_R_o_0_address0(grp_fft_Pipeline_3_fu_220_OUT_R_o_0_address0),
    .OUT_R_o_0_ce0(grp_fft_Pipeline_3_fu_220_OUT_R_o_0_ce0),
    .OUT_R_o_0_q0(OUT_R_o_0_q0),
    .OUT_R_o_1_address0(grp_fft_Pipeline_3_fu_220_OUT_R_o_1_address0),
    .OUT_R_o_1_ce0(grp_fft_Pipeline_3_fu_220_OUT_R_o_1_ce0),
    .OUT_R_o_1_q0(OUT_R_o_1_q0),
    .OUT_R_o_2_address0(grp_fft_Pipeline_3_fu_220_OUT_R_o_2_address0),
    .OUT_R_o_2_ce0(grp_fft_Pipeline_3_fu_220_OUT_R_o_2_ce0),
    .OUT_R_o_2_q0(OUT_R_o_2_q0),
    .OUT_R_o_3_address0(grp_fft_Pipeline_3_fu_220_OUT_R_o_3_address0),
    .OUT_R_o_3_ce0(grp_fft_Pipeline_3_fu_220_OUT_R_o_3_ce0),
    .OUT_R_o_3_q0(OUT_R_o_3_q0)
);

fft_fft_Pipeline_4 grp_fft_Pipeline_4_fu_231(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fft_Pipeline_4_fu_231_ap_start),
    .ap_done(grp_fft_Pipeline_4_fu_231_ap_done),
    .ap_idle(grp_fft_Pipeline_4_fu_231_ap_idle),
    .ap_ready(grp_fft_Pipeline_4_fu_231_ap_ready),
    .m_axi_output_0_AWVALID(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWVALID),
    .m_axi_output_0_AWREADY(output_0_AWREADY),
    .m_axi_output_0_AWADDR(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWADDR),
    .m_axi_output_0_AWID(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWID),
    .m_axi_output_0_AWLEN(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWLEN),
    .m_axi_output_0_AWSIZE(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWSIZE),
    .m_axi_output_0_AWBURST(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWBURST),
    .m_axi_output_0_AWLOCK(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWLOCK),
    .m_axi_output_0_AWCACHE(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWCACHE),
    .m_axi_output_0_AWPROT(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWPROT),
    .m_axi_output_0_AWQOS(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWQOS),
    .m_axi_output_0_AWREGION(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWREGION),
    .m_axi_output_0_AWUSER(grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWUSER),
    .m_axi_output_0_WVALID(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WVALID),
    .m_axi_output_0_WREADY(output_0_WREADY),
    .m_axi_output_0_WDATA(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WDATA),
    .m_axi_output_0_WSTRB(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WSTRB),
    .m_axi_output_0_WLAST(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WLAST),
    .m_axi_output_0_WID(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WID),
    .m_axi_output_0_WUSER(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WUSER),
    .m_axi_output_0_ARVALID(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARVALID),
    .m_axi_output_0_ARREADY(1'b0),
    .m_axi_output_0_ARADDR(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARADDR),
    .m_axi_output_0_ARID(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARID),
    .m_axi_output_0_ARLEN(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARLEN),
    .m_axi_output_0_ARSIZE(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARSIZE),
    .m_axi_output_0_ARBURST(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARBURST),
    .m_axi_output_0_ARLOCK(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARLOCK),
    .m_axi_output_0_ARCACHE(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARCACHE),
    .m_axi_output_0_ARPROT(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARPROT),
    .m_axi_output_0_ARQOS(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARQOS),
    .m_axi_output_0_ARREGION(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARREGION),
    .m_axi_output_0_ARUSER(grp_fft_Pipeline_4_fu_231_m_axi_output_0_ARUSER),
    .m_axi_output_0_RVALID(1'b0),
    .m_axi_output_0_RREADY(grp_fft_Pipeline_4_fu_231_m_axi_output_0_RREADY),
    .m_axi_output_0_RDATA(32'd0),
    .m_axi_output_0_RLAST(1'b0),
    .m_axi_output_0_RID(1'd0),
    .m_axi_output_0_RFIFONUM(9'd0),
    .m_axi_output_0_RUSER(1'd0),
    .m_axi_output_0_RRESP(2'd0),
    .m_axi_output_0_BVALID(output_0_BVALID),
    .m_axi_output_0_BREADY(grp_fft_Pipeline_4_fu_231_m_axi_output_0_BREADY),
    .m_axi_output_0_BRESP(2'd0),
    .m_axi_output_0_BID(1'd0),
    .m_axi_output_0_BUSER(1'd0),
    .sext_ln37(trunc_ln4_reg_340),
    .OUT_I_o_0_address0(grp_fft_Pipeline_4_fu_231_OUT_I_o_0_address0),
    .OUT_I_o_0_ce0(grp_fft_Pipeline_4_fu_231_OUT_I_o_0_ce0),
    .OUT_I_o_0_q0(OUT_I_o_0_q0),
    .OUT_I_o_1_address0(grp_fft_Pipeline_4_fu_231_OUT_I_o_1_address0),
    .OUT_I_o_1_ce0(grp_fft_Pipeline_4_fu_231_OUT_I_o_1_ce0),
    .OUT_I_o_1_q0(OUT_I_o_1_q0),
    .OUT_I_o_2_address0(grp_fft_Pipeline_4_fu_231_OUT_I_o_2_address0),
    .OUT_I_o_2_ce0(grp_fft_Pipeline_4_fu_231_OUT_I_o_2_ce0),
    .OUT_I_o_2_q0(OUT_I_o_2_q0),
    .OUT_I_o_3_address0(grp_fft_Pipeline_4_fu_231_OUT_I_o_3_address0),
    .OUT_I_o_3_ce0(grp_fft_Pipeline_4_fu_231_OUT_I_o_3_ce0),
    .OUT_I_o_3_q0(OUT_I_o_3_q0)
);

fft_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .X_R(X_R),
    .X_I(X_I),
    .OUT_R(OUT_R),
    .OUT_I(OUT_I),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

fft_input_0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT_0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT_0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT_0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT_0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT_0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT_0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT_0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT_0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT_0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT_0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT_0_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
input_0_m_axi_U(
    .AWVALID(m_axi_input_0_AWVALID),
    .AWREADY(m_axi_input_0_AWREADY),
    .AWADDR(m_axi_input_0_AWADDR),
    .AWID(m_axi_input_0_AWID),
    .AWLEN(m_axi_input_0_AWLEN),
    .AWSIZE(m_axi_input_0_AWSIZE),
    .AWBURST(m_axi_input_0_AWBURST),
    .AWLOCK(m_axi_input_0_AWLOCK),
    .AWCACHE(m_axi_input_0_AWCACHE),
    .AWPROT(m_axi_input_0_AWPROT),
    .AWQOS(m_axi_input_0_AWQOS),
    .AWREGION(m_axi_input_0_AWREGION),
    .AWUSER(m_axi_input_0_AWUSER),
    .WVALID(m_axi_input_0_WVALID),
    .WREADY(m_axi_input_0_WREADY),
    .WDATA(m_axi_input_0_WDATA),
    .WSTRB(m_axi_input_0_WSTRB),
    .WLAST(m_axi_input_0_WLAST),
    .WID(m_axi_input_0_WID),
    .WUSER(m_axi_input_0_WUSER),
    .ARVALID(m_axi_input_0_ARVALID),
    .ARREADY(m_axi_input_0_ARREADY),
    .ARADDR(m_axi_input_0_ARADDR),
    .ARID(m_axi_input_0_ARID),
    .ARLEN(m_axi_input_0_ARLEN),
    .ARSIZE(m_axi_input_0_ARSIZE),
    .ARBURST(m_axi_input_0_ARBURST),
    .ARLOCK(m_axi_input_0_ARLOCK),
    .ARCACHE(m_axi_input_0_ARCACHE),
    .ARPROT(m_axi_input_0_ARPROT),
    .ARQOS(m_axi_input_0_ARQOS),
    .ARREGION(m_axi_input_0_ARREGION),
    .ARUSER(m_axi_input_0_ARUSER),
    .RVALID(m_axi_input_0_RVALID),
    .RREADY(m_axi_input_0_RREADY),
    .RDATA(m_axi_input_0_RDATA),
    .RLAST(m_axi_input_0_RLAST),
    .RID(m_axi_input_0_RID),
    .RUSER(m_axi_input_0_RUSER),
    .RRESP(m_axi_input_0_RRESP),
    .BVALID(m_axi_input_0_BVALID),
    .BREADY(m_axi_input_0_BREADY),
    .BRESP(m_axi_input_0_BRESP),
    .BID(m_axi_input_0_BID),
    .BUSER(m_axi_input_0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(input_0_ARVALID),
    .I_ARREADY(input_0_ARREADY),
    .I_ARADDR(input_0_ARADDR),
    .I_ARLEN(input_0_ARLEN),
    .I_RVALID(input_0_RVALID),
    .I_RREADY(input_0_RREADY),
    .I_RDATA(input_0_RDATA),
    .I_RFIFONUM(input_0_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(input_0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(input_0_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(input_0_BVALID),
    .I_BREADY(1'b0)
);

fft_input_1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT_1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT_1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT_1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT_1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT_1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT_1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT_1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT_1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT_1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT_1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT_1_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
input_1_m_axi_U(
    .AWVALID(m_axi_input_1_AWVALID),
    .AWREADY(m_axi_input_1_AWREADY),
    .AWADDR(m_axi_input_1_AWADDR),
    .AWID(m_axi_input_1_AWID),
    .AWLEN(m_axi_input_1_AWLEN),
    .AWSIZE(m_axi_input_1_AWSIZE),
    .AWBURST(m_axi_input_1_AWBURST),
    .AWLOCK(m_axi_input_1_AWLOCK),
    .AWCACHE(m_axi_input_1_AWCACHE),
    .AWPROT(m_axi_input_1_AWPROT),
    .AWQOS(m_axi_input_1_AWQOS),
    .AWREGION(m_axi_input_1_AWREGION),
    .AWUSER(m_axi_input_1_AWUSER),
    .WVALID(m_axi_input_1_WVALID),
    .WREADY(m_axi_input_1_WREADY),
    .WDATA(m_axi_input_1_WDATA),
    .WSTRB(m_axi_input_1_WSTRB),
    .WLAST(m_axi_input_1_WLAST),
    .WID(m_axi_input_1_WID),
    .WUSER(m_axi_input_1_WUSER),
    .ARVALID(m_axi_input_1_ARVALID),
    .ARREADY(m_axi_input_1_ARREADY),
    .ARADDR(m_axi_input_1_ARADDR),
    .ARID(m_axi_input_1_ARID),
    .ARLEN(m_axi_input_1_ARLEN),
    .ARSIZE(m_axi_input_1_ARSIZE),
    .ARBURST(m_axi_input_1_ARBURST),
    .ARLOCK(m_axi_input_1_ARLOCK),
    .ARCACHE(m_axi_input_1_ARCACHE),
    .ARPROT(m_axi_input_1_ARPROT),
    .ARQOS(m_axi_input_1_ARQOS),
    .ARREGION(m_axi_input_1_ARREGION),
    .ARUSER(m_axi_input_1_ARUSER),
    .RVALID(m_axi_input_1_RVALID),
    .RREADY(m_axi_input_1_RREADY),
    .RDATA(m_axi_input_1_RDATA),
    .RLAST(m_axi_input_1_RLAST),
    .RID(m_axi_input_1_RID),
    .RUSER(m_axi_input_1_RUSER),
    .RRESP(m_axi_input_1_RRESP),
    .BVALID(m_axi_input_1_BVALID),
    .BREADY(m_axi_input_1_BREADY),
    .BRESP(m_axi_input_1_BRESP),
    .BID(m_axi_input_1_BID),
    .BUSER(m_axi_input_1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(input_1_ARVALID),
    .I_ARREADY(input_1_ARREADY),
    .I_ARADDR(input_1_ARADDR),
    .I_ARLEN(input_1_ARLEN),
    .I_RVALID(input_1_RVALID),
    .I_RREADY(input_1_RREADY),
    .I_RDATA(input_1_RDATA),
    .I_RFIFONUM(input_1_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(input_1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(input_1_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(input_1_BVALID),
    .I_BREADY(1'b0)
);

fft_output_0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT_0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT_0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT_0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT_0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT_0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT_0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT_0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT_0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT_0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT_0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT_0_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
output_0_m_axi_U(
    .AWVALID(m_axi_output_0_AWVALID),
    .AWREADY(m_axi_output_0_AWREADY),
    .AWADDR(m_axi_output_0_AWADDR),
    .AWID(m_axi_output_0_AWID),
    .AWLEN(m_axi_output_0_AWLEN),
    .AWSIZE(m_axi_output_0_AWSIZE),
    .AWBURST(m_axi_output_0_AWBURST),
    .AWLOCK(m_axi_output_0_AWLOCK),
    .AWCACHE(m_axi_output_0_AWCACHE),
    .AWPROT(m_axi_output_0_AWPROT),
    .AWQOS(m_axi_output_0_AWQOS),
    .AWREGION(m_axi_output_0_AWREGION),
    .AWUSER(m_axi_output_0_AWUSER),
    .WVALID(m_axi_output_0_WVALID),
    .WREADY(m_axi_output_0_WREADY),
    .WDATA(m_axi_output_0_WDATA),
    .WSTRB(m_axi_output_0_WSTRB),
    .WLAST(m_axi_output_0_WLAST),
    .WID(m_axi_output_0_WID),
    .WUSER(m_axi_output_0_WUSER),
    .ARVALID(m_axi_output_0_ARVALID),
    .ARREADY(m_axi_output_0_ARREADY),
    .ARADDR(m_axi_output_0_ARADDR),
    .ARID(m_axi_output_0_ARID),
    .ARLEN(m_axi_output_0_ARLEN),
    .ARSIZE(m_axi_output_0_ARSIZE),
    .ARBURST(m_axi_output_0_ARBURST),
    .ARLOCK(m_axi_output_0_ARLOCK),
    .ARCACHE(m_axi_output_0_ARCACHE),
    .ARPROT(m_axi_output_0_ARPROT),
    .ARQOS(m_axi_output_0_ARQOS),
    .ARREGION(m_axi_output_0_ARREGION),
    .ARUSER(m_axi_output_0_ARUSER),
    .RVALID(m_axi_output_0_RVALID),
    .RREADY(m_axi_output_0_RREADY),
    .RDATA(m_axi_output_0_RDATA),
    .RLAST(m_axi_output_0_RLAST),
    .RID(m_axi_output_0_RID),
    .RUSER(m_axi_output_0_RUSER),
    .RRESP(m_axi_output_0_RRESP),
    .BVALID(m_axi_output_0_BVALID),
    .BREADY(m_axi_output_0_BREADY),
    .BRESP(m_axi_output_0_BRESP),
    .BID(m_axi_output_0_BID),
    .BUSER(m_axi_output_0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(output_0_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(output_0_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(output_0_RDATA),
    .I_RFIFONUM(output_0_RFIFONUM),
    .I_AWVALID(output_0_AWVALID),
    .I_AWREADY(output_0_AWREADY),
    .I_AWADDR(output_0_AWADDR),
    .I_AWLEN(output_0_AWLEN),
    .I_WVALID(output_0_WVALID),
    .I_WREADY(output_0_WREADY),
    .I_WDATA(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WDATA),
    .I_WSTRB(grp_fft_Pipeline_4_fu_231_m_axi_output_0_WSTRB),
    .I_BVALID(output_0_BVALID),
    .I_BREADY(output_0_BREADY)
);

fft_output_1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT_1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT_1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT_1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT_1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT_1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT_1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT_1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT_1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT_1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT_1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT_1_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
output_1_m_axi_U(
    .AWVALID(m_axi_output_1_AWVALID),
    .AWREADY(m_axi_output_1_AWREADY),
    .AWADDR(m_axi_output_1_AWADDR),
    .AWID(m_axi_output_1_AWID),
    .AWLEN(m_axi_output_1_AWLEN),
    .AWSIZE(m_axi_output_1_AWSIZE),
    .AWBURST(m_axi_output_1_AWBURST),
    .AWLOCK(m_axi_output_1_AWLOCK),
    .AWCACHE(m_axi_output_1_AWCACHE),
    .AWPROT(m_axi_output_1_AWPROT),
    .AWQOS(m_axi_output_1_AWQOS),
    .AWREGION(m_axi_output_1_AWREGION),
    .AWUSER(m_axi_output_1_AWUSER),
    .WVALID(m_axi_output_1_WVALID),
    .WREADY(m_axi_output_1_WREADY),
    .WDATA(m_axi_output_1_WDATA),
    .WSTRB(m_axi_output_1_WSTRB),
    .WLAST(m_axi_output_1_WLAST),
    .WID(m_axi_output_1_WID),
    .WUSER(m_axi_output_1_WUSER),
    .ARVALID(m_axi_output_1_ARVALID),
    .ARREADY(m_axi_output_1_ARREADY),
    .ARADDR(m_axi_output_1_ARADDR),
    .ARID(m_axi_output_1_ARID),
    .ARLEN(m_axi_output_1_ARLEN),
    .ARSIZE(m_axi_output_1_ARSIZE),
    .ARBURST(m_axi_output_1_ARBURST),
    .ARLOCK(m_axi_output_1_ARLOCK),
    .ARCACHE(m_axi_output_1_ARCACHE),
    .ARPROT(m_axi_output_1_ARPROT),
    .ARQOS(m_axi_output_1_ARQOS),
    .ARREGION(m_axi_output_1_ARREGION),
    .ARUSER(m_axi_output_1_ARUSER),
    .RVALID(m_axi_output_1_RVALID),
    .RREADY(m_axi_output_1_RREADY),
    .RDATA(m_axi_output_1_RDATA),
    .RLAST(m_axi_output_1_RLAST),
    .RID(m_axi_output_1_RID),
    .RUSER(m_axi_output_1_RUSER),
    .RRESP(m_axi_output_1_RRESP),
    .BVALID(m_axi_output_1_BVALID),
    .BREADY(m_axi_output_1_BREADY),
    .BRESP(m_axi_output_1_BRESP),
    .BID(m_axi_output_1_BID),
    .BUSER(m_axi_output_1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(output_1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(output_1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(output_1_RDATA),
    .I_RFIFONUM(output_1_RFIFONUM),
    .I_AWVALID(output_1_AWVALID),
    .I_AWREADY(output_1_AWREADY),
    .I_AWADDR(output_1_AWADDR),
    .I_AWLEN(output_1_AWLEN),
    .I_WVALID(output_1_WVALID),
    .I_WREADY(output_1_WREADY),
    .I_WDATA(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WDATA),
    .I_WSTRB(grp_fft_Pipeline_3_fu_220_m_axi_output_1_WSTRB),
    .I_BVALID(output_1_BVALID),
    .I_BREADY(output_1_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fft_Pipeline_1_fu_186_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_fft_Pipeline_1_fu_186_ap_start_reg <= 1'b1;
        end else if ((grp_fft_Pipeline_1_fu_186_ap_ready == 1'b1)) begin
            grp_fft_Pipeline_1_fu_186_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fft_Pipeline_2_fu_194_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_fft_Pipeline_2_fu_194_ap_start_reg <= 1'b1;
        end else if ((grp_fft_Pipeline_2_fu_194_ap_ready == 1'b1)) begin
            grp_fft_Pipeline_2_fu_194_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fft_Pipeline_3_fu_220_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_fft_Pipeline_3_fu_220_ap_start_reg <= 1'b1;
        end else if ((grp_fft_Pipeline_3_fu_220_ap_ready == 1'b1)) begin
            grp_fft_Pipeline_3_fu_220_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fft_Pipeline_4_fu_231_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_fft_Pipeline_4_fu_231_ap_start_reg <= 1'b1;
        end else if ((grp_fft_Pipeline_4_fu_231_ap_ready == 1'b1)) begin
            grp_fft_Pipeline_4_fu_231_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fft_exec_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_fft_exec_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_fft_exec_fu_202_ap_ready == 1'b1)) begin
            grp_fft_exec_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln2_reg_328 <= {{X_I[63:2]}};
        trunc_ln3_reg_334 <= {{OUT_R[63:2]}};
        trunc_ln4_reg_340 <= {{OUT_I[63:2]}};
        trunc_ln_reg_322 <= {{X_R[63:2]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_0_address0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_0_address0 = grp_fft_exec_fu_202_OUT_I_0_address0;
    end else begin
        OUT_I_o_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_0_ce0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_0_ce0 = grp_fft_exec_fu_202_OUT_I_0_ce0;
    end else begin
        OUT_I_o_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_0_ce1 = grp_fft_exec_fu_202_OUT_I_0_ce1;
    end else begin
        OUT_I_o_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_0_we0 = grp_fft_exec_fu_202_OUT_I_0_we0;
    end else begin
        OUT_I_o_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_0_we1 = grp_fft_exec_fu_202_OUT_I_0_we1;
    end else begin
        OUT_I_o_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_1_address0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_1_address0 = grp_fft_exec_fu_202_OUT_I_1_address0;
    end else begin
        OUT_I_o_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_1_ce0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_1_ce0 = grp_fft_exec_fu_202_OUT_I_1_ce0;
    end else begin
        OUT_I_o_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_1_ce1 = grp_fft_exec_fu_202_OUT_I_1_ce1;
    end else begin
        OUT_I_o_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_1_we0 = grp_fft_exec_fu_202_OUT_I_1_we0;
    end else begin
        OUT_I_o_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_1_we1 = grp_fft_exec_fu_202_OUT_I_1_we1;
    end else begin
        OUT_I_o_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_2_address0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_2_address0 = grp_fft_exec_fu_202_OUT_I_2_address0;
    end else begin
        OUT_I_o_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_2_ce0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_2_ce0 = grp_fft_exec_fu_202_OUT_I_2_ce0;
    end else begin
        OUT_I_o_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_2_ce1 = grp_fft_exec_fu_202_OUT_I_2_ce1;
    end else begin
        OUT_I_o_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_2_we0 = grp_fft_exec_fu_202_OUT_I_2_we0;
    end else begin
        OUT_I_o_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_2_we1 = grp_fft_exec_fu_202_OUT_I_2_we1;
    end else begin
        OUT_I_o_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_3_address0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_3_address0 = grp_fft_exec_fu_202_OUT_I_3_address0;
    end else begin
        OUT_I_o_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_I_o_3_ce0 = grp_fft_Pipeline_4_fu_231_OUT_I_o_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_3_ce0 = grp_fft_exec_fu_202_OUT_I_3_ce0;
    end else begin
        OUT_I_o_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_3_ce1 = grp_fft_exec_fu_202_OUT_I_3_ce1;
    end else begin
        OUT_I_o_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_3_we0 = grp_fft_exec_fu_202_OUT_I_3_we0;
    end else begin
        OUT_I_o_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_I_o_3_we1 = grp_fft_exec_fu_202_OUT_I_3_we1;
    end else begin
        OUT_I_o_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_0_address0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_0_address0 = grp_fft_exec_fu_202_OUT_R_0_address0;
    end else begin
        OUT_R_o_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_0_ce0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_0_ce0 = grp_fft_exec_fu_202_OUT_R_0_ce0;
    end else begin
        OUT_R_o_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_0_ce1 = grp_fft_exec_fu_202_OUT_R_0_ce1;
    end else begin
        OUT_R_o_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_0_we0 = grp_fft_exec_fu_202_OUT_R_0_we0;
    end else begin
        OUT_R_o_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_0_we1 = grp_fft_exec_fu_202_OUT_R_0_we1;
    end else begin
        OUT_R_o_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_1_address0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_1_address0 = grp_fft_exec_fu_202_OUT_R_1_address0;
    end else begin
        OUT_R_o_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_1_ce0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_1_ce0 = grp_fft_exec_fu_202_OUT_R_1_ce0;
    end else begin
        OUT_R_o_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_1_ce1 = grp_fft_exec_fu_202_OUT_R_1_ce1;
    end else begin
        OUT_R_o_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_1_we0 = grp_fft_exec_fu_202_OUT_R_1_we0;
    end else begin
        OUT_R_o_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_1_we1 = grp_fft_exec_fu_202_OUT_R_1_we1;
    end else begin
        OUT_R_o_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_2_address0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_2_address0 = grp_fft_exec_fu_202_OUT_R_2_address0;
    end else begin
        OUT_R_o_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_2_ce0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_2_ce0 = grp_fft_exec_fu_202_OUT_R_2_ce0;
    end else begin
        OUT_R_o_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_2_ce1 = grp_fft_exec_fu_202_OUT_R_2_ce1;
    end else begin
        OUT_R_o_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_2_we0 = grp_fft_exec_fu_202_OUT_R_2_we0;
    end else begin
        OUT_R_o_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_2_we1 = grp_fft_exec_fu_202_OUT_R_2_we1;
    end else begin
        OUT_R_o_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_3_address0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_3_address0 = grp_fft_exec_fu_202_OUT_R_3_address0;
    end else begin
        OUT_R_o_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OUT_R_o_3_ce0 = grp_fft_Pipeline_3_fu_220_OUT_R_o_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_3_ce0 = grp_fft_exec_fu_202_OUT_R_3_ce0;
    end else begin
        OUT_R_o_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_3_ce1 = grp_fft_exec_fu_202_OUT_R_3_ce1;
    end else begin
        OUT_R_o_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_3_we0 = grp_fft_exec_fu_202_OUT_R_3_we0;
    end else begin
        OUT_R_o_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        OUT_R_o_3_we1 = grp_fft_exec_fu_202_OUT_R_3_we1;
    end else begin
        OUT_R_o_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        X_I_i_address0 = grp_fft_exec_fu_202_X_I_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        X_I_i_address0 = grp_fft_Pipeline_2_fu_194_X_I_i_address0;
    end else begin
        X_I_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        X_I_i_ce0 = grp_fft_exec_fu_202_X_I_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        X_I_i_ce0 = grp_fft_Pipeline_2_fu_194_X_I_i_ce0;
    end else begin
        X_I_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        X_I_i_we0 = grp_fft_Pipeline_2_fu_194_X_I_i_we0;
    end else begin
        X_I_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        X_R_i_address0 = grp_fft_exec_fu_202_X_R_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        X_R_i_address0 = grp_fft_Pipeline_1_fu_186_X_R_i_address0;
    end else begin
        X_R_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        X_R_i_ce0 = grp_fft_exec_fu_202_X_R_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        X_R_i_ce0 = grp_fft_Pipeline_1_fu_186_X_R_i_ce0;
    end else begin
        X_R_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        X_R_i_we0 = grp_fft_Pipeline_1_fu_186_X_R_i_we0;
    end else begin
        X_R_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state10_on_subcall_done)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if (((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io))) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14_on_subcall_done)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if (((output_0_BVALID == 1'b0) | (output_1_BVALID == 1'b0))) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_io)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((output_0_BVALID == 1'b0) | (output_1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_0_BVALID == 1'b0) | (output_1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        input_0_ARADDR = sext_ln34_fu_292_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_0_ARADDR = grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARADDR;
    end else begin
        input_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        input_0_ARLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_0_ARLEN = grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARLEN;
    end else begin
        input_0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        input_0_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_0_ARVALID = grp_fft_Pipeline_2_fu_194_m_axi_input_0_ARVALID;
    end else begin
        input_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_0_RREADY = grp_fft_Pipeline_2_fu_194_m_axi_input_0_RREADY;
    end else begin
        input_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        input_0_blk_n_AR = m_axi_input_0_ARREADY;
    end else begin
        input_0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        input_1_ARADDR = sext_ln33_fu_282_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_1_ARADDR = grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARADDR;
    end else begin
        input_1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        input_1_ARLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_1_ARLEN = grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARLEN;
    end else begin
        input_1_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
        input_1_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_1_ARVALID = grp_fft_Pipeline_1_fu_186_m_axi_input_1_ARVALID;
    end else begin
        input_1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_1_RREADY = grp_fft_Pipeline_1_fu_186_m_axi_input_1_RREADY;
    end else begin
        input_1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        input_1_blk_n_AR = m_axi_input_1_ARREADY;
    end else begin
        input_1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_0_AWADDR = sext_ln37_fu_312_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_0_AWADDR = grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWADDR;
    end else begin
        output_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_0_AWLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_0_AWLEN = grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWLEN;
    end else begin
        output_0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_0_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_0_AWVALID = grp_fft_Pipeline_4_fu_231_m_axi_output_0_AWVALID;
    end else begin
        output_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_0_BVALID == 1'b0) | (output_1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        output_0_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_0_BREADY = grp_fft_Pipeline_4_fu_231_m_axi_output_0_BREADY;
    end else begin
        output_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_0_WVALID = grp_fft_Pipeline_4_fu_231_m_axi_output_0_WVALID;
    end else begin
        output_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_0_blk_n_AW = m_axi_output_0_AWREADY;
    end else begin
        output_0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        output_0_blk_n_B = m_axi_output_0_BVALID;
    end else begin
        output_0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_1_AWADDR = sext_ln36_fu_302_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_1_AWADDR = grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWADDR;
    end else begin
        output_1_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_1_AWLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_1_AWLEN = grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWLEN;
    end else begin
        output_1_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((~((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_1_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_1_AWVALID = grp_fft_Pipeline_3_fu_220_m_axi_output_1_AWVALID;
    end else begin
        output_1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_0_BVALID == 1'b0) | (output_1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        output_1_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_1_BREADY = grp_fft_Pipeline_3_fu_220_m_axi_output_1_BREADY;
    end else begin
        output_1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_1_WVALID = grp_fft_Pipeline_3_fu_220_m_axi_output_1_WVALID;
    end else begin
        output_1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_1_blk_n_AW = m_axi_output_1_AWREADY;
    end else begin
        output_1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        output_1_blk_n_B = m_axi_output_1_BVALID;
    end else begin
        output_1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_io))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if ((~((grp_fft_exec_fu_202_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if ((~((output_0_BVALID == 1'b0) | (output_1_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_fft_Pipeline_2_fu_194_ap_done == 1'b0) | (grp_fft_Pipeline_1_fu_186_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state12_io = ((output_1_AWREADY == 1'b0) | (output_0_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_fft_Pipeline_4_fu_231_ap_done == 1'b0) | (grp_fft_Pipeline_3_fu_220_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state19 = ((output_0_BVALID == 1'b0) | (output_1_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((input_1_ARREADY == 1'b0) | (input_0_ARREADY == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fft_Pipeline_1_fu_186_ap_start = grp_fft_Pipeline_1_fu_186_ap_start_reg;

assign grp_fft_Pipeline_2_fu_194_ap_start = grp_fft_Pipeline_2_fu_194_ap_start_reg;

assign grp_fft_Pipeline_3_fu_220_ap_start = grp_fft_Pipeline_3_fu_220_ap_start_reg;

assign grp_fft_Pipeline_4_fu_231_ap_start = grp_fft_Pipeline_4_fu_231_ap_start_reg;

assign grp_fft_exec_fu_202_ap_start = grp_fft_exec_fu_202_ap_start_reg;

assign sext_ln33_fu_282_p1 = $signed(trunc_ln_reg_322);

assign sext_ln34_fu_292_p1 = $signed(trunc_ln2_reg_328);

assign sext_ln36_fu_302_p1 = $signed(trunc_ln3_reg_334);

assign sext_ln37_fu_312_p1 = $signed(trunc_ln4_reg_340);

endmodule //fft
