// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_fft_exec_Pipeline_DFT_Loop17 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OUT_I_3_address0,
        OUT_I_3_ce0,
        OUT_I_3_we0,
        OUT_I_3_d0,
        OUT_I_3_address1,
        OUT_I_3_ce1,
        OUT_I_3_we1,
        OUT_I_3_d1,
        OUT_I_2_address0,
        OUT_I_2_ce0,
        OUT_I_2_we0,
        OUT_I_2_d0,
        OUT_I_2_address1,
        OUT_I_2_ce1,
        OUT_I_2_we1,
        OUT_I_2_d1,
        OUT_I_1_address0,
        OUT_I_1_ce0,
        OUT_I_1_we0,
        OUT_I_1_d0,
        OUT_I_1_address1,
        OUT_I_1_ce1,
        OUT_I_1_we1,
        OUT_I_1_d1,
        OUT_I_0_address0,
        OUT_I_0_ce0,
        OUT_I_0_we0,
        OUT_I_0_d0,
        OUT_I_0_address1,
        OUT_I_0_ce1,
        OUT_I_0_we1,
        OUT_I_0_d1,
        OUT_R_3_address0,
        OUT_R_3_ce0,
        OUT_R_3_we0,
        OUT_R_3_d0,
        OUT_R_3_address1,
        OUT_R_3_ce1,
        OUT_R_3_we1,
        OUT_R_3_d1,
        OUT_R_2_address0,
        OUT_R_2_ce0,
        OUT_R_2_we0,
        OUT_R_2_d0,
        OUT_R_2_address1,
        OUT_R_2_ce1,
        OUT_R_2_we1,
        OUT_R_2_d1,
        OUT_R_1_address0,
        OUT_R_1_ce0,
        OUT_R_1_we0,
        OUT_R_1_d0,
        OUT_R_1_address1,
        OUT_R_1_ce1,
        OUT_R_1_we1,
        OUT_R_1_d1,
        OUT_R_0_address0,
        OUT_R_0_ce0,
        OUT_R_0_we0,
        OUT_R_0_d0,
        OUT_R_0_address1,
        OUT_R_0_ce1,
        OUT_R_0_we1,
        OUT_R_0_d1,
        Stage9_R_address0,
        Stage9_R_ce0,
        Stage9_R_q0,
        Stage9_R_address1,
        Stage9_R_ce1,
        Stage9_R_q1,
        Stage9_I_address0,
        Stage9_I_ce0,
        Stage9_I_q0,
        Stage9_I_address1,
        Stage9_I_ce1,
        Stage9_I_q1,
        Stage9_R_1_address0,
        Stage9_R_1_ce0,
        Stage9_R_1_q0,
        Stage9_R_1_address1,
        Stage9_R_1_ce1,
        Stage9_R_1_q1,
        Stage9_I_1_address0,
        Stage9_I_1_ce0,
        Stage9_I_1_q0,
        Stage9_I_1_address1,
        Stage9_I_1_ce1,
        Stage9_I_1_q1,
        Stage9_R_2_address0,
        Stage9_R_2_ce0,
        Stage9_R_2_q0,
        Stage9_R_2_address1,
        Stage9_R_2_ce1,
        Stage9_R_2_q1,
        Stage9_I_2_address0,
        Stage9_I_2_ce0,
        Stage9_I_2_q0,
        Stage9_I_2_address1,
        Stage9_I_2_ce1,
        Stage9_I_2_q1,
        Stage9_R_3_address0,
        Stage9_R_3_ce0,
        Stage9_R_3_q0,
        Stage9_R_3_address1,
        Stage9_R_3_ce1,
        Stage9_R_3_q1,
        Stage9_I_3_address0,
        Stage9_I_3_ce0,
        Stage9_I_3_q0,
        Stage9_I_3_address1,
        Stage9_I_3_ce1,
        Stage9_I_3_q1,
        W_real_address0,
        W_real_ce0,
        W_real_q0,
        W_real_address1,
        W_real_ce1,
        W_real_q1,
        W_real_address2,
        W_real_ce2,
        W_real_q2,
        W_real_address3,
        W_real_ce3,
        W_real_q3,
        W_imag_address0,
        W_imag_ce0,
        W_imag_q0,
        W_imag_address1,
        W_imag_ce1,
        W_imag_q1,
        W_imag_address2,
        W_imag_ce2,
        W_imag_q2,
        W_imag_address3,
        W_imag_ce3,
        W_imag_q3,
        grp_fu_628_p_din0,
        grp_fu_628_p_din1,
        grp_fu_628_p_opcode,
        grp_fu_628_p_dout0,
        grp_fu_628_p_ce,
        grp_fu_632_p_din0,
        grp_fu_632_p_din1,
        grp_fu_632_p_opcode,
        grp_fu_632_p_dout0,
        grp_fu_632_p_ce,
        grp_fu_636_p_din0,
        grp_fu_636_p_din1,
        grp_fu_636_p_opcode,
        grp_fu_636_p_dout0,
        grp_fu_636_p_ce,
        grp_fu_640_p_din0,
        grp_fu_640_p_din1,
        grp_fu_640_p_opcode,
        grp_fu_640_p_dout0,
        grp_fu_640_p_ce,
        grp_fu_644_p_din0,
        grp_fu_644_p_din1,
        grp_fu_644_p_opcode,
        grp_fu_644_p_dout0,
        grp_fu_644_p_ce,
        grp_fu_648_p_din0,
        grp_fu_648_p_din1,
        grp_fu_648_p_opcode,
        grp_fu_648_p_dout0,
        grp_fu_648_p_ce,
        grp_fu_652_p_din0,
        grp_fu_652_p_din1,
        grp_fu_652_p_opcode,
        grp_fu_652_p_dout0,
        grp_fu_652_p_ce,
        grp_fu_656_p_din0,
        grp_fu_656_p_din1,
        grp_fu_656_p_opcode,
        grp_fu_656_p_dout0,
        grp_fu_656_p_ce,
        grp_fu_660_p_din0,
        grp_fu_660_p_din1,
        grp_fu_660_p_opcode,
        grp_fu_660_p_dout0,
        grp_fu_660_p_ce,
        grp_fu_664_p_din0,
        grp_fu_664_p_din1,
        grp_fu_664_p_opcode,
        grp_fu_664_p_dout0,
        grp_fu_664_p_ce,
        grp_fu_668_p_din0,
        grp_fu_668_p_din1,
        grp_fu_668_p_opcode,
        grp_fu_668_p_dout0,
        grp_fu_668_p_ce,
        grp_fu_672_p_din0,
        grp_fu_672_p_din1,
        grp_fu_672_p_opcode,
        grp_fu_672_p_dout0,
        grp_fu_672_p_ce,
        grp_fu_676_p_din0,
        grp_fu_676_p_din1,
        grp_fu_676_p_opcode,
        grp_fu_676_p_dout0,
        grp_fu_676_p_ce,
        grp_fu_680_p_din0,
        grp_fu_680_p_din1,
        grp_fu_680_p_opcode,
        grp_fu_680_p_dout0,
        grp_fu_680_p_ce,
        grp_fu_684_p_din0,
        grp_fu_684_p_din1,
        grp_fu_684_p_opcode,
        grp_fu_684_p_dout0,
        grp_fu_684_p_ce,
        grp_fu_688_p_din0,
        grp_fu_688_p_din1,
        grp_fu_688_p_opcode,
        grp_fu_688_p_dout0,
        grp_fu_688_p_ce,
        grp_fu_692_p_din0,
        grp_fu_692_p_din1,
        grp_fu_692_p_opcode,
        grp_fu_692_p_dout0,
        grp_fu_692_p_ce,
        grp_fu_696_p_din0,
        grp_fu_696_p_din1,
        grp_fu_696_p_opcode,
        grp_fu_696_p_dout0,
        grp_fu_696_p_ce,
        grp_fu_700_p_din0,
        grp_fu_700_p_din1,
        grp_fu_700_p_opcode,
        grp_fu_700_p_dout0,
        grp_fu_700_p_ce,
        grp_fu_704_p_din0,
        grp_fu_704_p_din1,
        grp_fu_704_p_opcode,
        grp_fu_704_p_dout0,
        grp_fu_704_p_ce,
        grp_fu_708_p_din0,
        grp_fu_708_p_din1,
        grp_fu_708_p_opcode,
        grp_fu_708_p_dout0,
        grp_fu_708_p_ce,
        grp_fu_712_p_din0,
        grp_fu_712_p_din1,
        grp_fu_712_p_opcode,
        grp_fu_712_p_dout0,
        grp_fu_712_p_ce,
        grp_fu_716_p_din0,
        grp_fu_716_p_din1,
        grp_fu_716_p_opcode,
        grp_fu_716_p_dout0,
        grp_fu_716_p_ce,
        grp_fu_720_p_din0,
        grp_fu_720_p_din1,
        grp_fu_720_p_opcode,
        grp_fu_720_p_dout0,
        grp_fu_720_p_ce,
        grp_fu_724_p_din0,
        grp_fu_724_p_din1,
        grp_fu_724_p_dout0,
        grp_fu_724_p_ce,
        grp_fu_728_p_din0,
        grp_fu_728_p_din1,
        grp_fu_728_p_dout0,
        grp_fu_728_p_ce,
        grp_fu_732_p_din0,
        grp_fu_732_p_din1,
        grp_fu_732_p_dout0,
        grp_fu_732_p_ce,
        grp_fu_736_p_din0,
        grp_fu_736_p_din1,
        grp_fu_736_p_dout0,
        grp_fu_736_p_ce,
        grp_fu_740_p_din0,
        grp_fu_740_p_din1,
        grp_fu_740_p_dout0,
        grp_fu_740_p_ce,
        grp_fu_744_p_din0,
        grp_fu_744_p_din1,
        grp_fu_744_p_dout0,
        grp_fu_744_p_ce,
        grp_fu_748_p_din0,
        grp_fu_748_p_din1,
        grp_fu_748_p_dout0,
        grp_fu_748_p_ce,
        grp_fu_752_p_din0,
        grp_fu_752_p_din1,
        grp_fu_752_p_dout0,
        grp_fu_752_p_ce,
        grp_fu_756_p_din0,
        grp_fu_756_p_din1,
        grp_fu_756_p_dout0,
        grp_fu_756_p_ce,
        grp_fu_760_p_din0,
        grp_fu_760_p_din1,
        grp_fu_760_p_dout0,
        grp_fu_760_p_ce,
        grp_fu_764_p_din0,
        grp_fu_764_p_din1,
        grp_fu_764_p_dout0,
        grp_fu_764_p_ce,
        grp_fu_768_p_din0,
        grp_fu_768_p_din1,
        grp_fu_768_p_dout0,
        grp_fu_768_p_ce,
        grp_fu_772_p_din0,
        grp_fu_772_p_din1,
        grp_fu_772_p_dout0,
        grp_fu_772_p_ce,
        grp_fu_776_p_din0,
        grp_fu_776_p_din1,
        grp_fu_776_p_dout0,
        grp_fu_776_p_ce,
        grp_fu_780_p_din0,
        grp_fu_780_p_din1,
        grp_fu_780_p_dout0,
        grp_fu_780_p_ce,
        grp_fu_784_p_din0,
        grp_fu_784_p_din1,
        grp_fu_784_p_dout0,
        grp_fu_784_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] OUT_I_3_address0;
output   OUT_I_3_ce0;
output   OUT_I_3_we0;
output  [31:0] OUT_I_3_d0;
output  [7:0] OUT_I_3_address1;
output   OUT_I_3_ce1;
output   OUT_I_3_we1;
output  [31:0] OUT_I_3_d1;
output  [7:0] OUT_I_2_address0;
output   OUT_I_2_ce0;
output   OUT_I_2_we0;
output  [31:0] OUT_I_2_d0;
output  [7:0] OUT_I_2_address1;
output   OUT_I_2_ce1;
output   OUT_I_2_we1;
output  [31:0] OUT_I_2_d1;
output  [7:0] OUT_I_1_address0;
output   OUT_I_1_ce0;
output   OUT_I_1_we0;
output  [31:0] OUT_I_1_d0;
output  [7:0] OUT_I_1_address1;
output   OUT_I_1_ce1;
output   OUT_I_1_we1;
output  [31:0] OUT_I_1_d1;
output  [7:0] OUT_I_0_address0;
output   OUT_I_0_ce0;
output   OUT_I_0_we0;
output  [31:0] OUT_I_0_d0;
output  [7:0] OUT_I_0_address1;
output   OUT_I_0_ce1;
output   OUT_I_0_we1;
output  [31:0] OUT_I_0_d1;
output  [7:0] OUT_R_3_address0;
output   OUT_R_3_ce0;
output   OUT_R_3_we0;
output  [31:0] OUT_R_3_d0;
output  [7:0] OUT_R_3_address1;
output   OUT_R_3_ce1;
output   OUT_R_3_we1;
output  [31:0] OUT_R_3_d1;
output  [7:0] OUT_R_2_address0;
output   OUT_R_2_ce0;
output   OUT_R_2_we0;
output  [31:0] OUT_R_2_d0;
output  [7:0] OUT_R_2_address1;
output   OUT_R_2_ce1;
output   OUT_R_2_we1;
output  [31:0] OUT_R_2_d1;
output  [7:0] OUT_R_1_address0;
output   OUT_R_1_ce0;
output   OUT_R_1_we0;
output  [31:0] OUT_R_1_d0;
output  [7:0] OUT_R_1_address1;
output   OUT_R_1_ce1;
output   OUT_R_1_we1;
output  [31:0] OUT_R_1_d1;
output  [7:0] OUT_R_0_address0;
output   OUT_R_0_ce0;
output   OUT_R_0_we0;
output  [31:0] OUT_R_0_d0;
output  [7:0] OUT_R_0_address1;
output   OUT_R_0_ce1;
output   OUT_R_0_we1;
output  [31:0] OUT_R_0_d1;
output  [7:0] Stage9_R_address0;
output   Stage9_R_ce0;
input  [31:0] Stage9_R_q0;
output  [7:0] Stage9_R_address1;
output   Stage9_R_ce1;
input  [31:0] Stage9_R_q1;
output  [7:0] Stage9_I_address0;
output   Stage9_I_ce0;
input  [31:0] Stage9_I_q0;
output  [7:0] Stage9_I_address1;
output   Stage9_I_ce1;
input  [31:0] Stage9_I_q1;
output  [7:0] Stage9_R_1_address0;
output   Stage9_R_1_ce0;
input  [31:0] Stage9_R_1_q0;
output  [7:0] Stage9_R_1_address1;
output   Stage9_R_1_ce1;
input  [31:0] Stage9_R_1_q1;
output  [7:0] Stage9_I_1_address0;
output   Stage9_I_1_ce0;
input  [31:0] Stage9_I_1_q0;
output  [7:0] Stage9_I_1_address1;
output   Stage9_I_1_ce1;
input  [31:0] Stage9_I_1_q1;
output  [7:0] Stage9_R_2_address0;
output   Stage9_R_2_ce0;
input  [31:0] Stage9_R_2_q0;
output  [7:0] Stage9_R_2_address1;
output   Stage9_R_2_ce1;
input  [31:0] Stage9_R_2_q1;
output  [7:0] Stage9_I_2_address0;
output   Stage9_I_2_ce0;
input  [31:0] Stage9_I_2_q0;
output  [7:0] Stage9_I_2_address1;
output   Stage9_I_2_ce1;
input  [31:0] Stage9_I_2_q1;
output  [7:0] Stage9_R_3_address0;
output   Stage9_R_3_ce0;
input  [31:0] Stage9_R_3_q0;
output  [7:0] Stage9_R_3_address1;
output   Stage9_R_3_ce1;
input  [31:0] Stage9_R_3_q1;
output  [7:0] Stage9_I_3_address0;
output   Stage9_I_3_ce0;
input  [31:0] Stage9_I_3_q0;
output  [7:0] Stage9_I_3_address1;
output   Stage9_I_3_ce1;
input  [31:0] Stage9_I_3_q1;
output  [8:0] W_real_address0;
output   W_real_ce0;
input  [31:0] W_real_q0;
output  [8:0] W_real_address1;
output   W_real_ce1;
input  [31:0] W_real_q1;
output  [8:0] W_real_address2;
output   W_real_ce2;
input  [31:0] W_real_q2;
output  [8:0] W_real_address3;
output   W_real_ce3;
input  [31:0] W_real_q3;
output  [8:0] W_imag_address0;
output   W_imag_ce0;
input  [31:0] W_imag_q0;
output  [8:0] W_imag_address1;
output   W_imag_ce1;
input  [31:0] W_imag_q1;
output  [8:0] W_imag_address2;
output   W_imag_ce2;
input  [31:0] W_imag_q2;
output  [8:0] W_imag_address3;
output   W_imag_ce3;
input  [31:0] W_imag_q3;
output  [31:0] grp_fu_628_p_din0;
output  [31:0] grp_fu_628_p_din1;
output  [1:0] grp_fu_628_p_opcode;
input  [31:0] grp_fu_628_p_dout0;
output   grp_fu_628_p_ce;
output  [31:0] grp_fu_632_p_din0;
output  [31:0] grp_fu_632_p_din1;
output  [1:0] grp_fu_632_p_opcode;
input  [31:0] grp_fu_632_p_dout0;
output   grp_fu_632_p_ce;
output  [31:0] grp_fu_636_p_din0;
output  [31:0] grp_fu_636_p_din1;
output  [1:0] grp_fu_636_p_opcode;
input  [31:0] grp_fu_636_p_dout0;
output   grp_fu_636_p_ce;
output  [31:0] grp_fu_640_p_din0;
output  [31:0] grp_fu_640_p_din1;
output  [1:0] grp_fu_640_p_opcode;
input  [31:0] grp_fu_640_p_dout0;
output   grp_fu_640_p_ce;
output  [31:0] grp_fu_644_p_din0;
output  [31:0] grp_fu_644_p_din1;
output  [1:0] grp_fu_644_p_opcode;
input  [31:0] grp_fu_644_p_dout0;
output   grp_fu_644_p_ce;
output  [31:0] grp_fu_648_p_din0;
output  [31:0] grp_fu_648_p_din1;
output  [1:0] grp_fu_648_p_opcode;
input  [31:0] grp_fu_648_p_dout0;
output   grp_fu_648_p_ce;
output  [31:0] grp_fu_652_p_din0;
output  [31:0] grp_fu_652_p_din1;
output  [1:0] grp_fu_652_p_opcode;
input  [31:0] grp_fu_652_p_dout0;
output   grp_fu_652_p_ce;
output  [31:0] grp_fu_656_p_din0;
output  [31:0] grp_fu_656_p_din1;
output  [1:0] grp_fu_656_p_opcode;
input  [31:0] grp_fu_656_p_dout0;
output   grp_fu_656_p_ce;
output  [31:0] grp_fu_660_p_din0;
output  [31:0] grp_fu_660_p_din1;
output  [1:0] grp_fu_660_p_opcode;
input  [31:0] grp_fu_660_p_dout0;
output   grp_fu_660_p_ce;
output  [31:0] grp_fu_664_p_din0;
output  [31:0] grp_fu_664_p_din1;
output  [1:0] grp_fu_664_p_opcode;
input  [31:0] grp_fu_664_p_dout0;
output   grp_fu_664_p_ce;
output  [31:0] grp_fu_668_p_din0;
output  [31:0] grp_fu_668_p_din1;
output  [1:0] grp_fu_668_p_opcode;
input  [31:0] grp_fu_668_p_dout0;
output   grp_fu_668_p_ce;
output  [31:0] grp_fu_672_p_din0;
output  [31:0] grp_fu_672_p_din1;
output  [1:0] grp_fu_672_p_opcode;
input  [31:0] grp_fu_672_p_dout0;
output   grp_fu_672_p_ce;
output  [31:0] grp_fu_676_p_din0;
output  [31:0] grp_fu_676_p_din1;
output  [1:0] grp_fu_676_p_opcode;
input  [31:0] grp_fu_676_p_dout0;
output   grp_fu_676_p_ce;
output  [31:0] grp_fu_680_p_din0;
output  [31:0] grp_fu_680_p_din1;
output  [1:0] grp_fu_680_p_opcode;
input  [31:0] grp_fu_680_p_dout0;
output   grp_fu_680_p_ce;
output  [31:0] grp_fu_684_p_din0;
output  [31:0] grp_fu_684_p_din1;
output  [1:0] grp_fu_684_p_opcode;
input  [31:0] grp_fu_684_p_dout0;
output   grp_fu_684_p_ce;
output  [31:0] grp_fu_688_p_din0;
output  [31:0] grp_fu_688_p_din1;
output  [1:0] grp_fu_688_p_opcode;
input  [31:0] grp_fu_688_p_dout0;
output   grp_fu_688_p_ce;
output  [31:0] grp_fu_692_p_din0;
output  [31:0] grp_fu_692_p_din1;
output  [1:0] grp_fu_692_p_opcode;
input  [31:0] grp_fu_692_p_dout0;
output   grp_fu_692_p_ce;
output  [31:0] grp_fu_696_p_din0;
output  [31:0] grp_fu_696_p_din1;
output  [1:0] grp_fu_696_p_opcode;
input  [31:0] grp_fu_696_p_dout0;
output   grp_fu_696_p_ce;
output  [31:0] grp_fu_700_p_din0;
output  [31:0] grp_fu_700_p_din1;
output  [1:0] grp_fu_700_p_opcode;
input  [31:0] grp_fu_700_p_dout0;
output   grp_fu_700_p_ce;
output  [31:0] grp_fu_704_p_din0;
output  [31:0] grp_fu_704_p_din1;
output  [1:0] grp_fu_704_p_opcode;
input  [31:0] grp_fu_704_p_dout0;
output   grp_fu_704_p_ce;
output  [31:0] grp_fu_708_p_din0;
output  [31:0] grp_fu_708_p_din1;
output  [1:0] grp_fu_708_p_opcode;
input  [31:0] grp_fu_708_p_dout0;
output   grp_fu_708_p_ce;
output  [31:0] grp_fu_712_p_din0;
output  [31:0] grp_fu_712_p_din1;
output  [1:0] grp_fu_712_p_opcode;
input  [31:0] grp_fu_712_p_dout0;
output   grp_fu_712_p_ce;
output  [31:0] grp_fu_716_p_din0;
output  [31:0] grp_fu_716_p_din1;
output  [1:0] grp_fu_716_p_opcode;
input  [31:0] grp_fu_716_p_dout0;
output   grp_fu_716_p_ce;
output  [31:0] grp_fu_720_p_din0;
output  [31:0] grp_fu_720_p_din1;
output  [1:0] grp_fu_720_p_opcode;
input  [31:0] grp_fu_720_p_dout0;
output   grp_fu_720_p_ce;
output  [31:0] grp_fu_724_p_din0;
output  [31:0] grp_fu_724_p_din1;
input  [31:0] grp_fu_724_p_dout0;
output   grp_fu_724_p_ce;
output  [31:0] grp_fu_728_p_din0;
output  [31:0] grp_fu_728_p_din1;
input  [31:0] grp_fu_728_p_dout0;
output   grp_fu_728_p_ce;
output  [31:0] grp_fu_732_p_din0;
output  [31:0] grp_fu_732_p_din1;
input  [31:0] grp_fu_732_p_dout0;
output   grp_fu_732_p_ce;
output  [31:0] grp_fu_736_p_din0;
output  [31:0] grp_fu_736_p_din1;
input  [31:0] grp_fu_736_p_dout0;
output   grp_fu_736_p_ce;
output  [31:0] grp_fu_740_p_din0;
output  [31:0] grp_fu_740_p_din1;
input  [31:0] grp_fu_740_p_dout0;
output   grp_fu_740_p_ce;
output  [31:0] grp_fu_744_p_din0;
output  [31:0] grp_fu_744_p_din1;
input  [31:0] grp_fu_744_p_dout0;
output   grp_fu_744_p_ce;
output  [31:0] grp_fu_748_p_din0;
output  [31:0] grp_fu_748_p_din1;
input  [31:0] grp_fu_748_p_dout0;
output   grp_fu_748_p_ce;
output  [31:0] grp_fu_752_p_din0;
output  [31:0] grp_fu_752_p_din1;
input  [31:0] grp_fu_752_p_dout0;
output   grp_fu_752_p_ce;
output  [31:0] grp_fu_756_p_din0;
output  [31:0] grp_fu_756_p_din1;
input  [31:0] grp_fu_756_p_dout0;
output   grp_fu_756_p_ce;
output  [31:0] grp_fu_760_p_din0;
output  [31:0] grp_fu_760_p_din1;
input  [31:0] grp_fu_760_p_dout0;
output   grp_fu_760_p_ce;
output  [31:0] grp_fu_764_p_din0;
output  [31:0] grp_fu_764_p_din1;
input  [31:0] grp_fu_764_p_dout0;
output   grp_fu_764_p_ce;
output  [31:0] grp_fu_768_p_din0;
output  [31:0] grp_fu_768_p_din1;
input  [31:0] grp_fu_768_p_dout0;
output   grp_fu_768_p_ce;
output  [31:0] grp_fu_772_p_din0;
output  [31:0] grp_fu_772_p_din1;
input  [31:0] grp_fu_772_p_dout0;
output   grp_fu_772_p_ce;
output  [31:0] grp_fu_776_p_din0;
output  [31:0] grp_fu_776_p_din1;
input  [31:0] grp_fu_776_p_dout0;
output   grp_fu_776_p_ce;
output  [31:0] grp_fu_780_p_din0;
output  [31:0] grp_fu_780_p_din1;
input  [31:0] grp_fu_780_p_dout0;
output   grp_fu_780_p_ce;
output  [31:0] grp_fu_784_p_din0;
output  [31:0] grp_fu_784_p_din1;
input  [31:0] grp_fu_784_p_dout0;
output   grp_fu_784_p_ce;

reg ap_idle;
reg OUT_I_3_ce0;
reg OUT_I_3_we0;
reg OUT_I_3_ce1;
reg OUT_I_3_we1;
reg OUT_I_2_ce0;
reg OUT_I_2_we0;
reg OUT_I_2_ce1;
reg OUT_I_2_we1;
reg OUT_I_1_ce0;
reg OUT_I_1_we0;
reg OUT_I_1_ce1;
reg OUT_I_1_we1;
reg OUT_I_0_ce0;
reg OUT_I_0_we0;
reg OUT_I_0_ce1;
reg OUT_I_0_we1;
reg OUT_R_3_ce0;
reg OUT_R_3_we0;
reg OUT_R_3_ce1;
reg OUT_R_3_we1;
reg OUT_R_2_ce0;
reg OUT_R_2_we0;
reg OUT_R_2_ce1;
reg OUT_R_2_we1;
reg OUT_R_1_ce0;
reg OUT_R_1_we0;
reg OUT_R_1_ce1;
reg OUT_R_1_we1;
reg OUT_R_0_ce0;
reg OUT_R_0_we0;
reg OUT_R_0_ce1;
reg OUT_R_0_we1;
reg Stage9_R_ce0;
reg Stage9_R_ce1;
reg Stage9_I_ce0;
reg Stage9_I_ce1;
reg Stage9_R_1_ce0;
reg Stage9_R_1_ce1;
reg Stage9_I_1_ce0;
reg Stage9_I_1_ce1;
reg Stage9_R_2_ce0;
reg Stage9_R_2_ce1;
reg Stage9_I_2_ce0;
reg Stage9_I_2_ce1;
reg Stage9_R_3_ce0;
reg Stage9_R_3_ce1;
reg Stage9_I_3_ce0;
reg Stage9_I_3_ce1;
reg W_real_ce0;
reg W_real_ce1;
reg W_real_ce2;
reg W_real_ce3;
reg W_imag_ce0;
reg W_imag_ce1;
reg W_imag_ce2;
reg W_imag_ce3;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln109_fu_754_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] lshr_ln118_s_fu_770_p4;
reg   [7:0] lshr_ln118_s_reg_902;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter1_reg;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter2_reg;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter3_reg;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter4_reg;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter5_reg;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter6_reg;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter7_reg;
reg   [7:0] lshr_ln118_s_reg_902_pp0_iter8_reg;
wire   [63:0] zext_ln120_fu_786_p1;
reg   [63:0] zext_ln120_reg_907;
reg   [63:0] zext_ln120_reg_907_pp0_iter1_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter2_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter3_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter4_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter5_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter6_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter7_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter8_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter9_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter10_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter11_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter12_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter13_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter14_reg;
reg   [63:0] zext_ln120_reg_907_pp0_iter15_reg;
wire   [6:0] lshr_ln118_1_fu_804_p4;
reg   [6:0] lshr_ln118_1_reg_933;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter1_reg;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter2_reg;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter3_reg;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter4_reg;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter5_reg;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter6_reg;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter7_reg;
reg   [6:0] lshr_ln118_1_reg_933_pp0_iter8_reg;
wire   [63:0] zext_ln120_1_fu_822_p1;
reg   [63:0] zext_ln120_1_reg_938;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter1_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter2_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter3_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter4_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter5_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter6_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter7_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter8_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter9_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter10_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter11_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter12_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter13_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter14_reg;
reg   [63:0] zext_ln120_1_reg_938_pp0_iter15_reg;
reg   [31:0] W_real_load_reg_998;
reg   [31:0] W_imag_load_reg_1004;
reg   [31:0] Stage9_R_load_1_reg_1010;
reg   [31:0] Stage9_I_load_1_reg_1016;
reg   [31:0] W_real_load_1_reg_1022;
reg   [31:0] W_imag_load_1_reg_1028;
reg   [31:0] Stage9_R_1_load_1_reg_1034;
reg   [31:0] Stage9_I_1_load_1_reg_1040;
reg   [31:0] W_real_load_2_reg_1046;
reg   [31:0] W_imag_load_2_reg_1052;
reg   [31:0] Stage9_R_2_load_1_reg_1058;
reg   [31:0] Stage9_I_2_load_1_reg_1064;
reg   [31:0] W_real_load_3_reg_1070;
reg   [31:0] W_imag_load_3_reg_1076;
reg   [31:0] Stage9_R_3_load_1_reg_1082;
reg   [31:0] Stage9_I_3_load_1_reg_1088;
reg   [31:0] mul22_i8_reg_1094;
reg   [31:0] mul23_i9_reg_1099;
reg   [31:0] mul24_i8_reg_1104;
reg   [31:0] mul25_i9_reg_1109;
reg   [31:0] mul22_i8_1_reg_1114;
reg   [31:0] mul23_i9_1_reg_1119;
reg   [31:0] mul24_i8_1_reg_1124;
reg   [31:0] mul25_i9_1_reg_1129;
reg   [31:0] mul22_i8_2_reg_1134;
reg   [31:0] mul23_i9_2_reg_1139;
reg   [31:0] mul24_i8_2_reg_1144;
reg   [31:0] mul25_i9_2_reg_1149;
reg   [31:0] mul22_i8_3_reg_1154;
reg   [31:0] mul23_i9_3_reg_1159;
reg   [31:0] mul24_i8_3_reg_1164;
reg   [31:0] mul25_i9_3_reg_1169;
wire   [63:0] zext_ln118_fu_867_p1;
reg   [63:0] zext_ln118_reg_1174;
reg   [63:0] zext_ln118_reg_1174_pp0_iter10_reg;
reg   [63:0] zext_ln118_reg_1174_pp0_iter11_reg;
reg   [63:0] zext_ln118_reg_1174_pp0_iter12_reg;
reg   [63:0] zext_ln118_reg_1174_pp0_iter13_reg;
reg   [63:0] zext_ln118_reg_1174_pp0_iter14_reg;
reg   [63:0] zext_ln118_reg_1174_pp0_iter15_reg;
wire   [63:0] zext_ln118_4_fu_872_p1;
reg   [63:0] zext_ln118_4_reg_1190;
reg   [63:0] zext_ln118_4_reg_1190_pp0_iter10_reg;
reg   [63:0] zext_ln118_4_reg_1190_pp0_iter11_reg;
reg   [63:0] zext_ln118_4_reg_1190_pp0_iter12_reg;
reg   [63:0] zext_ln118_4_reg_1190_pp0_iter13_reg;
reg   [63:0] zext_ln118_4_reg_1190_pp0_iter14_reg;
reg   [63:0] zext_ln118_4_reg_1190_pp0_iter15_reg;
reg   [31:0] Stage9_R_load_reg_1230;
reg   [31:0] Stage9_I_load_reg_1236;
reg   [31:0] t_R_9_reg_1242;
reg   [31:0] t_I_9_reg_1248;
reg   [31:0] Stage9_R_1_load_reg_1254;
reg   [31:0] Stage9_I_1_load_reg_1260;
reg   [31:0] t_R_9_1_reg_1266;
reg   [31:0] t_I_9_1_reg_1272;
reg   [31:0] Stage9_R_2_load_reg_1278;
reg   [31:0] Stage9_I_2_load_reg_1284;
reg   [31:0] t_R_9_2_reg_1290;
reg   [31:0] t_I_9_2_reg_1296;
reg   [31:0] Stage9_R_3_load_reg_1302;
reg   [31:0] Stage9_I_3_load_reg_1308;
reg   [31:0] t_R_9_3_reg_1314;
reg   [31:0] t_I_9_3_reg_1320;
reg   [31:0] sub27_i9_reg_1326;
reg   [31:0] sub30_i9_reg_1331;
reg   [31:0] add33_i9_reg_1336;
reg   [31:0] add36_i9_reg_1341;
reg   [31:0] sub27_i9_1_reg_1346;
reg   [31:0] sub30_i9_1_reg_1351;
reg   [31:0] add33_i9_1_reg_1356;
reg   [31:0] add36_i9_1_reg_1361;
reg   [31:0] sub27_i9_2_reg_1366;
reg   [31:0] sub30_i9_2_reg_1371;
reg   [31:0] add33_i9_2_reg_1376;
reg   [31:0] add36_i9_2_reg_1381;
reg   [31:0] sub27_i9_3_reg_1386;
reg   [31:0] sub30_i9_3_reg_1391;
reg   [31:0] add33_i9_3_reg_1396;
reg   [31:0] add36_i9_3_reg_1401;
wire   [63:0] zext_ln113_fu_764_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln113_1_fu_798_p1;
wire   [63:0] zext_ln113_2_fu_838_p1;
wire   [63:0] zext_ln113_3_fu_850_p1;
reg   [9:0] i_18_0_fu_84;
wire   [9:0] add_ln109_fu_856_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_18_0_load;
wire   [8:0] empty_29_fu_760_p1;
wire   [7:0] xor_ln120_fu_780_p2;
wire   [8:0] or_ln109_fu_792_p2;
wire   [7:0] zext_ln120_s_fu_814_p3;
wire   [8:0] or_ln109_2_fu_832_p2;
wire   [8:0] or_ln109_3_fu_844_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
wire    ap_enable_operation_304;
reg    ap_enable_state17_pp0_iter16_stage0;
wire    ap_enable_operation_308;
wire    ap_enable_operation_306;
wire    ap_enable_operation_310;
wire    ap_enable_operation_312;
wire    ap_enable_operation_316;
wire    ap_enable_operation_314;
wire    ap_enable_operation_318;
wire    ap_enable_operation_320;
wire    ap_enable_operation_324;
wire    ap_enable_operation_322;
wire    ap_enable_operation_326;
wire    ap_enable_operation_328;
wire    ap_enable_operation_332;
wire    ap_enable_operation_330;
wire    ap_enable_operation_334;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln109_fu_754_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_18_0_fu_84 <= add_ln109_fu_856_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_18_0_fu_84 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_1_load_1_reg_1040 <= Stage9_I_1_q1;
        Stage9_I_2_load_1_reg_1064 <= Stage9_I_2_q1;
        Stage9_I_3_load_1_reg_1088 <= Stage9_I_3_q1;
        Stage9_I_load_1_reg_1016 <= Stage9_I_q1;
        Stage9_R_1_load_1_reg_1034 <= Stage9_R_1_q1;
        Stage9_R_2_load_1_reg_1058 <= Stage9_R_2_q1;
        Stage9_R_3_load_1_reg_1082 <= Stage9_R_3_q1;
        Stage9_R_load_1_reg_1010 <= Stage9_R_q1;
        W_imag_load_1_reg_1028 <= W_imag_q2;
        W_imag_load_2_reg_1052 <= W_imag_q1;
        W_imag_load_3_reg_1076 <= W_imag_q0;
        W_imag_load_reg_1004 <= W_imag_q3;
        W_real_load_1_reg_1022 <= W_real_q2;
        W_real_load_2_reg_1046 <= W_real_q1;
        W_real_load_3_reg_1070 <= W_real_q0;
        W_real_load_reg_998 <= W_real_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        Stage9_I_1_load_reg_1260 <= Stage9_I_1_q0;
        Stage9_I_2_load_reg_1284 <= Stage9_I_2_q0;
        Stage9_I_3_load_reg_1308 <= Stage9_I_3_q0;
        Stage9_I_load_reg_1236 <= Stage9_I_q0;
        Stage9_R_1_load_reg_1254 <= Stage9_R_1_q0;
        Stage9_R_2_load_reg_1278 <= Stage9_R_2_q0;
        Stage9_R_3_load_reg_1302 <= Stage9_R_3_q0;
        Stage9_R_load_reg_1230 <= Stage9_R_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add33_i9_1_reg_1356 <= grp_fu_684_p_dout0;
        add33_i9_2_reg_1376 <= grp_fu_700_p_dout0;
        add33_i9_3_reg_1396 <= grp_fu_716_p_dout0;
        add33_i9_reg_1336 <= grp_fu_668_p_dout0;
        add36_i9_1_reg_1361 <= grp_fu_688_p_dout0;
        add36_i9_2_reg_1381 <= grp_fu_704_p_dout0;
        add36_i9_3_reg_1401 <= grp_fu_720_p_dout0;
        add36_i9_reg_1341 <= grp_fu_672_p_dout0;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        lshr_ln118_1_reg_933_pp0_iter2_reg <= lshr_ln118_1_reg_933_pp0_iter1_reg;
        lshr_ln118_1_reg_933_pp0_iter3_reg <= lshr_ln118_1_reg_933_pp0_iter2_reg;
        lshr_ln118_1_reg_933_pp0_iter4_reg <= lshr_ln118_1_reg_933_pp0_iter3_reg;
        lshr_ln118_1_reg_933_pp0_iter5_reg <= lshr_ln118_1_reg_933_pp0_iter4_reg;
        lshr_ln118_1_reg_933_pp0_iter6_reg <= lshr_ln118_1_reg_933_pp0_iter5_reg;
        lshr_ln118_1_reg_933_pp0_iter7_reg <= lshr_ln118_1_reg_933_pp0_iter6_reg;
        lshr_ln118_1_reg_933_pp0_iter8_reg <= lshr_ln118_1_reg_933_pp0_iter7_reg;
        lshr_ln118_s_reg_902_pp0_iter2_reg <= lshr_ln118_s_reg_902_pp0_iter1_reg;
        lshr_ln118_s_reg_902_pp0_iter3_reg <= lshr_ln118_s_reg_902_pp0_iter2_reg;
        lshr_ln118_s_reg_902_pp0_iter4_reg <= lshr_ln118_s_reg_902_pp0_iter3_reg;
        lshr_ln118_s_reg_902_pp0_iter5_reg <= lshr_ln118_s_reg_902_pp0_iter4_reg;
        lshr_ln118_s_reg_902_pp0_iter6_reg <= lshr_ln118_s_reg_902_pp0_iter5_reg;
        lshr_ln118_s_reg_902_pp0_iter7_reg <= lshr_ln118_s_reg_902_pp0_iter6_reg;
        lshr_ln118_s_reg_902_pp0_iter8_reg <= lshr_ln118_s_reg_902_pp0_iter7_reg;
        mul22_i8_1_reg_1114 <= grp_fu_740_p_dout0;
        mul22_i8_2_reg_1134 <= grp_fu_756_p_dout0;
        mul22_i8_3_reg_1154 <= grp_fu_772_p_dout0;
        mul22_i8_reg_1094 <= grp_fu_724_p_dout0;
        mul23_i9_1_reg_1119 <= grp_fu_744_p_dout0;
        mul23_i9_2_reg_1139 <= grp_fu_760_p_dout0;
        mul23_i9_3_reg_1159 <= grp_fu_776_p_dout0;
        mul23_i9_reg_1099 <= grp_fu_728_p_dout0;
        mul24_i8_1_reg_1124 <= grp_fu_748_p_dout0;
        mul24_i8_2_reg_1144 <= grp_fu_764_p_dout0;
        mul24_i8_3_reg_1164 <= grp_fu_780_p_dout0;
        mul24_i8_reg_1104 <= grp_fu_732_p_dout0;
        mul25_i9_1_reg_1129 <= grp_fu_752_p_dout0;
        mul25_i9_2_reg_1149 <= grp_fu_768_p_dout0;
        mul25_i9_3_reg_1169 <= grp_fu_784_p_dout0;
        mul25_i9_reg_1109 <= grp_fu_736_p_dout0;
        sub27_i9_1_reg_1346 <= grp_fu_676_p_dout0;
        sub27_i9_2_reg_1366 <= grp_fu_692_p_dout0;
        sub27_i9_3_reg_1386 <= grp_fu_708_p_dout0;
        sub27_i9_reg_1326 <= grp_fu_660_p_dout0;
        sub30_i9_1_reg_1351 <= grp_fu_680_p_dout0;
        sub30_i9_2_reg_1371 <= grp_fu_696_p_dout0;
        sub30_i9_3_reg_1391 <= grp_fu_712_p_dout0;
        sub30_i9_reg_1331 <= grp_fu_664_p_dout0;
        t_I_9_1_reg_1272 <= grp_fu_640_p_dout0;
        t_I_9_2_reg_1296 <= grp_fu_648_p_dout0;
        t_I_9_3_reg_1320 <= grp_fu_656_p_dout0;
        t_I_9_reg_1248 <= grp_fu_632_p_dout0;
        t_R_9_1_reg_1266 <= grp_fu_636_p_dout0;
        t_R_9_2_reg_1290 <= grp_fu_644_p_dout0;
        t_R_9_3_reg_1314 <= grp_fu_652_p_dout0;
        t_R_9_reg_1242 <= grp_fu_628_p_dout0;
        zext_ln118_4_reg_1190[6 : 0] <= zext_ln118_4_fu_872_p1[6 : 0];
        zext_ln118_4_reg_1190_pp0_iter10_reg[6 : 0] <= zext_ln118_4_reg_1190[6 : 0];
        zext_ln118_4_reg_1190_pp0_iter11_reg[6 : 0] <= zext_ln118_4_reg_1190_pp0_iter10_reg[6 : 0];
        zext_ln118_4_reg_1190_pp0_iter12_reg[6 : 0] <= zext_ln118_4_reg_1190_pp0_iter11_reg[6 : 0];
        zext_ln118_4_reg_1190_pp0_iter13_reg[6 : 0] <= zext_ln118_4_reg_1190_pp0_iter12_reg[6 : 0];
        zext_ln118_4_reg_1190_pp0_iter14_reg[6 : 0] <= zext_ln118_4_reg_1190_pp0_iter13_reg[6 : 0];
        zext_ln118_4_reg_1190_pp0_iter15_reg[6 : 0] <= zext_ln118_4_reg_1190_pp0_iter14_reg[6 : 0];
        zext_ln118_reg_1174[7 : 0] <= zext_ln118_fu_867_p1[7 : 0];
        zext_ln118_reg_1174_pp0_iter10_reg[7 : 0] <= zext_ln118_reg_1174[7 : 0];
        zext_ln118_reg_1174_pp0_iter11_reg[7 : 0] <= zext_ln118_reg_1174_pp0_iter10_reg[7 : 0];
        zext_ln118_reg_1174_pp0_iter12_reg[7 : 0] <= zext_ln118_reg_1174_pp0_iter11_reg[7 : 0];
        zext_ln118_reg_1174_pp0_iter13_reg[7 : 0] <= zext_ln118_reg_1174_pp0_iter12_reg[7 : 0];
        zext_ln118_reg_1174_pp0_iter14_reg[7 : 0] <= zext_ln118_reg_1174_pp0_iter13_reg[7 : 0];
        zext_ln118_reg_1174_pp0_iter15_reg[7 : 0] <= zext_ln118_reg_1174_pp0_iter14_reg[7 : 0];
        zext_ln120_1_reg_938_pp0_iter10_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter9_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter11_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter10_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter12_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter11_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter13_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter12_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter14_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter13_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter15_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter14_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter2_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter1_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter3_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter2_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter4_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter3_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter5_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter4_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter6_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter5_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter7_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter6_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter8_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter7_reg[6 : 0];
        zext_ln120_1_reg_938_pp0_iter9_reg[6 : 0] <= zext_ln120_1_reg_938_pp0_iter8_reg[6 : 0];
        zext_ln120_reg_907_pp0_iter10_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter9_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter11_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter10_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter12_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter11_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter13_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter12_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter14_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter13_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter15_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter14_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter2_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter1_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter3_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter2_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter4_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter3_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter5_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter4_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter6_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter5_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter7_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter6_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter8_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter7_reg[7 : 0];
        zext_ln120_reg_907_pp0_iter9_reg[7 : 0] <= zext_ln120_reg_907_pp0_iter8_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        lshr_ln118_1_reg_933_pp0_iter1_reg <= lshr_ln118_1_reg_933;
        lshr_ln118_s_reg_902_pp0_iter1_reg <= lshr_ln118_s_reg_902;
        zext_ln120_1_reg_938_pp0_iter1_reg[6 : 0] <= zext_ln120_1_reg_938[6 : 0];
        zext_ln120_reg_907_pp0_iter1_reg[7 : 0] <= zext_ln120_reg_907[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_754_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln118_1_reg_933 <= {{ap_sig_allocacmp_i_18_0_load[8:2]}};
        lshr_ln118_s_reg_902 <= {{ap_sig_allocacmp_i_18_0_load[9:2]}};
        zext_ln120_1_reg_938[6 : 0] <= zext_ln120_1_fu_822_p1[6 : 0];
        zext_ln120_reg_907[7 : 0] <= zext_ln120_fu_786_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_0_ce0 = 1'b1;
    end else begin
        OUT_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_0_ce1 = 1'b1;
    end else begin
        OUT_I_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_0_we0 = 1'b1;
    end else begin
        OUT_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_0_we1 = 1'b1;
    end else begin
        OUT_I_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_1_ce0 = 1'b1;
    end else begin
        OUT_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_1_ce1 = 1'b1;
    end else begin
        OUT_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_1_we0 = 1'b1;
    end else begin
        OUT_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_1_we1 = 1'b1;
    end else begin
        OUT_I_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_2_ce0 = 1'b1;
    end else begin
        OUT_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_2_ce1 = 1'b1;
    end else begin
        OUT_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_2_we0 = 1'b1;
    end else begin
        OUT_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_2_we1 = 1'b1;
    end else begin
        OUT_I_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_3_ce0 = 1'b1;
    end else begin
        OUT_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_3_ce1 = 1'b1;
    end else begin
        OUT_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_3_we0 = 1'b1;
    end else begin
        OUT_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_3_we1 = 1'b1;
    end else begin
        OUT_I_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_0_ce0 = 1'b1;
    end else begin
        OUT_R_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_0_ce1 = 1'b1;
    end else begin
        OUT_R_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_0_we0 = 1'b1;
    end else begin
        OUT_R_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_0_we1 = 1'b1;
    end else begin
        OUT_R_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_1_ce0 = 1'b1;
    end else begin
        OUT_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_1_ce1 = 1'b1;
    end else begin
        OUT_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_1_we0 = 1'b1;
    end else begin
        OUT_R_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_1_we1 = 1'b1;
    end else begin
        OUT_R_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_2_ce0 = 1'b1;
    end else begin
        OUT_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_2_ce1 = 1'b1;
    end else begin
        OUT_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_2_we0 = 1'b1;
    end else begin
        OUT_R_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_2_we1 = 1'b1;
    end else begin
        OUT_R_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_3_ce0 = 1'b1;
    end else begin
        OUT_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_3_ce1 = 1'b1;
    end else begin
        OUT_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_3_we0 = 1'b1;
    end else begin
        OUT_R_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_3_we1 = 1'b1;
    end else begin
        OUT_R_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_I_1_ce0 = 1'b1;
    end else begin
        Stage9_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_1_ce1 = 1'b1;
    end else begin
        Stage9_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_I_2_ce0 = 1'b1;
    end else begin
        Stage9_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_2_ce1 = 1'b1;
    end else begin
        Stage9_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_I_3_ce0 = 1'b1;
    end else begin
        Stage9_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_3_ce1 = 1'b1;
    end else begin
        Stage9_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_I_ce0 = 1'b1;
    end else begin
        Stage9_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_ce1 = 1'b1;
    end else begin
        Stage9_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_1_ce0 = 1'b1;
    end else begin
        Stage9_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_1_ce1 = 1'b1;
    end else begin
        Stage9_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_2_ce0 = 1'b1;
    end else begin
        Stage9_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_2_ce1 = 1'b1;
    end else begin
        Stage9_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_3_ce0 = 1'b1;
    end else begin
        Stage9_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_3_ce1 = 1'b1;
    end else begin
        Stage9_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_ce0 = 1'b1;
    end else begin
        Stage9_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_ce1 = 1'b1;
    end else begin
        Stage9_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce0 = 1'b1;
    end else begin
        W_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce1 = 1'b1;
    end else begin
        W_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce2 = 1'b1;
    end else begin
        W_imag_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce3 = 1'b1;
    end else begin
        W_imag_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce0 = 1'b1;
    end else begin
        W_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce1 = 1'b1;
    end else begin
        W_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce2 = 1'b1;
    end else begin
        W_real_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce3 = 1'b1;
    end else begin
        W_real_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln109_fu_754_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_18_0_load = 10'd0;
    end else begin
        ap_sig_allocacmp_i_18_0_load = i_18_0_fu_84;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OUT_I_0_address0 = zext_ln118_reg_1174_pp0_iter15_reg;

assign OUT_I_0_address1 = zext_ln120_reg_907_pp0_iter15_reg;

assign OUT_I_0_d0 = add36_i9_reg_1341;

assign OUT_I_0_d1 = sub30_i9_reg_1331;

assign OUT_I_1_address0 = zext_ln118_4_reg_1190_pp0_iter15_reg;

assign OUT_I_1_address1 = zext_ln120_1_reg_938_pp0_iter15_reg;

assign OUT_I_1_d0 = add36_i9_1_reg_1361;

assign OUT_I_1_d1 = sub30_i9_1_reg_1351;

assign OUT_I_2_address0 = zext_ln118_4_reg_1190_pp0_iter15_reg;

assign OUT_I_2_address1 = zext_ln120_1_reg_938_pp0_iter15_reg;

assign OUT_I_2_d0 = add36_i9_2_reg_1381;

assign OUT_I_2_d1 = sub30_i9_2_reg_1371;

assign OUT_I_3_address0 = zext_ln118_4_reg_1190_pp0_iter15_reg;

assign OUT_I_3_address1 = zext_ln120_1_reg_938_pp0_iter15_reg;

assign OUT_I_3_d0 = add36_i9_3_reg_1401;

assign OUT_I_3_d1 = sub30_i9_3_reg_1391;

assign OUT_R_0_address0 = zext_ln118_reg_1174_pp0_iter15_reg;

assign OUT_R_0_address1 = zext_ln120_reg_907_pp0_iter15_reg;

assign OUT_R_0_d0 = add33_i9_reg_1336;

assign OUT_R_0_d1 = sub27_i9_reg_1326;

assign OUT_R_1_address0 = zext_ln118_4_reg_1190_pp0_iter15_reg;

assign OUT_R_1_address1 = zext_ln120_1_reg_938_pp0_iter15_reg;

assign OUT_R_1_d0 = add33_i9_1_reg_1356;

assign OUT_R_1_d1 = sub27_i9_1_reg_1346;

assign OUT_R_2_address0 = zext_ln118_4_reg_1190_pp0_iter15_reg;

assign OUT_R_2_address1 = zext_ln120_1_reg_938_pp0_iter15_reg;

assign OUT_R_2_d0 = add33_i9_2_reg_1376;

assign OUT_R_2_d1 = sub27_i9_2_reg_1366;

assign OUT_R_3_address0 = zext_ln118_4_reg_1190_pp0_iter15_reg;

assign OUT_R_3_address1 = zext_ln120_1_reg_938_pp0_iter15_reg;

assign OUT_R_3_d0 = add33_i9_3_reg_1396;

assign OUT_R_3_d1 = sub27_i9_3_reg_1386;

assign Stage9_I_1_address0 = zext_ln118_4_fu_872_p1;

assign Stage9_I_1_address1 = zext_ln120_1_fu_822_p1;

assign Stage9_I_2_address0 = zext_ln118_4_fu_872_p1;

assign Stage9_I_2_address1 = zext_ln120_1_fu_822_p1;

assign Stage9_I_3_address0 = zext_ln118_4_fu_872_p1;

assign Stage9_I_3_address1 = zext_ln120_1_fu_822_p1;

assign Stage9_I_address0 = zext_ln118_fu_867_p1;

assign Stage9_I_address1 = zext_ln120_fu_786_p1;

assign Stage9_R_1_address0 = zext_ln118_4_fu_872_p1;

assign Stage9_R_1_address1 = zext_ln120_1_fu_822_p1;

assign Stage9_R_2_address0 = zext_ln118_4_fu_872_p1;

assign Stage9_R_2_address1 = zext_ln120_1_fu_822_p1;

assign Stage9_R_3_address0 = zext_ln118_4_fu_872_p1;

assign Stage9_R_3_address1 = zext_ln120_1_fu_822_p1;

assign Stage9_R_address0 = zext_ln118_fu_867_p1;

assign Stage9_R_address1 = zext_ln120_fu_786_p1;

assign W_imag_address0 = zext_ln113_3_fu_850_p1;

assign W_imag_address1 = zext_ln113_2_fu_838_p1;

assign W_imag_address2 = zext_ln113_1_fu_798_p1;

assign W_imag_address3 = zext_ln113_fu_764_p1;

assign W_real_address0 = zext_ln113_3_fu_850_p1;

assign W_real_address1 = zext_ln113_2_fu_838_p1;

assign W_real_address2 = zext_ln113_1_fu_798_p1;

assign W_real_address3 = zext_ln113_fu_764_p1;

assign add_ln109_fu_856_p2 = (ap_sig_allocacmp_i_18_0_load + 10'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_operation_304 = (1'b1 == 1'b1);

assign ap_enable_operation_306 = (1'b1 == 1'b1);

assign ap_enable_operation_308 = (1'b1 == 1'b1);

assign ap_enable_operation_310 = (1'b1 == 1'b1);

assign ap_enable_operation_312 = (1'b1 == 1'b1);

assign ap_enable_operation_314 = (1'b1 == 1'b1);

assign ap_enable_operation_316 = (1'b1 == 1'b1);

assign ap_enable_operation_318 = (1'b1 == 1'b1);

assign ap_enable_operation_320 = (1'b1 == 1'b1);

assign ap_enable_operation_322 = (1'b1 == 1'b1);

assign ap_enable_operation_324 = (1'b1 == 1'b1);

assign ap_enable_operation_326 = (1'b1 == 1'b1);

assign ap_enable_operation_328 = (1'b1 == 1'b1);

assign ap_enable_operation_330 = (1'b1 == 1'b1);

assign ap_enable_operation_332 = (1'b1 == 1'b1);

assign ap_enable_operation_334 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state17_pp0_iter16_stage0 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_29_fu_760_p1 = ap_sig_allocacmp_i_18_0_load[8:0];

assign grp_fu_628_p_ce = 1'b1;

assign grp_fu_628_p_din0 = mul22_i8_reg_1094;

assign grp_fu_628_p_din1 = mul23_i9_reg_1099;

assign grp_fu_628_p_opcode = 2'd1;

assign grp_fu_632_p_ce = 1'b1;

assign grp_fu_632_p_din0 = mul24_i8_reg_1104;

assign grp_fu_632_p_din1 = mul25_i9_reg_1109;

assign grp_fu_632_p_opcode = 2'd0;

assign grp_fu_636_p_ce = 1'b1;

assign grp_fu_636_p_din0 = mul22_i8_1_reg_1114;

assign grp_fu_636_p_din1 = mul23_i9_1_reg_1119;

assign grp_fu_636_p_opcode = 2'd1;

assign grp_fu_640_p_ce = 1'b1;

assign grp_fu_640_p_din0 = mul24_i8_1_reg_1124;

assign grp_fu_640_p_din1 = mul25_i9_1_reg_1129;

assign grp_fu_640_p_opcode = 2'd0;

assign grp_fu_644_p_ce = 1'b1;

assign grp_fu_644_p_din0 = mul22_i8_2_reg_1134;

assign grp_fu_644_p_din1 = mul23_i9_2_reg_1139;

assign grp_fu_644_p_opcode = 2'd1;

assign grp_fu_648_p_ce = 1'b1;

assign grp_fu_648_p_din0 = mul24_i8_2_reg_1144;

assign grp_fu_648_p_din1 = mul25_i9_2_reg_1149;

assign grp_fu_648_p_opcode = 2'd0;

assign grp_fu_652_p_ce = 1'b1;

assign grp_fu_652_p_din0 = mul22_i8_3_reg_1154;

assign grp_fu_652_p_din1 = mul23_i9_3_reg_1159;

assign grp_fu_652_p_opcode = 2'd1;

assign grp_fu_656_p_ce = 1'b1;

assign grp_fu_656_p_din0 = mul24_i8_3_reg_1164;

assign grp_fu_656_p_din1 = mul25_i9_3_reg_1169;

assign grp_fu_656_p_opcode = 2'd0;

assign grp_fu_660_p_ce = 1'b1;

assign grp_fu_660_p_din0 = Stage9_R_load_reg_1230;

assign grp_fu_660_p_din1 = t_R_9_reg_1242;

assign grp_fu_660_p_opcode = 2'd1;

assign grp_fu_664_p_ce = 1'b1;

assign grp_fu_664_p_din0 = Stage9_I_load_reg_1236;

assign grp_fu_664_p_din1 = t_I_9_reg_1248;

assign grp_fu_664_p_opcode = 2'd1;

assign grp_fu_668_p_ce = 1'b1;

assign grp_fu_668_p_din0 = Stage9_R_load_reg_1230;

assign grp_fu_668_p_din1 = t_R_9_reg_1242;

assign grp_fu_668_p_opcode = 2'd0;

assign grp_fu_672_p_ce = 1'b1;

assign grp_fu_672_p_din0 = Stage9_I_load_reg_1236;

assign grp_fu_672_p_din1 = t_I_9_reg_1248;

assign grp_fu_672_p_opcode = 2'd0;

assign grp_fu_676_p_ce = 1'b1;

assign grp_fu_676_p_din0 = Stage9_R_1_load_reg_1254;

assign grp_fu_676_p_din1 = t_R_9_1_reg_1266;

assign grp_fu_676_p_opcode = 2'd1;

assign grp_fu_680_p_ce = 1'b1;

assign grp_fu_680_p_din0 = Stage9_I_1_load_reg_1260;

assign grp_fu_680_p_din1 = t_I_9_1_reg_1272;

assign grp_fu_680_p_opcode = 2'd1;

assign grp_fu_684_p_ce = 1'b1;

assign grp_fu_684_p_din0 = Stage9_R_1_load_reg_1254;

assign grp_fu_684_p_din1 = t_R_9_1_reg_1266;

assign grp_fu_684_p_opcode = 2'd0;

assign grp_fu_688_p_ce = 1'b1;

assign grp_fu_688_p_din0 = Stage9_I_1_load_reg_1260;

assign grp_fu_688_p_din1 = t_I_9_1_reg_1272;

assign grp_fu_688_p_opcode = 2'd0;

assign grp_fu_692_p_ce = 1'b1;

assign grp_fu_692_p_din0 = Stage9_R_2_load_reg_1278;

assign grp_fu_692_p_din1 = t_R_9_2_reg_1290;

assign grp_fu_692_p_opcode = 2'd1;

assign grp_fu_696_p_ce = 1'b1;

assign grp_fu_696_p_din0 = Stage9_I_2_load_reg_1284;

assign grp_fu_696_p_din1 = t_I_9_2_reg_1296;

assign grp_fu_696_p_opcode = 2'd1;

assign grp_fu_700_p_ce = 1'b1;

assign grp_fu_700_p_din0 = Stage9_R_2_load_reg_1278;

assign grp_fu_700_p_din1 = t_R_9_2_reg_1290;

assign grp_fu_700_p_opcode = 2'd0;

assign grp_fu_704_p_ce = 1'b1;

assign grp_fu_704_p_din0 = Stage9_I_2_load_reg_1284;

assign grp_fu_704_p_din1 = t_I_9_2_reg_1296;

assign grp_fu_704_p_opcode = 2'd0;

assign grp_fu_708_p_ce = 1'b1;

assign grp_fu_708_p_din0 = Stage9_R_3_load_reg_1302;

assign grp_fu_708_p_din1 = t_R_9_3_reg_1314;

assign grp_fu_708_p_opcode = 2'd1;

assign grp_fu_712_p_ce = 1'b1;

assign grp_fu_712_p_din0 = Stage9_I_3_load_reg_1308;

assign grp_fu_712_p_din1 = t_I_9_3_reg_1320;

assign grp_fu_712_p_opcode = 2'd1;

assign grp_fu_716_p_ce = 1'b1;

assign grp_fu_716_p_din0 = Stage9_R_3_load_reg_1302;

assign grp_fu_716_p_din1 = t_R_9_3_reg_1314;

assign grp_fu_716_p_opcode = 2'd0;

assign grp_fu_720_p_ce = 1'b1;

assign grp_fu_720_p_din0 = Stage9_I_3_load_reg_1308;

assign grp_fu_720_p_din1 = t_I_9_3_reg_1320;

assign grp_fu_720_p_opcode = 2'd0;

assign grp_fu_724_p_ce = 1'b1;

assign grp_fu_724_p_din0 = Stage9_R_load_1_reg_1010;

assign grp_fu_724_p_din1 = W_real_load_reg_998;

assign grp_fu_728_p_ce = 1'b1;

assign grp_fu_728_p_din0 = Stage9_I_load_1_reg_1016;

assign grp_fu_728_p_din1 = W_imag_load_reg_1004;

assign grp_fu_732_p_ce = 1'b1;

assign grp_fu_732_p_din0 = Stage9_I_load_1_reg_1016;

assign grp_fu_732_p_din1 = W_real_load_reg_998;

assign grp_fu_736_p_ce = 1'b1;

assign grp_fu_736_p_din0 = Stage9_R_load_1_reg_1010;

assign grp_fu_736_p_din1 = W_imag_load_reg_1004;

assign grp_fu_740_p_ce = 1'b1;

assign grp_fu_740_p_din0 = Stage9_R_1_load_1_reg_1034;

assign grp_fu_740_p_din1 = W_real_load_1_reg_1022;

assign grp_fu_744_p_ce = 1'b1;

assign grp_fu_744_p_din0 = Stage9_I_1_load_1_reg_1040;

assign grp_fu_744_p_din1 = W_imag_load_1_reg_1028;

assign grp_fu_748_p_ce = 1'b1;

assign grp_fu_748_p_din0 = Stage9_I_1_load_1_reg_1040;

assign grp_fu_748_p_din1 = W_real_load_1_reg_1022;

assign grp_fu_752_p_ce = 1'b1;

assign grp_fu_752_p_din0 = Stage9_R_1_load_1_reg_1034;

assign grp_fu_752_p_din1 = W_imag_load_1_reg_1028;

assign grp_fu_756_p_ce = 1'b1;

assign grp_fu_756_p_din0 = Stage9_R_2_load_1_reg_1058;

assign grp_fu_756_p_din1 = W_real_load_2_reg_1046;

assign grp_fu_760_p_ce = 1'b1;

assign grp_fu_760_p_din0 = Stage9_I_2_load_1_reg_1064;

assign grp_fu_760_p_din1 = W_imag_load_2_reg_1052;

assign grp_fu_764_p_ce = 1'b1;

assign grp_fu_764_p_din0 = Stage9_I_2_load_1_reg_1064;

assign grp_fu_764_p_din1 = W_real_load_2_reg_1046;

assign grp_fu_768_p_ce = 1'b1;

assign grp_fu_768_p_din0 = Stage9_R_2_load_1_reg_1058;

assign grp_fu_768_p_din1 = W_imag_load_2_reg_1052;

assign grp_fu_772_p_ce = 1'b1;

assign grp_fu_772_p_din0 = Stage9_R_3_load_1_reg_1082;

assign grp_fu_772_p_din1 = W_real_load_3_reg_1070;

assign grp_fu_776_p_ce = 1'b1;

assign grp_fu_776_p_din0 = Stage9_I_3_load_1_reg_1088;

assign grp_fu_776_p_din1 = W_imag_load_3_reg_1076;

assign grp_fu_780_p_ce = 1'b1;

assign grp_fu_780_p_din0 = Stage9_I_3_load_1_reg_1088;

assign grp_fu_780_p_din1 = W_real_load_3_reg_1070;

assign grp_fu_784_p_ce = 1'b1;

assign grp_fu_784_p_din0 = Stage9_R_3_load_1_reg_1082;

assign grp_fu_784_p_din1 = W_imag_load_3_reg_1076;

assign icmp_ln109_fu_754_p2 = ((ap_sig_allocacmp_i_18_0_load == 10'd512) ? 1'b1 : 1'b0);

assign lshr_ln118_1_fu_804_p4 = {{ap_sig_allocacmp_i_18_0_load[8:2]}};

assign lshr_ln118_s_fu_770_p4 = {{ap_sig_allocacmp_i_18_0_load[9:2]}};

assign or_ln109_2_fu_832_p2 = (empty_29_fu_760_p1 | 9'd2);

assign or_ln109_3_fu_844_p2 = (empty_29_fu_760_p1 | 9'd3);

assign or_ln109_fu_792_p2 = (empty_29_fu_760_p1 | 9'd1);

assign xor_ln120_fu_780_p2 = (lshr_ln118_s_fu_770_p4 ^ 8'd128);

assign zext_ln113_1_fu_798_p1 = or_ln109_fu_792_p2;

assign zext_ln113_2_fu_838_p1 = or_ln109_2_fu_832_p2;

assign zext_ln113_3_fu_850_p1 = or_ln109_3_fu_844_p2;

assign zext_ln113_fu_764_p1 = empty_29_fu_760_p1;

assign zext_ln118_4_fu_872_p1 = lshr_ln118_1_reg_933_pp0_iter8_reg;

assign zext_ln118_fu_867_p1 = lshr_ln118_s_reg_902_pp0_iter8_reg;

assign zext_ln120_1_fu_822_p1 = zext_ln120_s_fu_814_p3;

assign zext_ln120_fu_786_p1 = xor_ln120_fu_780_p2;

assign zext_ln120_s_fu_814_p3 = {{1'd1}, {lshr_ln118_1_fu_804_p4}};

always @ (posedge ap_clk) begin
    zext_ln120_reg_907[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_907_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln120_1_reg_938[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln120_1_reg_938_pp0_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln118_reg_1174[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1174_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1174_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1174_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1174_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1174_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_reg_1174_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln118_4_reg_1190[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln118_4_reg_1190_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln118_4_reg_1190_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln118_4_reg_1190_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln118_4_reg_1190_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln118_4_reg_1190_pp0_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln118_4_reg_1190_pp0_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //fft_fft_exec_Pipeline_DFT_Loop17
