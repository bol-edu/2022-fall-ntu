// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.742000,HLS_SYN_LAT=16389,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=6,HLS_SYN_FF=680,HLS_SYN_LUT=1598,HLS_VERSION=2020_1}" *)

module matrixmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        AB_address0,
        AB_ce0,
        AB_we0,
        AB_d0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_pp0_stage0 = 18'd2;
parameter    ap_ST_fsm_pp0_stage1 = 18'd4;
parameter    ap_ST_fsm_pp0_stage2 = 18'd8;
parameter    ap_ST_fsm_pp0_stage3 = 18'd16;
parameter    ap_ST_fsm_pp0_stage4 = 18'd32;
parameter    ap_ST_fsm_pp0_stage5 = 18'd64;
parameter    ap_ST_fsm_pp0_stage6 = 18'd128;
parameter    ap_ST_fsm_pp0_stage7 = 18'd256;
parameter    ap_ST_fsm_pp0_stage8 = 18'd512;
parameter    ap_ST_fsm_pp0_stage9 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 18'd65536;
parameter    ap_ST_fsm_state22 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [9:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [9:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [9:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
output  [9:0] AB_address0;
output   AB_ce0;
output   AB_we0;
output  [31:0] AB_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] A_address0;
reg A_ce0;
reg[9:0] A_address1;
reg A_ce1;
reg[9:0] B_address0;
reg B_ce0;
reg[9:0] B_address1;
reg B_ce1;
reg AB_ce0;
reg AB_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten_reg_717;
reg   [5:0] i_0_reg_728;
reg   [5:0] j_0_reg_739;
reg  signed [31:0] reg_750;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state19_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln11_reg_1678;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state20_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state21_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] reg_754;
reg  signed [31:0] reg_758;
reg  signed [31:0] reg_762;
wire   [31:0] grp_fu_766_p2;
reg   [31:0] reg_778;
reg   [0:0] icmp_ln11_reg_1678_pp0_iter1_reg;
wire   [31:0] grp_fu_772_p2;
reg   [31:0] reg_782;
wire   [31:0] grp_fu_786_p2;
reg   [31:0] reg_798;
wire   [31:0] grp_fu_802_p2;
reg   [31:0] reg_814;
wire   [0:0] icmp_ln11_fu_818_p2;
wire   [10:0] add_ln11_fu_824_p2;
reg   [10:0] add_ln11_reg_1682;
wire   [5:0] select_ln17_fu_842_p3;
reg   [5:0] select_ln17_reg_1687;
reg   [5:0] select_ln17_reg_1687_pp0_iter1_reg;
wire   [5:0] select_ln17_1_fu_850_p3;
reg   [5:0] select_ln17_1_reg_1712;
wire   [10:0] tmp_fu_858_p3;
reg   [10:0] tmp_reg_1717;
reg   [10:0] tmp_reg_1717_pp0_iter1_reg;
wire   [7:0] zext_ln17_6_fu_934_p1;
reg   [7:0] zext_ln17_6_reg_1782;
wire  signed [7:0] add_ln17_33_fu_992_p2;
reg  signed [7:0] add_ln17_33_reg_1812;
wire   [8:0] zext_ln17_7_fu_1030_p1;
reg   [8:0] zext_ln17_7_reg_1833;
wire  signed [8:0] add_ln17_35_fu_1088_p2;
reg  signed [8:0] add_ln17_35_reg_1864;
wire   [9:0] zext_ln17_5_fu_1170_p1;
reg   [9:0] zext_ln17_5_reg_1904;
wire   [31:0] add_ln17_6_fu_1192_p2;
reg   [31:0] add_ln17_6_reg_1922;
wire  signed [8:0] add_ln17_36_fu_1278_p2;
reg  signed [8:0] add_ln17_36_reg_1962;
reg   [31:0] add_ln17_10_reg_1972;
reg   [31:0] add_ln17_15_reg_1997;
reg   [31:0] add_ln17_22_reg_2022;
wire   [31:0] add_ln17_14_fu_1483_p2;
reg   [31:0] add_ln17_14_reg_2067;
wire   [31:0] add_ln17_17_fu_1532_p2;
reg   [31:0] add_ln17_17_reg_2092;
wire   [31:0] add_ln17_21_fu_1631_p2;
reg   [31:0] add_ln17_21_reg_2137;
wire   [5:0] j_fu_1636_p2;
reg   [5:0] j_reg_2142;
wire   [31:0] add_ln17_24_fu_1641_p2;
reg   [31:0] add_ln17_24_reg_2147;
wire   [31:0] add_ln17_28_fu_1646_p2;
reg   [31:0] add_ln17_28_reg_2152;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage3_subdone;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_721_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_i_0_phi_fu_732_p4;
reg   [5:0] ap_phi_mux_j_0_phi_fu_743_p4;
wire   [63:0] zext_ln17_fu_866_p1;
wire   [63:0] tmp_2_fu_877_p3;
wire   [63:0] zext_ln17_1_fu_886_p1;
wire   [63:0] zext_ln17_9_fu_901_p1;
wire   [63:0] tmp_3_fu_911_p3;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_4_fu_925_p3;
wire   [63:0] tmp_32_fu_937_p3;
wire   [63:0] zext_ln17_10_fu_951_p1;
wire   [63:0] tmp_5_fu_961_p3;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_6_fu_975_p3;
wire   [63:0] tmp_33_fu_984_p3;
wire   [63:0] zext_ln17_11_fu_997_p1;
wire   [63:0] tmp_7_fu_1007_p3;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_8_fu_1021_p3;
wire   [63:0] tmp_34_fu_1033_p3;
wire   [63:0] zext_ln17_12_fu_1047_p1;
wire   [63:0] tmp_9_fu_1057_p3;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_s_fu_1071_p3;
wire   [63:0] tmp_35_fu_1080_p3;
wire   [63:0] zext_ln17_13_fu_1093_p1;
wire   [63:0] tmp_12_fu_1103_p3;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_13_fu_1117_p3;
wire   [63:0] tmp_37_fu_1126_p3;
wire   [63:0] zext_ln17_15_fu_1137_p1;
wire   [63:0] tmp_16_fu_1147_p3;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_17_fu_1161_p3;
wire   [63:0] tmp_39_fu_1173_p3;
wire   [63:0] zext_ln17_17_fu_1187_p1;
wire   [63:0] tmp_24_fu_1203_p3;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_25_fu_1217_p3;
wire   [63:0] tmp_43_fu_1226_p3;
wire   [63:0] zext_ln17_21_fu_1237_p1;
wire   [63:0] tmp_10_fu_1247_p3;
wire    ap_block_pp0_stage8;
wire   [63:0] tmp_11_fu_1261_p3;
wire   [63:0] tmp_36_fu_1270_p3;
wire   [63:0] zext_ln17_14_fu_1283_p1;
wire   [63:0] tmp_14_fu_1293_p3;
wire    ap_block_pp0_stage9;
wire   [63:0] tmp_15_fu_1307_p3;
wire   [63:0] tmp_38_fu_1316_p3;
wire   [63:0] zext_ln17_16_fu_1329_p1;
wire   [63:0] tmp_18_fu_1339_p3;
wire    ap_block_pp0_stage10;
wire   [63:0] tmp_19_fu_1353_p3;
wire   [63:0] tmp_40_fu_1362_p3;
wire   [63:0] zext_ln17_18_fu_1375_p1;
wire   [63:0] tmp_20_fu_1385_p3;
wire    ap_block_pp0_stage11;
wire   [63:0] tmp_21_fu_1399_p3;
wire   [63:0] tmp_41_fu_1408_p3;
wire   [63:0] zext_ln17_19_fu_1421_p1;
wire   [63:0] tmp_22_fu_1431_p3;
wire    ap_block_pp0_stage12;
wire   [63:0] tmp_23_fu_1445_p3;
wire   [63:0] tmp_42_fu_1454_p3;
wire   [63:0] zext_ln17_20_fu_1467_p1;
wire   [63:0] tmp_26_fu_1493_p3;
wire    ap_block_pp0_stage13;
wire   [63:0] tmp_27_fu_1507_p3;
wire   [63:0] tmp_44_fu_1516_p3;
wire   [63:0] zext_ln17_22_fu_1527_p1;
wire   [63:0] tmp_28_fu_1542_p3;
wire    ap_block_pp0_stage14;
wire   [63:0] tmp_29_fu_1556_p3;
wire   [63:0] tmp_45_fu_1565_p3;
wire   [63:0] zext_ln17_23_fu_1576_p1;
wire   [63:0] tmp_30_fu_1586_p3;
wire    ap_block_pp0_stage15;
wire   [63:0] tmp_31_fu_1600_p3;
wire   [63:0] tmp_46_fu_1612_p3;
wire   [63:0] zext_ln17_24_fu_1626_p1;
wire   [63:0] zext_ln19_fu_1663_p1;
wire   [31:0] grp_fu_792_p2;
wire   [0:0] icmp_ln12_fu_836_p2;
wire   [5:0] i_fu_830_p2;
wire   [10:0] or_ln17_fu_871_p2;
wire   [6:0] zext_ln17_8_fu_891_p1;
wire   [6:0] add_ln17_31_fu_895_p2;
wire   [10:0] or_ln17_1_fu_906_p2;
wire   [10:0] or_ln17_2_fu_920_p2;
wire   [7:0] add_ln17_32_fu_945_p2;
wire   [10:0] or_ln17_3_fu_956_p2;
wire   [10:0] or_ln17_4_fu_970_p2;
wire   [10:0] or_ln17_5_fu_1002_p2;
wire   [10:0] or_ln17_6_fu_1016_p2;
wire   [8:0] add_ln17_34_fu_1041_p2;
wire   [10:0] or_ln17_7_fu_1052_p2;
wire   [10:0] or_ln17_8_fu_1066_p2;
wire   [10:0] or_ln17_11_fu_1098_p2;
wire   [10:0] or_ln17_12_fu_1112_p2;
wire  signed [8:0] sext_ln17_fu_1134_p1;
wire   [10:0] or_ln17_15_fu_1142_p2;
wire   [10:0] or_ln17_16_fu_1156_p2;
wire   [9:0] add_ln17_38_fu_1181_p2;
wire   [31:0] grp_fu_808_p2;
wire   [10:0] or_ln17_23_fu_1198_p2;
wire   [10:0] or_ln17_24_fu_1212_p2;
wire  signed [9:0] sext_ln17_1_fu_1234_p1;
wire   [10:0] or_ln17_9_fu_1242_p2;
wire   [10:0] or_ln17_10_fu_1256_p2;
wire   [10:0] or_ln17_13_fu_1288_p2;
wire   [10:0] or_ln17_14_fu_1302_p2;
wire   [9:0] add_ln17_37_fu_1324_p2;
wire   [10:0] or_ln17_17_fu_1334_p2;
wire   [10:0] or_ln17_18_fu_1348_p2;
wire   [9:0] add_ln17_39_fu_1370_p2;
wire   [10:0] or_ln17_19_fu_1380_p2;
wire   [10:0] or_ln17_20_fu_1394_p2;
wire   [9:0] add_ln17_40_fu_1416_p2;
wire   [10:0] or_ln17_21_fu_1426_p2;
wire   [10:0] or_ln17_22_fu_1440_p2;
wire   [9:0] add_ln17_41_fu_1462_p2;
wire   [31:0] add_ln17_12_fu_1472_p2;
wire   [31:0] add_ln17_13_fu_1477_p2;
wire   [10:0] or_ln17_25_fu_1488_p2;
wire   [10:0] or_ln17_26_fu_1502_p2;
wire  signed [9:0] sext_ln17_2_fu_1524_p1;
wire   [10:0] or_ln17_27_fu_1537_p2;
wire   [10:0] or_ln17_28_fu_1551_p2;
wire  signed [9:0] sext_ln17_3_fu_1573_p1;
wire   [10:0] or_ln17_29_fu_1581_p2;
wire   [10:0] or_ln17_30_fu_1595_p2;
wire   [10:0] zext_ln17_4_fu_1609_p1;
wire   [10:0] add_ln17_42_fu_1620_p2;
wire   [11:0] zext_ln17_2_fu_1651_p1;
wire   [11:0] zext_ln17_3_fu_1654_p1;
wire   [11:0] add_ln19_fu_1657_p2;
wire   [31:0] add_ln17_29_fu_1668_p2;
wire    ap_CS_fsm_state22;
reg   [17:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_728 <= select_ln17_1_reg_1712;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_728 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_717 <= add_ln11_reg_1682;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_717 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_reg_739 <= j_reg_2142;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_739 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln11_reg_1682 <= add_ln11_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln17_10_reg_1972 <= grp_fu_786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        add_ln17_14_reg_2067 <= add_ln17_14_fu_1483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        add_ln17_15_reg_1997 <= grp_fu_786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        add_ln17_17_reg_2092 <= add_ln17_17_fu_1532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        add_ln17_21_reg_2137 <= add_ln17_21_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln17_22_reg_2022 <= grp_fu_786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln17_24_reg_2147 <= add_ln17_24_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln11_reg_1678_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln17_28_reg_2152 <= add_ln17_28_fu_1646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln11_reg_1678 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln17_33_reg_1812 <= add_ln17_33_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln17_35_reg_1864 <= add_ln17_35_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln17_36_reg_1962 <= add_ln17_36_fu_1278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        add_ln17_6_reg_1922 <= add_ln17_6_fu_1192_p2;
        zext_ln17_5_reg_1904[5 : 0] <= zext_ln17_5_fu_1170_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln11_reg_1678 <= icmp_ln11_fu_818_p2;
        icmp_ln11_reg_1678_pp0_iter1_reg <= icmp_ln11_reg_1678;
        select_ln17_reg_1687_pp0_iter1_reg <= select_ln17_reg_1687;
        tmp_reg_1717_pp0_iter1_reg[10 : 5] <= tmp_reg_1717[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        j_reg_2142 <= j_fu_1636_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln11_reg_1678 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_750 <= A_q0;
        reg_754 <= B_q0;
        reg_758 <= A_q1;
        reg_762 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln11_reg_1678 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln11_reg_1678_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_778 <= grp_fu_766_p2;
        reg_782 <= grp_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln11_reg_1678_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_798 <= grp_fu_786_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln11_reg_1678 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_814 <= grp_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_818_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln17_1_reg_1712 <= select_ln17_1_fu_850_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_818_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln17_reg_1687 <= select_ln17_fu_842_p3;
        tmp_reg_1717[10 : 5] <= tmp_fu_858_p3[10 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln17_6_reg_1782[5 : 0] <= zext_ln17_6_fu_934_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        zext_ln17_7_reg_1833[5 : 0] <= zext_ln17_7_fu_1030_p1[5 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        AB_ce0 = 1'b1;
    end else begin
        AB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln11_reg_1678_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        AB_we0 = 1'b1;
    end else begin
        AB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            A_address0 = tmp_30_fu_1586_p3;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            A_address0 = tmp_28_fu_1542_p3;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            A_address0 = tmp_26_fu_1493_p3;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            A_address0 = tmp_22_fu_1431_p3;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            A_address0 = tmp_20_fu_1385_p3;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            A_address0 = tmp_18_fu_1339_p3;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            A_address0 = tmp_14_fu_1293_p3;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            A_address0 = tmp_10_fu_1247_p3;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            A_address0 = tmp_24_fu_1203_p3;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            A_address0 = tmp_16_fu_1147_p3;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            A_address0 = tmp_12_fu_1103_p3;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            A_address0 = tmp_9_fu_1057_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_address0 = tmp_7_fu_1007_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address0 = tmp_5_fu_961_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address0 = tmp_3_fu_911_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address0 = zext_ln17_fu_866_p1;
        end else begin
            A_address0 = 'bx;
        end
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            A_address1 = tmp_31_fu_1600_p3;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            A_address1 = tmp_29_fu_1556_p3;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            A_address1 = tmp_27_fu_1507_p3;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            A_address1 = tmp_23_fu_1445_p3;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            A_address1 = tmp_21_fu_1399_p3;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            A_address1 = tmp_19_fu_1353_p3;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            A_address1 = tmp_15_fu_1307_p3;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            A_address1 = tmp_11_fu_1261_p3;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            A_address1 = tmp_25_fu_1217_p3;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            A_address1 = tmp_17_fu_1161_p3;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            A_address1 = tmp_13_fu_1117_p3;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            A_address1 = tmp_s_fu_1071_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            A_address1 = tmp_8_fu_1021_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            A_address1 = tmp_6_fu_975_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            A_address1 = tmp_4_fu_925_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            A_address1 = tmp_2_fu_877_p3;
        end else begin
            A_address1 = 'bx;
        end
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            B_address0 = tmp_46_fu_1612_p3;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            B_address0 = tmp_45_fu_1565_p3;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            B_address0 = tmp_44_fu_1516_p3;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            B_address0 = tmp_42_fu_1454_p3;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            B_address0 = tmp_41_fu_1408_p3;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            B_address0 = tmp_40_fu_1362_p3;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            B_address0 = tmp_38_fu_1316_p3;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            B_address0 = tmp_36_fu_1270_p3;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            B_address0 = tmp_43_fu_1226_p3;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            B_address0 = tmp_39_fu_1173_p3;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            B_address0 = tmp_37_fu_1126_p3;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_address0 = tmp_35_fu_1080_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address0 = tmp_34_fu_1033_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address0 = tmp_33_fu_984_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address0 = tmp_32_fu_937_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address0 = zext_ln17_1_fu_886_p1;
        end else begin
            B_address0 = 'bx;
        end
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            B_address1 = zext_ln17_24_fu_1626_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            B_address1 = zext_ln17_23_fu_1576_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            B_address1 = zext_ln17_22_fu_1527_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            B_address1 = zext_ln17_20_fu_1467_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            B_address1 = zext_ln17_19_fu_1421_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            B_address1 = zext_ln17_18_fu_1375_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            B_address1 = zext_ln17_16_fu_1329_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            B_address1 = zext_ln17_14_fu_1283_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            B_address1 = zext_ln17_21_fu_1237_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            B_address1 = zext_ln17_17_fu_1187_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            B_address1 = zext_ln17_15_fu_1137_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_address1 = zext_ln17_13_fu_1093_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address1 = zext_ln17_12_fu_1047_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address1 = zext_ln17_11_fu_997_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address1 = zext_ln17_10_fu_951_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_address1 = zext_ln17_9_fu_901_p1;
        end else begin
            B_address1 = 'bx;
        end
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln11_fu_818_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_732_p4 = select_ln17_1_reg_1712;
    end else begin
        ap_phi_mux_i_0_phi_fu_732_p4 = i_0_reg_728;
    end
end

always @ (*) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_721_p4 = add_ln11_reg_1682;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_721_p4 = indvar_flatten_reg_717;
    end
end

always @ (*) begin
    if (((icmp_ln11_reg_1678 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_0_phi_fu_743_p4 = j_reg_2142;
    end else begin
        ap_phi_mux_j_0_phi_fu_743_p4 = j_0_reg_739;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln11_fu_818_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln11_fu_818_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AB_address0 = zext_ln19_fu_1663_p1;

assign AB_d0 = (add_ln17_14_reg_2067 + add_ln17_29_fu_1668_p2);

assign add_ln11_fu_824_p2 = (ap_phi_mux_indvar_flatten_phi_fu_721_p4 + 11'd1);

assign add_ln17_12_fu_1472_p2 = (add_ln17_10_reg_1972 + grp_fu_792_p2);

assign add_ln17_13_fu_1477_p2 = (reg_814 + add_ln17_12_fu_1472_p2);

assign add_ln17_14_fu_1483_p2 = (add_ln17_6_reg_1922 + add_ln17_13_fu_1477_p2);

assign add_ln17_17_fu_1532_p2 = (add_ln17_15_reg_1997 + grp_fu_792_p2);

assign add_ln17_21_fu_1631_p2 = (add_ln17_17_reg_2092 + grp_fu_808_p2);

assign add_ln17_24_fu_1641_p2 = (add_ln17_22_reg_2022 + grp_fu_792_p2);

assign add_ln17_28_fu_1646_p2 = (add_ln17_24_reg_2147 + grp_fu_808_p2);

assign add_ln17_29_fu_1668_p2 = (add_ln17_21_reg_2137 + add_ln17_28_reg_2152);

assign add_ln17_31_fu_895_p2 = (zext_ln17_8_fu_891_p1 + 7'd32);

assign add_ln17_32_fu_945_p2 = (zext_ln17_6_fu_934_p1 + 8'd96);

assign add_ln17_33_fu_992_p2 = ($signed(zext_ln17_6_reg_1782) + $signed(8'd160));

assign add_ln17_34_fu_1041_p2 = (zext_ln17_7_fu_1030_p1 + 9'd224);

assign add_ln17_35_fu_1088_p2 = ($signed(zext_ln17_7_reg_1833) + $signed(9'd288));

assign add_ln17_36_fu_1278_p2 = ($signed(zext_ln17_7_reg_1833) + $signed(9'd352));

assign add_ln17_37_fu_1324_p2 = (zext_ln17_5_reg_1904 + 10'd480);

assign add_ln17_38_fu_1181_p2 = ($signed(zext_ln17_5_fu_1170_p1) + $signed(10'd544));

assign add_ln17_39_fu_1370_p2 = ($signed(zext_ln17_5_reg_1904) + $signed(10'd608));

assign add_ln17_40_fu_1416_p2 = ($signed(zext_ln17_5_reg_1904) + $signed(10'd672));

assign add_ln17_41_fu_1462_p2 = ($signed(zext_ln17_5_reg_1904) + $signed(10'd736));

assign add_ln17_42_fu_1620_p2 = (zext_ln17_4_fu_1609_p1 + 11'd992);

assign add_ln17_6_fu_1192_p2 = (reg_814 + grp_fu_808_p2);

assign add_ln19_fu_1657_p2 = (zext_ln17_2_fu_1651_p1 + zext_ln17_3_fu_1654_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd17];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_766_p2 = ($signed(reg_754) * $signed(reg_750));

assign grp_fu_772_p2 = ($signed(reg_762) * $signed(reg_758));

assign grp_fu_786_p2 = (reg_782 + reg_778);

assign grp_fu_792_p2 = (reg_782 + reg_778);

assign grp_fu_802_p2 = (reg_798 + grp_fu_792_p2);

assign grp_fu_808_p2 = (reg_798 + grp_fu_786_p2);

assign i_fu_830_p2 = (ap_phi_mux_i_0_phi_fu_732_p4 + 6'd1);

assign icmp_ln11_fu_818_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_721_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_836_p2 = ((ap_phi_mux_j_0_phi_fu_743_p4 == 6'd32) ? 1'b1 : 1'b0);

assign j_fu_1636_p2 = (select_ln17_reg_1687 + 6'd1);

assign or_ln17_10_fu_1256_p2 = (tmp_reg_1717 | 11'd11);

assign or_ln17_11_fu_1098_p2 = (tmp_reg_1717 | 11'd12);

assign or_ln17_12_fu_1112_p2 = (tmp_reg_1717 | 11'd13);

assign or_ln17_13_fu_1288_p2 = (tmp_reg_1717 | 11'd14);

assign or_ln17_14_fu_1302_p2 = (tmp_reg_1717 | 11'd15);

assign or_ln17_15_fu_1142_p2 = (tmp_reg_1717 | 11'd16);

assign or_ln17_16_fu_1156_p2 = (tmp_reg_1717 | 11'd17);

assign or_ln17_17_fu_1334_p2 = (tmp_reg_1717 | 11'd18);

assign or_ln17_18_fu_1348_p2 = (tmp_reg_1717 | 11'd19);

assign or_ln17_19_fu_1380_p2 = (tmp_reg_1717 | 11'd20);

assign or_ln17_1_fu_906_p2 = (tmp_reg_1717 | 11'd2);

assign or_ln17_20_fu_1394_p2 = (tmp_reg_1717 | 11'd21);

assign or_ln17_21_fu_1426_p2 = (tmp_reg_1717 | 11'd22);

assign or_ln17_22_fu_1440_p2 = (tmp_reg_1717 | 11'd23);

assign or_ln17_23_fu_1198_p2 = (tmp_reg_1717 | 11'd24);

assign or_ln17_24_fu_1212_p2 = (tmp_reg_1717 | 11'd25);

assign or_ln17_25_fu_1488_p2 = (tmp_reg_1717 | 11'd26);

assign or_ln17_26_fu_1502_p2 = (tmp_reg_1717 | 11'd27);

assign or_ln17_27_fu_1537_p2 = (tmp_reg_1717 | 11'd28);

assign or_ln17_28_fu_1551_p2 = (tmp_reg_1717 | 11'd29);

assign or_ln17_29_fu_1581_p2 = (tmp_reg_1717 | 11'd30);

assign or_ln17_2_fu_920_p2 = (tmp_reg_1717 | 11'd3);

assign or_ln17_30_fu_1595_p2 = (tmp_reg_1717 | 11'd31);

assign or_ln17_3_fu_956_p2 = (tmp_reg_1717 | 11'd4);

assign or_ln17_4_fu_970_p2 = (tmp_reg_1717 | 11'd5);

assign or_ln17_5_fu_1002_p2 = (tmp_reg_1717 | 11'd6);

assign or_ln17_6_fu_1016_p2 = (tmp_reg_1717 | 11'd7);

assign or_ln17_7_fu_1052_p2 = (tmp_reg_1717 | 11'd8);

assign or_ln17_8_fu_1066_p2 = (tmp_reg_1717 | 11'd9);

assign or_ln17_9_fu_1242_p2 = (tmp_reg_1717 | 11'd10);

assign or_ln17_fu_871_p2 = (tmp_fu_858_p3 | 11'd1);

assign select_ln17_1_fu_850_p3 = ((icmp_ln12_fu_836_p2[0:0] === 1'b1) ? i_fu_830_p2 : ap_phi_mux_i_0_phi_fu_732_p4);

assign select_ln17_fu_842_p3 = ((icmp_ln12_fu_836_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_j_0_phi_fu_743_p4);

assign sext_ln17_1_fu_1234_p1 = add_ln17_35_reg_1864;

assign sext_ln17_2_fu_1524_p1 = add_ln17_36_reg_1962;

assign sext_ln17_3_fu_1573_p1 = add_ln17_33_reg_1812;

assign sext_ln17_fu_1134_p1 = add_ln17_33_reg_1812;

assign tmp_10_fu_1247_p3 = {{53'd0}, {or_ln17_9_fu_1242_p2}};

assign tmp_11_fu_1261_p3 = {{53'd0}, {or_ln17_10_fu_1256_p2}};

assign tmp_12_fu_1103_p3 = {{53'd0}, {or_ln17_11_fu_1098_p2}};

assign tmp_13_fu_1117_p3 = {{53'd0}, {or_ln17_12_fu_1112_p2}};

assign tmp_14_fu_1293_p3 = {{53'd0}, {or_ln17_13_fu_1288_p2}};

assign tmp_15_fu_1307_p3 = {{53'd0}, {or_ln17_14_fu_1302_p2}};

assign tmp_16_fu_1147_p3 = {{53'd0}, {or_ln17_15_fu_1142_p2}};

assign tmp_17_fu_1161_p3 = {{53'd0}, {or_ln17_16_fu_1156_p2}};

assign tmp_18_fu_1339_p3 = {{53'd0}, {or_ln17_17_fu_1334_p2}};

assign tmp_19_fu_1353_p3 = {{53'd0}, {or_ln17_18_fu_1348_p2}};

assign tmp_20_fu_1385_p3 = {{53'd0}, {or_ln17_19_fu_1380_p2}};

assign tmp_21_fu_1399_p3 = {{53'd0}, {or_ln17_20_fu_1394_p2}};

assign tmp_22_fu_1431_p3 = {{53'd0}, {or_ln17_21_fu_1426_p2}};

assign tmp_23_fu_1445_p3 = {{53'd0}, {or_ln17_22_fu_1440_p2}};

assign tmp_24_fu_1203_p3 = {{53'd0}, {or_ln17_23_fu_1198_p2}};

assign tmp_25_fu_1217_p3 = {{53'd0}, {or_ln17_24_fu_1212_p2}};

assign tmp_26_fu_1493_p3 = {{53'd0}, {or_ln17_25_fu_1488_p2}};

assign tmp_27_fu_1507_p3 = {{53'd0}, {or_ln17_26_fu_1502_p2}};

assign tmp_28_fu_1542_p3 = {{53'd0}, {or_ln17_27_fu_1537_p2}};

assign tmp_29_fu_1556_p3 = {{53'd0}, {or_ln17_28_fu_1551_p2}};

assign tmp_2_fu_877_p3 = {{53'd0}, {or_ln17_fu_871_p2}};

assign tmp_30_fu_1586_p3 = {{53'd0}, {or_ln17_29_fu_1581_p2}};

assign tmp_31_fu_1600_p3 = {{53'd0}, {or_ln17_30_fu_1595_p2}};

assign tmp_32_fu_937_p3 = {{58'd1}, {select_ln17_reg_1687}};

assign tmp_33_fu_984_p3 = {{58'd2}, {select_ln17_reg_1687}};

assign tmp_34_fu_1033_p3 = {{58'd3}, {select_ln17_reg_1687}};

assign tmp_35_fu_1080_p3 = {{58'd4}, {select_ln17_reg_1687}};

assign tmp_36_fu_1270_p3 = {{58'd5}, {select_ln17_reg_1687}};

assign tmp_37_fu_1126_p3 = {{58'd6}, {select_ln17_reg_1687}};

assign tmp_38_fu_1316_p3 = {{58'd7}, {select_ln17_reg_1687}};

assign tmp_39_fu_1173_p3 = {{58'd8}, {select_ln17_reg_1687}};

assign tmp_3_fu_911_p3 = {{53'd0}, {or_ln17_1_fu_906_p2}};

assign tmp_40_fu_1362_p3 = {{58'd9}, {select_ln17_reg_1687}};

assign tmp_41_fu_1408_p3 = {{58'd10}, {select_ln17_reg_1687}};

assign tmp_42_fu_1454_p3 = {{58'd11}, {select_ln17_reg_1687}};

assign tmp_43_fu_1226_p3 = {{58'd12}, {select_ln17_reg_1687}};

assign tmp_44_fu_1516_p3 = {{58'd13}, {select_ln17_reg_1687}};

assign tmp_45_fu_1565_p3 = {{58'd14}, {select_ln17_reg_1687}};

assign tmp_46_fu_1612_p3 = {{58'd15}, {select_ln17_reg_1687}};

assign tmp_4_fu_925_p3 = {{53'd0}, {or_ln17_2_fu_920_p2}};

assign tmp_5_fu_961_p3 = {{53'd0}, {or_ln17_3_fu_956_p2}};

assign tmp_6_fu_975_p3 = {{53'd0}, {or_ln17_4_fu_970_p2}};

assign tmp_7_fu_1007_p3 = {{53'd0}, {or_ln17_5_fu_1002_p2}};

assign tmp_8_fu_1021_p3 = {{53'd0}, {or_ln17_6_fu_1016_p2}};

assign tmp_9_fu_1057_p3 = {{53'd0}, {or_ln17_7_fu_1052_p2}};

assign tmp_fu_858_p3 = {{select_ln17_1_fu_850_p3}, {5'd0}};

assign tmp_s_fu_1071_p3 = {{53'd0}, {or_ln17_8_fu_1066_p2}};

assign zext_ln17_10_fu_951_p1 = add_ln17_32_fu_945_p2;

assign zext_ln17_11_fu_997_p1 = $unsigned(add_ln17_33_fu_992_p2);

assign zext_ln17_12_fu_1047_p1 = add_ln17_34_fu_1041_p2;

assign zext_ln17_13_fu_1093_p1 = $unsigned(add_ln17_35_fu_1088_p2);

assign zext_ln17_14_fu_1283_p1 = $unsigned(add_ln17_36_fu_1278_p2);

assign zext_ln17_15_fu_1137_p1 = $unsigned(sext_ln17_fu_1134_p1);

assign zext_ln17_16_fu_1329_p1 = add_ln17_37_fu_1324_p2;

assign zext_ln17_17_fu_1187_p1 = add_ln17_38_fu_1181_p2;

assign zext_ln17_18_fu_1375_p1 = add_ln17_39_fu_1370_p2;

assign zext_ln17_19_fu_1421_p1 = add_ln17_40_fu_1416_p2;

assign zext_ln17_1_fu_886_p1 = select_ln17_fu_842_p3;

assign zext_ln17_20_fu_1467_p1 = add_ln17_41_fu_1462_p2;

assign zext_ln17_21_fu_1237_p1 = $unsigned(sext_ln17_1_fu_1234_p1);

assign zext_ln17_22_fu_1527_p1 = $unsigned(sext_ln17_2_fu_1524_p1);

assign zext_ln17_23_fu_1576_p1 = $unsigned(sext_ln17_3_fu_1573_p1);

assign zext_ln17_24_fu_1626_p1 = add_ln17_42_fu_1620_p2;

assign zext_ln17_2_fu_1651_p1 = tmp_reg_1717_pp0_iter1_reg;

assign zext_ln17_3_fu_1654_p1 = select_ln17_reg_1687_pp0_iter1_reg;

assign zext_ln17_4_fu_1609_p1 = select_ln17_reg_1687;

assign zext_ln17_5_fu_1170_p1 = select_ln17_reg_1687;

assign zext_ln17_6_fu_934_p1 = select_ln17_reg_1687;

assign zext_ln17_7_fu_1030_p1 = select_ln17_reg_1687;

assign zext_ln17_8_fu_891_p1 = select_ln17_fu_842_p3;

assign zext_ln17_9_fu_901_p1 = add_ln17_31_fu_895_p2;

assign zext_ln17_fu_866_p1 = tmp_fu_858_p3;

assign zext_ln19_fu_1663_p1 = add_ln19_fu_1657_p2;

always @ (posedge ap_clk) begin
    tmp_reg_1717[4:0] <= 5'b00000;
    tmp_reg_1717_pp0_iter1_reg[4:0] <= 5'b00000;
    zext_ln17_6_reg_1782[7:6] <= 2'b00;
    zext_ln17_7_reg_1833[8:6] <= 3'b000;
    zext_ln17_5_reg_1904[9:6] <= 4'b0000;
end

endmodule //matrixmul
