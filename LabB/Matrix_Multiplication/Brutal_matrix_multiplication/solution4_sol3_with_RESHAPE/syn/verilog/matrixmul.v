// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.742000,HLS_SYN_LAT=1030,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=96,HLS_SYN_FF=3757,HLS_SYN_LUT=1975,HLS_VERSION=2020_1}" *)

module matrixmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        B_address0,
        B_ce0,
        B_q0,
        AB_address0,
        AB_ce0,
        AB_we0,
        AB_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state8 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] A_address0;
output   A_ce0;
input  [1023:0] A_q0;
output  [4:0] B_address0;
output   B_ce0;
input  [1023:0] B_q0;
output  [9:0] AB_address0;
output   AB_ce0;
output   AB_we0;
output  [31:0] AB_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_ce0;
reg B_ce0;
reg AB_ce0;
reg AB_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten_reg_219;
reg   [5:0] i_0_reg_230;
reg   [5:0] j_0_reg_241;
wire   [0:0] icmp_ln11_fu_252_p2;
reg   [0:0] icmp_ln11_reg_1230;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln11_reg_1230_pp0_iter1_reg;
reg   [0:0] icmp_ln11_reg_1230_pp0_iter2_reg;
reg   [0:0] icmp_ln11_reg_1230_pp0_iter3_reg;
reg   [0:0] icmp_ln11_reg_1230_pp0_iter4_reg;
wire   [10:0] add_ln11_fu_258_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] select_ln17_fu_276_p3;
reg   [5:0] select_ln17_reg_1239;
reg   [5:0] select_ln17_reg_1239_pp0_iter1_reg;
reg   [5:0] select_ln17_reg_1239_pp0_iter2_reg;
reg   [5:0] select_ln17_reg_1239_pp0_iter3_reg;
reg   [5:0] select_ln17_reg_1239_pp0_iter4_reg;
wire   [5:0] select_ln17_1_fu_284_p3;
reg   [5:0] select_ln17_1_reg_1244;
reg   [5:0] select_ln17_1_reg_1244_pp0_iter1_reg;
reg   [5:0] select_ln17_1_reg_1244_pp0_iter2_reg;
reg   [5:0] select_ln17_1_reg_1244_pp0_iter3_reg;
reg   [5:0] select_ln17_1_reg_1244_pp0_iter4_reg;
wire   [5:0] j_fu_302_p2;
wire  signed [31:0] trunc_ln17_fu_308_p1;
reg  signed [31:0] trunc_ln17_reg_1265;
wire  signed [31:0] trunc_ln17_1_fu_312_p1;
reg  signed [31:0] trunc_ln17_1_reg_1270;
reg  signed [31:0] tmp_4_reg_1275;
reg  signed [31:0] tmp_5_reg_1280;
reg  signed [31:0] tmp_6_reg_1285;
reg  signed [31:0] tmp_7_reg_1290;
reg  signed [31:0] tmp_8_reg_1295;
reg  signed [31:0] tmp_9_reg_1300;
reg  signed [31:0] tmp_s_reg_1305;
reg  signed [31:0] tmp_2_reg_1310;
reg  signed [31:0] tmp_3_reg_1315;
reg  signed [31:0] tmp_10_reg_1320;
reg  signed [31:0] tmp_11_reg_1325;
reg  signed [31:0] tmp_12_reg_1330;
reg  signed [31:0] tmp_13_reg_1335;
reg  signed [31:0] tmp_14_reg_1340;
reg  signed [31:0] tmp_15_reg_1345;
reg  signed [31:0] tmp_16_reg_1350;
reg  signed [31:0] tmp_17_reg_1355;
reg  signed [31:0] tmp_18_reg_1360;
reg  signed [31:0] tmp_19_reg_1365;
reg  signed [31:0] tmp_20_reg_1370;
reg  signed [31:0] tmp_21_reg_1375;
reg  signed [31:0] tmp_22_reg_1380;
reg  signed [31:0] tmp_23_reg_1385;
reg  signed [31:0] tmp_24_reg_1390;
reg  signed [31:0] tmp_25_reg_1395;
reg  signed [31:0] tmp_26_reg_1400;
reg  signed [31:0] tmp_27_reg_1405;
reg  signed [31:0] tmp_28_reg_1410;
reg  signed [31:0] tmp_29_reg_1415;
reg  signed [31:0] tmp_30_reg_1420;
reg  signed [31:0] tmp_31_reg_1425;
reg  signed [31:0] tmp_32_reg_1430;
reg  signed [31:0] tmp_33_reg_1435;
reg  signed [31:0] tmp_34_reg_1440;
reg  signed [31:0] tmp_35_reg_1445;
reg  signed [31:0] tmp_36_reg_1450;
reg  signed [31:0] tmp_37_reg_1455;
reg  signed [31:0] tmp_38_reg_1460;
reg  signed [31:0] tmp_39_reg_1465;
reg  signed [31:0] tmp_40_reg_1470;
reg  signed [31:0] tmp_41_reg_1475;
reg  signed [31:0] tmp_42_reg_1480;
reg  signed [31:0] tmp_43_reg_1485;
reg  signed [31:0] tmp_44_reg_1490;
reg  signed [31:0] tmp_45_reg_1495;
reg  signed [31:0] tmp_46_reg_1500;
reg  signed [31:0] tmp_47_reg_1505;
reg  signed [31:0] tmp_48_reg_1510;
reg  signed [31:0] tmp_49_reg_1515;
reg  signed [31:0] tmp_50_reg_1520;
reg  signed [31:0] tmp_51_reg_1525;
reg  signed [31:0] tmp_52_reg_1530;
reg  signed [31:0] tmp_53_reg_1535;
reg  signed [31:0] tmp_54_reg_1540;
reg  signed [31:0] tmp_55_reg_1545;
reg  signed [31:0] tmp_56_reg_1550;
reg  signed [31:0] tmp_57_reg_1555;
reg  signed [31:0] tmp_58_reg_1560;
reg  signed [31:0] tmp_59_reg_1565;
reg  signed [31:0] tmp_60_reg_1570;
reg  signed [31:0] tmp_61_reg_1575;
reg  signed [31:0] tmp_62_reg_1580;
wire   [31:0] mul_ln17_fu_936_p2;
reg   [31:0] mul_ln17_reg_1585;
wire   [31:0] mul_ln17_1_fu_940_p2;
reg   [31:0] mul_ln17_1_reg_1590;
wire   [31:0] mul_ln17_2_fu_944_p2;
reg   [31:0] mul_ln17_2_reg_1595;
wire   [31:0] mul_ln17_3_fu_948_p2;
reg   [31:0] mul_ln17_3_reg_1600;
wire   [31:0] mul_ln17_4_fu_952_p2;
reg   [31:0] mul_ln17_4_reg_1605;
wire   [31:0] mul_ln17_5_fu_956_p2;
reg   [31:0] mul_ln17_5_reg_1610;
wire   [31:0] mul_ln17_6_fu_960_p2;
reg   [31:0] mul_ln17_6_reg_1615;
wire   [31:0] mul_ln17_7_fu_964_p2;
reg   [31:0] mul_ln17_7_reg_1620;
wire   [31:0] mul_ln17_8_fu_968_p2;
reg   [31:0] mul_ln17_8_reg_1625;
wire   [31:0] mul_ln17_9_fu_972_p2;
reg   [31:0] mul_ln17_9_reg_1630;
wire   [31:0] mul_ln17_10_fu_976_p2;
reg   [31:0] mul_ln17_10_reg_1635;
wire   [31:0] mul_ln17_11_fu_980_p2;
reg   [31:0] mul_ln17_11_reg_1640;
wire   [31:0] mul_ln17_12_fu_984_p2;
reg   [31:0] mul_ln17_12_reg_1645;
wire   [31:0] mul_ln17_13_fu_988_p2;
reg   [31:0] mul_ln17_13_reg_1650;
wire   [31:0] mul_ln17_14_fu_992_p2;
reg   [31:0] mul_ln17_14_reg_1655;
wire   [31:0] mul_ln17_15_fu_996_p2;
reg   [31:0] mul_ln17_15_reg_1660;
wire   [31:0] mul_ln17_16_fu_1000_p2;
reg   [31:0] mul_ln17_16_reg_1665;
wire   [31:0] mul_ln17_17_fu_1004_p2;
reg   [31:0] mul_ln17_17_reg_1670;
wire   [31:0] mul_ln17_18_fu_1008_p2;
reg   [31:0] mul_ln17_18_reg_1675;
wire   [31:0] mul_ln17_19_fu_1012_p2;
reg   [31:0] mul_ln17_19_reg_1680;
wire   [31:0] mul_ln17_20_fu_1016_p2;
reg   [31:0] mul_ln17_20_reg_1685;
wire   [31:0] mul_ln17_21_fu_1020_p2;
reg   [31:0] mul_ln17_21_reg_1690;
wire   [31:0] mul_ln17_22_fu_1024_p2;
reg   [31:0] mul_ln17_22_reg_1695;
wire   [31:0] mul_ln17_23_fu_1028_p2;
reg   [31:0] mul_ln17_23_reg_1700;
wire   [31:0] mul_ln17_24_fu_1032_p2;
reg   [31:0] mul_ln17_24_reg_1705;
wire   [31:0] mul_ln17_25_fu_1036_p2;
reg   [31:0] mul_ln17_25_reg_1710;
wire   [31:0] mul_ln17_26_fu_1040_p2;
reg   [31:0] mul_ln17_26_reg_1715;
wire   [31:0] mul_ln17_27_fu_1044_p2;
reg   [31:0] mul_ln17_27_reg_1720;
wire   [31:0] mul_ln17_28_fu_1048_p2;
reg   [31:0] mul_ln17_28_reg_1725;
wire   [31:0] mul_ln17_29_fu_1052_p2;
reg   [31:0] mul_ln17_29_reg_1730;
wire   [31:0] mul_ln17_30_fu_1056_p2;
reg   [31:0] mul_ln17_30_reg_1735;
wire   [31:0] mul_ln17_31_fu_1060_p2;
reg   [31:0] mul_ln17_31_reg_1740;
wire   [31:0] add_ln17_2_fu_1072_p2;
reg   [31:0] add_ln17_2_reg_1745;
wire   [31:0] add_ln17_3_fu_1078_p2;
reg   [31:0] add_ln17_3_reg_1750;
wire   [31:0] add_ln17_4_fu_1082_p2;
reg   [31:0] add_ln17_4_reg_1755;
wire   [31:0] add_ln17_9_fu_1094_p2;
reg   [31:0] add_ln17_9_reg_1760;
wire   [31:0] add_ln17_12_fu_1108_p2;
reg   [31:0] add_ln17_12_reg_1765;
wire   [31:0] add_ln17_17_fu_1122_p2;
reg   [31:0] add_ln17_17_reg_1770;
wire   [31:0] add_ln17_18_fu_1128_p2;
reg   [31:0] add_ln17_18_reg_1775;
wire   [31:0] add_ln17_19_fu_1132_p2;
reg   [31:0] add_ln17_19_reg_1780;
wire   [31:0] add_ln17_24_fu_1144_p2;
reg   [31:0] add_ln17_24_reg_1785;
wire   [31:0] add_ln17_25_fu_1150_p2;
reg   [31:0] add_ln17_25_reg_1790;
wire   [31:0] add_ln17_26_fu_1154_p2;
reg   [31:0] add_ln17_26_reg_1795;
wire   [31:0] add_ln17_14_fu_1171_p2;
reg   [31:0] add_ln17_14_reg_1800;
wire   [31:0] add_ln17_21_fu_1181_p2;
reg   [31:0] add_ln17_21_reg_1805;
wire   [31:0] add_ln17_28_fu_1190_p2;
reg   [31:0] add_ln17_28_reg_1810;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [5:0] ap_phi_mux_i_0_phi_fu_234_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln17_fu_292_p1;
wire   [63:0] zext_ln17_1_fu_297_p1;
wire   [63:0] zext_ln19_1_fu_1215_p1;
wire   [0:0] icmp_ln12_fu_270_p2;
wire   [5:0] i_fu_264_p2;
wire   [31:0] add_ln17_fu_1064_p2;
wire   [31:0] add_ln17_1_fu_1068_p2;
wire   [31:0] add_ln17_7_fu_1086_p2;
wire   [31:0] add_ln17_8_fu_1090_p2;
wire   [31:0] add_ln17_10_fu_1100_p2;
wire   [31:0] add_ln17_11_fu_1104_p2;
wire   [31:0] add_ln17_15_fu_1114_p2;
wire   [31:0] add_ln17_16_fu_1118_p2;
wire   [31:0] add_ln17_22_fu_1136_p2;
wire   [31:0] add_ln17_23_fu_1140_p2;
wire   [31:0] add_ln17_5_fu_1158_p2;
wire   [31:0] add_ln17_6_fu_1162_p2;
wire   [31:0] add_ln17_13_fu_1167_p2;
wire   [31:0] add_ln17_20_fu_1177_p2;
wire   [31:0] add_ln17_27_fu_1186_p2;
wire   [10:0] tmp_fu_1195_p3;
wire   [11:0] zext_ln12_fu_1202_p1;
wire   [11:0] zext_ln19_fu_1206_p1;
wire   [11:0] add_ln19_fu_1209_p2;
wire   [31:0] add_ln17_29_fu_1220_p2;
wire    ap_CS_fsm_state8;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln11_reg_1230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_0_reg_230 <= select_ln17_1_reg_1244;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_230 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln11_fu_252_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_219 <= add_ln11_fu_258_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_219 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln11_fu_252_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_reg_241 <= j_fu_302_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_241 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1230_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln17_12_reg_1765 <= add_ln17_12_fu_1108_p2;
        add_ln17_17_reg_1770 <= add_ln17_17_fu_1122_p2;
        add_ln17_18_reg_1775 <= add_ln17_18_fu_1128_p2;
        add_ln17_19_reg_1780 <= add_ln17_19_fu_1132_p2;
        add_ln17_24_reg_1785 <= add_ln17_24_fu_1144_p2;
        add_ln17_25_reg_1790 <= add_ln17_25_fu_1150_p2;
        add_ln17_26_reg_1795 <= add_ln17_26_fu_1154_p2;
        add_ln17_2_reg_1745 <= add_ln17_2_fu_1072_p2;
        add_ln17_3_reg_1750 <= add_ln17_3_fu_1078_p2;
        add_ln17_4_reg_1755 <= add_ln17_4_fu_1082_p2;
        add_ln17_9_reg_1760 <= add_ln17_9_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1230_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln17_14_reg_1800 <= add_ln17_14_fu_1171_p2;
        add_ln17_21_reg_1805 <= add_ln17_21_fu_1181_p2;
        add_ln17_28_reg_1810 <= add_ln17_28_fu_1190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln11_reg_1230 <= icmp_ln11_fu_252_p2;
        icmp_ln11_reg_1230_pp0_iter1_reg <= icmp_ln11_reg_1230;
        select_ln17_1_reg_1244_pp0_iter1_reg <= select_ln17_1_reg_1244;
        select_ln17_reg_1239_pp0_iter1_reg <= select_ln17_reg_1239;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln11_reg_1230_pp0_iter2_reg <= icmp_ln11_reg_1230_pp0_iter1_reg;
        icmp_ln11_reg_1230_pp0_iter3_reg <= icmp_ln11_reg_1230_pp0_iter2_reg;
        icmp_ln11_reg_1230_pp0_iter4_reg <= icmp_ln11_reg_1230_pp0_iter3_reg;
        select_ln17_1_reg_1244_pp0_iter2_reg <= select_ln17_1_reg_1244_pp0_iter1_reg;
        select_ln17_1_reg_1244_pp0_iter3_reg <= select_ln17_1_reg_1244_pp0_iter2_reg;
        select_ln17_1_reg_1244_pp0_iter4_reg <= select_ln17_1_reg_1244_pp0_iter3_reg;
        select_ln17_reg_1239_pp0_iter2_reg <= select_ln17_reg_1239_pp0_iter1_reg;
        select_ln17_reg_1239_pp0_iter3_reg <= select_ln17_reg_1239_pp0_iter2_reg;
        select_ln17_reg_1239_pp0_iter4_reg <= select_ln17_reg_1239_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_reg_1230_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln17_10_reg_1635 <= mul_ln17_10_fu_976_p2;
        mul_ln17_11_reg_1640 <= mul_ln17_11_fu_980_p2;
        mul_ln17_12_reg_1645 <= mul_ln17_12_fu_984_p2;
        mul_ln17_13_reg_1650 <= mul_ln17_13_fu_988_p2;
        mul_ln17_14_reg_1655 <= mul_ln17_14_fu_992_p2;
        mul_ln17_15_reg_1660 <= mul_ln17_15_fu_996_p2;
        mul_ln17_16_reg_1665 <= mul_ln17_16_fu_1000_p2;
        mul_ln17_17_reg_1670 <= mul_ln17_17_fu_1004_p2;
        mul_ln17_18_reg_1675 <= mul_ln17_18_fu_1008_p2;
        mul_ln17_19_reg_1680 <= mul_ln17_19_fu_1012_p2;
        mul_ln17_1_reg_1590 <= mul_ln17_1_fu_940_p2;
        mul_ln17_20_reg_1685 <= mul_ln17_20_fu_1016_p2;
        mul_ln17_21_reg_1690 <= mul_ln17_21_fu_1020_p2;
        mul_ln17_22_reg_1695 <= mul_ln17_22_fu_1024_p2;
        mul_ln17_23_reg_1700 <= mul_ln17_23_fu_1028_p2;
        mul_ln17_24_reg_1705 <= mul_ln17_24_fu_1032_p2;
        mul_ln17_25_reg_1710 <= mul_ln17_25_fu_1036_p2;
        mul_ln17_26_reg_1715 <= mul_ln17_26_fu_1040_p2;
        mul_ln17_27_reg_1720 <= mul_ln17_27_fu_1044_p2;
        mul_ln17_28_reg_1725 <= mul_ln17_28_fu_1048_p2;
        mul_ln17_29_reg_1730 <= mul_ln17_29_fu_1052_p2;
        mul_ln17_2_reg_1595 <= mul_ln17_2_fu_944_p2;
        mul_ln17_30_reg_1735 <= mul_ln17_30_fu_1056_p2;
        mul_ln17_31_reg_1740 <= mul_ln17_31_fu_1060_p2;
        mul_ln17_3_reg_1600 <= mul_ln17_3_fu_948_p2;
        mul_ln17_4_reg_1605 <= mul_ln17_4_fu_952_p2;
        mul_ln17_5_reg_1610 <= mul_ln17_5_fu_956_p2;
        mul_ln17_6_reg_1615 <= mul_ln17_6_fu_960_p2;
        mul_ln17_7_reg_1620 <= mul_ln17_7_fu_964_p2;
        mul_ln17_8_reg_1625 <= mul_ln17_8_fu_968_p2;
        mul_ln17_9_reg_1630 <= mul_ln17_9_fu_972_p2;
        mul_ln17_reg_1585 <= mul_ln17_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln11_fu_252_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln17_1_reg_1244 <= select_ln17_1_fu_284_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln11_fu_252_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln17_reg_1239 <= select_ln17_fu_276_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln11_reg_1230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_10_reg_1320 <= {{B_q0[191:160]}};
        tmp_11_reg_1325 <= {{A_q0[223:192]}};
        tmp_12_reg_1330 <= {{B_q0[223:192]}};
        tmp_13_reg_1335 <= {{A_q0[255:224]}};
        tmp_14_reg_1340 <= {{B_q0[255:224]}};
        tmp_15_reg_1345 <= {{A_q0[287:256]}};
        tmp_16_reg_1350 <= {{B_q0[287:256]}};
        tmp_17_reg_1355 <= {{A_q0[319:288]}};
        tmp_18_reg_1360 <= {{B_q0[319:288]}};
        tmp_19_reg_1365 <= {{A_q0[351:320]}};
        tmp_20_reg_1370 <= {{B_q0[351:320]}};
        tmp_21_reg_1375 <= {{A_q0[383:352]}};
        tmp_22_reg_1380 <= {{B_q0[383:352]}};
        tmp_23_reg_1385 <= {{A_q0[415:384]}};
        tmp_24_reg_1390 <= {{B_q0[415:384]}};
        tmp_25_reg_1395 <= {{A_q0[447:416]}};
        tmp_26_reg_1400 <= {{B_q0[447:416]}};
        tmp_27_reg_1405 <= {{A_q0[479:448]}};
        tmp_28_reg_1410 <= {{B_q0[479:448]}};
        tmp_29_reg_1415 <= {{A_q0[511:480]}};
        tmp_2_reg_1310 <= {{B_q0[159:128]}};
        tmp_30_reg_1420 <= {{B_q0[511:480]}};
        tmp_31_reg_1425 <= {{A_q0[543:512]}};
        tmp_32_reg_1430 <= {{B_q0[543:512]}};
        tmp_33_reg_1435 <= {{A_q0[575:544]}};
        tmp_34_reg_1440 <= {{B_q0[575:544]}};
        tmp_35_reg_1445 <= {{A_q0[607:576]}};
        tmp_36_reg_1450 <= {{B_q0[607:576]}};
        tmp_37_reg_1455 <= {{A_q0[639:608]}};
        tmp_38_reg_1460 <= {{B_q0[639:608]}};
        tmp_39_reg_1465 <= {{A_q0[671:640]}};
        tmp_3_reg_1315 <= {{A_q0[191:160]}};
        tmp_40_reg_1470 <= {{B_q0[671:640]}};
        tmp_41_reg_1475 <= {{A_q0[703:672]}};
        tmp_42_reg_1480 <= {{B_q0[703:672]}};
        tmp_43_reg_1485 <= {{A_q0[735:704]}};
        tmp_44_reg_1490 <= {{B_q0[735:704]}};
        tmp_45_reg_1495 <= {{A_q0[767:736]}};
        tmp_46_reg_1500 <= {{B_q0[767:736]}};
        tmp_47_reg_1505 <= {{A_q0[799:768]}};
        tmp_48_reg_1510 <= {{B_q0[799:768]}};
        tmp_49_reg_1515 <= {{A_q0[831:800]}};
        tmp_4_reg_1275 <= {{A_q0[63:32]}};
        tmp_50_reg_1520 <= {{B_q0[831:800]}};
        tmp_51_reg_1525 <= {{A_q0[863:832]}};
        tmp_52_reg_1530 <= {{B_q0[863:832]}};
        tmp_53_reg_1535 <= {{A_q0[895:864]}};
        tmp_54_reg_1540 <= {{B_q0[895:864]}};
        tmp_55_reg_1545 <= {{A_q0[927:896]}};
        tmp_56_reg_1550 <= {{B_q0[927:896]}};
        tmp_57_reg_1555 <= {{A_q0[959:928]}};
        tmp_58_reg_1560 <= {{B_q0[959:928]}};
        tmp_59_reg_1565 <= {{A_q0[991:960]}};
        tmp_5_reg_1280 <= {{B_q0[63:32]}};
        tmp_60_reg_1570 <= {{B_q0[991:960]}};
        tmp_61_reg_1575 <= {{A_q0[1023:992]}};
        tmp_62_reg_1580 <= {{B_q0[1023:992]}};
        tmp_6_reg_1285 <= {{A_q0[95:64]}};
        tmp_7_reg_1290 <= {{B_q0[95:64]}};
        tmp_8_reg_1295 <= {{A_q0[127:96]}};
        tmp_9_reg_1300 <= {{B_q0[127:96]}};
        tmp_s_reg_1305 <= {{A_q0[159:128]}};
        trunc_ln17_1_reg_1270 <= trunc_ln17_1_fu_312_p1;
        trunc_ln17_reg_1265 <= trunc_ln17_fu_308_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        AB_ce0 = 1'b1;
    end else begin
        AB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln11_reg_1230_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        AB_we0 = 1'b1;
    end else begin
        AB_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln11_fu_252_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln11_reg_1230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_0_phi_fu_234_p4 = select_ln17_1_reg_1244;
    end else begin
        ap_phi_mux_i_0_phi_fu_234_p4 = i_0_reg_230;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln11_fu_252_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln11_fu_252_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AB_address0 = zext_ln19_1_fu_1215_p1;

assign AB_d0 = (add_ln17_14_reg_1800 + add_ln17_29_fu_1220_p2);

assign A_address0 = zext_ln17_fu_292_p1;

assign B_address0 = zext_ln17_1_fu_297_p1;

assign add_ln11_fu_258_p2 = (indvar_flatten_reg_219 + 11'd1);

assign add_ln17_10_fu_1100_p2 = (mul_ln17_13_reg_1650 + mul_ln17_12_reg_1645);

assign add_ln17_11_fu_1104_p2 = (mul_ln17_15_reg_1660 + mul_ln17_14_reg_1655);

assign add_ln17_12_fu_1108_p2 = (add_ln17_10_fu_1100_p2 + add_ln17_11_fu_1104_p2);

assign add_ln17_13_fu_1167_p2 = (add_ln17_9_reg_1760 + add_ln17_12_reg_1765);

assign add_ln17_14_fu_1171_p2 = (add_ln17_6_fu_1162_p2 + add_ln17_13_fu_1167_p2);

assign add_ln17_15_fu_1114_p2 = (mul_ln17_17_reg_1670 + mul_ln17_16_reg_1665);

assign add_ln17_16_fu_1118_p2 = (mul_ln17_19_reg_1680 + mul_ln17_18_reg_1675);

assign add_ln17_17_fu_1122_p2 = (add_ln17_15_fu_1114_p2 + add_ln17_16_fu_1118_p2);

assign add_ln17_18_fu_1128_p2 = (mul_ln17_21_reg_1690 + mul_ln17_20_reg_1685);

assign add_ln17_19_fu_1132_p2 = (mul_ln17_23_reg_1700 + mul_ln17_22_reg_1695);

assign add_ln17_1_fu_1068_p2 = (mul_ln17_3_reg_1600 + mul_ln17_2_reg_1595);

assign add_ln17_20_fu_1177_p2 = (add_ln17_18_reg_1775 + add_ln17_19_reg_1780);

assign add_ln17_21_fu_1181_p2 = (add_ln17_17_reg_1770 + add_ln17_20_fu_1177_p2);

assign add_ln17_22_fu_1136_p2 = (mul_ln17_25_reg_1710 + mul_ln17_24_reg_1705);

assign add_ln17_23_fu_1140_p2 = (mul_ln17_27_reg_1720 + mul_ln17_26_reg_1715);

assign add_ln17_24_fu_1144_p2 = (add_ln17_22_fu_1136_p2 + add_ln17_23_fu_1140_p2);

assign add_ln17_25_fu_1150_p2 = (mul_ln17_29_reg_1730 + mul_ln17_28_reg_1725);

assign add_ln17_26_fu_1154_p2 = (mul_ln17_31_reg_1740 + mul_ln17_30_reg_1735);

assign add_ln17_27_fu_1186_p2 = (add_ln17_25_reg_1790 + add_ln17_26_reg_1795);

assign add_ln17_28_fu_1190_p2 = (add_ln17_24_reg_1785 + add_ln17_27_fu_1186_p2);

assign add_ln17_29_fu_1220_p2 = (add_ln17_21_reg_1805 + add_ln17_28_reg_1810);

assign add_ln17_2_fu_1072_p2 = (add_ln17_fu_1064_p2 + add_ln17_1_fu_1068_p2);

assign add_ln17_3_fu_1078_p2 = (mul_ln17_5_reg_1610 + mul_ln17_4_reg_1605);

assign add_ln17_4_fu_1082_p2 = (mul_ln17_7_reg_1620 + mul_ln17_6_reg_1615);

assign add_ln17_5_fu_1158_p2 = (add_ln17_3_reg_1750 + add_ln17_4_reg_1755);

assign add_ln17_6_fu_1162_p2 = (add_ln17_2_reg_1745 + add_ln17_5_fu_1158_p2);

assign add_ln17_7_fu_1086_p2 = (mul_ln17_9_reg_1630 + mul_ln17_8_reg_1625);

assign add_ln17_8_fu_1090_p2 = (mul_ln17_11_reg_1640 + mul_ln17_10_reg_1635);

assign add_ln17_9_fu_1094_p2 = (add_ln17_7_fu_1086_p2 + add_ln17_8_fu_1090_p2);

assign add_ln17_fu_1064_p2 = (mul_ln17_1_reg_1590 + mul_ln17_reg_1585);

assign add_ln19_fu_1209_p2 = (zext_ln12_fu_1202_p1 + zext_ln19_fu_1206_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_fu_264_p2 = (6'd1 + ap_phi_mux_i_0_phi_fu_234_p4);

assign icmp_ln11_fu_252_p2 = ((indvar_flatten_reg_219 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_270_p2 = ((j_0_reg_241 == 6'd32) ? 1'b1 : 1'b0);

assign j_fu_302_p2 = (6'd1 + select_ln17_fu_276_p3);

assign mul_ln17_10_fu_976_p2 = ($signed(tmp_20_reg_1370) * $signed(tmp_19_reg_1365));

assign mul_ln17_11_fu_980_p2 = ($signed(tmp_22_reg_1380) * $signed(tmp_21_reg_1375));

assign mul_ln17_12_fu_984_p2 = ($signed(tmp_24_reg_1390) * $signed(tmp_23_reg_1385));

assign mul_ln17_13_fu_988_p2 = ($signed(tmp_26_reg_1400) * $signed(tmp_25_reg_1395));

assign mul_ln17_14_fu_992_p2 = ($signed(tmp_28_reg_1410) * $signed(tmp_27_reg_1405));

assign mul_ln17_15_fu_996_p2 = ($signed(tmp_30_reg_1420) * $signed(tmp_29_reg_1415));

assign mul_ln17_16_fu_1000_p2 = ($signed(tmp_32_reg_1430) * $signed(tmp_31_reg_1425));

assign mul_ln17_17_fu_1004_p2 = ($signed(tmp_34_reg_1440) * $signed(tmp_33_reg_1435));

assign mul_ln17_18_fu_1008_p2 = ($signed(tmp_36_reg_1450) * $signed(tmp_35_reg_1445));

assign mul_ln17_19_fu_1012_p2 = ($signed(tmp_38_reg_1460) * $signed(tmp_37_reg_1455));

assign mul_ln17_1_fu_940_p2 = ($signed(tmp_5_reg_1280) * $signed(tmp_4_reg_1275));

assign mul_ln17_20_fu_1016_p2 = ($signed(tmp_40_reg_1470) * $signed(tmp_39_reg_1465));

assign mul_ln17_21_fu_1020_p2 = ($signed(tmp_42_reg_1480) * $signed(tmp_41_reg_1475));

assign mul_ln17_22_fu_1024_p2 = ($signed(tmp_44_reg_1490) * $signed(tmp_43_reg_1485));

assign mul_ln17_23_fu_1028_p2 = ($signed(tmp_46_reg_1500) * $signed(tmp_45_reg_1495));

assign mul_ln17_24_fu_1032_p2 = ($signed(tmp_48_reg_1510) * $signed(tmp_47_reg_1505));

assign mul_ln17_25_fu_1036_p2 = ($signed(tmp_50_reg_1520) * $signed(tmp_49_reg_1515));

assign mul_ln17_26_fu_1040_p2 = ($signed(tmp_52_reg_1530) * $signed(tmp_51_reg_1525));

assign mul_ln17_27_fu_1044_p2 = ($signed(tmp_54_reg_1540) * $signed(tmp_53_reg_1535));

assign mul_ln17_28_fu_1048_p2 = ($signed(tmp_56_reg_1550) * $signed(tmp_55_reg_1545));

assign mul_ln17_29_fu_1052_p2 = ($signed(tmp_58_reg_1560) * $signed(tmp_57_reg_1555));

assign mul_ln17_2_fu_944_p2 = ($signed(tmp_7_reg_1290) * $signed(tmp_6_reg_1285));

assign mul_ln17_30_fu_1056_p2 = ($signed(tmp_60_reg_1570) * $signed(tmp_59_reg_1565));

assign mul_ln17_31_fu_1060_p2 = ($signed(tmp_62_reg_1580) * $signed(tmp_61_reg_1575));

assign mul_ln17_3_fu_948_p2 = ($signed(tmp_9_reg_1300) * $signed(tmp_8_reg_1295));

assign mul_ln17_4_fu_952_p2 = ($signed(tmp_2_reg_1310) * $signed(tmp_s_reg_1305));

assign mul_ln17_5_fu_956_p2 = ($signed(tmp_10_reg_1320) * $signed(tmp_3_reg_1315));

assign mul_ln17_6_fu_960_p2 = ($signed(tmp_12_reg_1330) * $signed(tmp_11_reg_1325));

assign mul_ln17_7_fu_964_p2 = ($signed(tmp_14_reg_1340) * $signed(tmp_13_reg_1335));

assign mul_ln17_8_fu_968_p2 = ($signed(tmp_16_reg_1350) * $signed(tmp_15_reg_1345));

assign mul_ln17_9_fu_972_p2 = ($signed(tmp_18_reg_1360) * $signed(tmp_17_reg_1355));

assign mul_ln17_fu_936_p2 = ($signed(trunc_ln17_1_reg_1270) * $signed(trunc_ln17_reg_1265));

assign select_ln17_1_fu_284_p3 = ((icmp_ln12_fu_270_p2[0:0] === 1'b1) ? i_fu_264_p2 : ap_phi_mux_i_0_phi_fu_234_p4);

assign select_ln17_fu_276_p3 = ((icmp_ln12_fu_270_p2[0:0] === 1'b1) ? 6'd0 : j_0_reg_241);

assign tmp_fu_1195_p3 = {{select_ln17_1_reg_1244_pp0_iter4_reg}, {5'd0}};

assign trunc_ln17_1_fu_312_p1 = B_q0[31:0];

assign trunc_ln17_fu_308_p1 = A_q0[31:0];

assign zext_ln12_fu_1202_p1 = tmp_fu_1195_p3;

assign zext_ln17_1_fu_297_p1 = select_ln17_fu_276_p3;

assign zext_ln17_fu_292_p1 = select_ln17_1_fu_284_p3;

assign zext_ln19_1_fu_1215_p1 = add_ln19_fu_1209_p2;

assign zext_ln19_fu_1206_p1 = select_ln17_reg_1239_pp0_iter4_reg;

endmodule //matrixmul
