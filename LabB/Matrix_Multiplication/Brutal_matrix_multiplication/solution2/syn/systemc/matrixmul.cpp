// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> matrixmul::ap_ST_fsm_state1 = "1";
const sc_lv<3> matrixmul::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> matrixmul::ap_ST_fsm_state7 = "100";
const sc_lv<32> matrixmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool matrixmul::ap_const_boolean_1 = true;
const sc_lv<32> matrixmul::ap_const_lv32_1 = "1";
const bool matrixmul::ap_const_boolean_0 = false;
const sc_lv<1> matrixmul::ap_const_lv1_0 = "0";
const sc_lv<1> matrixmul::ap_const_lv1_1 = "1";
const sc_lv<16> matrixmul::ap_const_lv16_0 = "0000000000000000";
const sc_lv<6> matrixmul::ap_const_lv6_0 = "000000";
const sc_lv<12> matrixmul::ap_const_lv12_0 = "000000000000";
const sc_lv<16> matrixmul::ap_const_lv16_8000 = "1000000000000000";
const sc_lv<16> matrixmul::ap_const_lv16_1 = "1";
const sc_lv<12> matrixmul::ap_const_lv12_400 = "10000000000";
const sc_lv<6> matrixmul::ap_const_lv6_20 = "100000";
const sc_lv<6> matrixmul::ap_const_lv6_1 = "1";
const sc_lv<12> matrixmul::ap_const_lv12_1 = "1";
const sc_lv<5> matrixmul::ap_const_lv5_0 = "00000";
const sc_lv<32> matrixmul::ap_const_lv32_2 = "10";

matrixmul::matrixmul(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AB_address0);
    sensitive << ( AB_addr_reg_406_pp0_iter3_reg );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_AB_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_AB_d0);
    sensitive << ( mul_ln17_reg_431 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( select_ln17_2_fu_341_p3 );

    SC_METHOD(thread_AB_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( icmp_ln15_1_fu_354_p2 );

    SC_METHOD(thread_ABij_fu_348_p2);
    sensitive << ( mul_ln17_reg_431 );
    sensitive << ( select_ln17_2_fu_341_p3 );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln17_3_fu_310_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln17_5_fu_332_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_add_ln11_fu_176_p2);
    sensitive << ( indvar_flatten14_reg_102 );

    SC_METHOD(thread_add_ln12_fu_248_p2);
    sensitive << ( indvar_flatten_reg_125 );

    SC_METHOD(thread_add_ln17_1_fu_326_p2);
    sensitive << ( zext_ln17_1_fu_287_p1 );
    sensitive << ( zext_ln17_4_fu_322_p1 );

    SC_METHOD(thread_add_ln17_fu_304_p2);
    sensitive << ( zext_ln17_fu_283_p1 );
    sensitive << ( zext_ln17_2_fu_301_p1 );

    SC_METHOD(thread_add_ln19_fu_290_p2);
    sensitive << ( zext_ln17_1_fu_287_p1 );
    sensitive << ( zext_ln17_fu_283_p1 );

    SC_METHOD(thread_and_ln17_fu_208_p2);
    sensitive << ( icmp_ln15_fu_202_p2 );
    sensitive << ( xor_ln17_fu_196_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln11_fu_170_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_117_p4);
    sensitive << ( i_0_reg_113 );
    sensitive << ( icmp_ln11_reg_359_pp0_iter1_reg );
    sensitive << ( select_ln17_1_reg_401 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_140_p4);
    sensitive << ( j_0_reg_136 );
    sensitive << ( icmp_ln11_reg_359 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln17_4_reg_384 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_k_0_phi_fu_163_p4);
    sensitive << ( k_0_reg_159 );
    sensitive << ( icmp_ln11_reg_359 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( k_reg_390 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_i_fu_262_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_117_p4 );

    SC_METHOD(thread_icmp_ln11_fu_170_p2);
    sensitive << ( indvar_flatten14_reg_102 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln12_fu_182_p2);
    sensitive << ( indvar_flatten_reg_125 );
    sensitive << ( icmp_ln11_fu_170_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln15_1_fu_354_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln11_reg_359_pp0_iter3_reg );
    sensitive << ( k_reg_390_pp0_iter3_reg );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_icmp_ln15_fu_202_p2);
    sensitive << ( icmp_ln11_fu_170_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_k_0_phi_fu_163_p4 );

    SC_METHOD(thread_j_fu_214_p2);
    sensitive << ( select_ln17_fu_188_p3 );

    SC_METHOD(thread_k_fu_242_p2);
    sensitive << ( select_ln17_3_fu_226_p3 );

    SC_METHOD(thread_mul_ln17_fu_337_p2);
    sensitive << ( A_load_reg_421 );
    sensitive << ( B_load_reg_426 );

    SC_METHOD(thread_or_ln17_fu_220_p2);
    sensitive << ( icmp_ln12_fu_182_p2 );
    sensitive << ( and_ln17_fu_208_p2 );

    SC_METHOD(thread_select_ln12_fu_254_p3);
    sensitive << ( icmp_ln12_fu_182_p2 );
    sensitive << ( add_ln12_fu_248_p2 );

    SC_METHOD(thread_select_ln17_1_fu_268_p3);
    sensitive << ( icmp_ln12_reg_368 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_117_p4 );
    sensitive << ( i_fu_262_p2 );

    SC_METHOD(thread_select_ln17_2_fu_341_p3);
    sensitive << ( ABij_0_reg_147 );
    sensitive << ( or_ln17_reg_373_pp0_iter3_reg );

    SC_METHOD(thread_select_ln17_3_fu_226_p3);
    sensitive << ( or_ln17_fu_220_p2 );
    sensitive << ( ap_phi_mux_k_0_phi_fu_163_p4 );

    SC_METHOD(thread_select_ln17_4_fu_234_p3);
    sensitive << ( select_ln17_fu_188_p3 );
    sensitive << ( and_ln17_fu_208_p2 );
    sensitive << ( j_fu_214_p2 );

    SC_METHOD(thread_select_ln17_fu_188_p3);
    sensitive << ( icmp_ln12_fu_182_p2 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_140_p4 );

    SC_METHOD(thread_tmp_1_fu_315_p3);
    sensitive << ( select_ln17_3_reg_378 );

    SC_METHOD(thread_tmp_fu_275_p3);
    sensitive << ( select_ln17_1_fu_268_p3 );

    SC_METHOD(thread_xor_ln17_fu_196_p2);
    sensitive << ( icmp_ln12_fu_182_p2 );

    SC_METHOD(thread_zext_ln17_1_fu_287_p1);
    sensitive << ( select_ln17_4_reg_384 );

    SC_METHOD(thread_zext_ln17_2_fu_301_p1);
    sensitive << ( select_ln17_3_reg_378 );

    SC_METHOD(thread_zext_ln17_3_fu_310_p1);
    sensitive << ( add_ln17_fu_304_p2 );

    SC_METHOD(thread_zext_ln17_4_fu_322_p1);
    sensitive << ( tmp_1_fu_315_p3 );

    SC_METHOD(thread_zext_ln17_5_fu_332_p1);
    sensitive << ( add_ln17_1_fu_326_p2 );

    SC_METHOD(thread_zext_ln17_fu_283_p1);
    sensitive << ( tmp_fu_275_p3 );

    SC_METHOD(thread_zext_ln19_fu_296_p1);
    sensitive << ( add_ln19_fu_290_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln11_fu_170_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, AB_address0, "(port)AB_address0");
    sc_trace(mVcdFile, AB_ce0, "(port)AB_ce0");
    sc_trace(mVcdFile, AB_we0, "(port)AB_we0");
    sc_trace(mVcdFile, AB_d0, "(port)AB_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten14_reg_102, "indvar_flatten14_reg_102");
    sc_trace(mVcdFile, i_0_reg_113, "i_0_reg_113");
    sc_trace(mVcdFile, indvar_flatten_reg_125, "indvar_flatten_reg_125");
    sc_trace(mVcdFile, j_0_reg_136, "j_0_reg_136");
    sc_trace(mVcdFile, ABij_0_reg_147, "ABij_0_reg_147");
    sc_trace(mVcdFile, k_0_reg_159, "k_0_reg_159");
    sc_trace(mVcdFile, icmp_ln11_fu_170_p2, "icmp_ln11_fu_170_p2");
    sc_trace(mVcdFile, icmp_ln11_reg_359, "icmp_ln11_reg_359");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln11_reg_359_pp0_iter1_reg, "icmp_ln11_reg_359_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln11_reg_359_pp0_iter2_reg, "icmp_ln11_reg_359_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln11_reg_359_pp0_iter3_reg, "icmp_ln11_reg_359_pp0_iter3_reg");
    sc_trace(mVcdFile, add_ln11_fu_176_p2, "add_ln11_fu_176_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln12_fu_182_p2, "icmp_ln12_fu_182_p2");
    sc_trace(mVcdFile, icmp_ln12_reg_368, "icmp_ln12_reg_368");
    sc_trace(mVcdFile, or_ln17_fu_220_p2, "or_ln17_fu_220_p2");
    sc_trace(mVcdFile, or_ln17_reg_373, "or_ln17_reg_373");
    sc_trace(mVcdFile, or_ln17_reg_373_pp0_iter1_reg, "or_ln17_reg_373_pp0_iter1_reg");
    sc_trace(mVcdFile, or_ln17_reg_373_pp0_iter2_reg, "or_ln17_reg_373_pp0_iter2_reg");
    sc_trace(mVcdFile, or_ln17_reg_373_pp0_iter3_reg, "or_ln17_reg_373_pp0_iter3_reg");
    sc_trace(mVcdFile, select_ln17_3_fu_226_p3, "select_ln17_3_fu_226_p3");
    sc_trace(mVcdFile, select_ln17_3_reg_378, "select_ln17_3_reg_378");
    sc_trace(mVcdFile, select_ln17_4_fu_234_p3, "select_ln17_4_fu_234_p3");
    sc_trace(mVcdFile, select_ln17_4_reg_384, "select_ln17_4_reg_384");
    sc_trace(mVcdFile, k_fu_242_p2, "k_fu_242_p2");
    sc_trace(mVcdFile, k_reg_390, "k_reg_390");
    sc_trace(mVcdFile, k_reg_390_pp0_iter1_reg, "k_reg_390_pp0_iter1_reg");
    sc_trace(mVcdFile, k_reg_390_pp0_iter2_reg, "k_reg_390_pp0_iter2_reg");
    sc_trace(mVcdFile, k_reg_390_pp0_iter3_reg, "k_reg_390_pp0_iter3_reg");
    sc_trace(mVcdFile, select_ln12_fu_254_p3, "select_ln12_fu_254_p3");
    sc_trace(mVcdFile, select_ln17_1_fu_268_p3, "select_ln17_1_fu_268_p3");
    sc_trace(mVcdFile, select_ln17_1_reg_401, "select_ln17_1_reg_401");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, AB_addr_reg_406, "AB_addr_reg_406");
    sc_trace(mVcdFile, AB_addr_reg_406_pp0_iter2_reg, "AB_addr_reg_406_pp0_iter2_reg");
    sc_trace(mVcdFile, AB_addr_reg_406_pp0_iter3_reg, "AB_addr_reg_406_pp0_iter3_reg");
    sc_trace(mVcdFile, A_load_reg_421, "A_load_reg_421");
    sc_trace(mVcdFile, B_load_reg_426, "B_load_reg_426");
    sc_trace(mVcdFile, mul_ln17_fu_337_p2, "mul_ln17_fu_337_p2");
    sc_trace(mVcdFile, mul_ln17_reg_431, "mul_ln17_reg_431");
    sc_trace(mVcdFile, ABij_fu_348_p2, "ABij_fu_348_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_117_p4, "ap_phi_mux_i_0_phi_fu_117_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_140_p4, "ap_phi_mux_j_0_phi_fu_140_p4");
    sc_trace(mVcdFile, ap_phi_mux_k_0_phi_fu_163_p4, "ap_phi_mux_k_0_phi_fu_163_p4");
    sc_trace(mVcdFile, zext_ln19_fu_296_p1, "zext_ln19_fu_296_p1");
    sc_trace(mVcdFile, zext_ln17_3_fu_310_p1, "zext_ln17_3_fu_310_p1");
    sc_trace(mVcdFile, zext_ln17_5_fu_332_p1, "zext_ln17_5_fu_332_p1");
    sc_trace(mVcdFile, icmp_ln15_1_fu_354_p2, "icmp_ln15_1_fu_354_p2");
    sc_trace(mVcdFile, icmp_ln15_fu_202_p2, "icmp_ln15_fu_202_p2");
    sc_trace(mVcdFile, xor_ln17_fu_196_p2, "xor_ln17_fu_196_p2");
    sc_trace(mVcdFile, select_ln17_fu_188_p3, "select_ln17_fu_188_p3");
    sc_trace(mVcdFile, and_ln17_fu_208_p2, "and_ln17_fu_208_p2");
    sc_trace(mVcdFile, j_fu_214_p2, "j_fu_214_p2");
    sc_trace(mVcdFile, add_ln12_fu_248_p2, "add_ln12_fu_248_p2");
    sc_trace(mVcdFile, i_fu_262_p2, "i_fu_262_p2");
    sc_trace(mVcdFile, tmp_fu_275_p3, "tmp_fu_275_p3");
    sc_trace(mVcdFile, zext_ln17_1_fu_287_p1, "zext_ln17_1_fu_287_p1");
    sc_trace(mVcdFile, zext_ln17_fu_283_p1, "zext_ln17_fu_283_p1");
    sc_trace(mVcdFile, add_ln19_fu_290_p2, "add_ln19_fu_290_p2");
    sc_trace(mVcdFile, zext_ln17_2_fu_301_p1, "zext_ln17_2_fu_301_p1");
    sc_trace(mVcdFile, add_ln17_fu_304_p2, "add_ln17_fu_304_p2");
    sc_trace(mVcdFile, tmp_1_fu_315_p3, "tmp_1_fu_315_p3");
    sc_trace(mVcdFile, zext_ln17_4_fu_322_p1, "zext_ln17_4_fu_322_p1");
    sc_trace(mVcdFile, add_ln17_1_fu_326_p2, "add_ln17_1_fu_326_p2");
    sc_trace(mVcdFile, select_ln17_2_fu_341_p3, "select_ln17_2_fu_341_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("matrixmul.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul.hdltvout.dat");
}

matrixmul::~matrixmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void matrixmul::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_359_pp0_iter3_reg.read(), ap_const_lv1_0))) {
        ABij_0_reg_147 = ABij_fu_348_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ABij_0_reg_147 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_359_pp0_iter1_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        i_0_reg_113 = select_ln17_1_reg_401.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_113 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_170_p2.read(), ap_const_lv1_0))) {
        indvar_flatten14_reg_102 = add_ln11_fu_176_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten14_reg_102 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_170_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_125 = select_ln12_fu_254_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_125 = ap_const_lv12_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_359.read(), ap_const_lv1_0))) {
        j_0_reg_136 = select_ln17_4_reg_384.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_136 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_359.read(), ap_const_lv1_0))) {
        k_0_reg_159 = k_reg_390.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_0_reg_159 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_reg_359.read(), ap_const_lv1_0))) {
        AB_addr_reg_406 =  (sc_lv<10>) (zext_ln19_fu_296_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        AB_addr_reg_406_pp0_iter2_reg = AB_addr_reg_406.read();
        AB_addr_reg_406_pp0_iter3_reg = AB_addr_reg_406_pp0_iter2_reg.read();
        icmp_ln11_reg_359_pp0_iter2_reg = icmp_ln11_reg_359_pp0_iter1_reg.read();
        icmp_ln11_reg_359_pp0_iter3_reg = icmp_ln11_reg_359_pp0_iter2_reg.read();
        k_reg_390_pp0_iter2_reg = k_reg_390_pp0_iter1_reg.read();
        k_reg_390_pp0_iter3_reg = k_reg_390_pp0_iter2_reg.read();
        or_ln17_reg_373_pp0_iter2_reg = or_ln17_reg_373_pp0_iter1_reg.read();
        or_ln17_reg_373_pp0_iter3_reg = or_ln17_reg_373_pp0_iter2_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_reg_359_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        A_load_reg_421 = A_q0.read();
        B_load_reg_426 = B_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln11_reg_359 = icmp_ln11_fu_170_p2.read();
        icmp_ln11_reg_359_pp0_iter1_reg = icmp_ln11_reg_359.read();
        k_reg_390_pp0_iter1_reg = k_reg_390.read();
        or_ln17_reg_373_pp0_iter1_reg = or_ln17_reg_373.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_fu_170_p2.read(), ap_const_lv1_0))) {
        icmp_ln12_reg_368 = icmp_ln12_fu_182_p2.read();
        or_ln17_reg_373 = or_ln17_fu_220_p2.read();
        select_ln17_3_reg_378 = select_ln17_3_fu_226_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_170_p2.read(), ap_const_lv1_0))) {
        k_reg_390 = k_fu_242_p2.read();
        select_ln17_4_reg_384 = select_ln17_4_fu_234_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_reg_359_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        mul_ln17_reg_431 = mul_ln17_fu_337_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln11_reg_359.read(), ap_const_lv1_0))) {
        select_ln17_1_reg_401 = select_ln17_1_fu_268_p3.read();
    }
}

void matrixmul::thread_AB_address0() {
    AB_address0 = AB_addr_reg_406_pp0_iter3_reg.read();
}

void matrixmul::thread_AB_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        AB_ce0 = ap_const_logic_1;
    } else {
        AB_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_AB_d0() {
    AB_d0 = (!mul_ln17_reg_431.read().is_01() || !select_ln17_2_fu_341_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln17_reg_431.read()) + sc_biguint<32>(select_ln17_2_fu_341_p3.read()));
}

void matrixmul::thread_AB_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_1_fu_354_p2.read()))) {
        AB_we0 = ap_const_logic_1;
    } else {
        AB_we0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ABij_fu_348_p2() {
    ABij_fu_348_p2 = (!mul_ln17_reg_431.read().is_01() || !select_ln17_2_fu_341_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln17_reg_431.read()) + sc_biguint<32>(select_ln17_2_fu_341_p3.read()));
}

void matrixmul::thread_A_address0() {
    A_address0 =  (sc_lv<10>) (zext_ln17_3_fu_310_p1.read());
}

void matrixmul::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_B_address0() {
    B_address0 =  (sc_lv<10>) (zext_ln17_5_fu_332_p1.read());
}

void matrixmul::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void matrixmul::thread_add_ln11_fu_176_p2() {
    add_ln11_fu_176_p2 = (!indvar_flatten14_reg_102.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(indvar_flatten14_reg_102.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void matrixmul::thread_add_ln12_fu_248_p2() {
    add_ln12_fu_248_p2 = (!indvar_flatten_reg_125.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(indvar_flatten_reg_125.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void matrixmul::thread_add_ln17_1_fu_326_p2() {
    add_ln17_1_fu_326_p2 = (!zext_ln17_1_fu_287_p1.read().is_01() || !zext_ln17_4_fu_322_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln17_1_fu_287_p1.read()) + sc_biguint<12>(zext_ln17_4_fu_322_p1.read()));
}

void matrixmul::thread_add_ln17_fu_304_p2() {
    add_ln17_fu_304_p2 = (!zext_ln17_2_fu_301_p1.read().is_01() || !zext_ln17_fu_283_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln17_2_fu_301_p1.read()) + sc_biguint<12>(zext_ln17_fu_283_p1.read()));
}

void matrixmul::thread_add_ln19_fu_290_p2() {
    add_ln19_fu_290_p2 = (!zext_ln17_1_fu_287_p1.read().is_01() || !zext_ln17_fu_283_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln17_1_fu_287_p1.read()) + sc_biguint<12>(zext_ln17_fu_283_p1.read()));
}

void matrixmul::thread_and_ln17_fu_208_p2() {
    and_ln17_fu_208_p2 = (icmp_ln15_fu_202_p2.read() & xor_ln17_fu_196_p2.read());
}

void matrixmul::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void matrixmul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrixmul::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void matrixmul::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln11_fu_170_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void matrixmul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_phi_mux_i_0_phi_fu_117_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln11_reg_359_pp0_iter1_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_117_p4 = select_ln17_1_reg_401.read();
    } else {
        ap_phi_mux_i_0_phi_fu_117_p4 = i_0_reg_113.read();
    }
}

void matrixmul::thread_ap_phi_mux_j_0_phi_fu_140_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_359.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_140_p4 = select_ln17_4_reg_384.read();
    } else {
        ap_phi_mux_j_0_phi_fu_140_p4 = j_0_reg_136.read();
    }
}

void matrixmul::thread_ap_phi_mux_k_0_phi_fu_163_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_359.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_k_0_phi_fu_163_p4 = k_reg_390.read();
    } else {
        ap_phi_mux_k_0_phi_fu_163_p4 = k_0_reg_159.read();
    }
}

void matrixmul::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul::thread_i_fu_262_p2() {
    i_fu_262_p2 = (!ap_phi_mux_i_0_phi_fu_117_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_i_0_phi_fu_117_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matrixmul::thread_icmp_ln11_fu_170_p2() {
    icmp_ln11_fu_170_p2 = (!indvar_flatten14_reg_102.read().is_01() || !ap_const_lv16_8000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten14_reg_102.read() == ap_const_lv16_8000);
}

void matrixmul::thread_icmp_ln12_fu_182_p2() {
    icmp_ln12_fu_182_p2 = (!indvar_flatten_reg_125.read().is_01() || !ap_const_lv12_400.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_125.read() == ap_const_lv12_400);
}

void matrixmul::thread_icmp_ln15_1_fu_354_p2() {
    icmp_ln15_1_fu_354_p2 = (!k_reg_390_pp0_iter3_reg.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_390_pp0_iter3_reg.read() == ap_const_lv6_20);
}

void matrixmul::thread_icmp_ln15_fu_202_p2() {
    icmp_ln15_fu_202_p2 = (!ap_phi_mux_k_0_phi_fu_163_p4.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_k_0_phi_fu_163_p4.read() == ap_const_lv6_20);
}

void matrixmul::thread_j_fu_214_p2() {
    j_fu_214_p2 = (!select_ln17_fu_188_p3.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(select_ln17_fu_188_p3.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matrixmul::thread_k_fu_242_p2() {
    k_fu_242_p2 = (!select_ln17_3_fu_226_p3.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(select_ln17_3_fu_226_p3.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matrixmul::thread_mul_ln17_fu_337_p2() {
    mul_ln17_fu_337_p2 = (!A_load_reg_421.read().is_01() || !B_load_reg_426.read().is_01())? sc_lv<32>(): sc_bigint<32>(A_load_reg_421.read()) * sc_bigint<32>(B_load_reg_426.read());
}

void matrixmul::thread_or_ln17_fu_220_p2() {
    or_ln17_fu_220_p2 = (and_ln17_fu_208_p2.read() | icmp_ln12_fu_182_p2.read());
}

void matrixmul::thread_select_ln12_fu_254_p3() {
    select_ln12_fu_254_p3 = (!icmp_ln12_fu_182_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln12_fu_182_p2.read()[0].to_bool())? ap_const_lv12_1: add_ln12_fu_248_p2.read());
}

void matrixmul::thread_select_ln17_1_fu_268_p3() {
    select_ln17_1_fu_268_p3 = (!icmp_ln12_reg_368.read()[0].is_01())? sc_lv<6>(): ((icmp_ln12_reg_368.read()[0].to_bool())? i_fu_262_p2.read(): ap_phi_mux_i_0_phi_fu_117_p4.read());
}

void matrixmul::thread_select_ln17_2_fu_341_p3() {
    select_ln17_2_fu_341_p3 = (!or_ln17_reg_373_pp0_iter3_reg.read()[0].is_01())? sc_lv<32>(): ((or_ln17_reg_373_pp0_iter3_reg.read()[0].to_bool())? ap_const_lv32_0: ABij_0_reg_147.read());
}

void matrixmul::thread_select_ln17_3_fu_226_p3() {
    select_ln17_3_fu_226_p3 = (!or_ln17_fu_220_p2.read()[0].is_01())? sc_lv<6>(): ((or_ln17_fu_220_p2.read()[0].to_bool())? ap_const_lv6_0: ap_phi_mux_k_0_phi_fu_163_p4.read());
}

void matrixmul::thread_select_ln17_4_fu_234_p3() {
    select_ln17_4_fu_234_p3 = (!and_ln17_fu_208_p2.read()[0].is_01())? sc_lv<6>(): ((and_ln17_fu_208_p2.read()[0].to_bool())? j_fu_214_p2.read(): select_ln17_fu_188_p3.read());
}

void matrixmul::thread_select_ln17_fu_188_p3() {
    select_ln17_fu_188_p3 = (!icmp_ln12_fu_182_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln12_fu_182_p2.read()[0].to_bool())? ap_const_lv6_0: ap_phi_mux_j_0_phi_fu_140_p4.read());
}

void matrixmul::thread_tmp_1_fu_315_p3() {
    tmp_1_fu_315_p3 = esl_concat<6,5>(select_ln17_3_reg_378.read(), ap_const_lv5_0);
}

void matrixmul::thread_tmp_fu_275_p3() {
    tmp_fu_275_p3 = esl_concat<6,5>(select_ln17_1_fu_268_p3.read(), ap_const_lv5_0);
}

void matrixmul::thread_xor_ln17_fu_196_p2() {
    xor_ln17_fu_196_p2 = (icmp_ln12_fu_182_p2.read() ^ ap_const_lv1_1);
}

void matrixmul::thread_zext_ln17_1_fu_287_p1() {
    zext_ln17_1_fu_287_p1 = esl_zext<12,6>(select_ln17_4_reg_384.read());
}

void matrixmul::thread_zext_ln17_2_fu_301_p1() {
    zext_ln17_2_fu_301_p1 = esl_zext<12,6>(select_ln17_3_reg_378.read());
}

void matrixmul::thread_zext_ln17_3_fu_310_p1() {
    zext_ln17_3_fu_310_p1 = esl_zext<64,12>(add_ln17_fu_304_p2.read());
}

void matrixmul::thread_zext_ln17_4_fu_322_p1() {
    zext_ln17_4_fu_322_p1 = esl_zext<12,11>(tmp_1_fu_315_p3.read());
}

void matrixmul::thread_zext_ln17_5_fu_332_p1() {
    zext_ln17_5_fu_332_p1 = esl_zext<64,12>(add_ln17_1_fu_326_p2.read());
}

void matrixmul::thread_zext_ln17_fu_283_p1() {
    zext_ln17_fu_283_p1 = esl_zext<12,11>(tmp_fu_275_p3.read());
}

void matrixmul::thread_zext_ln19_fu_296_p1() {
    zext_ln19_fu_296_p1 = esl_zext<64,12>(add_ln19_fu_290_p2.read());
}

void matrixmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_fu_170_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln11_fu_170_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void matrixmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_address0\" :  \"" << AB_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_ce0\" :  \"" << AB_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_we0\" :  \"" << AB_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_d0\" :  \"" << AB_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

