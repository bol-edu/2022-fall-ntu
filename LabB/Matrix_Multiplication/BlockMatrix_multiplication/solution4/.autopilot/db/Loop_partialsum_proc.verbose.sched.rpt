

================================================================
== Vivado HLS Report for 'Loop_partialsum_proc'
================================================================
* Date:           Wed Oct 19 18:16:22 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        BlockMatrix_multiplication
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.510 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       12|       12| 0.120 us | 0.120 us |   12|   12|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- partialsum  |       10|       10|         4|          1|          1|     8|    yes   |
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_0, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 7 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty_104 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 8 'specinterface' 'empty_104' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%empty_105 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_2, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 9 'specinterface' 'empty_105' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty_106 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_3, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 10 'specinterface' 'empty_106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_107 = call i32 (...)* @_ssdm_op_SpecInterface(i32* @A_3, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 11 'specinterface' 'empty_107' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_108 = call i32 (...)* @_ssdm_op_SpecInterface(i32* @A_2, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 12 'specinterface' 'empty_108' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty_109 = call i32 (...)* @_ssdm_op_SpecInterface(i32* @A_1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 13 'specinterface' 'empty_109' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_110 = call i32 (...)* @_ssdm_op_SpecInterface(i32* @A_0, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 14 'specinterface' 'empty_110' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.76ns)   --->   "br label %0"   --->   Operation 15 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.73>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%AB_2_loc_0_i = phi i512 [ 0, %entry ], [ %AB, %partialsum ]"   --->   Operation 16 'phi' 'AB_2_loc_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%k_0_i_i_i = phi i4 [ 0, %entry ], [ %k, %partialsum ]"   --->   Operation 17 'phi' 'k_0_i_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.30ns)   --->   "%icmp_ln22 = icmp eq i4 %k_0_i_i_i, -8" [BlockMatrix_design.cpp:22]   --->   Operation 18 'icmp' 'icmp_ln22' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty_111 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 19 'speclooptripcount' 'empty_111' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.73ns)   --->   "%k = add i4 %k_0_i_i_i, 1" [BlockMatrix_design.cpp:22]   --->   Operation 20 'add' 'k' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %icmp_ln22, label %Loop_partialsum_proc.exit, label %partialsum" [BlockMatrix_design.cpp:22]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.63>
ST_3 : Operation 22 [1/1] (3.63ns)   --->   "%empty_112 = call { i32, i32, i32, i32 } @_ssdm_op_Read.ap_fifo.volatile.i32P.i32P.i32P.i32P(i32* %Bcols_V_a_0, i32* %Bcols_V_a_1, i32* %Bcols_V_a_2, i32* %Bcols_V_a_3)" [BlockMatrix_design.cpp:23]   --->   Operation 22 'read' 'empty_112' <Predicate = (!icmp_ln22)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_a_1_01_i_i_i = extractvalue { i32, i32, i32, i32 } %empty_112, 0" [BlockMatrix_design.cpp:23]   --->   Operation 23 'extractvalue' 'tmp_a_1_01_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_a_1_12_i_i_i = extractvalue { i32, i32, i32, i32 } %empty_112, 1" [BlockMatrix_design.cpp:23]   --->   Operation 24 'extractvalue' 'tmp_a_1_12_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_a_1_23_i_i_i = extractvalue { i32, i32, i32, i32 } %empty_112, 2" [BlockMatrix_design.cpp:23]   --->   Operation 25 'extractvalue' 'tmp_a_1_23_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_a_1_34_i_i_i = extractvalue { i32, i32, i32, i32 } %empty_112, 3" [BlockMatrix_design.cpp:23]   --->   Operation 26 'extractvalue' 'tmp_a_1_34_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (3.63ns)   --->   "%A_0_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* @A_0)" [BlockMatrix_design.cpp:27]   --->   Operation 27 'read' 'A_0_read' <Predicate = (!icmp_ln22)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 28 [1/1] (3.63ns)   --->   "%A_1_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* @A_1)" [BlockMatrix_design.cpp:27]   --->   Operation 28 'read' 'A_1_read' <Predicate = (!icmp_ln22)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 29 [1/1] (3.63ns)   --->   "%A_2_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* @A_2)" [BlockMatrix_design.cpp:27]   --->   Operation 29 'read' 'A_2_read' <Predicate = (!icmp_ln22)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_3 : Operation 30 [1/1] (3.63ns)   --->   "%A_3_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* @A_3)" [BlockMatrix_design.cpp:27]   --->   Operation 30 'read' 'A_3_read' <Predicate = (!icmp_ln22)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>

State 4 <SV = 3> <Delay = 8.51>
ST_4 : Operation 31 [1/1] (8.51ns)   --->   "%mul_ln27 = mul nsw i32 %tmp_a_1_01_i_i_i, %A_0_read" [BlockMatrix_design.cpp:27]   --->   Operation 31 'mul' 'mul_ln27' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 32 [1/1] (8.51ns)   --->   "%mul_ln27_1 = mul nsw i32 %tmp_a_1_12_i_i_i, %A_0_read" [BlockMatrix_design.cpp:27]   --->   Operation 32 'mul' 'mul_ln27_1' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 33 [1/1] (8.51ns)   --->   "%mul_ln27_2 = mul nsw i32 %tmp_a_1_23_i_i_i, %A_0_read" [BlockMatrix_design.cpp:27]   --->   Operation 33 'mul' 'mul_ln27_2' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (8.51ns)   --->   "%mul_ln27_3 = mul nsw i32 %tmp_a_1_34_i_i_i, %A_0_read" [BlockMatrix_design.cpp:27]   --->   Operation 34 'mul' 'mul_ln27_3' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (8.51ns)   --->   "%mul_ln27_4 = mul nsw i32 %tmp_a_1_34_i_i_i, %A_1_read" [BlockMatrix_design.cpp:27]   --->   Operation 35 'mul' 'mul_ln27_4' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (8.51ns)   --->   "%mul_ln27_5 = mul nsw i32 %tmp_a_1_23_i_i_i, %A_1_read" [BlockMatrix_design.cpp:27]   --->   Operation 36 'mul' 'mul_ln27_5' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 37 [1/1] (8.51ns)   --->   "%mul_ln27_6 = mul nsw i32 %tmp_a_1_12_i_i_i, %A_1_read" [BlockMatrix_design.cpp:27]   --->   Operation 37 'mul' 'mul_ln27_6' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 38 [1/1] (8.51ns)   --->   "%mul_ln27_7 = mul nsw i32 %tmp_a_1_01_i_i_i, %A_1_read" [BlockMatrix_design.cpp:27]   --->   Operation 38 'mul' 'mul_ln27_7' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 39 [1/1] (8.51ns)   --->   "%mul_ln27_8 = mul nsw i32 %tmp_a_1_34_i_i_i, %A_2_read" [BlockMatrix_design.cpp:27]   --->   Operation 39 'mul' 'mul_ln27_8' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (8.51ns)   --->   "%mul_ln27_9 = mul nsw i32 %tmp_a_1_23_i_i_i, %A_2_read" [BlockMatrix_design.cpp:27]   --->   Operation 40 'mul' 'mul_ln27_9' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (8.51ns)   --->   "%mul_ln27_10 = mul nsw i32 %tmp_a_1_12_i_i_i, %A_2_read" [BlockMatrix_design.cpp:27]   --->   Operation 41 'mul' 'mul_ln27_10' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (8.51ns)   --->   "%mul_ln27_11 = mul nsw i32 %tmp_a_1_01_i_i_i, %A_2_read" [BlockMatrix_design.cpp:27]   --->   Operation 42 'mul' 'mul_ln27_11' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (8.51ns)   --->   "%mul_ln27_12 = mul nsw i32 %tmp_a_1_34_i_i_i, %A_3_read" [BlockMatrix_design.cpp:27]   --->   Operation 43 'mul' 'mul_ln27_12' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (8.51ns)   --->   "%mul_ln27_13 = mul nsw i32 %tmp_a_1_23_i_i_i, %A_3_read" [BlockMatrix_design.cpp:27]   --->   Operation 44 'mul' 'mul_ln27_13' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (8.51ns)   --->   "%mul_ln27_14 = mul nsw i32 %tmp_a_1_12_i_i_i, %A_3_read" [BlockMatrix_design.cpp:27]   --->   Operation 45 'mul' 'mul_ln27_14' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (8.51ns)   --->   "%mul_ln27_15 = mul nsw i32 %tmp_a_1_01_i_i_i, %A_3_read" [BlockMatrix_design.cpp:27]   --->   Operation 46 'mul' 'mul_ln27_15' <Predicate = (!icmp_ln22)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 2.55>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str4) nounwind" [BlockMatrix_design.cpp:22]   --->   Operation 47 'specloopname' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_4_i_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str4)" [BlockMatrix_design.cpp:22]   --->   Operation 48 'specregionbegin' 'tmp_4_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [BlockMatrix_design.cpp:24]   --->   Operation 49 'specpipeline' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln27 = trunc i512 %AB_2_loc_0_i to i32" [BlockMatrix_design.cpp:27]   --->   Operation 50 'trunc' 'trunc_ln27' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (2.55ns)   --->   "%add_ln27 = add nsw i32 %mul_ln27, %trunc_ln27" [BlockMatrix_design.cpp:27]   --->   Operation 51 'add' 'add_ln27' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_10_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 128, i32 159)" [BlockMatrix_design.cpp:27]   --->   Operation 52 'partselect' 'tmp_10_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (2.55ns)   --->   "%add_ln27_1 = add nsw i32 %mul_ln27_1, %tmp_10_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 53 'add' 'add_ln27_1' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_14_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 256, i32 287)" [BlockMatrix_design.cpp:27]   --->   Operation 54 'partselect' 'tmp_14_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (2.55ns)   --->   "%add_ln27_2 = add nsw i32 %mul_ln27_2, %tmp_14_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 55 'add' 'add_ln27_2' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_18_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 384, i32 415)" [BlockMatrix_design.cpp:27]   --->   Operation 56 'partselect' 'tmp_18_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (2.55ns)   --->   "%add_ln27_3 = add nsw i32 %mul_ln27_3, %tmp_18_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 57 'add' 'add_ln27_3' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_22_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 32, i32 63)" [BlockMatrix_design.cpp:27]   --->   Operation 58 'partselect' 'tmp_22_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (2.55ns)   --->   "%add_ln27_4 = add nsw i32 %mul_ln27_7, %tmp_22_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 59 'add' 'add_ln27_4' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_26_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 160, i32 191)" [BlockMatrix_design.cpp:27]   --->   Operation 60 'partselect' 'tmp_26_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (2.55ns)   --->   "%add_ln27_5 = add nsw i32 %mul_ln27_6, %tmp_26_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 61 'add' 'add_ln27_5' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_30_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 288, i32 319)" [BlockMatrix_design.cpp:27]   --->   Operation 62 'partselect' 'tmp_30_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (2.55ns)   --->   "%add_ln27_6 = add nsw i32 %mul_ln27_5, %tmp_30_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 63 'add' 'add_ln27_6' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_34_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 416, i32 447)" [BlockMatrix_design.cpp:27]   --->   Operation 64 'partselect' 'tmp_34_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (2.55ns)   --->   "%add_ln27_7 = add nsw i32 %mul_ln27_4, %tmp_34_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 65 'add' 'add_ln27_7' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_38_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 64, i32 95)" [BlockMatrix_design.cpp:27]   --->   Operation 66 'partselect' 'tmp_38_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (2.55ns)   --->   "%add_ln27_8 = add nsw i32 %mul_ln27_11, %tmp_38_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 67 'add' 'add_ln27_8' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_42_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 192, i32 223)" [BlockMatrix_design.cpp:27]   --->   Operation 68 'partselect' 'tmp_42_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (2.55ns)   --->   "%add_ln27_9 = add nsw i32 %mul_ln27_10, %tmp_42_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 69 'add' 'add_ln27_9' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_46_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 320, i32 351)" [BlockMatrix_design.cpp:27]   --->   Operation 70 'partselect' 'tmp_46_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (2.55ns)   --->   "%add_ln27_10 = add nsw i32 %mul_ln27_9, %tmp_46_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 71 'add' 'add_ln27_10' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_50_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 448, i32 479)" [BlockMatrix_design.cpp:27]   --->   Operation 72 'partselect' 'tmp_50_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (2.55ns)   --->   "%add_ln27_11 = add nsw i32 %mul_ln27_8, %tmp_50_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 73 'add' 'add_ln27_11' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_54_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 96, i32 127)" [BlockMatrix_design.cpp:27]   --->   Operation 74 'partselect' 'tmp_54_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (2.55ns)   --->   "%add_ln27_12 = add nsw i32 %mul_ln27_15, %tmp_54_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 75 'add' 'add_ln27_12' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_58_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 224, i32 255)" [BlockMatrix_design.cpp:27]   --->   Operation 76 'partselect' 'tmp_58_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (2.55ns)   --->   "%add_ln27_13 = add nsw i32 %mul_ln27_14, %tmp_58_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 77 'add' 'add_ln27_13' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_62_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 352, i32 383)" [BlockMatrix_design.cpp:27]   --->   Operation 78 'partselect' 'tmp_62_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (2.55ns)   --->   "%add_ln27_14 = add nsw i32 %mul_ln27_13, %tmp_62_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 79 'add' 'add_ln27_14' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_66_i_i_i = call i32 @_ssdm_op_PartSelect.i32.i512.i32.i32(i512 %AB_2_loc_0_i, i32 480, i32 511)" [BlockMatrix_design.cpp:27]   --->   Operation 80 'partselect' 'tmp_66_i_i_i' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (2.55ns)   --->   "%add_ln27_15 = add nsw i32 %mul_ln27_12, %tmp_66_i_i_i" [BlockMatrix_design.cpp:27]   --->   Operation 81 'add' 'add_ln27_15' <Predicate = (!icmp_ln22)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%AB = call i512 @_ssdm_op_BitConcatenate.i512.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32(i32 %add_ln27_15, i32 %add_ln27_11, i32 %add_ln27_7, i32 %add_ln27_3, i32 %add_ln27_14, i32 %add_ln27_10, i32 %add_ln27_6, i32 %add_ln27_2, i32 %add_ln27_13, i32 %add_ln27_9, i32 %add_ln27_5, i32 %add_ln27_1, i32 %add_ln27_12, i32 %add_ln27_8, i32 %add_ln27_4, i32 %add_ln27)" [BlockMatrix_design.cpp:27]   --->   Operation 82 'bitconcatenate' 'AB' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%empty_113 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str4, i32 %tmp_4_i_i_i)" [BlockMatrix_design.cpp:30]   --->   Operation 83 'specregionend' 'empty_113' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "br label %0" [BlockMatrix_design.cpp:22]   --->   Operation 84 'br' <Predicate = (!icmp_ln22)> <Delay = 0.00>

State 6 <SV = 2> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "ret i512 %AB_2_loc_0_i" [BlockMatrix_design.cpp:27]   --->   Operation 85 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('AB') with incoming values : ('AB', BlockMatrix_design.cpp:27) [20]  (1.77 ns)

 <State 2>: 1.74ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', BlockMatrix_design.cpp:22) [21]  (0 ns)
	'add' operation ('k', BlockMatrix_design.cpp:22) [24]  (1.74 ns)

 <State 3>: 3.63ns
The critical path consists of the following:
	fifo read on port 'Bcols_V_a_0' (BlockMatrix_design.cpp:23) [29]  (3.63 ns)

 <State 4>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln27', BlockMatrix_design.cpp:27) [37]  (8.51 ns)

 <State 5>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln27', BlockMatrix_design.cpp:27) [38]  (2.55 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
