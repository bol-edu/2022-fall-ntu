

================================================================
== Vivado HLS Report for 'Loop_writeoutput_pro'
================================================================
* Date:           Wed Oct 19 18:16:22 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        BlockMatrix_multiplication
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.383 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       10|       10| 0.100 us | 0.100 us |   10|   10|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- writeoutput  |        8|        8|         3|          2|          1|     4|    yes   |
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read_1 = call i512 @_ssdm_op_Read.ap_auto.i512(i512 %p_read)"   --->   Operation 6 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (1.76ns)   --->   "br label %.preheader.i"   --->   Operation 7 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.38>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%i3_0_i = phi i3 [ %i, %writeoutput ], [ 0, %entry ]"   --->   Operation 8 'phi' 'i3_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (1.13ns)   --->   "%icmp_ln32 = icmp eq i3 %i3_0_i, -4" [BlockMatrix_design.cpp:32]   --->   Operation 9 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 10 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (1.65ns)   --->   "%i = add i3 %i3_0_i, 1" [BlockMatrix_design.cpp:32]   --->   Operation 11 'add' 'i' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "br i1 %icmp_ln32, label %Loop_writeoutput_proc.exit, label %writeoutput" [BlockMatrix_design.cpp:32]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i3_0_i, i2 0)" [BlockMatrix_design.cpp:34]   --->   Operation 13 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34)   --->   "%trunc_ln34 = trunc i512 %p_read_1 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 14 'trunc' 'trunc_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%empty_101 = trunc i3 %i3_0_i to i2" [BlockMatrix_design.cpp:32]   --->   Operation 15 'trunc' 'empty_101' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_5 = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 %empty_101, i5 0)" [BlockMatrix_design.cpp:32]   --->   Operation 16 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty_102 = or i7 %tmp_5, 31" [BlockMatrix_design.cpp:32]   --->   Operation 17 'or' 'empty_102' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.48ns)   --->   "%icmp_ln34 = icmp ugt i7 %tmp_5, %empty_102" [BlockMatrix_design.cpp:34]   --->   Operation 18 'icmp' 'icmp_ln34' <Predicate = (!icmp_ln32)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln34_1 = zext i7 %tmp_5 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 19 'zext' 'zext_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln34_2 = zext i7 %empty_102 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 20 'zext' 'zext_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34)   --->   "%tmp_4 = call i128 @_ssdm_op_PartSelect.i128.i512.i32.i32(i512 %p_read_1, i32 127, i32 0)" [BlockMatrix_design.cpp:34]   --->   Operation 21 'partselect' 'tmp_4' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.87ns)   --->   "%sub_ln34 = sub i8 %zext_ln34_1, %zext_ln34_2" [BlockMatrix_design.cpp:34]   --->   Operation 22 'sub' 'sub_ln34' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34)   --->   "%xor_ln34 = xor i8 %zext_ln34_1, 127" [BlockMatrix_design.cpp:34]   --->   Operation 23 'xor' 'xor_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.87ns)   --->   "%sub_ln34_1 = sub i8 %zext_ln34_2, %zext_ln34_1" [BlockMatrix_design.cpp:34]   --->   Operation 24 'sub' 'sub_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_2)   --->   "%select_ln34 = select i1 %icmp_ln34, i8 %sub_ln34, i8 %sub_ln34_1" [BlockMatrix_design.cpp:34]   --->   Operation 25 'select' 'select_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34)   --->   "%select_ln34_1 = select i1 %icmp_ln34, i128 %tmp_4, i128 %trunc_ln34" [BlockMatrix_design.cpp:34]   --->   Operation 26 'select' 'select_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34)   --->   "%select_ln34_2 = select i1 %icmp_ln34, i8 %xor_ln34, i8 %zext_ln34_1" [BlockMatrix_design.cpp:34]   --->   Operation 27 'select' 'select_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (1.91ns) (out node of the LUT)   --->   "%sub_ln34_2 = sub i8 127, %select_ln34" [BlockMatrix_design.cpp:34]   --->   Operation 28 'sub' 'sub_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34)   --->   "%zext_ln34_3 = zext i8 %select_ln34_2 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 29 'zext' 'zext_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (4.89ns) (out node of the LUT)   --->   "%lshr_ln34 = lshr i128 %select_ln34_1, %zext_ln34_3" [BlockMatrix_design.cpp:34]   --->   Operation 30 'lshr' 'lshr_ln34' <Predicate = (!icmp_ln32)> <Delay = 4.89> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_2)   --->   "%tmp_72_i = call i128 @_ssdm_op_PartSelect.i128.i512.i32.i32(i512 %p_read_1, i32 128, i32 255)" [BlockMatrix_design.cpp:34]   --->   Operation 31 'partselect' 'tmp_72_i' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.48ns)   --->   "%icmp_ln34_1 = icmp ugt i7 %tmp_5, %empty_102" [BlockMatrix_design.cpp:34]   --->   Operation 32 'icmp' 'icmp_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln34_5 = zext i7 %tmp_5 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 33 'zext' 'zext_ln34_5' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln34_6 = zext i7 %empty_102 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 34 'zext' 'zext_ln34_6' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_2)   --->   "%tmp_6 = call i128 @_ssdm_op_PartSelect.i128.i512.i32.i32(i512 %p_read_1, i32 255, i32 128)" [BlockMatrix_design.cpp:34]   --->   Operation 35 'partselect' 'tmp_6' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.87ns)   --->   "%sub_ln34_3 = sub i8 %zext_ln34_5, %zext_ln34_6" [BlockMatrix_design.cpp:34]   --->   Operation 36 'sub' 'sub_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_2)   --->   "%xor_ln34_1 = xor i8 %zext_ln34_5, 127" [BlockMatrix_design.cpp:34]   --->   Operation 37 'xor' 'xor_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.87ns)   --->   "%sub_ln34_4 = sub i8 %zext_ln34_6, %zext_ln34_5" [BlockMatrix_design.cpp:34]   --->   Operation 38 'sub' 'sub_ln34_4' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_5)   --->   "%select_ln34_3 = select i1 %icmp_ln34_1, i8 %sub_ln34_3, i8 %sub_ln34_4" [BlockMatrix_design.cpp:34]   --->   Operation 39 'select' 'select_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_2)   --->   "%select_ln34_4 = select i1 %icmp_ln34_1, i128 %tmp_6, i128 %tmp_72_i" [BlockMatrix_design.cpp:34]   --->   Operation 40 'select' 'select_ln34_4' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_2)   --->   "%select_ln34_5 = select i1 %icmp_ln34_1, i8 %xor_ln34_1, i8 %zext_ln34_5" [BlockMatrix_design.cpp:34]   --->   Operation 41 'select' 'select_ln34_5' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.91ns) (out node of the LUT)   --->   "%sub_ln34_5 = sub i8 127, %select_ln34_3" [BlockMatrix_design.cpp:34]   --->   Operation 42 'sub' 'sub_ln34_5' <Predicate = (!icmp_ln32)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_2)   --->   "%zext_ln34_7 = zext i8 %select_ln34_5 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 43 'zext' 'zext_ln34_7' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (4.89ns) (out node of the LUT)   --->   "%lshr_ln34_2 = lshr i128 %select_ln34_4, %zext_ln34_7" [BlockMatrix_design.cpp:34]   --->   Operation 44 'lshr' 'lshr_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 4.89> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_4)   --->   "%tmp_74_i = call i128 @_ssdm_op_PartSelect.i128.i512.i32.i32(i512 %p_read_1, i32 256, i32 383)" [BlockMatrix_design.cpp:34]   --->   Operation 45 'partselect' 'tmp_74_i' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.48ns)   --->   "%icmp_ln34_2 = icmp ugt i7 %tmp_5, %empty_102" [BlockMatrix_design.cpp:34]   --->   Operation 46 'icmp' 'icmp_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln34_9 = zext i7 %tmp_5 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 47 'zext' 'zext_ln34_9' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln34_10 = zext i7 %empty_102 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 48 'zext' 'zext_ln34_10' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_4)   --->   "%tmp_7 = call i128 @_ssdm_op_PartSelect.i128.i512.i32.i32(i512 %p_read_1, i32 383, i32 256)" [BlockMatrix_design.cpp:34]   --->   Operation 49 'partselect' 'tmp_7' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.87ns)   --->   "%sub_ln34_6 = sub i8 %zext_ln34_9, %zext_ln34_10" [BlockMatrix_design.cpp:34]   --->   Operation 50 'sub' 'sub_ln34_6' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_4)   --->   "%xor_ln34_2 = xor i8 %zext_ln34_9, 127" [BlockMatrix_design.cpp:34]   --->   Operation 51 'xor' 'xor_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.87ns)   --->   "%sub_ln34_7 = sub i8 %zext_ln34_10, %zext_ln34_9" [BlockMatrix_design.cpp:34]   --->   Operation 52 'sub' 'sub_ln34_7' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_8)   --->   "%select_ln34_6 = select i1 %icmp_ln34_2, i8 %sub_ln34_6, i8 %sub_ln34_7" [BlockMatrix_design.cpp:34]   --->   Operation 53 'select' 'select_ln34_6' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_4)   --->   "%select_ln34_7 = select i1 %icmp_ln34_2, i128 %tmp_7, i128 %tmp_74_i" [BlockMatrix_design.cpp:34]   --->   Operation 54 'select' 'select_ln34_7' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_4)   --->   "%select_ln34_8 = select i1 %icmp_ln34_2, i8 %xor_ln34_2, i8 %zext_ln34_9" [BlockMatrix_design.cpp:34]   --->   Operation 55 'select' 'select_ln34_8' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.91ns) (out node of the LUT)   --->   "%sub_ln34_8 = sub i8 127, %select_ln34_6" [BlockMatrix_design.cpp:34]   --->   Operation 56 'sub' 'sub_ln34_8' <Predicate = (!icmp_ln32)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_4)   --->   "%zext_ln34_11 = zext i8 %select_ln34_8 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 57 'zext' 'zext_ln34_11' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (4.89ns) (out node of the LUT)   --->   "%lshr_ln34_4 = lshr i128 %select_ln34_7, %zext_ln34_11" [BlockMatrix_design.cpp:34]   --->   Operation 58 'lshr' 'lshr_ln34_4' <Predicate = (!icmp_ln32)> <Delay = 4.89> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_6)   --->   "%tmp_76_i = call i128 @_ssdm_op_PartSelect.i128.i512.i32.i32(i512 %p_read_1, i32 384, i32 511)" [BlockMatrix_design.cpp:34]   --->   Operation 59 'partselect' 'tmp_76_i' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (1.48ns)   --->   "%icmp_ln34_3 = icmp ugt i7 %tmp_5, %empty_102" [BlockMatrix_design.cpp:34]   --->   Operation 60 'icmp' 'icmp_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln34_13 = zext i7 %tmp_5 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 61 'zext' 'zext_ln34_13' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln34_14 = zext i7 %empty_102 to i8" [BlockMatrix_design.cpp:34]   --->   Operation 62 'zext' 'zext_ln34_14' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_6)   --->   "%tmp_8 = call i128 @_ssdm_op_PartSelect.i128.i512.i32.i32(i512 %p_read_1, i32 511, i32 384)" [BlockMatrix_design.cpp:34]   --->   Operation 63 'partselect' 'tmp_8' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.87ns)   --->   "%sub_ln34_9 = sub i8 %zext_ln34_13, %zext_ln34_14" [BlockMatrix_design.cpp:34]   --->   Operation 64 'sub' 'sub_ln34_9' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_6)   --->   "%xor_ln34_3 = xor i8 %zext_ln34_13, 127" [BlockMatrix_design.cpp:34]   --->   Operation 65 'xor' 'xor_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (1.87ns)   --->   "%sub_ln34_10 = sub i8 %zext_ln34_14, %zext_ln34_13" [BlockMatrix_design.cpp:34]   --->   Operation 66 'sub' 'sub_ln34_10' <Predicate = (!icmp_ln32)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node sub_ln34_11)   --->   "%select_ln34_9 = select i1 %icmp_ln34_3, i8 %sub_ln34_9, i8 %sub_ln34_10" [BlockMatrix_design.cpp:34]   --->   Operation 67 'select' 'select_ln34_9' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_6)   --->   "%select_ln34_10 = select i1 %icmp_ln34_3, i128 %tmp_8, i128 %tmp_76_i" [BlockMatrix_design.cpp:34]   --->   Operation 68 'select' 'select_ln34_10' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_6)   --->   "%select_ln34_11 = select i1 %icmp_ln34_3, i8 %xor_ln34_3, i8 %zext_ln34_13" [BlockMatrix_design.cpp:34]   --->   Operation 69 'select' 'select_ln34_11' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (1.91ns) (out node of the LUT)   --->   "%sub_ln34_11 = sub i8 127, %select_ln34_9" [BlockMatrix_design.cpp:34]   --->   Operation 70 'sub' 'sub_ln34_11' <Predicate = (!icmp_ln32)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln34_6)   --->   "%zext_ln34_15 = zext i8 %select_ln34_11 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 71 'zext' 'zext_ln34_15' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (4.89ns) (out node of the LUT)   --->   "%lshr_ln34_6 = lshr i128 %select_ln34_10, %zext_ln34_15" [BlockMatrix_design.cpp:34]   --->   Operation 72 'lshr' 'lshr_ln34_6' <Predicate = (!icmp_ln32)> <Delay = 4.89> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.47>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i5 %tmp to i64" [BlockMatrix_design.cpp:34]   --->   Operation 73 'zext' 'zext_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%ABpartial_out_addr = getelementptr [16 x i32]* %ABpartial_out, i64 0, i64 %zext_ln34" [BlockMatrix_design.cpp:34]   --->   Operation 74 'getelementptr' 'ABpartial_out_addr' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%or_ln34 = or i5 %tmp, 1" [BlockMatrix_design.cpp:34]   --->   Operation 75 'or' 'or_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_1 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln34)" [BlockMatrix_design.cpp:34]   --->   Operation 76 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%ABpartial_out_addr_1 = getelementptr [16 x i32]* %ABpartial_out, i64 0, i64 %tmp_1" [BlockMatrix_design.cpp:34]   --->   Operation 77 'getelementptr' 'ABpartial_out_addr_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node and_ln34)   --->   "%zext_ln34_4 = zext i8 %sub_ln34_2 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 78 'zext' 'zext_ln34_4' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node and_ln34)   --->   "%lshr_ln34_1 = lshr i128 -1, %zext_ln34_4" [BlockMatrix_design.cpp:34]   --->   Operation 79 'lshr' 'lshr_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (3.14ns) (out node of the LUT)   --->   "%and_ln34 = and i128 %lshr_ln34, %lshr_ln34_1" [BlockMatrix_design.cpp:34]   --->   Operation 80 'and' 'and_ln34' <Predicate = (!icmp_ln32)> <Delay = 3.14> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln34_1 = trunc i128 %and_ln34 to i32" [BlockMatrix_design.cpp:34]   --->   Operation 81 'trunc' 'trunc_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (2.32ns)   --->   "store i32 %trunc_ln34_1, i32* %ABpartial_out_addr, align 4" [BlockMatrix_design.cpp:34]   --->   Operation 82 'store' <Predicate = (!icmp_ln32)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node and_ln34_1)   --->   "%zext_ln34_8 = zext i8 %sub_ln34_5 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 83 'zext' 'zext_ln34_8' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node and_ln34_1)   --->   "%lshr_ln34_3 = lshr i128 -1, %zext_ln34_8" [BlockMatrix_design.cpp:34]   --->   Operation 84 'lshr' 'lshr_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (3.14ns) (out node of the LUT)   --->   "%and_ln34_1 = and i128 %lshr_ln34_2, %lshr_ln34_3" [BlockMatrix_design.cpp:34]   --->   Operation 85 'and' 'and_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 3.14> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln34_2 = trunc i128 %and_ln34_1 to i32" [BlockMatrix_design.cpp:34]   --->   Operation 86 'trunc' 'trunc_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (2.32ns)   --->   "store i32 %trunc_ln34_2, i32* %ABpartial_out_addr_1, align 4" [BlockMatrix_design.cpp:34]   --->   Operation 87 'store' <Predicate = (!icmp_ln32)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node and_ln34_2)   --->   "%zext_ln34_12 = zext i8 %sub_ln34_8 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 88 'zext' 'zext_ln34_12' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node and_ln34_2)   --->   "%lshr_ln34_5 = lshr i128 -1, %zext_ln34_12" [BlockMatrix_design.cpp:34]   --->   Operation 89 'lshr' 'lshr_ln34_5' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (3.14ns) (out node of the LUT)   --->   "%and_ln34_2 = and i128 %lshr_ln34_4, %lshr_ln34_5" [BlockMatrix_design.cpp:34]   --->   Operation 90 'and' 'and_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 3.14> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%trunc_ln34_3 = trunc i128 %and_ln34_2 to i32" [BlockMatrix_design.cpp:34]   --->   Operation 91 'trunc' 'trunc_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node and_ln34_3)   --->   "%zext_ln34_16 = zext i8 %sub_ln34_11 to i128" [BlockMatrix_design.cpp:34]   --->   Operation 92 'zext' 'zext_ln34_16' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln34_3)   --->   "%lshr_ln34_7 = lshr i128 -1, %zext_ln34_16" [BlockMatrix_design.cpp:34]   --->   Operation 93 'lshr' 'lshr_ln34_7' <Predicate = (!icmp_ln32)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.14> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (3.14ns) (out node of the LUT)   --->   "%and_ln34_3 = and i128 %lshr_ln34_6, %lshr_ln34_7" [BlockMatrix_design.cpp:34]   --->   Operation 94 'and' 'and_ln34_3' <Predicate = (!icmp_ln32)> <Delay = 3.14> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln34_4 = trunc i128 %and_ln34_3 to i32" [BlockMatrix_design.cpp:34]   --->   Operation 95 'trunc' 'trunc_ln34_4' <Predicate = (!icmp_ln32)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.32>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str7) nounwind" [BlockMatrix_design.cpp:32]   --->   Operation 96 'specloopname' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_69_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)" [BlockMatrix_design.cpp:32]   --->   Operation 97 'specregionbegin' 'tmp_69_i' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [BlockMatrix_design.cpp:33]   --->   Operation 98 'specpipeline' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%or_ln34_1 = or i5 %tmp, 2" [BlockMatrix_design.cpp:34]   --->   Operation 99 'or' 'or_ln34_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln34_1)" [BlockMatrix_design.cpp:34]   --->   Operation 100 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%ABpartial_out_addr_2 = getelementptr [16 x i32]* %ABpartial_out, i64 0, i64 %tmp_2" [BlockMatrix_design.cpp:34]   --->   Operation 101 'getelementptr' 'ABpartial_out_addr_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%or_ln34_2 = or i5 %tmp, 3" [BlockMatrix_design.cpp:34]   --->   Operation 102 'or' 'or_ln34_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_3 = call i64 @_ssdm_op_BitConcatenate.i64.i59.i5(i59 0, i5 %or_ln34_2)" [BlockMatrix_design.cpp:34]   --->   Operation 103 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%ABpartial_out_addr_3 = getelementptr [16 x i32]* %ABpartial_out, i64 0, i64 %tmp_3" [BlockMatrix_design.cpp:34]   --->   Operation 104 'getelementptr' 'ABpartial_out_addr_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (2.32ns)   --->   "store i32 %trunc_ln34_3, i32* %ABpartial_out_addr_2, align 4" [BlockMatrix_design.cpp:34]   --->   Operation 105 'store' <Predicate = (!icmp_ln32)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 106 [1/1] (2.32ns)   --->   "store i32 %trunc_ln34_4, i32* %ABpartial_out_addr_3, align 4" [BlockMatrix_design.cpp:34]   --->   Operation 106 'store' <Predicate = (!icmp_ln32)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%empty_103 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_69_i)" [BlockMatrix_design.cpp:36]   --->   Operation 107 'specregionend' 'empty_103' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "br label %.preheader.i" [BlockMatrix_design.cpp:32]   --->   Operation 108 'br' <Predicate = (!icmp_ln32)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 109 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', BlockMatrix_design.cpp:32) [6]  (1.77 ns)

 <State 2>: 6.38ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', BlockMatrix_design.cpp:32) [6]  (0 ns)
	'icmp' operation ('icmp_ln34', BlockMatrix_design.cpp:34) [31]  (1.49 ns)
	'select' operation ('select_ln34_1', BlockMatrix_design.cpp:34) [39]  (0 ns)
	'lshr' operation ('lshr_ln34', BlockMatrix_design.cpp:34) [44]  (4.89 ns)

 <State 3>: 5.47ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln34_1', BlockMatrix_design.cpp:34) [45]  (0 ns)
	'and' operation ('and_ln34', BlockMatrix_design.cpp:34) [46]  (3.15 ns)
	'store' operation ('store_ln34', BlockMatrix_design.cpp:34) of variable 'trunc_ln34_1', BlockMatrix_design.cpp:34 on array 'ABpartial_out' [48]  (2.32 ns)

 <State 4>: 2.32ns
The critical path consists of the following:
	'or' operation ('or_ln34_1', BlockMatrix_design.cpp:34) [21]  (0 ns)
	'getelementptr' operation ('ABpartial_out_addr_2', BlockMatrix_design.cpp:34) [23]  (0 ns)
	'store' operation ('store_ln34', BlockMatrix_design.cpp:34) of variable 'trunc_ln34_3', BlockMatrix_design.cpp:34 on array 'ABpartial_out' [86]  (2.32 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
