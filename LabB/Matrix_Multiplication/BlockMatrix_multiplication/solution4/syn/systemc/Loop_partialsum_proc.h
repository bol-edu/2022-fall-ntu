// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_partialsum_proc_HH_
#define _Loop_partialsum_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_partialsum_proc : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > Bcols_V_a_0_dout;
    sc_in< sc_logic > Bcols_V_a_0_empty_n;
    sc_out< sc_logic > Bcols_V_a_0_read;
    sc_in< sc_lv<32> > Bcols_V_a_1_dout;
    sc_in< sc_logic > Bcols_V_a_1_empty_n;
    sc_out< sc_logic > Bcols_V_a_1_read;
    sc_in< sc_lv<32> > Bcols_V_a_2_dout;
    sc_in< sc_logic > Bcols_V_a_2_empty_n;
    sc_out< sc_logic > Bcols_V_a_2_read;
    sc_in< sc_lv<32> > Bcols_V_a_3_dout;
    sc_in< sc_logic > Bcols_V_a_3_empty_n;
    sc_out< sc_logic > Bcols_V_a_3_read;
    sc_in< sc_lv<32> > A_0_dout;
    sc_in< sc_logic > A_0_empty_n;
    sc_out< sc_logic > A_0_read;
    sc_in< sc_lv<32> > A_1_dout;
    sc_in< sc_logic > A_1_empty_n;
    sc_out< sc_logic > A_1_read;
    sc_in< sc_lv<32> > A_2_dout;
    sc_in< sc_logic > A_2_empty_n;
    sc_out< sc_logic > A_2_read;
    sc_in< sc_lv<32> > A_3_dout;
    sc_in< sc_logic > A_3_empty_n;
    sc_out< sc_logic > A_3_read;
    sc_out< sc_lv<512> > ap_return;


    // Module declarations
    Loop_partialsum_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_partialsum_proc);

    ~Loop_partialsum_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > Bcols_V_a_0_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln22_reg_543;
    sc_signal< sc_logic > Bcols_V_a_1_blk_n;
    sc_signal< sc_logic > Bcols_V_a_2_blk_n;
    sc_signal< sc_logic > Bcols_V_a_3_blk_n;
    sc_signal< sc_logic > A_0_blk_n;
    sc_signal< sc_logic > A_1_blk_n;
    sc_signal< sc_logic > A_2_blk_n;
    sc_signal< sc_logic > A_3_blk_n;
    sc_signal< sc_lv<512> > AB_2_loc_0_i_reg_158;
    sc_signal< sc_lv<4> > k_0_i_i_i_reg_170;
    sc_signal< sc_lv<1> > icmp_ln22_fu_181_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op22;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln22_reg_543_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln22_reg_543_pp0_iter2_reg;
    sc_signal< sc_lv<4> > k_fu_187_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > tmp_a_1_01_i_i_i_reg_552;
    sc_signal< sc_lv<32> > tmp_a_1_12_i_i_i_reg_560;
    sc_signal< sc_lv<32> > tmp_a_1_23_i_i_i_reg_568;
    sc_signal< sc_lv<32> > tmp_a_1_34_i_i_i_reg_576;
    sc_signal< sc_lv<32> > A_0_read_reg_584;
    sc_signal< sc_lv<32> > A_1_read_reg_592;
    sc_signal< sc_lv<32> > A_2_read_reg_600;
    sc_signal< sc_lv<32> > A_3_read_reg_608;
    sc_signal< sc_lv<32> > mul_ln27_fu_209_p2;
    sc_signal< sc_lv<32> > mul_ln27_reg_616;
    sc_signal< sc_lv<32> > mul_ln27_1_fu_213_p2;
    sc_signal< sc_lv<32> > mul_ln27_1_reg_621;
    sc_signal< sc_lv<32> > mul_ln27_2_fu_217_p2;
    sc_signal< sc_lv<32> > mul_ln27_2_reg_626;
    sc_signal< sc_lv<32> > mul_ln27_3_fu_221_p2;
    sc_signal< sc_lv<32> > mul_ln27_3_reg_631;
    sc_signal< sc_lv<32> > mul_ln27_4_fu_225_p2;
    sc_signal< sc_lv<32> > mul_ln27_4_reg_636;
    sc_signal< sc_lv<32> > mul_ln27_5_fu_229_p2;
    sc_signal< sc_lv<32> > mul_ln27_5_reg_641;
    sc_signal< sc_lv<32> > mul_ln27_6_fu_233_p2;
    sc_signal< sc_lv<32> > mul_ln27_6_reg_646;
    sc_signal< sc_lv<32> > mul_ln27_7_fu_237_p2;
    sc_signal< sc_lv<32> > mul_ln27_7_reg_651;
    sc_signal< sc_lv<32> > mul_ln27_8_fu_241_p2;
    sc_signal< sc_lv<32> > mul_ln27_8_reg_656;
    sc_signal< sc_lv<32> > mul_ln27_9_fu_245_p2;
    sc_signal< sc_lv<32> > mul_ln27_9_reg_661;
    sc_signal< sc_lv<32> > mul_ln27_10_fu_249_p2;
    sc_signal< sc_lv<32> > mul_ln27_10_reg_666;
    sc_signal< sc_lv<32> > mul_ln27_11_fu_253_p2;
    sc_signal< sc_lv<32> > mul_ln27_11_reg_671;
    sc_signal< sc_lv<32> > mul_ln27_12_fu_257_p2;
    sc_signal< sc_lv<32> > mul_ln27_12_reg_676;
    sc_signal< sc_lv<32> > mul_ln27_13_fu_261_p2;
    sc_signal< sc_lv<32> > mul_ln27_13_reg_681;
    sc_signal< sc_lv<32> > mul_ln27_14_fu_265_p2;
    sc_signal< sc_lv<32> > mul_ln27_14_reg_686;
    sc_signal< sc_lv<32> > mul_ln27_15_fu_269_p2;
    sc_signal< sc_lv<32> > mul_ln27_15_reg_691;
    sc_signal< sc_lv<512> > AB_fu_507_p17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<32> > trunc_ln27_fu_273_p1;
    sc_signal< sc_lv<32> > tmp_10_i_i_i_fu_282_p4;
    sc_signal< sc_lv<32> > tmp_14_i_i_i_fu_297_p4;
    sc_signal< sc_lv<32> > tmp_18_i_i_i_fu_312_p4;
    sc_signal< sc_lv<32> > tmp_22_i_i_i_fu_327_p4;
    sc_signal< sc_lv<32> > tmp_26_i_i_i_fu_342_p4;
    sc_signal< sc_lv<32> > tmp_30_i_i_i_fu_357_p4;
    sc_signal< sc_lv<32> > tmp_34_i_i_i_fu_372_p4;
    sc_signal< sc_lv<32> > tmp_38_i_i_i_fu_387_p4;
    sc_signal< sc_lv<32> > tmp_42_i_i_i_fu_402_p4;
    sc_signal< sc_lv<32> > tmp_46_i_i_i_fu_417_p4;
    sc_signal< sc_lv<32> > tmp_50_i_i_i_fu_432_p4;
    sc_signal< sc_lv<32> > tmp_54_i_i_i_fu_447_p4;
    sc_signal< sc_lv<32> > tmp_58_i_i_i_fu_462_p4;
    sc_signal< sc_lv<32> > tmp_62_i_i_i_fu_477_p4;
    sc_signal< sc_lv<32> > tmp_66_i_i_i_fu_492_p4;
    sc_signal< sc_lv<32> > add_ln27_15_fu_502_p2;
    sc_signal< sc_lv<32> > add_ln27_11_fu_442_p2;
    sc_signal< sc_lv<32> > add_ln27_7_fu_382_p2;
    sc_signal< sc_lv<32> > add_ln27_3_fu_322_p2;
    sc_signal< sc_lv<32> > add_ln27_14_fu_487_p2;
    sc_signal< sc_lv<32> > add_ln27_10_fu_427_p2;
    sc_signal< sc_lv<32> > add_ln27_6_fu_367_p2;
    sc_signal< sc_lv<32> > add_ln27_2_fu_307_p2;
    sc_signal< sc_lv<32> > add_ln27_13_fu_472_p2;
    sc_signal< sc_lv<32> > add_ln27_9_fu_412_p2;
    sc_signal< sc_lv<32> > add_ln27_5_fu_352_p2;
    sc_signal< sc_lv<32> > add_ln27_1_fu_292_p2;
    sc_signal< sc_lv<32> > add_ln27_12_fu_457_p2;
    sc_signal< sc_lv<32> > add_ln27_8_fu_397_p2;
    sc_signal< sc_lv<32> > add_ln27_4_fu_337_p2;
    sc_signal< sc_lv<32> > add_ln27_fu_277_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AB_fu_507_p17();
    void thread_A_0_blk_n();
    void thread_A_0_read();
    void thread_A_1_blk_n();
    void thread_A_1_read();
    void thread_A_2_blk_n();
    void thread_A_2_read();
    void thread_A_3_blk_n();
    void thread_A_3_read();
    void thread_Bcols_V_a_0_blk_n();
    void thread_Bcols_V_a_0_read();
    void thread_Bcols_V_a_1_blk_n();
    void thread_Bcols_V_a_1_read();
    void thread_Bcols_V_a_2_blk_n();
    void thread_Bcols_V_a_2_read();
    void thread_Bcols_V_a_3_blk_n();
    void thread_Bcols_V_a_3_read();
    void thread_add_ln27_10_fu_427_p2();
    void thread_add_ln27_11_fu_442_p2();
    void thread_add_ln27_12_fu_457_p2();
    void thread_add_ln27_13_fu_472_p2();
    void thread_add_ln27_14_fu_487_p2();
    void thread_add_ln27_15_fu_502_p2();
    void thread_add_ln27_1_fu_292_p2();
    void thread_add_ln27_2_fu_307_p2();
    void thread_add_ln27_3_fu_322_p2();
    void thread_add_ln27_4_fu_337_p2();
    void thread_add_ln27_5_fu_352_p2();
    void thread_add_ln27_6_fu_367_p2();
    void thread_add_ln27_7_fu_382_p2();
    void thread_add_ln27_8_fu_397_p2();
    void thread_add_ln27_9_fu_412_p2();
    void thread_add_ln27_fu_277_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_ln22_fu_181_p2();
    void thread_io_acc_block_signal_op22();
    void thread_k_fu_187_p2();
    void thread_mul_ln27_10_fu_249_p2();
    void thread_mul_ln27_11_fu_253_p2();
    void thread_mul_ln27_12_fu_257_p2();
    void thread_mul_ln27_13_fu_261_p2();
    void thread_mul_ln27_14_fu_265_p2();
    void thread_mul_ln27_15_fu_269_p2();
    void thread_mul_ln27_1_fu_213_p2();
    void thread_mul_ln27_2_fu_217_p2();
    void thread_mul_ln27_3_fu_221_p2();
    void thread_mul_ln27_4_fu_225_p2();
    void thread_mul_ln27_5_fu_229_p2();
    void thread_mul_ln27_6_fu_233_p2();
    void thread_mul_ln27_7_fu_237_p2();
    void thread_mul_ln27_8_fu_241_p2();
    void thread_mul_ln27_9_fu_245_p2();
    void thread_mul_ln27_fu_209_p2();
    void thread_tmp_10_i_i_i_fu_282_p4();
    void thread_tmp_14_i_i_i_fu_297_p4();
    void thread_tmp_18_i_i_i_fu_312_p4();
    void thread_tmp_22_i_i_i_fu_327_p4();
    void thread_tmp_26_i_i_i_fu_342_p4();
    void thread_tmp_30_i_i_i_fu_357_p4();
    void thread_tmp_34_i_i_i_fu_372_p4();
    void thread_tmp_38_i_i_i_fu_387_p4();
    void thread_tmp_42_i_i_i_fu_402_p4();
    void thread_tmp_46_i_i_i_fu_417_p4();
    void thread_tmp_50_i_i_i_fu_432_p4();
    void thread_tmp_54_i_i_i_fu_447_p4();
    void thread_tmp_58_i_i_i_fu_462_p4();
    void thread_tmp_62_i_i_i_fu_477_p4();
    void thread_tmp_66_i_i_i_fu_492_p4();
    void thread_trunc_ln27_fu_273_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
