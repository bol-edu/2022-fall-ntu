// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_writeoutput_pro_HH_
#define _Loop_writeoutput_pro_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_writeoutput_pro : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > p_read;
    sc_out< sc_lv<4> > ABpartial_out_address0;
    sc_out< sc_logic > ABpartial_out_ce0;
    sc_out< sc_logic > ABpartial_out_we0;
    sc_out< sc_lv<32> > ABpartial_out_d0;
    sc_out< sc_lv<4> > ABpartial_out_address1;
    sc_out< sc_logic > ABpartial_out_ce1;
    sc_out< sc_logic > ABpartial_out_we1;
    sc_out< sc_lv<32> > ABpartial_out_d1;


    // Module declarations
    Loop_writeoutput_pro(sc_module_name name);
    SC_HAS_PROCESS(Loop_writeoutput_pro);

    ~Loop_writeoutput_pro();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i3_0_i_reg_123;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln32_fu_134_p2;
    sc_signal< sc_lv<1> > icmp_ln32_reg_658;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > i_fu_140_p2;
    sc_signal< sc_lv<3> > i_reg_662;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > tmp_fu_146_p3;
    sc_signal< sc_lv<5> > tmp_reg_667;
    sc_signal< sc_lv<8> > sub_ln34_2_fu_240_p2;
    sc_signal< sc_lv<8> > sub_ln34_2_reg_675;
    sc_signal< sc_lv<128> > lshr_ln34_fu_250_p2;
    sc_signal< sc_lv<128> > lshr_ln34_reg_680;
    sc_signal< sc_lv<8> > sub_ln34_5_fu_330_p2;
    sc_signal< sc_lv<8> > sub_ln34_5_reg_685;
    sc_signal< sc_lv<128> > lshr_ln34_2_fu_340_p2;
    sc_signal< sc_lv<128> > lshr_ln34_2_reg_690;
    sc_signal< sc_lv<8> > sub_ln34_8_fu_420_p2;
    sc_signal< sc_lv<8> > sub_ln34_8_reg_695;
    sc_signal< sc_lv<128> > lshr_ln34_4_fu_430_p2;
    sc_signal< sc_lv<128> > lshr_ln34_4_reg_700;
    sc_signal< sc_lv<8> > sub_ln34_11_fu_510_p2;
    sc_signal< sc_lv<8> > sub_ln34_11_reg_705;
    sc_signal< sc_lv<128> > lshr_ln34_6_fu_520_p2;
    sc_signal< sc_lv<128> > lshr_ln34_6_reg_710;
    sc_signal< sc_lv<32> > trunc_ln34_3_fu_596_p1;
    sc_signal< sc_lv<32> > trunc_ln34_3_reg_715;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > trunc_ln34_4_fu_614_p1;
    sc_signal< sc_lv<32> > trunc_ln34_4_reg_720;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<3> > ap_phi_mux_i3_0_i_phi_fu_127_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln34_fu_526_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_1_fu_535_p3;
    sc_signal< sc_lv<64> > tmp_2_fu_623_p3;
    sc_signal< sc_lv<64> > tmp_3_fu_637_p3;
    sc_signal< sc_lv<32> > trunc_ln34_1_fu_558_p1;
    sc_signal< sc_lv<32> > trunc_ln34_2_fu_577_p1;
    sc_signal< sc_lv<2> > empty_101_fu_157_p1;
    sc_signal< sc_lv<7> > tmp_5_fu_161_p3;
    sc_signal< sc_lv<7> > empty_102_fu_169_p2;
    sc_signal< sc_lv<8> > zext_ln34_1_fu_181_p1;
    sc_signal< sc_lv<8> > zext_ln34_2_fu_185_p1;
    sc_signal< sc_lv<1> > icmp_ln34_fu_175_p2;
    sc_signal< sc_lv<8> > sub_ln34_fu_198_p2;
    sc_signal< sc_lv<8> > sub_ln34_1_fu_210_p2;
    sc_signal< sc_lv<128> > tmp_4_fu_189_p4;
    sc_signal< sc_lv<128> > trunc_ln34_fu_154_p1;
    sc_signal< sc_lv<8> > xor_ln34_fu_204_p2;
    sc_signal< sc_lv<8> > select_ln34_fu_216_p3;
    sc_signal< sc_lv<8> > select_ln34_2_fu_232_p3;
    sc_signal< sc_lv<128> > select_ln34_1_fu_224_p3;
    sc_signal< sc_lv<128> > zext_ln34_3_fu_246_p1;
    sc_signal< sc_lv<8> > zext_ln34_5_fu_271_p1;
    sc_signal< sc_lv<8> > zext_ln34_6_fu_275_p1;
    sc_signal< sc_lv<1> > icmp_ln34_1_fu_265_p2;
    sc_signal< sc_lv<8> > sub_ln34_3_fu_288_p2;
    sc_signal< sc_lv<8> > sub_ln34_4_fu_300_p2;
    sc_signal< sc_lv<128> > tmp_6_fu_279_p4;
    sc_signal< sc_lv<128> > tmp_72_i_fu_256_p4;
    sc_signal< sc_lv<8> > xor_ln34_1_fu_294_p2;
    sc_signal< sc_lv<8> > select_ln34_3_fu_306_p3;
    sc_signal< sc_lv<8> > select_ln34_5_fu_322_p3;
    sc_signal< sc_lv<128> > select_ln34_4_fu_314_p3;
    sc_signal< sc_lv<128> > zext_ln34_7_fu_336_p1;
    sc_signal< sc_lv<8> > zext_ln34_9_fu_361_p1;
    sc_signal< sc_lv<8> > zext_ln34_10_fu_365_p1;
    sc_signal< sc_lv<1> > icmp_ln34_2_fu_355_p2;
    sc_signal< sc_lv<8> > sub_ln34_6_fu_378_p2;
    sc_signal< sc_lv<8> > sub_ln34_7_fu_390_p2;
    sc_signal< sc_lv<128> > tmp_7_fu_369_p4;
    sc_signal< sc_lv<128> > tmp_74_i_fu_346_p4;
    sc_signal< sc_lv<8> > xor_ln34_2_fu_384_p2;
    sc_signal< sc_lv<8> > select_ln34_6_fu_396_p3;
    sc_signal< sc_lv<8> > select_ln34_8_fu_412_p3;
    sc_signal< sc_lv<128> > select_ln34_7_fu_404_p3;
    sc_signal< sc_lv<128> > zext_ln34_11_fu_426_p1;
    sc_signal< sc_lv<8> > zext_ln34_13_fu_451_p1;
    sc_signal< sc_lv<8> > zext_ln34_14_fu_455_p1;
    sc_signal< sc_lv<1> > icmp_ln34_3_fu_445_p2;
    sc_signal< sc_lv<8> > sub_ln34_9_fu_468_p2;
    sc_signal< sc_lv<8> > sub_ln34_10_fu_480_p2;
    sc_signal< sc_lv<128> > tmp_8_fu_459_p4;
    sc_signal< sc_lv<128> > tmp_76_i_fu_436_p4;
    sc_signal< sc_lv<8> > xor_ln34_3_fu_474_p2;
    sc_signal< sc_lv<8> > select_ln34_9_fu_486_p3;
    sc_signal< sc_lv<8> > select_ln34_11_fu_502_p3;
    sc_signal< sc_lv<128> > select_ln34_10_fu_494_p3;
    sc_signal< sc_lv<128> > zext_ln34_15_fu_516_p1;
    sc_signal< sc_lv<5> > or_ln34_fu_530_p2;
    sc_signal< sc_lv<128> > zext_ln34_4_fu_544_p1;
    sc_signal< sc_lv<128> > lshr_ln34_1_fu_547_p2;
    sc_signal< sc_lv<128> > and_ln34_fu_553_p2;
    sc_signal< sc_lv<128> > zext_ln34_8_fu_563_p1;
    sc_signal< sc_lv<128> > lshr_ln34_3_fu_566_p2;
    sc_signal< sc_lv<128> > and_ln34_1_fu_572_p2;
    sc_signal< sc_lv<128> > zext_ln34_12_fu_582_p1;
    sc_signal< sc_lv<128> > lshr_ln34_5_fu_585_p2;
    sc_signal< sc_lv<128> > and_ln34_2_fu_591_p2;
    sc_signal< sc_lv<128> > zext_ln34_16_fu_600_p1;
    sc_signal< sc_lv<128> > lshr_ln34_7_fu_603_p2;
    sc_signal< sc_lv<128> > and_ln34_3_fu_609_p2;
    sc_signal< sc_lv<5> > or_ln34_1_fu_618_p2;
    sc_signal< sc_lv<5> > or_ln34_2_fu_632_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_1F;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<59> ap_const_lv59_0;
    static const sc_lv<128> ap_const_lv128_lc_2;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ABpartial_out_address0();
    void thread_ABpartial_out_address1();
    void thread_ABpartial_out_ce0();
    void thread_ABpartial_out_ce1();
    void thread_ABpartial_out_d0();
    void thread_ABpartial_out_d1();
    void thread_ABpartial_out_we0();
    void thread_ABpartial_out_we1();
    void thread_and_ln34_1_fu_572_p2();
    void thread_and_ln34_2_fu_591_p2();
    void thread_and_ln34_3_fu_609_p2();
    void thread_and_ln34_fu_553_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i3_0_i_phi_fu_127_p4();
    void thread_ap_ready();
    void thread_empty_101_fu_157_p1();
    void thread_empty_102_fu_169_p2();
    void thread_i_fu_140_p2();
    void thread_icmp_ln32_fu_134_p2();
    void thread_icmp_ln34_1_fu_265_p2();
    void thread_icmp_ln34_2_fu_355_p2();
    void thread_icmp_ln34_3_fu_445_p2();
    void thread_icmp_ln34_fu_175_p2();
    void thread_lshr_ln34_1_fu_547_p2();
    void thread_lshr_ln34_2_fu_340_p2();
    void thread_lshr_ln34_3_fu_566_p2();
    void thread_lshr_ln34_4_fu_430_p2();
    void thread_lshr_ln34_5_fu_585_p2();
    void thread_lshr_ln34_6_fu_520_p2();
    void thread_lshr_ln34_7_fu_603_p2();
    void thread_lshr_ln34_fu_250_p2();
    void thread_or_ln34_1_fu_618_p2();
    void thread_or_ln34_2_fu_632_p2();
    void thread_or_ln34_fu_530_p2();
    void thread_select_ln34_10_fu_494_p3();
    void thread_select_ln34_11_fu_502_p3();
    void thread_select_ln34_1_fu_224_p3();
    void thread_select_ln34_2_fu_232_p3();
    void thread_select_ln34_3_fu_306_p3();
    void thread_select_ln34_4_fu_314_p3();
    void thread_select_ln34_5_fu_322_p3();
    void thread_select_ln34_6_fu_396_p3();
    void thread_select_ln34_7_fu_404_p3();
    void thread_select_ln34_8_fu_412_p3();
    void thread_select_ln34_9_fu_486_p3();
    void thread_select_ln34_fu_216_p3();
    void thread_sub_ln34_10_fu_480_p2();
    void thread_sub_ln34_11_fu_510_p2();
    void thread_sub_ln34_1_fu_210_p2();
    void thread_sub_ln34_2_fu_240_p2();
    void thread_sub_ln34_3_fu_288_p2();
    void thread_sub_ln34_4_fu_300_p2();
    void thread_sub_ln34_5_fu_330_p2();
    void thread_sub_ln34_6_fu_378_p2();
    void thread_sub_ln34_7_fu_390_p2();
    void thread_sub_ln34_8_fu_420_p2();
    void thread_sub_ln34_9_fu_468_p2();
    void thread_sub_ln34_fu_198_p2();
    void thread_tmp_1_fu_535_p3();
    void thread_tmp_2_fu_623_p3();
    void thread_tmp_3_fu_637_p3();
    void thread_tmp_4_fu_189_p4();
    void thread_tmp_5_fu_161_p3();
    void thread_tmp_6_fu_279_p4();
    void thread_tmp_72_i_fu_256_p4();
    void thread_tmp_74_i_fu_346_p4();
    void thread_tmp_76_i_fu_436_p4();
    void thread_tmp_7_fu_369_p4();
    void thread_tmp_8_fu_459_p4();
    void thread_tmp_fu_146_p3();
    void thread_trunc_ln34_1_fu_558_p1();
    void thread_trunc_ln34_2_fu_577_p1();
    void thread_trunc_ln34_3_fu_596_p1();
    void thread_trunc_ln34_4_fu_614_p1();
    void thread_trunc_ln34_fu_154_p1();
    void thread_xor_ln34_1_fu_294_p2();
    void thread_xor_ln34_2_fu_384_p2();
    void thread_xor_ln34_3_fu_474_p2();
    void thread_xor_ln34_fu_204_p2();
    void thread_zext_ln34_10_fu_365_p1();
    void thread_zext_ln34_11_fu_426_p1();
    void thread_zext_ln34_12_fu_582_p1();
    void thread_zext_ln34_13_fu_451_p1();
    void thread_zext_ln34_14_fu_455_p1();
    void thread_zext_ln34_15_fu_516_p1();
    void thread_zext_ln34_16_fu_600_p1();
    void thread_zext_ln34_1_fu_181_p1();
    void thread_zext_ln34_2_fu_185_p1();
    void thread_zext_ln34_3_fu_246_p1();
    void thread_zext_ln34_4_fu_544_p1();
    void thread_zext_ln34_5_fu_271_p1();
    void thread_zext_ln34_6_fu_275_p1();
    void thread_zext_ln34_7_fu_336_p1();
    void thread_zext_ln34_8_fu_563_p1();
    void thread_zext_ln34_9_fu_361_p1();
    void thread_zext_ln34_fu_526_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
