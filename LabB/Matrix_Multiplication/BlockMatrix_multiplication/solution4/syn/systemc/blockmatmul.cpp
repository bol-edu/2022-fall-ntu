// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "blockmatmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic blockmatmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> blockmatmul::ap_const_lv4_0 = "0000";
const sc_lv<32> blockmatmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic blockmatmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<2> blockmatmul::ap_const_lv2_0 = "00";
const sc_lv<2> blockmatmul::ap_const_lv2_1 = "1";
const bool blockmatmul::ap_const_boolean_1 = true;

blockmatmul::blockmatmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    blockmatmul_entry5_U0 = new blockmatmul_entry5("blockmatmul_entry5_U0");
    blockmatmul_entry5_U0->ap_clk(ap_clk);
    blockmatmul_entry5_U0->ap_rst(ap_rst);
    blockmatmul_entry5_U0->ap_start(blockmatmul_entry5_U0_ap_start);
    blockmatmul_entry5_U0->start_full_n(start_for_blockmatmul_entry17_U0_full_n);
    blockmatmul_entry5_U0->ap_done(blockmatmul_entry5_U0_ap_done);
    blockmatmul_entry5_U0->ap_continue(blockmatmul_entry5_U0_ap_continue);
    blockmatmul_entry5_U0->ap_idle(blockmatmul_entry5_U0_ap_idle);
    blockmatmul_entry5_U0->ap_ready(blockmatmul_entry5_U0_ap_ready);
    blockmatmul_entry5_U0->start_out(blockmatmul_entry5_U0_start_out);
    blockmatmul_entry5_U0->start_write(blockmatmul_entry5_U0_start_write);
    blockmatmul_entry5_U0->it(it);
    blockmatmul_entry5_U0->it_out_din(blockmatmul_entry5_U0_it_out_din);
    blockmatmul_entry5_U0->it_out_full_n(it_c1_full_n);
    blockmatmul_entry5_U0->it_out_write(blockmatmul_entry5_U0_it_out_write);
    blockmatmul_entry17_U0 = new blockmatmul_entry17("blockmatmul_entry17_U0");
    blockmatmul_entry17_U0->ap_clk(ap_clk);
    blockmatmul_entry17_U0->ap_rst(ap_rst);
    blockmatmul_entry17_U0->ap_start(blockmatmul_entry17_U0_ap_start);
    blockmatmul_entry17_U0->ap_done(blockmatmul_entry17_U0_ap_done);
    blockmatmul_entry17_U0->ap_continue(blockmatmul_entry17_U0_ap_continue);
    blockmatmul_entry17_U0->ap_idle(blockmatmul_entry17_U0_ap_idle);
    blockmatmul_entry17_U0->ap_ready(blockmatmul_entry17_U0_ap_ready);
    blockmatmul_entry17_U0->it_dout(it_c1_dout);
    blockmatmul_entry17_U0->it_empty_n(it_c1_empty_n);
    blockmatmul_entry17_U0->it_read(blockmatmul_entry17_U0_it_read);
    blockmatmul_entry17_U0->it_out_din(blockmatmul_entry17_U0_it_out_din);
    blockmatmul_entry17_U0->it_out_full_n(it_c_full_n);
    blockmatmul_entry17_U0->it_out_write(blockmatmul_entry17_U0_it_out_write);
    Block_blockmatmul_me_U0 = new Block_blockmatmul_me("Block_blockmatmul_me_U0");
    Block_blockmatmul_me_U0->ap_clk(ap_clk);
    Block_blockmatmul_me_U0->ap_rst(ap_rst);
    Block_blockmatmul_me_U0->ap_start(Block_blockmatmul_me_U0_ap_start);
    Block_blockmatmul_me_U0->ap_done(Block_blockmatmul_me_U0_ap_done);
    Block_blockmatmul_me_U0->ap_continue(Block_blockmatmul_me_U0_ap_continue);
    Block_blockmatmul_me_U0->ap_idle(Block_blockmatmul_me_U0_ap_idle);
    Block_blockmatmul_me_U0->ap_ready(Block_blockmatmul_me_U0_ap_ready);
    Block_blockmatmul_me_U0->it_dout(it_c_dout);
    Block_blockmatmul_me_U0->it_empty_n(it_c_empty_n);
    Block_blockmatmul_me_U0->it_read(Block_blockmatmul_me_U0_it_read);
    Block_blockmatmul_me_U0->Arows_V_a_0_dout(Arows_V_a_0_dout);
    Block_blockmatmul_me_U0->Arows_V_a_0_empty_n(Arows_V_a_0_empty_n);
    Block_blockmatmul_me_U0->Arows_V_a_0_read(Block_blockmatmul_me_U0_Arows_V_a_0_read);
    Block_blockmatmul_me_U0->Arows_V_a_1_dout(Arows_V_a_1_dout);
    Block_blockmatmul_me_U0->Arows_V_a_1_empty_n(Arows_V_a_1_empty_n);
    Block_blockmatmul_me_U0->Arows_V_a_1_read(Block_blockmatmul_me_U0_Arows_V_a_1_read);
    Block_blockmatmul_me_U0->Arows_V_a_2_dout(Arows_V_a_2_dout);
    Block_blockmatmul_me_U0->Arows_V_a_2_empty_n(Arows_V_a_2_empty_n);
    Block_blockmatmul_me_U0->Arows_V_a_2_read(Block_blockmatmul_me_U0_Arows_V_a_2_read);
    Block_blockmatmul_me_U0->Arows_V_a_3_dout(Arows_V_a_3_dout);
    Block_blockmatmul_me_U0->Arows_V_a_3_empty_n(Arows_V_a_3_empty_n);
    Block_blockmatmul_me_U0->Arows_V_a_3_read(Block_blockmatmul_me_U0_Arows_V_a_3_read);
    Block_blockmatmul_me_U0->A_0_din(Block_blockmatmul_me_U0_A_0_din);
    Block_blockmatmul_me_U0->A_0_full_n(A_0_full_n);
    Block_blockmatmul_me_U0->A_0_write(Block_blockmatmul_me_U0_A_0_write);
    Block_blockmatmul_me_U0->A_1_din(Block_blockmatmul_me_U0_A_1_din);
    Block_blockmatmul_me_U0->A_1_full_n(A_1_full_n);
    Block_blockmatmul_me_U0->A_1_write(Block_blockmatmul_me_U0_A_1_write);
    Block_blockmatmul_me_U0->A_2_din(Block_blockmatmul_me_U0_A_2_din);
    Block_blockmatmul_me_U0->A_2_full_n(A_2_full_n);
    Block_blockmatmul_me_U0->A_2_write(Block_blockmatmul_me_U0_A_2_write);
    Block_blockmatmul_me_U0->A_3_din(Block_blockmatmul_me_U0_A_3_din);
    Block_blockmatmul_me_U0->A_3_full_n(A_3_full_n);
    Block_blockmatmul_me_U0->A_3_write(Block_blockmatmul_me_U0_A_3_write);
    Loop_partialsum_proc_U0 = new Loop_partialsum_proc("Loop_partialsum_proc_U0");
    Loop_partialsum_proc_U0->ap_clk(ap_clk);
    Loop_partialsum_proc_U0->ap_rst(ap_rst);
    Loop_partialsum_proc_U0->ap_start(Loop_partialsum_proc_U0_ap_start);
    Loop_partialsum_proc_U0->ap_done(Loop_partialsum_proc_U0_ap_done);
    Loop_partialsum_proc_U0->ap_continue(Loop_partialsum_proc_U0_ap_continue);
    Loop_partialsum_proc_U0->ap_idle(Loop_partialsum_proc_U0_ap_idle);
    Loop_partialsum_proc_U0->ap_ready(Loop_partialsum_proc_U0_ap_ready);
    Loop_partialsum_proc_U0->Bcols_V_a_0_dout(Bcols_V_a_0_dout);
    Loop_partialsum_proc_U0->Bcols_V_a_0_empty_n(Bcols_V_a_0_empty_n);
    Loop_partialsum_proc_U0->Bcols_V_a_0_read(Loop_partialsum_proc_U0_Bcols_V_a_0_read);
    Loop_partialsum_proc_U0->Bcols_V_a_1_dout(Bcols_V_a_1_dout);
    Loop_partialsum_proc_U0->Bcols_V_a_1_empty_n(Bcols_V_a_1_empty_n);
    Loop_partialsum_proc_U0->Bcols_V_a_1_read(Loop_partialsum_proc_U0_Bcols_V_a_1_read);
    Loop_partialsum_proc_U0->Bcols_V_a_2_dout(Bcols_V_a_2_dout);
    Loop_partialsum_proc_U0->Bcols_V_a_2_empty_n(Bcols_V_a_2_empty_n);
    Loop_partialsum_proc_U0->Bcols_V_a_2_read(Loop_partialsum_proc_U0_Bcols_V_a_2_read);
    Loop_partialsum_proc_U0->Bcols_V_a_3_dout(Bcols_V_a_3_dout);
    Loop_partialsum_proc_U0->Bcols_V_a_3_empty_n(Bcols_V_a_3_empty_n);
    Loop_partialsum_proc_U0->Bcols_V_a_3_read(Loop_partialsum_proc_U0_Bcols_V_a_3_read);
    Loop_partialsum_proc_U0->A_0_dout(A_0_dout);
    Loop_partialsum_proc_U0->A_0_empty_n(A_0_empty_n);
    Loop_partialsum_proc_U0->A_0_read(Loop_partialsum_proc_U0_A_0_read);
    Loop_partialsum_proc_U0->A_1_dout(A_1_dout);
    Loop_partialsum_proc_U0->A_1_empty_n(A_1_empty_n);
    Loop_partialsum_proc_U0->A_1_read(Loop_partialsum_proc_U0_A_1_read);
    Loop_partialsum_proc_U0->A_2_dout(A_2_dout);
    Loop_partialsum_proc_U0->A_2_empty_n(A_2_empty_n);
    Loop_partialsum_proc_U0->A_2_read(Loop_partialsum_proc_U0_A_2_read);
    Loop_partialsum_proc_U0->A_3_dout(A_3_dout);
    Loop_partialsum_proc_U0->A_3_empty_n(A_3_empty_n);
    Loop_partialsum_proc_U0->A_3_read(Loop_partialsum_proc_U0_A_3_read);
    Loop_partialsum_proc_U0->ap_return(Loop_partialsum_proc_U0_ap_return);
    Loop_writeoutput_pro_U0 = new Loop_writeoutput_pro("Loop_writeoutput_pro_U0");
    Loop_writeoutput_pro_U0->ap_clk(ap_clk);
    Loop_writeoutput_pro_U0->ap_rst(ap_rst);
    Loop_writeoutput_pro_U0->ap_start(Loop_writeoutput_pro_U0_ap_start);
    Loop_writeoutput_pro_U0->ap_done(Loop_writeoutput_pro_U0_ap_done);
    Loop_writeoutput_pro_U0->ap_continue(Loop_writeoutput_pro_U0_ap_continue);
    Loop_writeoutput_pro_U0->ap_idle(Loop_writeoutput_pro_U0_ap_idle);
    Loop_writeoutput_pro_U0->ap_ready(Loop_writeoutput_pro_U0_ap_ready);
    Loop_writeoutput_pro_U0->p_read(tmp_dout);
    Loop_writeoutput_pro_U0->ABpartial_out_address0(Loop_writeoutput_pro_U0_ABpartial_out_address0);
    Loop_writeoutput_pro_U0->ABpartial_out_ce0(Loop_writeoutput_pro_U0_ABpartial_out_ce0);
    Loop_writeoutput_pro_U0->ABpartial_out_we0(Loop_writeoutput_pro_U0_ABpartial_out_we0);
    Loop_writeoutput_pro_U0->ABpartial_out_d0(Loop_writeoutput_pro_U0_ABpartial_out_d0);
    Loop_writeoutput_pro_U0->ABpartial_out_address1(Loop_writeoutput_pro_U0_ABpartial_out_address1);
    Loop_writeoutput_pro_U0->ABpartial_out_ce1(Loop_writeoutput_pro_U0_ABpartial_out_ce1);
    Loop_writeoutput_pro_U0->ABpartial_out_we1(Loop_writeoutput_pro_U0_ABpartial_out_we1);
    Loop_writeoutput_pro_U0->ABpartial_out_d1(Loop_writeoutput_pro_U0_ABpartial_out_d1);
    it_c1_U = new fifo_w32_d2_A("it_c1_U");
    it_c1_U->clk(ap_clk);
    it_c1_U->reset(ap_rst);
    it_c1_U->if_read_ce(ap_var_for_const0);
    it_c1_U->if_write_ce(ap_var_for_const0);
    it_c1_U->if_din(blockmatmul_entry5_U0_it_out_din);
    it_c1_U->if_full_n(it_c1_full_n);
    it_c1_U->if_write(blockmatmul_entry5_U0_it_out_write);
    it_c1_U->if_dout(it_c1_dout);
    it_c1_U->if_empty_n(it_c1_empty_n);
    it_c1_U->if_read(blockmatmul_entry17_U0_it_read);
    it_c_U = new fifo_w32_d2_A("it_c_U");
    it_c_U->clk(ap_clk);
    it_c_U->reset(ap_rst);
    it_c_U->if_read_ce(ap_var_for_const0);
    it_c_U->if_write_ce(ap_var_for_const0);
    it_c_U->if_din(blockmatmul_entry17_U0_it_out_din);
    it_c_U->if_full_n(it_c_full_n);
    it_c_U->if_write(blockmatmul_entry17_U0_it_out_write);
    it_c_U->if_dout(it_c_dout);
    it_c_U->if_empty_n(it_c_empty_n);
    it_c_U->if_read(Block_blockmatmul_me_U0_it_read);
    A_0_U = new fifo_w32_d8_A("A_0_U");
    A_0_U->clk(ap_clk);
    A_0_U->reset(ap_rst);
    A_0_U->if_read_ce(ap_var_for_const0);
    A_0_U->if_write_ce(ap_var_for_const0);
    A_0_U->if_din(Block_blockmatmul_me_U0_A_0_din);
    A_0_U->if_full_n(A_0_full_n);
    A_0_U->if_write(Block_blockmatmul_me_U0_A_0_write);
    A_0_U->if_dout(A_0_dout);
    A_0_U->if_empty_n(A_0_empty_n);
    A_0_U->if_read(Loop_partialsum_proc_U0_A_0_read);
    A_1_U = new fifo_w32_d8_A("A_1_U");
    A_1_U->clk(ap_clk);
    A_1_U->reset(ap_rst);
    A_1_U->if_read_ce(ap_var_for_const0);
    A_1_U->if_write_ce(ap_var_for_const0);
    A_1_U->if_din(Block_blockmatmul_me_U0_A_1_din);
    A_1_U->if_full_n(A_1_full_n);
    A_1_U->if_write(Block_blockmatmul_me_U0_A_1_write);
    A_1_U->if_dout(A_1_dout);
    A_1_U->if_empty_n(A_1_empty_n);
    A_1_U->if_read(Loop_partialsum_proc_U0_A_1_read);
    A_2_U = new fifo_w32_d8_A("A_2_U");
    A_2_U->clk(ap_clk);
    A_2_U->reset(ap_rst);
    A_2_U->if_read_ce(ap_var_for_const0);
    A_2_U->if_write_ce(ap_var_for_const0);
    A_2_U->if_din(Block_blockmatmul_me_U0_A_2_din);
    A_2_U->if_full_n(A_2_full_n);
    A_2_U->if_write(Block_blockmatmul_me_U0_A_2_write);
    A_2_U->if_dout(A_2_dout);
    A_2_U->if_empty_n(A_2_empty_n);
    A_2_U->if_read(Loop_partialsum_proc_U0_A_2_read);
    A_3_U = new fifo_w32_d8_A("A_3_U");
    A_3_U->clk(ap_clk);
    A_3_U->reset(ap_rst);
    A_3_U->if_read_ce(ap_var_for_const0);
    A_3_U->if_write_ce(ap_var_for_const0);
    A_3_U->if_din(Block_blockmatmul_me_U0_A_3_din);
    A_3_U->if_full_n(A_3_full_n);
    A_3_U->if_write(Block_blockmatmul_me_U0_A_3_write);
    A_3_U->if_dout(A_3_dout);
    A_3_U->if_empty_n(A_3_empty_n);
    A_3_U->if_read(Loop_partialsum_proc_U0_A_3_read);
    tmp_U = new fifo_w512_d2_A("tmp_U");
    tmp_U->clk(ap_clk);
    tmp_U->reset(ap_rst);
    tmp_U->if_read_ce(ap_var_for_const0);
    tmp_U->if_write_ce(ap_var_for_const0);
    tmp_U->if_din(Loop_partialsum_proc_U0_ap_return);
    tmp_U->if_full_n(tmp_full_n);
    tmp_U->if_write(Loop_partialsum_proc_U0_ap_done);
    tmp_U->if_dout(tmp_dout);
    tmp_U->if_empty_n(tmp_empty_n);
    tmp_U->if_read(Loop_writeoutput_pro_U0_ap_ready);
    start_for_blockmabkb_U = new start_for_blockmabkb("start_for_blockmabkb_U");
    start_for_blockmabkb_U->clk(ap_clk);
    start_for_blockmabkb_U->reset(ap_rst);
    start_for_blockmabkb_U->if_read_ce(ap_var_for_const0);
    start_for_blockmabkb_U->if_write_ce(ap_var_for_const0);
    start_for_blockmabkb_U->if_din(start_for_blockmatmul_entry17_U0_din);
    start_for_blockmabkb_U->if_full_n(start_for_blockmatmul_entry17_U0_full_n);
    start_for_blockmabkb_U->if_write(blockmatmul_entry5_U0_start_write);
    start_for_blockmabkb_U->if_dout(start_for_blockmatmul_entry17_U0_dout);
    start_for_blockmabkb_U->if_empty_n(start_for_blockmatmul_entry17_U0_empty_n);
    start_for_blockmabkb_U->if_read(blockmatmul_entry17_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ABpartial_out_address0);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_address0 );

    SC_METHOD(thread_ABpartial_out_address1);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_address1 );

    SC_METHOD(thread_ABpartial_out_ce0);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_ce0 );

    SC_METHOD(thread_ABpartial_out_ce1);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_ce1 );

    SC_METHOD(thread_ABpartial_out_d0);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_d0 );

    SC_METHOD(thread_ABpartial_out_d1);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_d1 );

    SC_METHOD(thread_ABpartial_out_we0);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_we0 );

    SC_METHOD(thread_ABpartial_out_we1);
    sensitive << ( Loop_writeoutput_pro_U0_ABpartial_out_we1 );

    SC_METHOD(thread_Arows_V_a_0_read);
    sensitive << ( Block_blockmatmul_me_U0_Arows_V_a_0_read );

    SC_METHOD(thread_Arows_V_a_1_read);
    sensitive << ( Block_blockmatmul_me_U0_Arows_V_a_1_read );

    SC_METHOD(thread_Arows_V_a_2_read);
    sensitive << ( Block_blockmatmul_me_U0_Arows_V_a_2_read );

    SC_METHOD(thread_Arows_V_a_3_read);
    sensitive << ( Block_blockmatmul_me_U0_Arows_V_a_3_read );

    SC_METHOD(thread_Bcols_V_a_0_read);
    sensitive << ( Loop_partialsum_proc_U0_Bcols_V_a_0_read );

    SC_METHOD(thread_Bcols_V_a_1_read);
    sensitive << ( Loop_partialsum_proc_U0_Bcols_V_a_1_read );

    SC_METHOD(thread_Bcols_V_a_2_read);
    sensitive << ( Loop_partialsum_proc_U0_Bcols_V_a_2_read );

    SC_METHOD(thread_Bcols_V_a_3_read);
    sensitive << ( Loop_partialsum_proc_U0_Bcols_V_a_3_read );

    SC_METHOD(thread_Block_blockmatmul_me_U0_ap_continue);

    SC_METHOD(thread_Block_blockmatmul_me_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Block_blockmatmul_me_U0_ap_ready );

    SC_METHOD(thread_Block_blockmatmul_me_U0_start_full_n);

    SC_METHOD(thread_Block_blockmatmul_me_U0_start_write);

    SC_METHOD(thread_Loop_partialsum_proc_U0_ap_continue);
    sensitive << ( tmp_full_n );

    SC_METHOD(thread_Loop_partialsum_proc_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Loop_partialsum_proc_U0_ap_ready );

    SC_METHOD(thread_Loop_partialsum_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_partialsum_proc_U0_start_write);

    SC_METHOD(thread_Loop_writeoutput_pro_U0_ap_continue);

    SC_METHOD(thread_Loop_writeoutput_pro_U0_ap_start);
    sensitive << ( tmp_empty_n );

    SC_METHOD(thread_Loop_writeoutput_pro_U0_start_full_n);

    SC_METHOD(thread_Loop_writeoutput_pro_U0_start_write);

    SC_METHOD(thread_ap_channel_done_tmp);
    sensitive << ( Loop_partialsum_proc_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( Loop_writeoutput_pro_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( blockmatmul_entry5_U0_ap_idle );
    sensitive << ( blockmatmul_entry17_U0_ap_idle );
    sensitive << ( Block_blockmatmul_me_U0_ap_idle );
    sensitive << ( Loop_partialsum_proc_U0_ap_idle );
    sensitive << ( Loop_writeoutput_pro_U0_ap_idle );
    sensitive << ( tmp_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_Block_blockmatmul_me_U0_ap_ready);
    sensitive << ( Block_blockmatmul_me_U0_ap_ready );
    sensitive << ( ap_sync_reg_Block_blockmatmul_me_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Loop_partialsum_proc_U0_ap_ready);
    sensitive << ( Loop_partialsum_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_Loop_partialsum_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_blockmatmul_entry5_U0_ap_ready);
    sensitive << ( blockmatmul_entry5_U0_ap_ready );
    sensitive << ( ap_sync_reg_blockmatmul_entry5_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Loop_writeoutput_pro_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_blockmatmul_entry5_U0_ap_ready );
    sensitive << ( ap_sync_Block_blockmatmul_me_U0_ap_ready );
    sensitive << ( ap_sync_Loop_partialsum_proc_U0_ap_ready );

    SC_METHOD(thread_blockmatmul_entry17_U0_ap_continue);

    SC_METHOD(thread_blockmatmul_entry17_U0_ap_start);
    sensitive << ( start_for_blockmatmul_entry17_U0_empty_n );

    SC_METHOD(thread_blockmatmul_entry17_U0_start_full_n);

    SC_METHOD(thread_blockmatmul_entry17_U0_start_write);

    SC_METHOD(thread_blockmatmul_entry5_U0_ap_continue);

    SC_METHOD(thread_blockmatmul_entry5_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_blockmatmul_entry5_U0_ap_ready );

    SC_METHOD(thread_start_for_blockmatmul_entry17_U0_din);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_blockmatmul_entry5_U0_ap_ready = SC_LOGIC_0;
    blockmatmul_entry5_U0_ap_ready_count = "00";
    ap_sync_reg_Block_blockmatmul_me_U0_ap_ready = SC_LOGIC_0;
    Block_blockmatmul_me_U0_ap_ready_count = "00";
    ap_sync_reg_Loop_partialsum_proc_U0_ap_ready = SC_LOGIC_0;
    Loop_partialsum_proc_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "blockmatmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, Arows_V_a_0_dout, "(port)Arows_V_a_0_dout");
    sc_trace(mVcdFile, Arows_V_a_0_empty_n, "(port)Arows_V_a_0_empty_n");
    sc_trace(mVcdFile, Arows_V_a_0_read, "(port)Arows_V_a_0_read");
    sc_trace(mVcdFile, Arows_V_a_1_dout, "(port)Arows_V_a_1_dout");
    sc_trace(mVcdFile, Arows_V_a_1_empty_n, "(port)Arows_V_a_1_empty_n");
    sc_trace(mVcdFile, Arows_V_a_1_read, "(port)Arows_V_a_1_read");
    sc_trace(mVcdFile, Arows_V_a_2_dout, "(port)Arows_V_a_2_dout");
    sc_trace(mVcdFile, Arows_V_a_2_empty_n, "(port)Arows_V_a_2_empty_n");
    sc_trace(mVcdFile, Arows_V_a_2_read, "(port)Arows_V_a_2_read");
    sc_trace(mVcdFile, Arows_V_a_3_dout, "(port)Arows_V_a_3_dout");
    sc_trace(mVcdFile, Arows_V_a_3_empty_n, "(port)Arows_V_a_3_empty_n");
    sc_trace(mVcdFile, Arows_V_a_3_read, "(port)Arows_V_a_3_read");
    sc_trace(mVcdFile, Bcols_V_a_0_dout, "(port)Bcols_V_a_0_dout");
    sc_trace(mVcdFile, Bcols_V_a_0_empty_n, "(port)Bcols_V_a_0_empty_n");
    sc_trace(mVcdFile, Bcols_V_a_0_read, "(port)Bcols_V_a_0_read");
    sc_trace(mVcdFile, Bcols_V_a_1_dout, "(port)Bcols_V_a_1_dout");
    sc_trace(mVcdFile, Bcols_V_a_1_empty_n, "(port)Bcols_V_a_1_empty_n");
    sc_trace(mVcdFile, Bcols_V_a_1_read, "(port)Bcols_V_a_1_read");
    sc_trace(mVcdFile, Bcols_V_a_2_dout, "(port)Bcols_V_a_2_dout");
    sc_trace(mVcdFile, Bcols_V_a_2_empty_n, "(port)Bcols_V_a_2_empty_n");
    sc_trace(mVcdFile, Bcols_V_a_2_read, "(port)Bcols_V_a_2_read");
    sc_trace(mVcdFile, Bcols_V_a_3_dout, "(port)Bcols_V_a_3_dout");
    sc_trace(mVcdFile, Bcols_V_a_3_empty_n, "(port)Bcols_V_a_3_empty_n");
    sc_trace(mVcdFile, Bcols_V_a_3_read, "(port)Bcols_V_a_3_read");
    sc_trace(mVcdFile, ABpartial_out_address0, "(port)ABpartial_out_address0");
    sc_trace(mVcdFile, ABpartial_out_ce0, "(port)ABpartial_out_ce0");
    sc_trace(mVcdFile, ABpartial_out_d0, "(port)ABpartial_out_d0");
    sc_trace(mVcdFile, ABpartial_out_q0, "(port)ABpartial_out_q0");
    sc_trace(mVcdFile, ABpartial_out_we0, "(port)ABpartial_out_we0");
    sc_trace(mVcdFile, ABpartial_out_address1, "(port)ABpartial_out_address1");
    sc_trace(mVcdFile, ABpartial_out_ce1, "(port)ABpartial_out_ce1");
    sc_trace(mVcdFile, ABpartial_out_d1, "(port)ABpartial_out_d1");
    sc_trace(mVcdFile, ABpartial_out_q1, "(port)ABpartial_out_q1");
    sc_trace(mVcdFile, ABpartial_out_we1, "(port)ABpartial_out_we1");
    sc_trace(mVcdFile, it, "(port)it");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, blockmatmul_entry5_U0_ap_start, "blockmatmul_entry5_U0_ap_start");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_ap_done, "blockmatmul_entry5_U0_ap_done");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_ap_continue, "blockmatmul_entry5_U0_ap_continue");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_ap_idle, "blockmatmul_entry5_U0_ap_idle");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_ap_ready, "blockmatmul_entry5_U0_ap_ready");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_start_out, "blockmatmul_entry5_U0_start_out");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_start_write, "blockmatmul_entry5_U0_start_write");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_it_out_din, "blockmatmul_entry5_U0_it_out_din");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_it_out_write, "blockmatmul_entry5_U0_it_out_write");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_ap_start, "blockmatmul_entry17_U0_ap_start");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_ap_done, "blockmatmul_entry17_U0_ap_done");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_ap_continue, "blockmatmul_entry17_U0_ap_continue");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_ap_idle, "blockmatmul_entry17_U0_ap_idle");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_ap_ready, "blockmatmul_entry17_U0_ap_ready");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_it_read, "blockmatmul_entry17_U0_it_read");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_it_out_din, "blockmatmul_entry17_U0_it_out_din");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_it_out_write, "blockmatmul_entry17_U0_it_out_write");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_ap_start, "Block_blockmatmul_me_U0_ap_start");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_ap_done, "Block_blockmatmul_me_U0_ap_done");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_ap_continue, "Block_blockmatmul_me_U0_ap_continue");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_ap_idle, "Block_blockmatmul_me_U0_ap_idle");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_ap_ready, "Block_blockmatmul_me_U0_ap_ready");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_it_read, "Block_blockmatmul_me_U0_it_read");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_Arows_V_a_0_read, "Block_blockmatmul_me_U0_Arows_V_a_0_read");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_Arows_V_a_1_read, "Block_blockmatmul_me_U0_Arows_V_a_1_read");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_Arows_V_a_2_read, "Block_blockmatmul_me_U0_Arows_V_a_2_read");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_Arows_V_a_3_read, "Block_blockmatmul_me_U0_Arows_V_a_3_read");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_0_din, "Block_blockmatmul_me_U0_A_0_din");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_0_write, "Block_blockmatmul_me_U0_A_0_write");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_1_din, "Block_blockmatmul_me_U0_A_1_din");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_1_write, "Block_blockmatmul_me_U0_A_1_write");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_2_din, "Block_blockmatmul_me_U0_A_2_din");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_2_write, "Block_blockmatmul_me_U0_A_2_write");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_3_din, "Block_blockmatmul_me_U0_A_3_din");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_A_3_write, "Block_blockmatmul_me_U0_A_3_write");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_ap_start, "Loop_partialsum_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_ap_done, "Loop_partialsum_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_ap_continue, "Loop_partialsum_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_ap_idle, "Loop_partialsum_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_ap_ready, "Loop_partialsum_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_Bcols_V_a_0_read, "Loop_partialsum_proc_U0_Bcols_V_a_0_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_Bcols_V_a_1_read, "Loop_partialsum_proc_U0_Bcols_V_a_1_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_Bcols_V_a_2_read, "Loop_partialsum_proc_U0_Bcols_V_a_2_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_Bcols_V_a_3_read, "Loop_partialsum_proc_U0_Bcols_V_a_3_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_A_0_read, "Loop_partialsum_proc_U0_A_0_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_A_1_read, "Loop_partialsum_proc_U0_A_1_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_A_2_read, "Loop_partialsum_proc_U0_A_2_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_A_3_read, "Loop_partialsum_proc_U0_A_3_read");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_ap_return, "Loop_partialsum_proc_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_tmp, "ap_channel_done_tmp");
    sc_trace(mVcdFile, tmp_full_n, "tmp_full_n");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ap_start, "Loop_writeoutput_pro_U0_ap_start");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ap_done, "Loop_writeoutput_pro_U0_ap_done");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ap_continue, "Loop_writeoutput_pro_U0_ap_continue");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ap_idle, "Loop_writeoutput_pro_U0_ap_idle");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ap_ready, "Loop_writeoutput_pro_U0_ap_ready");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_address0, "Loop_writeoutput_pro_U0_ABpartial_out_address0");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_ce0, "Loop_writeoutput_pro_U0_ABpartial_out_ce0");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_we0, "Loop_writeoutput_pro_U0_ABpartial_out_we0");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_d0, "Loop_writeoutput_pro_U0_ABpartial_out_d0");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_address1, "Loop_writeoutput_pro_U0_ABpartial_out_address1");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_ce1, "Loop_writeoutput_pro_U0_ABpartial_out_ce1");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_we1, "Loop_writeoutput_pro_U0_ABpartial_out_we1");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_ABpartial_out_d1, "Loop_writeoutput_pro_U0_ABpartial_out_d1");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, it_c1_full_n, "it_c1_full_n");
    sc_trace(mVcdFile, it_c1_dout, "it_c1_dout");
    sc_trace(mVcdFile, it_c1_empty_n, "it_c1_empty_n");
    sc_trace(mVcdFile, it_c_full_n, "it_c_full_n");
    sc_trace(mVcdFile, it_c_dout, "it_c_dout");
    sc_trace(mVcdFile, it_c_empty_n, "it_c_empty_n");
    sc_trace(mVcdFile, A_0_full_n, "A_0_full_n");
    sc_trace(mVcdFile, A_0_dout, "A_0_dout");
    sc_trace(mVcdFile, A_0_empty_n, "A_0_empty_n");
    sc_trace(mVcdFile, A_1_full_n, "A_1_full_n");
    sc_trace(mVcdFile, A_1_dout, "A_1_dout");
    sc_trace(mVcdFile, A_1_empty_n, "A_1_empty_n");
    sc_trace(mVcdFile, A_2_full_n, "A_2_full_n");
    sc_trace(mVcdFile, A_2_dout, "A_2_dout");
    sc_trace(mVcdFile, A_2_empty_n, "A_2_empty_n");
    sc_trace(mVcdFile, A_3_full_n, "A_3_full_n");
    sc_trace(mVcdFile, A_3_dout, "A_3_dout");
    sc_trace(mVcdFile, A_3_empty_n, "A_3_empty_n");
    sc_trace(mVcdFile, tmp_dout, "tmp_dout");
    sc_trace(mVcdFile, tmp_empty_n, "tmp_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_blockmatmul_entry5_U0_ap_ready, "ap_sync_reg_blockmatmul_entry5_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_blockmatmul_entry5_U0_ap_ready, "ap_sync_blockmatmul_entry5_U0_ap_ready");
    sc_trace(mVcdFile, blockmatmul_entry5_U0_ap_ready_count, "blockmatmul_entry5_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Block_blockmatmul_me_U0_ap_ready, "ap_sync_reg_Block_blockmatmul_me_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Block_blockmatmul_me_U0_ap_ready, "ap_sync_Block_blockmatmul_me_U0_ap_ready");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_ap_ready_count, "Block_blockmatmul_me_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Loop_partialsum_proc_U0_ap_ready, "ap_sync_reg_Loop_partialsum_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Loop_partialsum_proc_U0_ap_ready, "ap_sync_Loop_partialsum_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_ap_ready_count, "Loop_partialsum_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, start_for_blockmatmul_entry17_U0_din, "start_for_blockmatmul_entry17_U0_din");
    sc_trace(mVcdFile, start_for_blockmatmul_entry17_U0_full_n, "start_for_blockmatmul_entry17_U0_full_n");
    sc_trace(mVcdFile, start_for_blockmatmul_entry17_U0_dout, "start_for_blockmatmul_entry17_U0_dout");
    sc_trace(mVcdFile, start_for_blockmatmul_entry17_U0_empty_n, "start_for_blockmatmul_entry17_U0_empty_n");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_start_full_n, "blockmatmul_entry17_U0_start_full_n");
    sc_trace(mVcdFile, blockmatmul_entry17_U0_start_write, "blockmatmul_entry17_U0_start_write");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_start_full_n, "Block_blockmatmul_me_U0_start_full_n");
    sc_trace(mVcdFile, Block_blockmatmul_me_U0_start_write, "Block_blockmatmul_me_U0_start_write");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_start_full_n, "Loop_partialsum_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_partialsum_proc_U0_start_write, "Loop_partialsum_proc_U0_start_write");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_start_full_n, "Loop_writeoutput_pro_U0_start_full_n");
    sc_trace(mVcdFile, Loop_writeoutput_pro_U0_start_write, "Loop_writeoutput_pro_U0_start_write");
#endif

    }
    mHdltvinHandle.open("blockmatmul.hdltvin.dat");
    mHdltvoutHandle.open("blockmatmul.hdltvout.dat");
}

blockmatmul::~blockmatmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete blockmatmul_entry5_U0;
    delete blockmatmul_entry17_U0;
    delete Block_blockmatmul_me_U0;
    delete Loop_partialsum_proc_U0;
    delete Loop_writeoutput_pro_U0;
    delete it_c1_U;
    delete it_c_U;
    delete A_0_U;
    delete A_1_U;
    delete A_2_U;
    delete A_3_U;
    delete tmp_U;
    delete start_for_blockmabkb_U;
}

void blockmatmul::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void blockmatmul::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, Block_blockmatmul_me_U0_ap_ready.read()))) {
        Block_blockmatmul_me_U0_ap_ready_count = (!Block_blockmatmul_me_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_blockmatmul_me_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Block_blockmatmul_me_U0_ap_ready.read()))) {
        Block_blockmatmul_me_U0_ap_ready_count = (!Block_blockmatmul_me_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_blockmatmul_me_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, Loop_partialsum_proc_U0_ap_ready.read()))) {
        Loop_partialsum_proc_U0_ap_ready_count = (!Loop_partialsum_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_partialsum_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Loop_partialsum_proc_U0_ap_ready.read()))) {
        Loop_partialsum_proc_U0_ap_ready_count = (!Loop_partialsum_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_partialsum_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_Block_blockmatmul_me_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Block_blockmatmul_me_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Block_blockmatmul_me_U0_ap_ready = ap_sync_Block_blockmatmul_me_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_Loop_partialsum_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Loop_partialsum_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Loop_partialsum_proc_U0_ap_ready = ap_sync_Loop_partialsum_proc_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_blockmatmul_entry5_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_blockmatmul_entry5_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_blockmatmul_entry5_U0_ap_ready = ap_sync_blockmatmul_entry5_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, blockmatmul_entry5_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        blockmatmul_entry5_U0_ap_ready_count = (!blockmatmul_entry5_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blockmatmul_entry5_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(blockmatmul_entry5_U0_ap_ready.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        blockmatmul_entry5_U0_ap_ready_count = (!blockmatmul_entry5_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(blockmatmul_entry5_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void blockmatmul::thread_ABpartial_out_address0() {
    ABpartial_out_address0 = Loop_writeoutput_pro_U0_ABpartial_out_address0.read();
}

void blockmatmul::thread_ABpartial_out_address1() {
    ABpartial_out_address1 = Loop_writeoutput_pro_U0_ABpartial_out_address1.read();
}

void blockmatmul::thread_ABpartial_out_ce0() {
    ABpartial_out_ce0 = Loop_writeoutput_pro_U0_ABpartial_out_ce0.read();
}

void blockmatmul::thread_ABpartial_out_ce1() {
    ABpartial_out_ce1 = Loop_writeoutput_pro_U0_ABpartial_out_ce1.read();
}

void blockmatmul::thread_ABpartial_out_d0() {
    ABpartial_out_d0 = Loop_writeoutput_pro_U0_ABpartial_out_d0.read();
}

void blockmatmul::thread_ABpartial_out_d1() {
    ABpartial_out_d1 = Loop_writeoutput_pro_U0_ABpartial_out_d1.read();
}

void blockmatmul::thread_ABpartial_out_we0() {
    ABpartial_out_we0 = Loop_writeoutput_pro_U0_ABpartial_out_we0.read();
}

void blockmatmul::thread_ABpartial_out_we1() {
    ABpartial_out_we1 = Loop_writeoutput_pro_U0_ABpartial_out_we1.read();
}

void blockmatmul::thread_Arows_V_a_0_read() {
    Arows_V_a_0_read = Block_blockmatmul_me_U0_Arows_V_a_0_read.read();
}

void blockmatmul::thread_Arows_V_a_1_read() {
    Arows_V_a_1_read = Block_blockmatmul_me_U0_Arows_V_a_1_read.read();
}

void blockmatmul::thread_Arows_V_a_2_read() {
    Arows_V_a_2_read = Block_blockmatmul_me_U0_Arows_V_a_2_read.read();
}

void blockmatmul::thread_Arows_V_a_3_read() {
    Arows_V_a_3_read = Block_blockmatmul_me_U0_Arows_V_a_3_read.read();
}

void blockmatmul::thread_Bcols_V_a_0_read() {
    Bcols_V_a_0_read = Loop_partialsum_proc_U0_Bcols_V_a_0_read.read();
}

void blockmatmul::thread_Bcols_V_a_1_read() {
    Bcols_V_a_1_read = Loop_partialsum_proc_U0_Bcols_V_a_1_read.read();
}

void blockmatmul::thread_Bcols_V_a_2_read() {
    Bcols_V_a_2_read = Loop_partialsum_proc_U0_Bcols_V_a_2_read.read();
}

void blockmatmul::thread_Bcols_V_a_3_read() {
    Bcols_V_a_3_read = Loop_partialsum_proc_U0_Bcols_V_a_3_read.read();
}

void blockmatmul::thread_Block_blockmatmul_me_U0_ap_continue() {
    Block_blockmatmul_me_U0_ap_continue = ap_const_logic_1;
}

void blockmatmul::thread_Block_blockmatmul_me_U0_ap_start() {
    Block_blockmatmul_me_U0_ap_start = (ap_start.read() & (ap_sync_reg_Block_blockmatmul_me_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void blockmatmul::thread_Block_blockmatmul_me_U0_start_full_n() {
    Block_blockmatmul_me_U0_start_full_n = ap_const_logic_1;
}

void blockmatmul::thread_Block_blockmatmul_me_U0_start_write() {
    Block_blockmatmul_me_U0_start_write = ap_const_logic_0;
}

void blockmatmul::thread_Loop_partialsum_proc_U0_ap_continue() {
    Loop_partialsum_proc_U0_ap_continue = tmp_full_n.read();
}

void blockmatmul::thread_Loop_partialsum_proc_U0_ap_start() {
    Loop_partialsum_proc_U0_ap_start = (ap_start.read() & (ap_sync_reg_Loop_partialsum_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void blockmatmul::thread_Loop_partialsum_proc_U0_start_full_n() {
    Loop_partialsum_proc_U0_start_full_n = ap_const_logic_1;
}

void blockmatmul::thread_Loop_partialsum_proc_U0_start_write() {
    Loop_partialsum_proc_U0_start_write = ap_const_logic_0;
}

void blockmatmul::thread_Loop_writeoutput_pro_U0_ap_continue() {
    Loop_writeoutput_pro_U0_ap_continue = ap_const_logic_1;
}

void blockmatmul::thread_Loop_writeoutput_pro_U0_ap_start() {
    Loop_writeoutput_pro_U0_ap_start = tmp_empty_n.read();
}

void blockmatmul::thread_Loop_writeoutput_pro_U0_start_full_n() {
    Loop_writeoutput_pro_U0_start_full_n = ap_const_logic_1;
}

void blockmatmul::thread_Loop_writeoutput_pro_U0_start_write() {
    Loop_writeoutput_pro_U0_start_write = ap_const_logic_0;
}

void blockmatmul::thread_ap_channel_done_tmp() {
    ap_channel_done_tmp = Loop_partialsum_proc_U0_ap_done.read();
}

void blockmatmul::thread_ap_done() {
    ap_done = Loop_writeoutput_pro_U0_ap_done.read();
}

void blockmatmul::thread_ap_idle() {
    ap_idle = (blockmatmul_entry5_U0_ap_idle.read() & blockmatmul_entry17_U0_ap_idle.read() & Block_blockmatmul_me_U0_ap_idle.read() & Loop_partialsum_proc_U0_ap_idle.read() & Loop_writeoutput_pro_U0_ap_idle.read() & (tmp_empty_n.read() ^ 
  ap_const_logic_1));
}

void blockmatmul::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void blockmatmul::thread_ap_sync_Block_blockmatmul_me_U0_ap_ready() {
    ap_sync_Block_blockmatmul_me_U0_ap_ready = (Block_blockmatmul_me_U0_ap_ready.read() | ap_sync_reg_Block_blockmatmul_me_U0_ap_ready.read());
}

void blockmatmul::thread_ap_sync_Loop_partialsum_proc_U0_ap_ready() {
    ap_sync_Loop_partialsum_proc_U0_ap_ready = (Loop_partialsum_proc_U0_ap_ready.read() | ap_sync_reg_Loop_partialsum_proc_U0_ap_ready.read());
}

void blockmatmul::thread_ap_sync_blockmatmul_entry5_U0_ap_ready() {
    ap_sync_blockmatmul_entry5_U0_ap_ready = (blockmatmul_entry5_U0_ap_ready.read() | ap_sync_reg_blockmatmul_entry5_U0_ap_ready.read());
}

void blockmatmul::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void blockmatmul::thread_ap_sync_done() {
    ap_sync_done = Loop_writeoutput_pro_U0_ap_done.read();
}

void blockmatmul::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_blockmatmul_entry5_U0_ap_ready.read() & ap_sync_Block_blockmatmul_me_U0_ap_ready.read() & ap_sync_Loop_partialsum_proc_U0_ap_ready.read());
}

void blockmatmul::thread_blockmatmul_entry17_U0_ap_continue() {
    blockmatmul_entry17_U0_ap_continue = ap_const_logic_1;
}

void blockmatmul::thread_blockmatmul_entry17_U0_ap_start() {
    blockmatmul_entry17_U0_ap_start = start_for_blockmatmul_entry17_U0_empty_n.read();
}

void blockmatmul::thread_blockmatmul_entry17_U0_start_full_n() {
    blockmatmul_entry17_U0_start_full_n = ap_const_logic_1;
}

void blockmatmul::thread_blockmatmul_entry17_U0_start_write() {
    blockmatmul_entry17_U0_start_write = ap_const_logic_0;
}

void blockmatmul::thread_blockmatmul_entry5_U0_ap_continue() {
    blockmatmul_entry5_U0_ap_continue = ap_const_logic_1;
}

void blockmatmul::thread_blockmatmul_entry5_U0_ap_start() {
    blockmatmul_entry5_U0_ap_start = (ap_start.read() & (ap_sync_reg_blockmatmul_entry5_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void blockmatmul::thread_start_for_blockmatmul_entry17_U0_din() {
    start_for_blockmatmul_entry17_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void blockmatmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"Arows_V_a_0_dout\" :  \"" << Arows_V_a_0_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Arows_V_a_0_empty_n\" :  \"" << Arows_V_a_0_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"Arows_V_a_0_read\" :  \"" << Arows_V_a_0_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Arows_V_a_1_dout\" :  \"" << Arows_V_a_1_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Arows_V_a_1_empty_n\" :  \"" << Arows_V_a_1_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Arows_V_a_1_read\" :  \"" << Arows_V_a_1_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Arows_V_a_2_dout\" :  \"" << Arows_V_a_2_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Arows_V_a_2_empty_n\" :  \"" << Arows_V_a_2_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Arows_V_a_2_read\" :  \"" << Arows_V_a_2_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Arows_V_a_3_dout\" :  \"" << Arows_V_a_3_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Arows_V_a_3_empty_n\" :  \"" << Arows_V_a_3_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Arows_V_a_3_read\" :  \"" << Arows_V_a_3_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_0_dout\" :  \"" << Bcols_V_a_0_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_0_empty_n\" :  \"" << Bcols_V_a_0_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Bcols_V_a_0_read\" :  \"" << Bcols_V_a_0_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_1_dout\" :  \"" << Bcols_V_a_1_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_1_empty_n\" :  \"" << Bcols_V_a_1_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Bcols_V_a_1_read\" :  \"" << Bcols_V_a_1_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_2_dout\" :  \"" << Bcols_V_a_2_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_2_empty_n\" :  \"" << Bcols_V_a_2_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Bcols_V_a_2_read\" :  \"" << Bcols_V_a_2_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_3_dout\" :  \"" << Bcols_V_a_3_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Bcols_V_a_3_empty_n\" :  \"" << Bcols_V_a_3_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Bcols_V_a_3_read\" :  \"" << Bcols_V_a_3_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_address0\" :  \"" << ABpartial_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_ce0\" :  \"" << ABpartial_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_d0\" :  \"" << ABpartial_out_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ABpartial_out_q0\" :  \"" << ABpartial_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_we0\" :  \"" << ABpartial_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_address1\" :  \"" << ABpartial_out_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_ce1\" :  \"" << ABpartial_out_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_d1\" :  \"" << ABpartial_out_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ABpartial_out_q1\" :  \"" << ABpartial_out_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ABpartial_out_we1\" :  \"" << ABpartial_out_we1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"it\" :  \"" << it.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

