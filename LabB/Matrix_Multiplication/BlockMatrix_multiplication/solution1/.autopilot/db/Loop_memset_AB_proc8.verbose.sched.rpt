

================================================================
== Vivado HLS Report for 'Loop_memset_AB_proc8'
================================================================
* Date:           Wed Oct 19 04:02:43 2022

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        BlockMatrix_multiplication
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.510 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      190|      207| 1.900 us | 2.070 us |  190|  207|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- memset_AB   |       19|       19|         5|          -|          -|     4|    no    |
        | + memset_AB  |        3|        3|         1|          -|          -|     4|    no    |
        |- loadA       |       16|       16|         3|          2|          1|     8|    yes   |
        |- partialsum  |      168|      168|        21|          -|          -|     8|    no    |
        | + ps_i_ps_j  |       18|       18|         4|          1|          1|    16|    yes   |
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 2
  Pipeline-0 : II = 2, D = 3, States = { 4 5 6 }
  Pipeline-1 : II = 1, D = 4, States = { 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 3 2 7 4 
4 --> 7 5 
5 --> 6 
6 --> 4 
7 --> 8 
8 --> 9 
9 --> 13 10 
10 --> 11 
11 --> 12 
12 --> 9 
13 --> 8 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Arows_V_a_0, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 14 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Arows_V_a_1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 15 'specinterface' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Arows_V_a_2, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 16 'specinterface' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Arows_V_a_3, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 17 'specinterface' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_0, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 18 'specinterface' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 19 'specinterface' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_34 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_2, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 20 'specinterface' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %Bcols_V_a_3, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 21 'specinterface' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%it_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %it)"   --->   Operation 22 'read' 'it_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.76ns)   --->   "br label %meminst.i.i"   --->   Operation 23 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%phi_ln7 = phi i2 [ 0, %newFuncRoot ], [ %add_ln7, %meminst4.i.i ]" [BlockMatrix_design.cpp:7]   --->   Operation 24 'phi' 'phi_ln7' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.56ns)   --->   "%add_ln7 = add i2 %phi_ln7, 1" [BlockMatrix_design.cpp:7]   --->   Operation 25 'add' 'add_ln7' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 26 'speclooptripcount' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.76ns)   --->   "br label %meminst5.i.i"   --->   Operation 27 'br' <Predicate = true> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%phi_ln7_1 = phi i2 [ 0, %meminst.i.i ], [ %add_ln7_1, %meminst5.i.i ]" [BlockMatrix_design.cpp:7]   --->   Operation 28 'phi' 'phi_ln7_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_5 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %phi_ln7, i2 %phi_ln7_1)" [BlockMatrix_design.cpp:7]   --->   Operation 29 'bitconcatenate' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i4 %tmp_5 to i64" [BlockMatrix_design.cpp:7]   --->   Operation 30 'zext' 'zext_ln7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%AB_addr = getelementptr [16 x i32]* %AB, i64 0, i64 %zext_ln7" [BlockMatrix_design.cpp:7]   --->   Operation 31 'getelementptr' 'AB_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.56ns)   --->   "%add_ln7_1 = add i2 %phi_ln7_1, 1" [BlockMatrix_design.cpp:7]   --->   Operation 32 'add' 'add_ln7_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (2.32ns)   --->   "store i32 0, i32* %AB_addr, align 4" [BlockMatrix_design.cpp:7]   --->   Operation 33 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 34 [1/1] (0.95ns)   --->   "%icmp_ln7 = icmp eq i2 %phi_ln7_1, -1" [BlockMatrix_design.cpp:7]   --->   Operation 34 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @memset_AB_str) nounwind"   --->   Operation 35 'specloopname' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 36 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7, label %meminst4.i.i, label %meminst5.i.i" [BlockMatrix_design.cpp:7]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.95ns)   --->   "%icmp_ln7_1 = icmp eq i2 %phi_ln7, -1" [BlockMatrix_design.cpp:7]   --->   Operation 38 'icmp' 'icmp_ln7_1' <Predicate = (icmp_ln7)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @memset_AB_str) nounwind"   --->   Operation 39 'specloopname' <Predicate = (icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7_1, label %blockmatmul_meminst.i.exit, label %meminst.i.i" [BlockMatrix_design.cpp:7]   --->   Operation 40 'br' <Predicate = (icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln12 = trunc i32 %it_read to i1" [BlockMatrix_design.cpp:12]   --->   Operation 41 'trunc' 'trunc_ln12' <Predicate = (icmp_ln7 & icmp_ln7_1)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "br i1 %trunc_ln12, label %.loopexit, label %.preheader3.preheader" [BlockMatrix_design.cpp:12]   --->   Operation 42 'br' <Predicate = (icmp_ln7 & icmp_ln7_1)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.76ns)   --->   "br label %.preheader3" [BlockMatrix_design.cpp:13]   --->   Operation 43 'br' <Predicate = (icmp_ln7 & icmp_ln7_1 & !trunc_ln12)> <Delay = 1.76>

State 4 <SV = 3> <Delay = 1.73>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ %i, %loadA ], [ 0, %.preheader3.preheader ]"   --->   Operation 44 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (1.30ns)   --->   "%icmp_ln13 = icmp eq i4 %i_0, -8" [BlockMatrix_design.cpp:13]   --->   Operation 45 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 46 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.73ns)   --->   "%i = add i4 %i_0, 1" [BlockMatrix_design.cpp:13]   --->   Operation 47 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %icmp_ln13, label %.loopexit.loopexit, label %loadA" [BlockMatrix_design.cpp:13]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.88>
ST_5 : Operation 49 [1/1] (3.63ns)   --->   "%empty_39 = call { i32, i32, i32, i32 } @_ssdm_op_Read.ap_fifo.volatile.i32P.i32P.i32P.i32P(i32* %Arows_V_a_0, i32* %Arows_V_a_1, i32* %Arows_V_a_2, i32* %Arows_V_a_3)" [BlockMatrix_design.cpp:14]   --->   Operation 49 'read' 'empty_39' <Predicate = (!icmp_ln13)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 0> <FIFO>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_a_01 = extractvalue { i32, i32, i32, i32 } %empty_39, 0" [BlockMatrix_design.cpp:14]   --->   Operation 50 'extractvalue' 'tmp_a_01' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_a_172 = extractvalue { i32, i32, i32, i32 } %empty_39, 1" [BlockMatrix_design.cpp:14]   --->   Operation 51 'extractvalue' 'tmp_a_172' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_a_23 = extractvalue { i32, i32, i32, i32 } %empty_39, 2" [BlockMatrix_design.cpp:14]   --->   Operation 52 'extractvalue' 'tmp_a_23' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_a_34 = extractvalue { i32, i32, i32, i32 } %empty_39, 3" [BlockMatrix_design.cpp:14]   --->   Operation 53 'extractvalue' 'tmp_a_34' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i4 %i_0 to i64" [BlockMatrix_design.cpp:17]   --->   Operation 54 'zext' 'zext_ln17' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [32 x i32]* @A, i64 0, i64 %zext_ln17" [BlockMatrix_design.cpp:17]   --->   Operation 55 'getelementptr' 'A_addr' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.97ns)   --->   "%xor_ln17 = xor i4 %i_0, -8" [BlockMatrix_design.cpp:17]   --->   Operation 56 'xor' 'xor_ln17' <Predicate = (!icmp_ln13)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln17_1 = zext i4 %xor_ln17 to i64" [BlockMatrix_design.cpp:17]   --->   Operation 57 'zext' 'zext_ln17_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [32 x i32]* @A, i64 0, i64 %zext_ln17_1" [BlockMatrix_design.cpp:17]   --->   Operation 58 'getelementptr' 'A_addr_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (3.25ns)   --->   "store i32 %tmp_a_01, i32* %A_addr, align 4" [BlockMatrix_design.cpp:17]   --->   Operation 59 'store' <Predicate = (!icmp_ln13)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_5 : Operation 60 [1/1] (3.25ns)   --->   "store i32 %tmp_a_172, i32* %A_addr_1, align 4" [BlockMatrix_design.cpp:17]   --->   Operation 60 'store' <Predicate = (!icmp_ln13)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 6 <SV = 5> <Delay = 3.25>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str1) nounwind" [BlockMatrix_design.cpp:13]   --->   Operation 61 'specloopname' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str1)" [BlockMatrix_design.cpp:13]   --->   Operation 62 'specregionbegin' 'tmp' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [BlockMatrix_design.cpp:14]   --->   Operation 63 'specpipeline' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_6 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 1, i4 %i_0)" [BlockMatrix_design.cpp:17]   --->   Operation 64 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [32 x i32]* @A, i64 0, i64 %tmp_6" [BlockMatrix_design.cpp:17]   --->   Operation 65 'getelementptr' 'A_addr_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%sext_ln17 = sext i4 %xor_ln17 to i5" [BlockMatrix_design.cpp:17]   --->   Operation 66 'sext' 'sext_ln17' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln17_2 = zext i5 %sext_ln17 to i64" [BlockMatrix_design.cpp:17]   --->   Operation 67 'zext' 'zext_ln17_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [32 x i32]* @A, i64 0, i64 %zext_ln17_2" [BlockMatrix_design.cpp:17]   --->   Operation 68 'getelementptr' 'A_addr_3' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (3.25ns)   --->   "store i32 %tmp_a_23, i32* %A_addr_2, align 4" [BlockMatrix_design.cpp:17]   --->   Operation 69 'store' <Predicate = (!icmp_ln13)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_6 : Operation 70 [1/1] (3.25ns)   --->   "store i32 %tmp_a_34, i32* %A_addr_3, align 4" [BlockMatrix_design.cpp:17]   --->   Operation 70 'store' <Predicate = (!icmp_ln13)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str1, i32 %tmp)" [BlockMatrix_design.cpp:19]   --->   Operation 71 'specregionend' 'empty_40' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "br label %.preheader3" [BlockMatrix_design.cpp:13]   --->   Operation 72 'br' <Predicate = (!icmp_ln13)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 1.76>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 73 'br' <Predicate = (!trunc_ln12)> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (1.76ns)   --->   "br label %0" [BlockMatrix_design.cpp:22]   --->   Operation 74 'br' <Predicate = true> <Delay = 1.76>

State 8 <SV = 5> <Delay = 3.63>
ST_8 : Operation 75 [1/1] (0.00ns)   --->   "%k_0 = phi i4 [ 0, %.loopexit ], [ %k, %partialsum_end ]"   --->   Operation 75 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 76 [1/1] (1.30ns)   --->   "%icmp_ln22 = icmp eq i4 %k_0, -8" [BlockMatrix_design.cpp:22]   --->   Operation 76 'icmp' 'icmp_ln22' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 77 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 77 'speclooptripcount' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 78 [1/1] (1.73ns)   --->   "%k = add i4 %k_0, 1" [BlockMatrix_design.cpp:22]   --->   Operation 78 'add' 'k' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "br i1 %icmp_ln22, label %.preheader.exitStub, label %partialsum_begin" [BlockMatrix_design.cpp:22]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str3) nounwind" [BlockMatrix_design.cpp:22]   --->   Operation 80 'specloopname' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str3)" [BlockMatrix_design.cpp:22]   --->   Operation 81 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_8 : Operation 82 [1/1] (3.63ns)   --->   "%empty_43 = call { i32, i32, i32, i32 } @_ssdm_op_Read.ap_fifo.volatile.i32P.i32P.i32P.i32P(i32* %Bcols_V_a_0, i32* %Bcols_V_a_1, i32* %Bcols_V_a_2, i32* %Bcols_V_a_3)" [BlockMatrix_design.cpp:23]   --->   Operation 82 'read' 'empty_43' <Predicate = (!icmp_ln22)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 0> <FIFO>
ST_8 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_a_1_05 = extractvalue { i32, i32, i32, i32 } %empty_43, 0" [BlockMatrix_design.cpp:23]   --->   Operation 83 'extractvalue' 'tmp_a_1_05' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_8 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_a_1_16 = extractvalue { i32, i32, i32, i32 } %empty_43, 1" [BlockMatrix_design.cpp:23]   --->   Operation 84 'extractvalue' 'tmp_a_1_16' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_8 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_a_1_27 = extractvalue { i32, i32, i32, i32 } %empty_43, 2" [BlockMatrix_design.cpp:23]   --->   Operation 85 'extractvalue' 'tmp_a_1_27' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_8 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_a_1_38 = extractvalue { i32, i32, i32, i32 } %empty_43, 3" [BlockMatrix_design.cpp:23]   --->   Operation 86 'extractvalue' 'tmp_a_1_38' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_8 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i4 %k_0 to i7" [BlockMatrix_design.cpp:25]   --->   Operation 87 'zext' 'zext_ln25' <Predicate = (!icmp_ln22)> <Delay = 0.00>
ST_8 : Operation 88 [1/1] (1.76ns)   --->   "br label %1" [BlockMatrix_design.cpp:25]   --->   Operation 88 'br' <Predicate = (!icmp_ln22)> <Delay = 1.76>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 89 'ret' <Predicate = (icmp_ln22)> <Delay = 0.00>

State 9 <SV = 6> <Delay = 7.70>
ST_9 : Operation 90 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i5 [ 0, %partialsum_begin ], [ %add_ln25, %ps_j ]" [BlockMatrix_design.cpp:25]   --->   Operation 90 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 91 [1/1] (0.00ns)   --->   "%i1_0 = phi i3 [ 0, %partialsum_begin ], [ %select_ln28_1, %ps_j ]" [BlockMatrix_design.cpp:28]   --->   Operation 91 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%j2_0 = phi i3 [ 0, %partialsum_begin ], [ %j, %ps_j ]"   --->   Operation 92 'phi' 'j2_0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (1.36ns)   --->   "%icmp_ln25 = icmp eq i5 %indvar_flatten, -16" [BlockMatrix_design.cpp:25]   --->   Operation 93 'icmp' 'icmp_ln25' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 94 [1/1] (1.78ns)   --->   "%add_ln25 = add i5 %indvar_flatten, 1" [BlockMatrix_design.cpp:25]   --->   Operation 94 'add' 'add_ln25' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %icmp_ln25, label %partialsum_end, label %ps_j" [BlockMatrix_design.cpp:25]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (1.65ns)   --->   "%i_1 = add i3 1, %i1_0" [BlockMatrix_design.cpp:25]   --->   Operation 96 'add' 'i_1' <Predicate = (!icmp_ln25)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 97 [1/1] (1.13ns)   --->   "%icmp_ln26 = icmp eq i3 %j2_0, -4" [BlockMatrix_design.cpp:26]   --->   Operation 97 'icmp' 'icmp_ln26' <Predicate = (!icmp_ln25)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 98 [1/1] (0.98ns)   --->   "%select_ln28 = select i1 %icmp_ln26, i3 0, i3 %j2_0" [BlockMatrix_design.cpp:28]   --->   Operation 98 'select' 'select_ln28' <Predicate = (!icmp_ln25)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 99 [1/1] (0.98ns)   --->   "%select_ln28_1 = select i1 %icmp_ln26, i3 %i_1, i3 %i1_0" [BlockMatrix_design.cpp:28]   --->   Operation 99 'select' 'select_ln28_1' <Predicate = (!icmp_ln25)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_7 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %select_ln28_1, i3 0)" [BlockMatrix_design.cpp:28]   --->   Operation 100 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i6 %tmp_7 to i7" [BlockMatrix_design.cpp:28]   --->   Operation 101 'zext' 'zext_ln28' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (1.82ns)   --->   "%add_ln28_1 = add i7 %zext_ln28, %zext_ln25" [BlockMatrix_design.cpp:28]   --->   Operation 102 'add' 'add_ln28_1' <Predicate = (!icmp_ln25)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i7 %add_ln28_1 to i64" [BlockMatrix_design.cpp:28]   --->   Operation 103 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [32 x i32]* @A, i64 0, i64 %zext_ln28_1" [BlockMatrix_design.cpp:28]   --->   Operation 104 'getelementptr' 'A_addr_4' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_9 : Operation 105 [2/2] (3.25ns)   --->   "%A_load = load i32* %A_addr_4, align 4" [BlockMatrix_design.cpp:28]   --->   Operation 105 'load' 'A_load' <Predicate = (!icmp_ln25)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_9 : Operation 106 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i3 %select_ln28 to i2" [BlockMatrix_design.cpp:28]   --->   Operation 106 'trunc' 'trunc_ln28' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_9 : Operation 107 [1/1] (1.65ns)   --->   "%j = add i3 1, %select_ln28" [BlockMatrix_design.cpp:26]   --->   Operation 107 'add' 'j' <Predicate = (!icmp_ln25)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 7> <Delay = 3.25>
ST_10 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_8 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln28_1, i2 0)" [BlockMatrix_design.cpp:28]   --->   Operation 108 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i5 %tmp_8 to i6" [BlockMatrix_design.cpp:26]   --->   Operation 109 'zext' 'zext_ln26' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i3 %select_ln28 to i6" [BlockMatrix_design.cpp:28]   --->   Operation 110 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_10 : Operation 111 [1/1] (1.78ns)   --->   "%add_ln28_2 = add i6 %zext_ln26, %zext_ln28_2" [BlockMatrix_design.cpp:28]   --->   Operation 111 'add' 'add_ln28_2' <Predicate = (!icmp_ln25)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i6 %add_ln28_2 to i64" [BlockMatrix_design.cpp:28]   --->   Operation 112 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_10 : Operation 113 [1/1] (0.00ns)   --->   "%AB_addr_2 = getelementptr [16 x i32]* %AB, i64 0, i64 %zext_ln28_3" [BlockMatrix_design.cpp:28]   --->   Operation 113 'getelementptr' 'AB_addr_2' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_10 : Operation 114 [1/2] (3.25ns)   --->   "%A_load = load i32* %A_addr_4, align 4" [BlockMatrix_design.cpp:28]   --->   Operation 114 'load' 'A_load' <Predicate = (!icmp_ln25)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_10 : Operation 115 [1/1] (1.95ns)   --->   "%tmp_2 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i2(i32 %tmp_a_1_05, i32 %tmp_a_1_16, i32 %tmp_a_1_27, i32 %tmp_a_1_38, i2 %trunc_ln28)" [BlockMatrix_design.cpp:28]   --->   Operation 115 'mux' 'tmp_2' <Predicate = (!icmp_ln25)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 8> <Delay = 8.51>
ST_11 : Operation 116 [2/2] (2.32ns)   --->   "%AB_load_1 = load i32* %AB_addr_2, align 4" [BlockMatrix_design.cpp:28]   --->   Operation 116 'load' 'AB_load_1' <Predicate = (!icmp_ln25)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_11 : Operation 117 [1/1] (8.51ns)   --->   "%mul_ln28 = mul nsw i32 %tmp_2, %A_load" [BlockMatrix_design.cpp:28]   --->   Operation 117 'mul' 'mul_ln28' <Predicate = (!icmp_ln25)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 9> <Delay = 7.19>
ST_12 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @ps_i_ps_j_str)"   --->   Operation 118 'specloopname' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_12 : Operation 119 [1/1] (0.00ns)   --->   "%empty_44 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 119 'speclooptripcount' 'empty_44' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_12 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str5) nounwind" [BlockMatrix_design.cpp:26]   --->   Operation 120 'specloopname' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_12 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([5 x i8]* @p_str5)" [BlockMatrix_design.cpp:26]   --->   Operation 121 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_12 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [BlockMatrix_design.cpp:27]   --->   Operation 122 'specpipeline' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_12 : Operation 123 [1/2] (2.32ns)   --->   "%AB_load_1 = load i32* %AB_addr_2, align 4" [BlockMatrix_design.cpp:28]   --->   Operation 123 'load' 'AB_load_1' <Predicate = (!icmp_ln25)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 124 [1/1] (2.55ns)   --->   "%add_ln28 = add nsw i32 %mul_ln28, %AB_load_1" [BlockMatrix_design.cpp:28]   --->   Operation 124 'add' 'add_ln28' <Predicate = (!icmp_ln25)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 125 [1/1] (2.32ns)   --->   "store i32 %add_ln28, i32* %AB_addr_2, align 4" [BlockMatrix_design.cpp:28]   --->   Operation 125 'store' <Predicate = (!icmp_ln25)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 126 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecRegionEnd([5 x i8]* @p_str5, i32 %tmp_4)" [BlockMatrix_design.cpp:29]   --->   Operation 126 'specregionend' 'empty_45' <Predicate = (!icmp_ln25)> <Delay = 0.00>
ST_12 : Operation 127 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 127 'br' <Predicate = (!icmp_ln25)> <Delay = 0.00>

State 13 <SV = 7> <Delay = 0.00>
ST_13 : Operation 128 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str3, i32 %tmp_1)" [BlockMatrix_design.cpp:31]   --->   Operation 128 'specregionend' 'empty_42' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 129 [1/1] (0.00ns)   --->   "br label %0" [BlockMatrix_design.cpp:22]   --->   Operation 129 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln7', BlockMatrix_design.cpp:7) with incoming values : ('add_ln7', BlockMatrix_design.cpp:7) [24]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln7_1', BlockMatrix_design.cpp:7) with incoming values : ('add_ln7_1', BlockMatrix_design.cpp:7) [29]  (1.77 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'phi' operation ('phi_ln7_1', BlockMatrix_design.cpp:7) with incoming values : ('add_ln7_1', BlockMatrix_design.cpp:7) [29]  (0 ns)
	'getelementptr' operation ('AB_addr', BlockMatrix_design.cpp:7) [32]  (0 ns)
	'store' operation ('store_ln7', BlockMatrix_design.cpp:7) of constant 0 on array 'AB' [34]  (2.32 ns)

 <State 4>: 1.74ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', BlockMatrix_design.cpp:13) [49]  (0 ns)
	'add' operation ('i', BlockMatrix_design.cpp:13) [52]  (1.74 ns)

 <State 5>: 6.89ns
The critical path consists of the following:
	fifo read on port 'Arows_V_a_0' (BlockMatrix_design.cpp:14) [58]  (3.63 ns)
	'store' operation ('store_ln17', BlockMatrix_design.cpp:17) of variable 'tmp_a_01', BlockMatrix_design.cpp:14 on array 'A' [73]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr_2', BlockMatrix_design.cpp:17) [69]  (0 ns)
	'store' operation ('store_ln17', BlockMatrix_design.cpp:17) of variable 'tmp_a_23', BlockMatrix_design.cpp:14 on array 'A' [75]  (3.25 ns)

 <State 7>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('k') with incoming values : ('k', BlockMatrix_design.cpp:22) [84]  (1.77 ns)

 <State 8>: 3.63ns
The critical path consists of the following:
	fifo read on port 'Bcols_V_a_0' (BlockMatrix_design.cpp:23) [92]  (3.63 ns)

 <State 9>: 7.71ns
The critical path consists of the following:
	'phi' operation ('i1_0', BlockMatrix_design.cpp:28) with incoming values : ('select_ln28_1', BlockMatrix_design.cpp:28) [101]  (0 ns)
	'add' operation ('i', BlockMatrix_design.cpp:25) [107]  (1.65 ns)
	'select' operation ('select_ln28_1', BlockMatrix_design.cpp:28) [112]  (0.98 ns)
	'add' operation ('add_ln28_1', BlockMatrix_design.cpp:28) [115]  (1.83 ns)
	'getelementptr' operation ('A_addr_4', BlockMatrix_design.cpp:28) [117]  (0 ns)
	'load' operation ('A_load', BlockMatrix_design.cpp:28) on array 'A' [128]  (3.25 ns)

 <State 10>: 3.25ns
The critical path consists of the following:
	'load' operation ('A_load', BlockMatrix_design.cpp:28) on array 'A' [128]  (3.25 ns)

 <State 11>: 8.51ns
The critical path consists of the following:
	'mul' operation ('mul_ln28', BlockMatrix_design.cpp:28) [131]  (8.51 ns)

 <State 12>: 7.2ns
The critical path consists of the following:
	'load' operation ('AB_load_1', BlockMatrix_design.cpp:28) on array 'AB' [127]  (2.32 ns)
	'add' operation ('add_ln28', BlockMatrix_design.cpp:28) [132]  (2.55 ns)
	'store' operation ('store_ln28', BlockMatrix_design.cpp:28) of variable 'add_ln28', BlockMatrix_design.cpp:28 on array 'AB' [133]  (2.32 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
