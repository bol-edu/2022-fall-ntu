// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_qoi_encode_Pipeline_VITIS_LOOP_15_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        img,
        index_mem_V_address0,
        index_mem_V_ce0,
        index_mem_V_we0,
        index_mem_V_d0,
        index_mem_V_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        out_r_address1,
        out_r_ce1,
        out_r_we1,
        out_r_d1,
        buf_idx_1_out,
        buf_idx_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [7:0] m_axi_gmem_WDATA;
output  [0:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [7:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [10:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] img;
output  [5:0] index_mem_V_address0;
output   index_mem_V_ce0;
output   index_mem_V_we0;
output  [23:0] index_mem_V_d0;
input  [23:0] index_mem_V_q0;
output  [11:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [7:0] out_r_d0;
output  [11:0] out_r_address1;
output   out_r_ce1;
output   out_r_we1;
output  [7:0] out_r_d1;
output  [11:0] buf_idx_1_out;
output   buf_idx_1_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_RREADY;
reg index_mem_V_ce0;
reg index_mem_V_we0;
reg[11:0] out_r_address0;
reg out_r_ce0;
reg out_r_we0;
reg[7:0] out_r_d0;
reg[11:0] out_r_address1;
reg out_r_ce1;
reg out_r_we1;
reg[7:0] out_r_d1;
reg buf_idx_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln15_reg_1042;
reg    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln15_fu_296_p2;
reg   [0:0] icmp_ln15_reg_1042_pp0_iter1_reg;
reg   [7:0] prev_r_1_reg_1046;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] prev_r_1_reg_1046_pp0_iter1_reg;
wire   [5:0] trunc_ln17_fu_313_p1;
reg   [5:0] trunc_ln17_reg_1055;
wire   [3:0] trunc_ln21_fu_317_p1;
reg   [3:0] trunc_ln21_reg_1060;
reg   [7:0] prev_g_1_reg_1065;
reg    ap_block_pp0_stage2_11001;
reg   [7:0] prev_g_1_reg_1065_pp0_iter1_reg;
wire   [5:0] trunc_ln17_1_fu_321_p1;
reg   [5:0] trunc_ln17_1_reg_1074;
wire   [5:0] sub_ln21_fu_332_p2;
reg   [5:0] sub_ln21_reg_1079;
wire   [3:0] trunc_ln21_1_fu_337_p1;
reg   [3:0] trunc_ln21_1_reg_1084;
reg   [7:0] prev_b_1_reg_1089;
wire   [5:0] trunc_ln17_2_fu_341_p1;
reg   [5:0] trunc_ln17_2_reg_1098;
wire   [2:0] trunc_ln21_2_fu_345_p1;
reg   [2:0] trunc_ln21_2_reg_1103;
reg   [7:0] prev_g_load_reg_1108;
reg   [7:0] prev_r_load_reg_1113;
reg   [7:0] prev_b_load_reg_1118;
wire   [23:0] cur_pixel_V_fu_363_p4;
reg   [23:0] cur_pixel_V_reg_1123;
wire   [5:0] hash_fu_406_p2;
reg   [5:0] hash_reg_1129;
wire   [0:0] and_ln28_1_fu_433_p2;
reg   [0:0] and_ln28_1_reg_1134;
wire   [0:0] addr_cmp_fu_477_p2;
reg   [0:0] addr_cmp_reg_1146;
reg   [31:0] buf_idx_3_reg_1151;
wire   [11:0] trunc_ln4_fu_579_p1;
reg   [11:0] trunc_ln4_reg_1156;
wire   [0:0] icmp_ln1065_fu_593_p2;
reg   [0:0] icmp_ln1065_reg_1161;
wire   [0:0] and_ln41_4_fu_693_p2;
reg   [0:0] and_ln41_4_reg_1165;
wire   [0:0] and_ln44_4_fu_793_p2;
reg   [0:0] and_ln44_4_reg_1169;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter1_stage1;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln56_fu_439_p1;
wire   [63:0] zext_ln34_fu_464_p1;
wire   [0:0] icmp_ln33_fu_447_p2;
wire   [63:0] zext_ln43_fu_598_p1;
wire   [63:0] zext_ln51_fu_799_p1;
wire   [63:0] zext_ln52_fu_958_p1;
wire   [63:0] zext_ln53_fu_963_p1;
reg   [63:0] reuse_addr_reg_fu_124;
wire    ap_loop_init;
reg   [23:0] reuse_reg_fu_128;
reg   [7:0] prev_g_fu_132;
reg   [7:0] prev_r_fu_136;
reg   [7:0] prev_b_fu_140;
reg   [31:0] runs_fu_144;
wire   [31:0] runs_1_fu_483_p2;
reg   [11:0] i_1_fu_148;
wire   [11:0] add_ln15_fu_302_p2;
reg   [11:0] ap_sig_allocacmp_i;
reg   [31:0] buf_idx_1_fu_152;
wire   [31:0] buf_idx_5_fu_948_p2;
wire   [31:0] buf_idx_7_fu_804_p2;
wire   [31:0] grp_fu_241_p2;
reg    ap_block_pp0_stage1_01001;
wire   [7:0] add_ln34_fu_457_p2;
wire   [7:0] add_ln46_fu_820_p2;
wire   [7:0] xor_ln47_fu_845_p2;
wire   [7:0] zext_ln4_fu_919_p1;
wire   [7:0] zext_ln21_fu_529_p1;
wire   [5:0] shl_ln_fu_325_p3;
wire   [5:0] shl_ln21_2_fu_378_p3;
wire   [5:0] sub_ln21_1_fu_385_p2;
wire   [5:0] add_ln21_1_fu_394_p2;
wire   [5:0] shl_ln21_1_fu_371_p3;
wire   [5:0] add_ln21_2_fu_400_p2;
wire   [5:0] add_ln21_fu_390_p2;
wire   [0:0] icmp_ln28_fu_412_p2;
wire   [0:0] icmp_ln28_2_fu_422_p2;
wire   [0:0] and_ln28_fu_427_p2;
wire   [0:0] icmp_ln28_1_fu_417_p2;
wire   [7:0] trunc_ln34_fu_453_p1;
wire   [8:0] zext_ln17_fu_520_p1;
wire   [8:0] prev_r_cast_fu_517_p1;
wire  signed [8:0] dr_fu_533_p2;
wire   [8:0] zext_ln18_fu_523_p1;
wire   [8:0] prev_g_cast_fu_514_p1;
wire  signed [8:0] dg_fu_543_p2;
wire   [8:0] zext_ln19_fu_526_p1;
wire   [8:0] prev_b_cast_fu_511_p1;
wire  signed [8:0] db_fu_553_p2;
wire  signed [9:0] sext_ln22_fu_539_p1;
wire  signed [9:0] sext_ln23_fu_549_p1;
wire  signed [9:0] sext_ln24_fu_559_p1;
wire   [23:0] reuse_select_fu_586_p3;
wire   [7:0] tmp_fu_609_p4;
wire   [7:0] tmp_1_fu_631_p4;
wire   [7:0] tmp_2_fu_653_p4;
wire   [0:0] icmp_ln41_1_fu_619_p2;
wire   [0:0] icmp_ln41_2_fu_625_p2;
wire   [0:0] icmp_ln41_5_fu_663_p2;
wire   [0:0] icmp_ln41_4_fu_647_p2;
wire   [0:0] and_ln41_2_fu_675_p2;
wire   [0:0] icmp_ln41_3_fu_641_p2;
wire   [0:0] and_ln41_3_fu_681_p2;
wire   [0:0] icmp_ln41_fu_603_p2;
wire   [0:0] and_ln41_1_fu_687_p2;
wire   [0:0] and_ln41_fu_669_p2;
wire   [3:0] tmp_3_fu_705_p4;
wire   [9:0] drg_fu_567_p2;
wire   [6:0] tmp_4_fu_731_p4;
wire   [9:0] dbg_fu_573_p2;
wire   [6:0] tmp_5_fu_753_p4;
wire   [0:0] icmp_ln44_1_fu_715_p2;
wire   [0:0] icmp_ln44_2_fu_725_p2;
wire   [0:0] icmp_ln44_5_fu_763_p2;
wire   [0:0] icmp_ln44_4_fu_747_p2;
wire   [0:0] and_ln44_2_fu_775_p2;
wire   [0:0] icmp_ln44_3_fu_741_p2;
wire   [0:0] and_ln44_3_fu_781_p2;
wire   [0:0] icmp_ln44_fu_699_p2;
wire   [0:0] and_ln44_1_fu_787_p2;
wire   [0:0] and_ln44_fu_769_p2;
wire   [7:0] trunc_ln43_fu_563_p1;
wire   [3:0] trunc_ln47_1_fu_827_p1;
wire   [3:0] trunc_ln47_fu_721_p1;
wire   [3:0] xor_ln47_1_fu_831_p2;
wire   [7:0] xor_ln_fu_837_p3;
wire   [1:0] trunc_ln43_1_fu_857_p1;
wire   [5:0] shl_ln1_fu_861_p3;
wire   [1:0] trunc_ln43_2_fu_873_p1;
wire   [3:0] shl_ln43_1_fu_877_p3;
wire   [1:0] trunc_ln43_3_fu_889_p1;
wire  signed [6:0] sext_ln43_fu_869_p1;
wire  signed [6:0] sext_ln43_1_fu_885_p1;
wire  signed [5:0] sext_ln43_2_fu_893_p1;
wire   [5:0] add_ln43_1_fu_903_p2;
wire  signed [6:0] sext_ln43_3_fu_909_p1;
wire   [6:0] add_ln43_fu_897_p2;
wire   [6:0] add_ln43_2_fu_913_p2;
wire   [11:0] buf_idx_6_fu_953_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to0;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_idx_1_fu_152 <= 32'd14;
    end else if ((((icmp_ln1065_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'd1 == and_ln41_4_fu_693_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln33_fu_447_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_fu_433_p2) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        buf_idx_1_fu_152 <= grp_fu_241_p2;
    end else if (((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        buf_idx_1_fu_152 <= buf_idx_7_fu_804_p2;
    end else if (((1'd1 == and_ln44_4_reg_1169) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1065_reg_1161 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln41_4_reg_1165) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_idx_1_fu_152 <= buf_idx_5_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln15_fu_296_p2 == 1'd1))) begin
            i_1_fu_148 <= add_ln15_fu_302_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_148 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prev_b_fu_140 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        prev_b_fu_140 <= prev_b_1_reg_1089;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prev_g_fu_132 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        prev_g_fu_132 <= prev_g_1_reg_1065;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prev_r_fu_136 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        prev_r_fu_136 <= prev_r_1_reg_1046;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_addr_reg_fu_124 <= 64'd18446744073709551615;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reuse_addr_reg_fu_124 <= zext_ln56_fu_439_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_reg_fu_128 <= 24'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reuse_reg_fu_128 <= cur_pixel_V_reg_1123;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln28_1_fu_433_p2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        runs_fu_144 <= runs_1_fu_483_p2;
    end else if ((((icmp_ln1065_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'd1 == and_ln41_4_fu_693_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        runs_fu_144 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_fu_433_p2) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        addr_cmp_reg_1146 <= addr_cmp_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln28_1_reg_1134 <= and_ln28_1_fu_433_p2;
        cur_pixel_V_reg_1123 <= cur_pixel_V_fu_363_p4;
        hash_reg_1129 <= hash_fu_406_p2;
        prev_b_load_reg_1118 <= prev_b_fu_140;
        prev_g_load_reg_1108 <= prev_g_fu_132;
        prev_r_load_reg_1113 <= prev_r_fu_136;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_fu_593_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln41_4_reg_1165 <= and_ln41_4_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1065_fu_593_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln44_4_reg_1169 <= and_ln44_4_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        buf_idx_3_reg_1151 <= buf_idx_1_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        icmp_ln1065_reg_1161 <= icmp_ln1065_fu_593_p2;
        trunc_ln4_reg_1156 <= trunc_ln4_fu_579_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln15_reg_1042 <= icmp_ln15_fu_296_p2;
        icmp_ln15_reg_1042_pp0_iter1_reg <= icmp_ln15_reg_1042;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        prev_b_1_reg_1089 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        prev_g_1_reg_1065 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        prev_g_1_reg_1065_pp0_iter1_reg <= prev_g_1_reg_1065;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        prev_r_1_reg_1046 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        prev_r_1_reg_1046_pp0_iter1_reg <= prev_r_1_reg_1046;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_1042 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        sub_ln21_reg_1079 <= sub_ln21_fu_332_p2;
        trunc_ln17_1_reg_1074 <= trunc_ln17_1_fu_321_p1;
        trunc_ln21_1_reg_1084 <= trunc_ln21_1_fu_337_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_1042 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln17_2_reg_1098 <= trunc_ln17_2_fu_341_p1;
        trunc_ln21_2_reg_1103 <= trunc_ln21_2_fu_345_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_1042 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln17_reg_1055 <= trunc_ln17_fu_313_p1;
        trunc_ln21_reg_1060 <= trunc_ln21_fu_317_p1;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_1042 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 12'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_148;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf_idx_1_out_ap_vld = 1'b1;
    end else begin
        buf_idx_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        index_mem_V_ce0 = 1'b1;
    end else begin
        index_mem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        index_mem_V_we0 = 1'b1;
    end else begin
        index_mem_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln15_reg_1042 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        out_r_address0 = zext_ln53_fu_963_p1;
    end else if ((((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2)))) begin
        out_r_address0 = zext_ln43_fu_598_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_r_address0 = zext_ln34_fu_464_p1;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        out_r_address1 = zext_ln52_fu_958_p1;
    end else if ((((icmp_ln1065_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2)) | ((1'd1 == and_ln41_4_fu_693_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2)))) begin
        out_r_address1 = zext_ln43_fu_598_p1;
    end else if ((((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2)) | ((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2)))) begin
        out_r_address1 = zext_ln51_fu_799_p1;
    end else begin
        out_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1065_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'd1 == and_ln41_4_fu_693_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        out_r_ce1 = 1'b1;
    end else begin
        out_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        out_r_d0 = prev_b_1_reg_1089;
    end else if (((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2))) begin
        out_r_d0 = add_ln46_fu_820_p2;
    end else if (((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2))) begin
        out_r_d0 = 8'd254;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_r_d0 = add_ln34_fu_457_p2;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        out_r_d1 = prev_g_1_reg_1065_pp0_iter1_reg;
    end else if (((icmp_ln1065_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2))) begin
        out_r_d1 = zext_ln21_fu_529_p1;
    end else if (((1'd1 == and_ln41_4_fu_693_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2))) begin
        out_r_d1 = zext_ln4_fu_919_p1;
    end else if (((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2))) begin
        out_r_d1 = xor_ln47_fu_845_p2;
    end else if (((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2))) begin
        out_r_d1 = prev_r_1_reg_1046_pp0_iter1_reg;
    end else begin
        out_r_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln33_fu_447_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_fu_433_p2) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1065_reg_1161 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln44_4_reg_1169) & (1'd0 == and_ln41_4_reg_1165) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1065_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'd1 == and_ln41_4_fu_693_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'd1 == and_ln44_4_fu_793_p2) & (icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1065_reg_1161 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln44_4_reg_1169) & (1'd0 == and_ln41_4_reg_1165) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln1065_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln15_reg_1042_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln44_4_fu_793_p2) & (1'd0 == and_ln41_4_fu_693_p2) & (1'd0 == and_ln28_1_reg_1134) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        out_r_we1 = 1'b1;
    end else begin
        out_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_302_p2 = (ap_sig_allocacmp_i + 12'd3);

assign add_ln21_1_fu_394_p2 = ($signed(sub_ln21_1_fu_385_p2) + $signed(6'd53));

assign add_ln21_2_fu_400_p2 = (add_ln21_1_fu_394_p2 + shl_ln21_1_fu_371_p3);

assign add_ln21_fu_390_p2 = (sub_ln21_reg_1079 + trunc_ln17_1_reg_1074);

assign add_ln34_fu_457_p2 = ($signed(trunc_ln34_fu_453_p1) + $signed(8'd191));

assign add_ln43_1_fu_903_p2 = ($signed(sext_ln43_2_fu_893_p1) + $signed(6'd42));

assign add_ln43_2_fu_913_p2 = ($signed(sext_ln43_3_fu_909_p1) + $signed(add_ln43_fu_897_p2));

assign add_ln43_fu_897_p2 = ($signed(sext_ln43_fu_869_p1) + $signed(sext_ln43_1_fu_885_p1));

assign add_ln46_fu_820_p2 = ($signed(trunc_ln43_fu_563_p1) + $signed(8'd160));

assign addr_cmp_fu_477_p2 = ((reuse_addr_reg_fu_124 == zext_ln56_fu_439_p1) ? 1'b1 : 1'b0);

assign and_ln28_1_fu_433_p2 = (icmp_ln28_1_fu_417_p2 & and_ln28_fu_427_p2);

assign and_ln28_fu_427_p2 = (icmp_ln28_fu_412_p2 & icmp_ln28_2_fu_422_p2);

assign and_ln41_1_fu_687_p2 = (icmp_ln41_fu_603_p2 & and_ln41_3_fu_681_p2);

assign and_ln41_2_fu_675_p2 = (icmp_ln41_5_fu_663_p2 & icmp_ln41_4_fu_647_p2);

assign and_ln41_3_fu_681_p2 = (icmp_ln41_3_fu_641_p2 & and_ln41_2_fu_675_p2);

assign and_ln41_4_fu_693_p2 = (and_ln41_fu_669_p2 & and_ln41_1_fu_687_p2);

assign and_ln41_fu_669_p2 = (icmp_ln41_2_fu_625_p2 & icmp_ln41_1_fu_619_p2);

assign and_ln44_1_fu_787_p2 = (icmp_ln44_fu_699_p2 & and_ln44_3_fu_781_p2);

assign and_ln44_2_fu_775_p2 = (icmp_ln44_5_fu_763_p2 & icmp_ln44_4_fu_747_p2);

assign and_ln44_3_fu_781_p2 = (icmp_ln44_3_fu_741_p2 & and_ln44_2_fu_775_p2);

assign and_ln44_4_fu_793_p2 = (and_ln44_fu_769_p2 & and_ln44_1_fu_787_p2);

assign and_ln44_fu_769_p2 = (icmp_ln44_2_fu_725_p2 & icmp_ln44_1_fu_715_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln15_reg_1042 == 1'd1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign buf_idx_1_out = buf_idx_1_fu_152[11:0];

assign buf_idx_5_fu_948_p2 = (buf_idx_3_reg_1151 + 32'd2);

assign buf_idx_6_fu_953_p2 = (trunc_ln4_reg_1156 + 12'd3);

assign buf_idx_7_fu_804_p2 = (buf_idx_1_fu_152 + 32'd4);

assign cur_pixel_V_fu_363_p4 = {{{prev_r_1_reg_1046}, {prev_g_1_reg_1065}}, {prev_b_1_reg_1089}};

assign db_fu_553_p2 = (zext_ln19_fu_526_p1 - prev_b_cast_fu_511_p1);

assign dbg_fu_573_p2 = ($signed(sext_ln24_fu_559_p1) - $signed(sext_ln23_fu_549_p1));

assign dg_fu_543_p2 = (zext_ln18_fu_523_p1 - prev_g_cast_fu_514_p1);

assign dr_fu_533_p2 = (zext_ln17_fu_520_p1 - prev_r_cast_fu_517_p1);

assign drg_fu_567_p2 = ($signed(sext_ln22_fu_539_p1) - $signed(sext_ln23_fu_549_p1));

assign grp_fu_241_p2 = (buf_idx_1_fu_152 + 32'd1);

assign hash_fu_406_p2 = (add_ln21_2_fu_400_p2 + add_ln21_fu_390_p2);

assign icmp_ln1065_fu_593_p2 = ((reuse_select_fu_586_p3 == cur_pixel_V_reg_1123) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_296_p2 = ((ap_sig_allocacmp_i < 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln28_1_fu_417_p2 = ((prev_g_1_reg_1065 == prev_g_fu_132) ? 1'b1 : 1'b0);

assign icmp_ln28_2_fu_422_p2 = ((prev_b_1_reg_1089 == prev_b_fu_140) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_412_p2 = ((prev_r_1_reg_1046 == prev_r_fu_136) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_447_p2 = ((runs_fu_144 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln41_1_fu_619_p2 = (($signed(tmp_fu_609_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_ln41_2_fu_625_p2 = (($signed(dg_fu_543_p2) > $signed(9'd509)) ? 1'b1 : 1'b0);

assign icmp_ln41_3_fu_641_p2 = (($signed(tmp_1_fu_631_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_ln41_4_fu_647_p2 = (($signed(db_fu_553_p2) > $signed(9'd509)) ? 1'b1 : 1'b0);

assign icmp_ln41_5_fu_663_p2 = (($signed(tmp_2_fu_653_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_603_p2 = (($signed(dr_fu_533_p2) > $signed(9'd509)) ? 1'b1 : 1'b0);

assign icmp_ln44_1_fu_715_p2 = (($signed(tmp_3_fu_705_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln44_2_fu_725_p2 = (($signed(drg_fu_567_p2) > $signed(10'd1015)) ? 1'b1 : 1'b0);

assign icmp_ln44_3_fu_741_p2 = (($signed(tmp_4_fu_731_p4) < $signed(7'd1)) ? 1'b1 : 1'b0);

assign icmp_ln44_4_fu_747_p2 = (($signed(dbg_fu_573_p2) > $signed(10'd1015)) ? 1'b1 : 1'b0);

assign icmp_ln44_5_fu_763_p2 = (($signed(tmp_5_fu_753_p4) < $signed(7'd1)) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_699_p2 = (($signed(dg_fu_543_p2) > $signed(9'd479)) ? 1'b1 : 1'b0);

assign index_mem_V_address0 = zext_ln56_fu_439_p1;

assign index_mem_V_d0 = {{{prev_r_1_reg_1046}, {prev_g_1_reg_1065}}, {prev_b_1_reg_1089}};

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 8'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 1'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign prev_b_cast_fu_511_p1 = prev_b_load_reg_1118;

assign prev_g_cast_fu_514_p1 = prev_g_load_reg_1108;

assign prev_r_cast_fu_517_p1 = prev_r_load_reg_1113;

assign reuse_select_fu_586_p3 = ((addr_cmp_reg_1146[0:0] == 1'b1) ? reuse_reg_fu_128 : index_mem_V_q0);

assign runs_1_fu_483_p2 = (runs_fu_144 + 32'd1);

assign sext_ln22_fu_539_p1 = dr_fu_533_p2;

assign sext_ln23_fu_549_p1 = dg_fu_543_p2;

assign sext_ln24_fu_559_p1 = db_fu_553_p2;

assign sext_ln43_1_fu_885_p1 = $signed(shl_ln43_1_fu_877_p3);

assign sext_ln43_2_fu_893_p1 = $signed(trunc_ln43_3_fu_889_p1);

assign sext_ln43_3_fu_909_p1 = $signed(add_ln43_1_fu_903_p2);

assign sext_ln43_fu_869_p1 = $signed(shl_ln1_fu_861_p3);

assign shl_ln1_fu_861_p3 = {{trunc_ln43_1_fu_857_p1}, {4'd0}};

assign shl_ln21_1_fu_371_p3 = {{trunc_ln21_1_reg_1084}, {2'd0}};

assign shl_ln21_2_fu_378_p3 = {{trunc_ln21_2_reg_1103}, {3'd0}};

assign shl_ln43_1_fu_877_p3 = {{trunc_ln43_2_fu_873_p1}, {2'd0}};

assign shl_ln_fu_325_p3 = {{trunc_ln21_reg_1060}, {2'd0}};

assign sub_ln21_1_fu_385_p2 = (shl_ln21_2_fu_378_p3 - trunc_ln17_2_reg_1098);

assign sub_ln21_fu_332_p2 = (shl_ln_fu_325_p3 - trunc_ln17_reg_1055);

assign tmp_1_fu_631_p4 = {{dg_fu_543_p2[8:1]}};

assign tmp_2_fu_653_p4 = {{db_fu_553_p2[8:1]}};

assign tmp_3_fu_705_p4 = {{dg_fu_543_p2[8:5]}};

assign tmp_4_fu_731_p4 = {{drg_fu_567_p2[9:3]}};

assign tmp_5_fu_753_p4 = {{dbg_fu_573_p2[9:3]}};

assign tmp_fu_609_p4 = {{dr_fu_533_p2[8:1]}};

assign trunc_ln17_1_fu_321_p1 = m_axi_gmem_RDATA[5:0];

assign trunc_ln17_2_fu_341_p1 = m_axi_gmem_RDATA[5:0];

assign trunc_ln17_fu_313_p1 = m_axi_gmem_RDATA[5:0];

assign trunc_ln21_1_fu_337_p1 = m_axi_gmem_RDATA[3:0];

assign trunc_ln21_2_fu_345_p1 = m_axi_gmem_RDATA[2:0];

assign trunc_ln21_fu_317_p1 = m_axi_gmem_RDATA[3:0];

assign trunc_ln34_fu_453_p1 = runs_fu_144[7:0];

assign trunc_ln43_1_fu_857_p1 = dr_fu_533_p2[1:0];

assign trunc_ln43_2_fu_873_p1 = dg_fu_543_p2[1:0];

assign trunc_ln43_3_fu_889_p1 = db_fu_553_p2[1:0];

assign trunc_ln43_fu_563_p1 = dg_fu_543_p2[7:0];

assign trunc_ln47_1_fu_827_p1 = dbg_fu_573_p2[3:0];

assign trunc_ln47_fu_721_p1 = drg_fu_567_p2[3:0];

assign trunc_ln4_fu_579_p1 = buf_idx_1_fu_152[11:0];

assign xor_ln47_1_fu_831_p2 = (trunc_ln47_1_fu_827_p1 ^ 4'd8);

assign xor_ln47_fu_845_p2 = (xor_ln_fu_837_p3 ^ 8'd128);

assign xor_ln_fu_837_p3 = {{trunc_ln47_fu_721_p1}, {xor_ln47_1_fu_831_p2}};

assign zext_ln17_fu_520_p1 = prev_r_1_reg_1046_pp0_iter1_reg;

assign zext_ln18_fu_523_p1 = prev_g_1_reg_1065;

assign zext_ln19_fu_526_p1 = prev_b_1_reg_1089;

assign zext_ln21_fu_529_p1 = hash_reg_1129;

assign zext_ln34_fu_464_p1 = buf_idx_1_fu_152;

assign zext_ln43_fu_598_p1 = buf_idx_1_fu_152;

assign zext_ln4_fu_919_p1 = add_ln43_2_fu_913_p2;

assign zext_ln51_fu_799_p1 = grp_fu_241_p2;

assign zext_ln52_fu_958_p1 = buf_idx_5_fu_948_p2;

assign zext_ln53_fu_963_p1 = buf_idx_6_fu_953_p2;

assign zext_ln56_fu_439_p1 = hash_fu_406_p2;

endmodule //top_qoi_encode_Pipeline_VITIS_LOOP_15_3
