// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_polar_encode (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_address0,
        src_ce0,
        src_q0,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] src_address0;
output   src_ce0;
input  [7:0] src_q0;
output  [15:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [0:0] dst_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] bit_stream_V_q1;
reg   [0:0] bit_stream_V_load_reg_1455;
wire    ap_CS_fsm_state5;
wire   [0:0] bit_stream_V_q0;
reg   [0:0] bit_stream_V_load_1_reg_1460;
reg   [0:0] bit_stream_V_load_2_reg_1465;
wire    ap_CS_fsm_state6;
reg   [0:0] bit_stream_V_load_3_reg_1470;
reg   [0:0] bit_stream_V_load_4_reg_1475;
wire    ap_CS_fsm_state7;
reg   [0:0] bit_stream_V_load_5_reg_1480;
reg   [0:0] bit_stream_V_load_6_reg_1485;
wire    ap_CS_fsm_state8;
reg   [0:0] bit_stream_V_load_7_reg_1490;
reg   [0:0] bit_stream_V_load_8_reg_1495;
wire    ap_CS_fsm_state9;
reg   [0:0] bit_stream_V_load_9_reg_1500;
reg   [0:0] bit_stream_V_load_10_reg_1505;
wire    ap_CS_fsm_state10;
reg   [0:0] bit_stream_V_load_11_reg_1510;
reg   [0:0] bit_stream_V_load_12_reg_1515;
wire    ap_CS_fsm_state11;
reg   [0:0] bit_stream_V_load_13_reg_1520;
reg   [0:0] bit_stream_V_load_14_reg_1525;
wire    ap_CS_fsm_state12;
reg   [0:0] bit_stream_V_load_15_reg_1530;
reg   [0:0] bit_stream_V_load_16_reg_1535;
wire    ap_CS_fsm_state13;
reg   [0:0] bit_stream_V_load_17_reg_1540;
reg   [0:0] bit_stream_V_load_18_reg_1545;
wire    ap_CS_fsm_state14;
reg   [0:0] bit_stream_V_load_19_reg_1550;
reg   [0:0] bit_stream_V_load_20_reg_1555;
wire    ap_CS_fsm_state15;
reg   [0:0] bit_stream_V_load_21_reg_1560;
reg   [0:0] bit_stream_V_load_22_reg_1565;
wire    ap_CS_fsm_state16;
reg   [0:0] bit_stream_V_load_23_reg_1570;
reg   [0:0] bit_stream_V_load_24_reg_1575;
wire    ap_CS_fsm_state17;
reg   [0:0] bit_stream_V_load_25_reg_1580;
reg   [0:0] bit_stream_V_load_26_reg_1585;
wire    ap_CS_fsm_state18;
reg   [0:0] bit_stream_V_load_27_reg_1590;
reg   [0:0] bit_stream_V_load_28_reg_1595;
wire    ap_CS_fsm_state19;
reg   [0:0] bit_stream_V_load_29_reg_1600;
reg   [0:0] bit_stream_V_load_30_reg_1605;
wire    ap_CS_fsm_state20;
reg   [0:0] bit_stream_V_load_31_reg_1610;
reg   [0:0] bit_stream_V_load_32_reg_1615;
wire    ap_CS_fsm_state21;
reg   [0:0] bit_stream_V_load_33_reg_1620;
reg   [0:0] bit_stream_V_load_34_reg_1625;
wire    ap_CS_fsm_state22;
reg   [0:0] bit_stream_V_load_35_reg_1630;
reg   [0:0] bit_stream_V_load_36_reg_1635;
wire    ap_CS_fsm_state23;
reg   [0:0] bit_stream_V_load_37_reg_1640;
reg   [0:0] bit_stream_V_load_38_reg_1645;
wire    ap_CS_fsm_state24;
reg   [0:0] bit_stream_V_load_39_reg_1650;
reg   [0:0] bit_stream_V_load_40_reg_1655;
wire    ap_CS_fsm_state25;
reg   [0:0] bit_stream_V_load_41_reg_1660;
reg   [0:0] bit_stream_V_load_42_reg_1665;
wire    ap_CS_fsm_state26;
reg   [0:0] bit_stream_V_load_43_reg_1670;
reg   [0:0] bit_stream_V_load_44_reg_1675;
wire    ap_CS_fsm_state27;
reg   [0:0] bit_stream_V_load_45_reg_1680;
reg   [0:0] bit_stream_V_load_46_reg_1685;
wire    ap_CS_fsm_state28;
reg   [0:0] bit_stream_V_load_47_reg_1690;
reg   [0:0] bit_stream_V_load_48_reg_1695;
wire    ap_CS_fsm_state29;
reg   [0:0] bit_stream_V_load_49_reg_1700;
reg   [0:0] bit_stream_V_load_50_reg_1705;
wire    ap_CS_fsm_state30;
reg   [0:0] bit_stream_V_load_51_reg_1710;
reg   [0:0] bit_stream_V_load_52_reg_1715;
wire    ap_CS_fsm_state31;
reg   [0:0] bit_stream_V_load_53_reg_1720;
reg   [0:0] bit_stream_V_load_54_reg_1725;
wire    ap_CS_fsm_state32;
reg   [0:0] bit_stream_V_load_55_reg_1730;
reg   [0:0] bit_stream_V_load_56_reg_1735;
wire    ap_CS_fsm_state33;
reg   [0:0] bit_stream_V_load_57_reg_1740;
reg   [0:0] bit_stream_V_load_58_reg_1745;
wire    ap_CS_fsm_state34;
reg   [0:0] bit_stream_V_load_59_reg_1750;
reg   [0:0] bit_stream_V_load_60_reg_1755;
wire    ap_CS_fsm_state35;
reg   [0:0] bit_stream_V_load_61_reg_1760;
reg   [0:0] bit_stream_V_load_62_reg_1765;
wire    ap_CS_fsm_state36;
reg   [0:0] bit_stream_V_load_63_reg_1770;
reg   [15:0] count_3_load_reg_1775;
wire    ap_CS_fsm_state38;
reg   [5:0] dst_tmp_V_address0;
reg    dst_tmp_V_ce0;
reg    dst_tmp_V_we0;
wire   [0:0] dst_tmp_V_q0;
reg   [5:0] bit_stream_V_address0;
reg    bit_stream_V_ce0;
reg    bit_stream_V_we0;
reg   [5:0] bit_stream_V_address1;
reg    bit_stream_V_ce1;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_done;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_idle;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_ready;
wire   [11:0] grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_src_address0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_src_ce0;
wire   [5:0] grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_address0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_ce0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_we0;
wire   [0:0] grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_d0;
wire   [7:0] grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_data_1_out_o;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_data_1_out_o_ap_vld;
wire   [31:0] grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_count_2_1_out_o;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_count_2_1_out_o_ap_vld;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_done;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_idle;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_ready;
wire   [5:0] grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_address0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_ce0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_we0;
wire   [0:0] grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_d0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_done;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_idle;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_ready;
wire   [5:0] grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_tmp_V_address0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_tmp_V_ce0;
wire   [15:0] grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_address0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_ce0;
wire    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_we0;
wire   [0:0] grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_d0;
reg    grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln103_fu_1075_p2;
wire    ap_CS_fsm_state3;
reg   [7:0] data_fu_296;
reg   [31:0] count_2_fu_292;
reg    grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start_reg;
wire    ap_CS_fsm_state37;
reg    grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start_reg;
wire    ap_CS_fsm_state39;
reg   [11:0] i_fu_300;
wire   [11:0] i_7_fu_1081_p2;
reg   [15:0] count_3_fu_304;
wire   [15:0] add_ln103_fu_1096_p2;
wire    ap_CS_fsm_state4;
reg   [38:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start_reg = 1'b0;
#0 grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start_reg = 1'b0;
#0 grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start_reg = 1'b0;
end

top_polar_encode_dst_tmp_V_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
dst_tmp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dst_tmp_V_address0),
    .ce0(dst_tmp_V_ce0),
    .we0(dst_tmp_V_we0),
    .d0(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_d0),
    .q0(dst_tmp_V_q0)
);

top_polar_encode_bit_stream_V_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
bit_stream_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bit_stream_V_address0),
    .ce0(bit_stream_V_ce0),
    .we0(bit_stream_V_we0),
    .d0(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_d0),
    .q0(bit_stream_V_q0),
    .address1(bit_stream_V_address1),
    .ce1(bit_stream_V_ce1),
    .q1(bit_stream_V_q1)
);

top_polar_encode_Pipeline_VITIS_LOOP_104_2 grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start),
    .ap_done(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_done),
    .ap_idle(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_idle),
    .ap_ready(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_ready),
    .src_address0(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_src_address0),
    .src_ce0(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_src_ce0),
    .src_q0(src_q0),
    .bit_stream_V_address0(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_address0),
    .bit_stream_V_ce0(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_ce0),
    .bit_stream_V_we0(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_we0),
    .bit_stream_V_d0(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_d0),
    .data_1_out_i(data_fu_296),
    .data_1_out_o(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_data_1_out_o),
    .data_1_out_o_ap_vld(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_data_1_out_o_ap_vld),
    .count_2_1_out_i(count_2_fu_292),
    .count_2_1_out_o(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_count_2_1_out_o),
    .count_2_1_out_o_ap_vld(grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_count_2_1_out_o_ap_vld)
);

top_polar_encode_Pipeline_VITIS_LOOP_119_3 grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start),
    .ap_done(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_done),
    .ap_idle(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_idle),
    .ap_ready(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_ready),
    .lhs_V(bit_stream_V_load_reg_1455),
    .lhs_V_1(bit_stream_V_load_1_reg_1460),
    .lhs_V_2(bit_stream_V_load_2_reg_1465),
    .lhs_V_3(bit_stream_V_load_3_reg_1470),
    .lhs_V_4(bit_stream_V_load_4_reg_1475),
    .lhs_V_5(bit_stream_V_load_5_reg_1480),
    .lhs_V_6(bit_stream_V_load_6_reg_1485),
    .lhs_V_7(bit_stream_V_load_7_reg_1490),
    .lhs_V_8(bit_stream_V_load_8_reg_1495),
    .lhs_V_9(bit_stream_V_load_9_reg_1500),
    .lhs_V_10(bit_stream_V_load_10_reg_1505),
    .lhs_V_11(bit_stream_V_load_11_reg_1510),
    .lhs_V_12(bit_stream_V_load_12_reg_1515),
    .lhs_V_13(bit_stream_V_load_13_reg_1520),
    .lhs_V_14(bit_stream_V_load_14_reg_1525),
    .lhs_V_15(bit_stream_V_load_15_reg_1530),
    .lhs_V_16(bit_stream_V_load_16_reg_1535),
    .lhs_V_17(bit_stream_V_load_17_reg_1540),
    .lhs_V_18(bit_stream_V_load_18_reg_1545),
    .lhs_V_19(bit_stream_V_load_19_reg_1550),
    .lhs_V_20(bit_stream_V_load_20_reg_1555),
    .lhs_V_21(bit_stream_V_load_21_reg_1560),
    .lhs_V_22(bit_stream_V_load_22_reg_1565),
    .lhs_V_23(bit_stream_V_load_23_reg_1570),
    .lhs_V_24(bit_stream_V_load_24_reg_1575),
    .lhs_V_25(bit_stream_V_load_25_reg_1580),
    .lhs_V_26(bit_stream_V_load_26_reg_1585),
    .lhs_V_27(bit_stream_V_load_27_reg_1590),
    .lhs_V_28(bit_stream_V_load_28_reg_1595),
    .lhs_V_29(bit_stream_V_load_29_reg_1600),
    .lhs_V_30(bit_stream_V_load_30_reg_1605),
    .lhs_V_31(bit_stream_V_load_31_reg_1610),
    .lhs_V_32(bit_stream_V_load_32_reg_1615),
    .lhs_V_33(bit_stream_V_load_33_reg_1620),
    .lhs_V_34(bit_stream_V_load_34_reg_1625),
    .lhs_V_35(bit_stream_V_load_35_reg_1630),
    .lhs_V_36(bit_stream_V_load_36_reg_1635),
    .lhs_V_37(bit_stream_V_load_37_reg_1640),
    .lhs_V_38(bit_stream_V_load_38_reg_1645),
    .lhs_V_39(bit_stream_V_load_39_reg_1650),
    .lhs_V_40(bit_stream_V_load_40_reg_1655),
    .lhs_V_41(bit_stream_V_load_41_reg_1660),
    .lhs_V_42(bit_stream_V_load_42_reg_1665),
    .lhs_V_43(bit_stream_V_load_43_reg_1670),
    .lhs_V_44(bit_stream_V_load_44_reg_1675),
    .lhs_V_45(bit_stream_V_load_45_reg_1680),
    .lhs_V_46(bit_stream_V_load_46_reg_1685),
    .lhs_V_47(bit_stream_V_load_47_reg_1690),
    .lhs_V_48(bit_stream_V_load_48_reg_1695),
    .lhs_V_49(bit_stream_V_load_49_reg_1700),
    .lhs_V_50(bit_stream_V_load_50_reg_1705),
    .lhs_V_51(bit_stream_V_load_51_reg_1710),
    .lhs_V_52(bit_stream_V_load_52_reg_1715),
    .lhs_V_53(bit_stream_V_load_53_reg_1720),
    .lhs_V_54(bit_stream_V_load_54_reg_1725),
    .lhs_V_55(bit_stream_V_load_55_reg_1730),
    .lhs_V_56(bit_stream_V_load_56_reg_1735),
    .lhs_V_57(bit_stream_V_load_57_reg_1740),
    .lhs_V_58(bit_stream_V_load_58_reg_1745),
    .lhs_V_59(bit_stream_V_load_59_reg_1750),
    .lhs_V_60(bit_stream_V_load_60_reg_1755),
    .lhs_V_61(bit_stream_V_load_61_reg_1760),
    .lhs_V_62(bit_stream_V_load_62_reg_1765),
    .lhs_V_63(bit_stream_V_load_63_reg_1770),
    .dst_tmp_V_address0(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_address0),
    .dst_tmp_V_ce0(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_ce0),
    .dst_tmp_V_we0(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_we0),
    .dst_tmp_V_d0(grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_d0)
);

top_polar_encode_Pipeline_VITIS_LOOP_128_5 grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start),
    .ap_done(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_done),
    .ap_idle(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_idle),
    .ap_ready(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_ready),
    .count_3(count_3_load_reg_1775),
    .dst_tmp_V_address0(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_tmp_V_address0),
    .dst_tmp_V_ce0(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_tmp_V_ce0),
    .dst_tmp_V_q0(dst_tmp_V_q0),
    .dst_address0(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_address0),
    .dst_ce0(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_ce0),
    .dst_we0(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_we0),
    .dst_d0(grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln103_fu_1075_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start_reg <= 1'b1;
        end else if ((grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_ready == 1'b1)) begin
            grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start_reg <= 1'b1;
        end else if ((grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_ready == 1'b1)) begin
            grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state38)) begin
            grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start_reg <= 1'b1;
        end else if ((grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_ready == 1'b1)) begin
            grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        count_2_fu_292 <= 32'd0;
    end else if (((grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_count_2_1_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        count_2_fu_292 <= grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_count_2_1_out_o;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        count_3_fu_304 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        count_3_fu_304 <= add_ln103_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_300 <= 12'd0;
    end else if (((icmp_ln103_fu_1075_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_300 <= i_7_fu_1081_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bit_stream_V_load_10_reg_1505 <= bit_stream_V_q1;
        bit_stream_V_load_11_reg_1510 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        bit_stream_V_load_12_reg_1515 <= bit_stream_V_q1;
        bit_stream_V_load_13_reg_1520 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bit_stream_V_load_14_reg_1525 <= bit_stream_V_q1;
        bit_stream_V_load_15_reg_1530 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        bit_stream_V_load_16_reg_1535 <= bit_stream_V_q1;
        bit_stream_V_load_17_reg_1540 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        bit_stream_V_load_18_reg_1545 <= bit_stream_V_q1;
        bit_stream_V_load_19_reg_1550 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bit_stream_V_load_1_reg_1460 <= bit_stream_V_q0;
        bit_stream_V_load_reg_1455 <= bit_stream_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        bit_stream_V_load_20_reg_1555 <= bit_stream_V_q1;
        bit_stream_V_load_21_reg_1560 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bit_stream_V_load_22_reg_1565 <= bit_stream_V_q1;
        bit_stream_V_load_23_reg_1570 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bit_stream_V_load_24_reg_1575 <= bit_stream_V_q1;
        bit_stream_V_load_25_reg_1580 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        bit_stream_V_load_26_reg_1585 <= bit_stream_V_q1;
        bit_stream_V_load_27_reg_1590 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        bit_stream_V_load_28_reg_1595 <= bit_stream_V_q1;
        bit_stream_V_load_29_reg_1600 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bit_stream_V_load_2_reg_1465 <= bit_stream_V_q1;
        bit_stream_V_load_3_reg_1470 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        bit_stream_V_load_30_reg_1605 <= bit_stream_V_q1;
        bit_stream_V_load_31_reg_1610 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        bit_stream_V_load_32_reg_1615 <= bit_stream_V_q1;
        bit_stream_V_load_33_reg_1620 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        bit_stream_V_load_34_reg_1625 <= bit_stream_V_q1;
        bit_stream_V_load_35_reg_1630 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        bit_stream_V_load_36_reg_1635 <= bit_stream_V_q1;
        bit_stream_V_load_37_reg_1640 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        bit_stream_V_load_38_reg_1645 <= bit_stream_V_q1;
        bit_stream_V_load_39_reg_1650 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        bit_stream_V_load_40_reg_1655 <= bit_stream_V_q1;
        bit_stream_V_load_41_reg_1660 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        bit_stream_V_load_42_reg_1665 <= bit_stream_V_q1;
        bit_stream_V_load_43_reg_1670 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        bit_stream_V_load_44_reg_1675 <= bit_stream_V_q1;
        bit_stream_V_load_45_reg_1680 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        bit_stream_V_load_46_reg_1685 <= bit_stream_V_q1;
        bit_stream_V_load_47_reg_1690 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        bit_stream_V_load_48_reg_1695 <= bit_stream_V_q1;
        bit_stream_V_load_49_reg_1700 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bit_stream_V_load_4_reg_1475 <= bit_stream_V_q1;
        bit_stream_V_load_5_reg_1480 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        bit_stream_V_load_50_reg_1705 <= bit_stream_V_q1;
        bit_stream_V_load_51_reg_1710 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        bit_stream_V_load_52_reg_1715 <= bit_stream_V_q1;
        bit_stream_V_load_53_reg_1720 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        bit_stream_V_load_54_reg_1725 <= bit_stream_V_q1;
        bit_stream_V_load_55_reg_1730 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        bit_stream_V_load_56_reg_1735 <= bit_stream_V_q1;
        bit_stream_V_load_57_reg_1740 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        bit_stream_V_load_58_reg_1745 <= bit_stream_V_q1;
        bit_stream_V_load_59_reg_1750 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        bit_stream_V_load_60_reg_1755 <= bit_stream_V_q1;
        bit_stream_V_load_61_reg_1760 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        bit_stream_V_load_62_reg_1765 <= bit_stream_V_q1;
        bit_stream_V_load_63_reg_1770 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bit_stream_V_load_6_reg_1485 <= bit_stream_V_q1;
        bit_stream_V_load_7_reg_1490 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bit_stream_V_load_8_reg_1495 <= bit_stream_V_q1;
        bit_stream_V_load_9_reg_1500 <= bit_stream_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        count_3_load_reg_1775 <= count_3_fu_304;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_data_1_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        data_fu_296 <= grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_data_1_out_o;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln103_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln103_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        bit_stream_V_address0 = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        bit_stream_V_address0 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        bit_stream_V_address0 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        bit_stream_V_address0 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        bit_stream_V_address0 = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        bit_stream_V_address0 = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        bit_stream_V_address0 = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        bit_stream_V_address0 = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        bit_stream_V_address0 = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        bit_stream_V_address0 = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        bit_stream_V_address0 = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        bit_stream_V_address0 = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        bit_stream_V_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        bit_stream_V_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        bit_stream_V_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        bit_stream_V_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        bit_stream_V_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        bit_stream_V_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        bit_stream_V_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        bit_stream_V_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        bit_stream_V_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        bit_stream_V_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        bit_stream_V_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bit_stream_V_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bit_stream_V_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bit_stream_V_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bit_stream_V_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bit_stream_V_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bit_stream_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bit_stream_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        bit_stream_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bit_stream_V_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bit_stream_V_address0 = grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_address0;
    end else begin
        bit_stream_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        bit_stream_V_address1 = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        bit_stream_V_address1 = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        bit_stream_V_address1 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        bit_stream_V_address1 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        bit_stream_V_address1 = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        bit_stream_V_address1 = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        bit_stream_V_address1 = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        bit_stream_V_address1 = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        bit_stream_V_address1 = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        bit_stream_V_address1 = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        bit_stream_V_address1 = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        bit_stream_V_address1 = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        bit_stream_V_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        bit_stream_V_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        bit_stream_V_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        bit_stream_V_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        bit_stream_V_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        bit_stream_V_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        bit_stream_V_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        bit_stream_V_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        bit_stream_V_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        bit_stream_V_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        bit_stream_V_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bit_stream_V_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bit_stream_V_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bit_stream_V_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bit_stream_V_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bit_stream_V_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bit_stream_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bit_stream_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        bit_stream_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bit_stream_V_address1 = 64'd0;
    end else begin
        bit_stream_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        bit_stream_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bit_stream_V_ce0 = grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_ce0;
    end else begin
        bit_stream_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        bit_stream_V_ce1 = 1'b1;
    end else begin
        bit_stream_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bit_stream_V_we0 = grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_bit_stream_V_we0;
    end else begin
        bit_stream_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dst_tmp_V_address0 = grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_tmp_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dst_tmp_V_address0 = grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_address0;
    end else begin
        dst_tmp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dst_tmp_V_ce0 = grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_tmp_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        dst_tmp_V_ce0 = grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_ce0;
    end else begin
        dst_tmp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        dst_tmp_V_we0 = grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_dst_tmp_V_we0;
    end else begin
        dst_tmp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln103_fu_1075_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_fu_1096_p2 = (count_3_fu_304 + 16'd64);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign dst_address0 = grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_address0;

assign dst_ce0 = grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_ce0;

assign dst_d0 = grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_d0;

assign dst_we0 = grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_dst_we0;

assign grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start = grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_ap_start_reg;

assign grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start = grp_polar_encode_Pipeline_VITIS_LOOP_119_3_fu_848_ap_start_reg;

assign grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start = grp_polar_encode_Pipeline_VITIS_LOOP_128_5_fu_1047_ap_start_reg;

assign i_7_fu_1081_p2 = (i_fu_300 + 12'd4);

assign icmp_ln103_fu_1075_p2 = ((i_fu_300 < 12'd3072) ? 1'b1 : 1'b0);

assign src_address0 = grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_src_address0;

assign src_ce0 = grp_polar_encode_Pipeline_VITIS_LOOP_104_2_fu_837_src_ce0;

endmodule //top_polar_encode
