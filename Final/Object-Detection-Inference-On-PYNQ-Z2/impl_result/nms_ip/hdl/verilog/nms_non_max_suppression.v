// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nms_non_max_suppression (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bboxes_address0,
        bboxes_ce0,
        bboxes_we0,
        bboxes_d0,
        bboxes_q0,
        bboxes_address1,
        bboxes_ce1,
        bboxes_we1,
        bboxes_d1,
        bboxes_q1,
        class_preds_address0,
        class_preds_ce0,
        class_preds_we0,
        class_preds_d0,
        class_preds_q0,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        nms_bboxes,
        nms_class_preds,
        ap_return
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] bboxes_address0;
output   bboxes_ce0;
output   bboxes_we0;
output  [30:0] bboxes_d0;
input  [30:0] bboxes_q0;
output  [5:0] bboxes_address1;
output   bboxes_ce1;
output   bboxes_we1;
output  [30:0] bboxes_d1;
input  [30:0] bboxes_q1;
output  [3:0] class_preds_address0;
output   class_preds_ce0;
output   class_preds_we0;
output  [4:0] class_preds_d0;
input  [4:0] class_preds_q0;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] nms_bboxes;
input  [63:0] nms_class_preds;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] bboxes_address0;
reg bboxes_ce0;
reg bboxes_we0;
reg[5:0] bboxes_address1;
reg bboxes_ce1;
reg bboxes_we1;
reg[3:0] class_preds_address0;
reg class_preds_ce0;
reg class_preds_we0;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg[31:0] m_axi_gmem_AWLEN;
reg m_axi_gmem_WVALID;
reg[31:0] m_axi_gmem_WDATA;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state16;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
reg  signed [30:0] reg_471;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
reg  signed [30:0] reg_475;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln143_fu_500_p2;
reg   [0:0] icmp_ln143_reg_1239;
wire    ap_CS_fsm_state6;
wire   [3:0] nms_idx_4_fu_506_p2;
reg   [3:0] nms_idx_4_reg_1243;
wire   [63:0] zext_ln145_1_fu_534_p1;
reg   [63:0] zext_ln145_1_reg_1248;
wire    ap_CS_fsm_state7;
wire   [63:0] add_ln145_fu_543_p2;
reg   [63:0] add_ln145_reg_1253;
wire   [0:0] brmerge_fu_555_p2;
reg   [0:0] brmerge_reg_1258;
wire   [5:0] add_ln156_fu_573_p2;
reg   [5:0] add_ln156_reg_1262;
reg  signed [30:0] chosen_bbox_V_2_reg_1285;
wire  signed [31:0] sext_ln154_fu_624_p1;
reg  signed [31:0] sext_ln154_reg_1300;
wire  signed [31:0] sext_ln154_1_fu_628_p1;
reg  signed [31:0] sext_ln154_1_reg_1305;
wire  signed [31:0] sext_ln154_2_fu_632_p1;
reg  signed [31:0] sext_ln154_2_reg_1312;
wire  signed [31:0] sext_ln154_3_fu_635_p1;
reg  signed [31:0] sext_ln154_3_reg_1319;
wire  signed [31:0] sext_ln154_4_fu_639_p1;
reg  signed [31:0] sext_ln154_4_reg_1325;
wire   [0:0] icmp_ln1086_fu_643_p2;
reg   [0:0] icmp_ln1086_reg_1331;
wire   [0:0] grp_fu_479_p3;
reg   [0:0] p_Result_9_reg_1335;
wire   [31:0] tmp_V_4_fu_655_p3;
reg   [31:0] tmp_V_4_reg_1340;
wire   [31:0] sub_ln1095_fu_681_p2;
reg   [31:0] sub_ln1095_reg_1347;
wire   [5:0] trunc_ln1098_fu_687_p1;
reg   [5:0] trunc_ln1098_reg_1354;
wire   [10:0] trunc_ln1094_fu_691_p1;
reg   [10:0] trunc_ln1094_reg_1359;
wire   [1:0] or_ln_fu_781_p3;
reg   [1:0] or_ln_reg_1364;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln1109_fu_789_p2;
reg   [0:0] icmp_ln1109_reg_1369;
reg   [62:0] m_reg_1374;
wire    ap_CS_fsm_state12;
reg   [0:0] p_Result_7_reg_1379;
reg   [51:0] tmp_5_reg_1384;
wire   [63:0] p_Result_11_fu_900_p5;
reg   [63:0] p_Result_11_reg_1389;
wire    ap_CS_fsm_state13;
wire   [0:0] notlhs_fu_912_p2;
reg   [0:0] notlhs_reg_1394;
wire   [0:0] notrhs_fu_918_p2;
reg   [0:0] notrhs_reg_1399;
wire   [63:0] bitcast_ln800_fu_923_p1;
wire    ap_CS_fsm_state14;
wire   [31:0] div_i_i_i_fu_980_p3;
reg   [31:0] div_i_i_i_reg_1412;
wire    ap_CS_fsm_state15;
wire   [0:0] empty_44_fu_931_p2;
wire   [31:0] div_i_i1570_i_fu_1039_p3;
reg   [31:0] div_i_i1570_i_reg_1418;
reg   [63:0] gmem_addr_reg_1424;
reg   [63:0] gmem_addr_1_reg_1434;
wire  signed [31:0] rhs_4_fu_1090_p2;
reg   [31:0] rhs_4_reg_1440;
wire  signed [31:0] rhs_5_fu_1094_p2;
reg   [31:0] rhs_5_reg_1445;
wire  signed [31:0] lhs_V_4_fu_1098_p2;
reg   [31:0] lhs_V_4_reg_1450;
wire  signed [31:0] lhs_V_5_fu_1102_p2;
reg   [31:0] lhs_V_5_reg_1455;
wire   [32:0] ret_V_6_fu_1114_p2;
reg   [32:0] ret_V_6_reg_1460;
wire   [32:0] ret_V_3_fu_1128_p2;
reg   [32:0] ret_V_3_reg_1465;
reg   [31:0] top_load_1_reg_1470;
wire  signed [59:0] ret_V_2_cast_fu_1144_p1;
wire  signed [59:0] ret_V_3_cast_fu_1147_p1;
reg   [4:0] chosen_class_pred_reg_1490;
reg   [31:0] box_1_area_V_reg_1496;
wire   [31:0] j_fu_1166_p2;
reg   [31:0] j_reg_1503;
wire   [31:0] box_1_area_V_1_fu_1200_p3;
reg   [31:0] box_1_area_V_1_reg_1508;
reg   [3:0] remain_list_address0;
reg    remain_list_ce0;
reg    remain_list_we0;
reg   [0:0] remain_list_d0;
wire   [0:0] remain_list_q0;
reg   [3:0] remain_list_address1;
reg    remain_list_ce1;
reg    remain_list_we1;
reg   [0:0] remain_list_d1;
wire    grp_insertion_sort_fu_433_ap_start;
wire    grp_insertion_sort_fu_433_ap_done;
wire    grp_insertion_sort_fu_433_ap_idle;
wire    grp_insertion_sort_fu_433_ap_ready;
wire   [5:0] grp_insertion_sort_fu_433_bboxes_address0;
wire    grp_insertion_sort_fu_433_bboxes_ce0;
wire    grp_insertion_sort_fu_433_bboxes_we0;
wire   [30:0] grp_insertion_sort_fu_433_bboxes_d0;
wire   [5:0] grp_insertion_sort_fu_433_bboxes_address1;
wire    grp_insertion_sort_fu_433_bboxes_ce1;
wire    grp_insertion_sort_fu_433_bboxes_we1;
wire   [30:0] grp_insertion_sort_fu_433_bboxes_d1;
wire   [3:0] grp_insertion_sort_fu_433_class_preds_address0;
wire    grp_insertion_sort_fu_433_class_preds_ce0;
wire    grp_insertion_sort_fu_433_class_preds_we0;
wire   [4:0] grp_insertion_sort_fu_433_class_preds_d0;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_idle;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_ready;
wire   [3:0] grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_address0;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_ce0;
wire   [0:0] grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_return;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_idle;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_ready;
wire   [3:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_address0;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_ce0;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_we0;
wire   [0:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_d0;
wire   [3:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_address0;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_ce0;
wire   [5:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address0;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce0;
wire   [5:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address1;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce1;
wire   [31:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o_ap_vld;
wire   [63:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din0;
wire   [63:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din1;
wire   [4:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_opcode;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_ce;
wire  signed [32:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din0;
wire  signed [32:0] grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din1;
wire    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_ce;
reg   [0:0] empty_flag_reg_419;
reg    grp_insertion_sort_fu_433_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg;
reg    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg;
reg   [31:0] top_fu_176;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln156_fu_579_p1;
wire   [63:0] zext_ln157_fu_589_p1;
wire   [63:0] zext_ln158_fu_599_p1;
wire   [63:0] zext_ln159_fu_609_p1;
wire   [63:0] zext_ln160_fu_619_p1;
wire   [63:0] zext_ln162_fu_1138_p1;
wire  signed [63:0] sext_ln202_fu_1056_p1;
wire  signed [63:0] sext_ln202_1_fu_1080_p1;
reg    ap_block_state17_io;
wire   [31:0] zext_ln155_fu_1208_p1;
reg   [3:0] nms_idx_fu_180;
reg   [63:0] grp_fu_463_p0;
reg   [63:0] grp_fu_463_p1;
wire   [7:0] shl_ln_fu_516_p3;
wire   [5:0] shl_ln145_1_fu_527_p3;
wire   [63:0] add_ln145_1_fu_538_p2;
wire   [63:0] zext_ln145_fu_523_p1;
wire   [0:0] targetBlock_not_fu_549_p2;
wire   [3:0] trunc_ln156_fu_561_p1;
wire   [5:0] shl_ln1_fu_565_p3;
wire   [5:0] trunc_ln143_fu_512_p1;
wire   [5:0] add_ln157_fu_584_p2;
wire   [5:0] add_ln158_fu_594_p2;
wire   [5:0] add_ln159_fu_604_p2;
wire   [5:0] add_ln160_fu_614_p2;
wire  signed [30:0] sext_ln154_3_fu_635_p0;
wire  signed [30:0] sext_ln154_4_fu_639_p0;
wire   [31:0] tmp_V_fu_649_p2;
reg   [31:0] p_Result_10_fu_663_p4;
reg   [31:0] l_fu_673_p3;
wire   [31:0] lsb_index_fu_695_p2;
wire   [30:0] tmp_10_fu_700_p4;
wire   [5:0] sub_ln1098_fu_716_p2;
wire   [31:0] zext_ln1098_fu_721_p1;
wire   [31:0] lshr_ln1098_fu_725_p2;
wire   [31:0] p_Result_s_fu_731_p2;
wire   [0:0] icmp_ln1097_fu_710_p2;
wire   [0:0] icmp_ln1098_fu_736_p2;
wire   [0:0] tmp_11_fu_748_p3;
wire   [0:0] p_Result_1_fu_762_p3;
wire   [0:0] xor_ln1100_fu_756_p2;
wire   [0:0] and_ln1100_fu_769_p2;
wire   [0:0] a_fu_742_p2;
wire   [0:0] or_ln1100_fu_775_p2;
wire   [31:0] add_ln1109_fu_798_p2;
wire   [63:0] zext_ln1108_fu_795_p1;
wire   [63:0] zext_ln1109_fu_803_p1;
wire   [31:0] sub_ln1110_fu_813_p2;
wire   [63:0] zext_ln1110_fu_818_p1;
wire   [63:0] lshr_ln1109_fu_807_p2;
wire   [63:0] shl_ln1110_fu_822_p2;
wire   [63:0] m_7_fu_828_p3;
wire   [63:0] zext_ln1112_fu_835_p1;
wire   [63:0] m_8_fu_838_p2;
wire   [10:0] sub_ln1116_fu_882_p2;
wire   [10:0] select_ln1094_fu_875_p3;
wire   [10:0] add_ln1122_fu_887_p2;
wire   [63:0] zext_ln1113_fu_872_p1;
wire   [11:0] tmp_1_fu_893_p3;
wire   [0:0] empty_43_fu_927_p2;
wire   [0:0] grp_fu_463_p2;
wire   [31:0] p_neg10_fu_937_p2;
wire   [30:0] p_lshr1_fu_942_p4;
wire   [31:0] p_lshr1_cast_fu_952_p1;
wire   [29:0] tmp_7_fu_962_p4;
wire  signed [30:0] p_lshr_f13_cast_fu_972_p1;
wire   [31:0] p_neg_t12_fu_956_p2;
wire   [31:0] p_lshr_f13_cast_cast_fu_976_p1;
wire   [31:0] p_neg_fu_996_p2;
wire   [30:0] p_lshr_fu_1001_p4;
wire   [31:0] p_lshr_cast_fu_1011_p1;
wire   [29:0] tmp_9_fu_1021_p4;
wire  signed [30:0] p_lshr_f_cast_fu_1031_p1;
wire   [0:0] tmp_14_fu_988_p3;
wire   [31:0] p_neg_t_fu_1015_p2;
wire   [31:0] p_lshr_f_cast_cast_fu_1035_p1;
wire   [61:0] trunc_ln4_fu_1047_p4;
wire   [63:0] add_ln202_fu_1066_p2;
wire   [61:0] trunc_ln202_1_fu_1070_p4;
wire  signed [32:0] lhs_V_2_fu_1106_p1;
wire  signed [32:0] rhs_2_fu_1110_p1;
wire  signed [32:0] lhs_V_3_fu_1120_p1;
wire  signed [32:0] rhs_3_fu_1124_p1;
reg  signed [32:0] grp_fu_1150_p0;
reg  signed [32:0] grp_fu_1150_p1;
wire   [59:0] grp_fu_1150_p2;
wire   [59:0] p_shl7_fu_1177_p3;
wire   [59:0] r_V_6_fu_1184_p2;
wire   [0:0] cmp_i247_i_fu_1172_p2;
wire   [31:0] conv_i_i_i184_i_fu_1190_p4;
reg    grp_fu_463_ce;
reg   [4:0] grp_fu_463_opcode;
reg    grp_fu_1150_ce;
reg   [26:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 grp_insertion_sort_fu_433_ap_start_reg = 1'b0;
#0 grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg = 1'b0;
#0 grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg = 1'b0;
end

nms_non_max_suppression_remain_list_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
remain_list_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(remain_list_address0),
    .ce0(remain_list_ce0),
    .we0(remain_list_we0),
    .d0(remain_list_d0),
    .q0(remain_list_q0),
    .address1(remain_list_address1),
    .ce1(remain_list_ce1),
    .we1(remain_list_we1),
    .d1(remain_list_d1)
);

nms_insertion_sort grp_insertion_sort_fu_433(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_insertion_sort_fu_433_ap_start),
    .ap_done(grp_insertion_sort_fu_433_ap_done),
    .ap_idle(grp_insertion_sort_fu_433_ap_idle),
    .ap_ready(grp_insertion_sort_fu_433_ap_ready),
    .bboxes_address0(grp_insertion_sort_fu_433_bboxes_address0),
    .bboxes_ce0(grp_insertion_sort_fu_433_bboxes_ce0),
    .bboxes_we0(grp_insertion_sort_fu_433_bboxes_we0),
    .bboxes_d0(grp_insertion_sort_fu_433_bboxes_d0),
    .bboxes_q0(bboxes_q0),
    .bboxes_address1(grp_insertion_sort_fu_433_bboxes_address1),
    .bboxes_ce1(grp_insertion_sort_fu_433_bboxes_ce1),
    .bboxes_we1(grp_insertion_sort_fu_433_bboxes_we1),
    .bboxes_d1(grp_insertion_sort_fu_433_bboxes_d1),
    .bboxes_q1(bboxes_q1),
    .class_preds_address0(grp_insertion_sort_fu_433_class_preds_address0),
    .class_preds_ce0(grp_insertion_sort_fu_433_class_preds_ce0),
    .class_preds_we0(grp_insertion_sort_fu_433_class_preds_we0),
    .class_preds_d0(grp_insertion_sort_fu_433_class_preds_d0),
    .class_preds_q0(class_preds_q0)
);

nms_non_max_suppression_Pipeline_LOOP_NMS_EMPTY grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start),
    .ap_done(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done),
    .ap_idle(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_idle),
    .ap_ready(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_ready),
    .remain_list_q0(remain_list_q0),
    .remain_list_address0(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_address0),
    .remain_list_ce0(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_ce0),
    .ap_return(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_return)
);

nms_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start),
    .ap_done(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done),
    .ap_idle(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_idle),
    .ap_ready(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_ready),
    .sext_ln166(j_reg_1503),
    .remain_list_address0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_address0),
    .remain_list_ce0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_ce0),
    .remain_list_we0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_we0),
    .remain_list_d0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_d0),
    .remain_list_q0(remain_list_q0),
    .class_preds_address0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_address0),
    .class_preds_ce0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_ce0),
    .class_preds_q0(class_preds_q0),
    .chosen_class_pred(chosen_class_pred_reg_1490),
    .bboxes_address0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address0),
    .bboxes_ce0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce0),
    .bboxes_q0(bboxes_q0),
    .bboxes_address1(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address1),
    .bboxes_ce1(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce1),
    .bboxes_q1(bboxes_q1),
    .rhs_4(rhs_4_reg_1440),
    .rhs_5(rhs_5_reg_1445),
    .lhs_V_4(lhs_V_4_reg_1450),
    .lhs_V_5(lhs_V_5_reg_1455),
    .box_1_area_V_1(box_1_area_V_1_reg_1508),
    .top_1_out_i(top_fu_176),
    .top_1_out_o(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o),
    .top_1_out_o_ap_vld(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o_ap_vld),
    .grp_fu_463_p_din0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din0),
    .grp_fu_463_p_din1(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din1),
    .grp_fu_463_p_opcode(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_opcode),
    .grp_fu_463_p_dout0(grp_fu_463_p2),
    .grp_fu_463_p_ce(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_ce),
    .grp_fu_1150_p_din0(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din0),
    .grp_fu_1150_p_din1(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din1),
    .grp_fu_1150_p_dout0(grp_fu_1150_p2),
    .grp_fu_1150_p_ce(grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_ce)
);

nms_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_463_p0),
    .din1(grp_fu_463_p1),
    .ce(grp_fu_463_ce),
    .opcode(grp_fu_463_opcode),
    .dout(grp_fu_463_p2)
);

nms_mul_33s_33s_60_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 60 ))
mul_33s_33s_60_2_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1150_p0),
    .din1(grp_fu_1150_p1),
    .ce(grp_fu_1150_ce),
    .dout(grp_fu_1150_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_insertion_sort_fu_433_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_insertion_sort_fu_433_ap_start_reg <= 1'b1;
        end else if ((grp_insertion_sort_fu_433_ap_ready == 1'b1)) begin
            grp_insertion_sort_fu_433_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln143_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg <= 1'b1;
        end else if ((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_ready == 1'b1)) begin
            grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg <= 1'b0;
    end else begin
        if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
            grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg <= 1'b1;
        end else if ((grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_ready == 1'b1)) begin
            grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_flag_reg_419 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (m_axi_gmem_BVALID == 1'b1))) begin
        empty_flag_reg_419 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        nms_idx_fu_180 <= 4'd0;
    end else if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        nms_idx_fu_180 <= nms_idx_4_reg_1243;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        top_fu_176 <= 32'd0;
    end else if (((grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        top_fu_176 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln145_reg_1253 <= add_ln145_fu_543_p2;
        brmerge_reg_1258 <= brmerge_fu_555_p2;
        zext_ln145_1_reg_1248[5 : 2] <= zext_ln145_1_fu_534_p1[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_fu_555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        add_ln156_reg_1262 <= add_ln156_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        box_1_area_V_1_reg_1508 <= box_1_area_V_1_fu_1200_p3;
        j_reg_1503 <= j_fu_1166_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        box_1_area_V_reg_1496 <= {{grp_fu_1150_p2[59:28]}};
        chosen_class_pred_reg_1490 <= class_preds_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        chosen_bbox_V_2_reg_1285 <= bboxes_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_44_fu_931_p2 == 1'd0) & (icmp_ln1086_reg_1331 == 1'd0) & (brmerge_reg_1258 == 1'd1) & (icmp_ln143_reg_1239 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        div_i_i1570_i_reg_1418 <= div_i_i1570_i_fu_1039_p3;
        div_i_i_i_reg_1412 <= div_i_i_i_fu_980_p3;
        gmem_addr_1_reg_1434 <= sext_ln202_1_fu_1080_p1;
        gmem_addr_reg_1424 <= sext_ln202_fu_1056_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln1086_reg_1331 <= icmp_ln1086_fu_643_p2;
        sext_ln154_1_reg_1305 <= sext_ln154_1_fu_628_p1;
        sext_ln154_2_reg_1312 <= sext_ln154_2_fu_632_p1;
        sext_ln154_3_reg_1319 <= sext_ln154_3_fu_635_p1;
        sext_ln154_4_reg_1325 <= sext_ln154_4_fu_639_p1;
        sext_ln154_reg_1300 <= sext_ln154_fu_624_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln1109_reg_1369 <= icmp_ln1109_fu_789_p2;
        or_ln_reg_1364[0] <= or_ln_fu_781_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln143_reg_1239 <= icmp_ln143_fu_500_p2;
        nms_idx_4_reg_1243 <= nms_idx_4_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        lhs_V_4_reg_1450 <= lhs_V_4_fu_1098_p2;
        lhs_V_5_reg_1455 <= lhs_V_5_fu_1102_p2;
        ret_V_3_reg_1465 <= ret_V_3_fu_1128_p2;
        ret_V_6_reg_1460 <= ret_V_6_fu_1114_p2;
        rhs_4_reg_1440 <= rhs_4_fu_1090_p2;
        rhs_5_reg_1445 <= rhs_5_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        m_reg_1374 <= {{m_8_fu_838_p2[63:1]}};
        p_Result_7_reg_1379 <= m_8_fu_838_p2[32'd54];
        tmp_5_reg_1384 <= {{m_8_fu_838_p2[52:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        notlhs_reg_1394 <= notlhs_fu_912_p2;
        notrhs_reg_1399 <= notrhs_fu_918_p2;
        p_Result_11_reg_1389 <= p_Result_11_fu_900_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1086_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        p_Result_9_reg_1335 <= reg_471[32'd30];
        sub_ln1095_reg_1347 <= sub_ln1095_fu_681_p2;
        tmp_V_4_reg_1340 <= tmp_V_4_fu_655_p3;
        trunc_ln1094_reg_1359 <= trunc_ln1094_fu_691_p1;
        trunc_ln1098_reg_1354 <= trunc_ln1098_fu_687_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_471 <= bboxes_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_475 <= bboxes_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        top_load_1_reg_1470 <= top_fu_176;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state17_io)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem_WREADY == 1'b0) | (grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done == 1'b0))) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_insertion_sort_fu_433_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state15) & ((icmp_ln143_reg_1239 == 1'd0) | ((brmerge_reg_1258 == 1'd0) | ((empty_44_fu_931_p2 == 1'd1) | (icmp_ln1086_reg_1331 == 1'd1))))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((icmp_ln143_reg_1239 == 1'd0) | ((brmerge_reg_1258 == 1'd0) | ((empty_44_fu_931_p2 == 1'd1) | (icmp_ln1086_reg_1331 == 1'd1)))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bboxes_address0 = zext_ln159_fu_609_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bboxes_address0 = zext_ln158_fu_599_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bboxes_address0 = zext_ln156_fu_579_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        bboxes_address0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bboxes_address0 = grp_insertion_sort_fu_433_bboxes_address0;
    end else begin
        bboxes_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        bboxes_address1 = zext_ln160_fu_619_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bboxes_address1 = zext_ln157_fu_589_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        bboxes_address1 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bboxes_address1 = grp_insertion_sort_fu_433_bboxes_address1;
    end else begin
        bboxes_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        bboxes_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        bboxes_ce0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bboxes_ce0 = grp_insertion_sort_fu_433_bboxes_ce0;
    end else begin
        bboxes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        bboxes_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        bboxes_ce1 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bboxes_ce1 = grp_insertion_sort_fu_433_bboxes_ce1;
    end else begin
        bboxes_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bboxes_we0 = grp_insertion_sort_fu_433_bboxes_we0;
    end else begin
        bboxes_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bboxes_we1 = grp_insertion_sort_fu_433_bboxes_we1;
    end else begin
        bboxes_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        class_preds_address0 = zext_ln162_fu_1138_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        class_preds_address0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        class_preds_address0 = grp_insertion_sort_fu_433_class_preds_address0;
    end else begin
        class_preds_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17))) begin
        class_preds_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        class_preds_ce0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        class_preds_ce0 = grp_insertion_sort_fu_433_class_preds_ce0;
    end else begin
        class_preds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        class_preds_we0 = grp_insertion_sort_fu_433_class_preds_we0;
    end else begin
        class_preds_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1150_ce = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_ce;
    end else if ((((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_fu_1150_ce = 1'b1;
    end else begin
        grp_fu_1150_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1150_p0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1150_p0 = ret_V_3_cast_fu_1147_p1;
    end else begin
        grp_fu_1150_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1150_p1 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1150_p1 = ret_V_2_cast_fu_1144_p1;
    end else begin
        grp_fu_1150_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_463_ce = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_ce;
    end else begin
        grp_fu_463_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_463_opcode = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_463_opcode = 5'd5;
    end else begin
        grp_fu_463_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_463_p0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_463_p0 = bitcast_ln800_fu_923_p1;
    end else begin
        grp_fu_463_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_463_p1 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_463_p1 = 64'd4600877379321698714;
    end else begin
        grp_fu_463_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_gmem_AWADDR = gmem_addr_1_reg_1434;
    end else if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        m_axi_gmem_AWADDR = gmem_addr_reg_1424;
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_gmem_AWLEN = 32'd1;
    end else if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        m_axi_gmem_AWLEN = 32'd5;
    end else begin
        m_axi_gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17)) | ((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state27) & (m_axi_gmem_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (m_axi_gmem_BVALID == 1'b1)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        m_axi_gmem_WDATA = zext_ln155_fu_1208_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        m_axi_gmem_WDATA = sext_ln154_4_reg_1325;
    end else if (((grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        m_axi_gmem_WDATA = sext_ln154_3_reg_1319;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        m_axi_gmem_WDATA = sext_ln154_2_reg_1312;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        m_axi_gmem_WDATA = sext_ln154_1_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_axi_gmem_WDATA = sext_ln154_reg_1300;
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((~((m_axi_gmem_WREADY == 1'b0) | (grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        remain_list_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        remain_list_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        remain_list_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        remain_list_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        remain_list_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        remain_list_address0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        remain_list_address0 = grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_address0;
    end else begin
        remain_list_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        remain_list_address1 = zext_ln162_fu_1138_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        remain_list_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        remain_list_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        remain_list_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        remain_list_address1 = 64'd0;
    end else begin
        remain_list_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | ((grp_insertion_sort_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        remain_list_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        remain_list_ce0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        remain_list_ce0 = grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_ce0;
    end else begin
        remain_list_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((grp_insertion_sort_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        remain_list_ce1 = 1'b1;
    end else begin
        remain_list_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state5))) begin
        remain_list_d0 = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        remain_list_d0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_d0;
    end else begin
        remain_list_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        remain_list_d1 = 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        remain_list_d1 = 1'd1;
    end else begin
        remain_list_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | ((grp_insertion_sort_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        remain_list_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        remain_list_we0 = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_we0;
    end else begin
        remain_list_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((grp_insertion_sort_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        remain_list_we1 = 1'b1;
    end else begin
        remain_list_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_insertion_sort_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln143_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done == 1'b1) & (brmerge_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done == 1'b1) & (brmerge_fu_555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln1086_fu_643_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((icmp_ln143_reg_1239 == 1'd0) | ((brmerge_reg_1258 == 1'd0) | ((empty_44_fu_931_p2 == 1'd1) | (icmp_ln1086_reg_1331 == 1'd1)))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b0 == ap_block_state17_io) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((m_axi_gmem_WREADY == 1'b0) | (grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_742_p2 = (icmp_ln1098_fu_736_p2 & icmp_ln1097_fu_710_p2);

assign add_ln1109_fu_798_p2 = ($signed(sub_ln1095_reg_1347) + $signed(32'd4294967242));

assign add_ln1122_fu_887_p2 = (sub_ln1116_fu_882_p2 + select_ln1094_fu_875_p3);

assign add_ln145_1_fu_538_p2 = (zext_ln145_1_fu_534_p1 + nms_bboxes);

assign add_ln145_fu_543_p2 = (add_ln145_1_fu_538_p2 + zext_ln145_fu_523_p1);

assign add_ln156_fu_573_p2 = (shl_ln1_fu_565_p3 + trunc_ln143_fu_512_p1);

assign add_ln157_fu_584_p2 = (add_ln156_reg_1262 + 6'd1);

assign add_ln158_fu_594_p2 = (add_ln156_reg_1262 + 6'd2);

assign add_ln159_fu_604_p2 = (add_ln156_reg_1262 + 6'd3);

assign add_ln160_fu_614_p2 = (add_ln156_reg_1262 + 6'd4);

assign add_ln202_fu_1066_p2 = (zext_ln145_1_reg_1248 + nms_class_preds);

assign and_ln1100_fu_769_p2 = (xor_ln1100_fu_756_p2 & p_Result_1_fu_762_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state17_io = ((m_axi_gmem_WREADY == 1'b0) | (m_axi_gmem_AWREADY == 1'b0));
end

assign ap_return = nms_idx_fu_180;

assign bboxes_d0 = grp_insertion_sort_fu_433_bboxes_d0;

assign bboxes_d1 = grp_insertion_sort_fu_433_bboxes_d1;

assign bitcast_ln800_fu_923_p1 = p_Result_11_reg_1389;

assign box_1_area_V_1_fu_1200_p3 = ((cmp_i247_i_fu_1172_p2[0:0] == 1'b1) ? box_1_area_V_reg_1496 : conv_i_i_i184_i_fu_1190_p4);

assign brmerge_fu_555_p2 = (targetBlock_not_fu_549_p2 | empty_flag_reg_419);

assign class_preds_d0 = grp_insertion_sort_fu_433_class_preds_d0;

assign cmp_i247_i_fu_1172_p2 = (($signed(box_1_area_V_reg_1496) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign conv_i_i_i184_i_fu_1190_p4 = {{r_V_6_fu_1184_p2[59:28]}};

assign div_i_i1570_i_fu_1039_p3 = ((tmp_14_fu_988_p3[0:0] == 1'b1) ? p_neg_t_fu_1015_p2 : p_lshr_f_cast_cast_fu_1035_p1);

assign div_i_i_i_fu_980_p3 = ((grp_fu_479_p3[0:0] == 1'b1) ? p_neg_t12_fu_956_p2 : p_lshr_f13_cast_cast_fu_976_p1);

assign empty_43_fu_927_p2 = (notrhs_reg_1399 | notlhs_reg_1394);

assign empty_44_fu_931_p2 = (grp_fu_463_p2 & empty_43_fu_927_p2);

assign grp_fu_479_p3 = reg_471[32'd30];

assign grp_insertion_sort_fu_433_ap_start = grp_insertion_sort_fu_433_ap_start_reg;

assign grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start = grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg;

assign grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start = grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg;

assign icmp_ln1086_fu_643_p2 = ((reg_471 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln1097_fu_710_p2 = (($signed(tmp_10_fu_700_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1098_fu_736_p2 = ((p_Result_s_fu_731_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1109_fu_789_p2 = (($signed(lsb_index_fu_695_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_500_p2 = ((nms_idx_fu_180 < 4'd9) ? 1'b1 : 1'b0);

assign j_fu_1166_p2 = (top_load_1_reg_1470 + 32'd1);


always @ (p_Result_10_fu_663_p4) begin
    if (p_Result_10_fu_663_p4[0] == 1'b1) begin
        l_fu_673_p3 = 32'd0;
    end else if (p_Result_10_fu_663_p4[1] == 1'b1) begin
        l_fu_673_p3 = 32'd1;
    end else if (p_Result_10_fu_663_p4[2] == 1'b1) begin
        l_fu_673_p3 = 32'd2;
    end else if (p_Result_10_fu_663_p4[3] == 1'b1) begin
        l_fu_673_p3 = 32'd3;
    end else if (p_Result_10_fu_663_p4[4] == 1'b1) begin
        l_fu_673_p3 = 32'd4;
    end else if (p_Result_10_fu_663_p4[5] == 1'b1) begin
        l_fu_673_p3 = 32'd5;
    end else if (p_Result_10_fu_663_p4[6] == 1'b1) begin
        l_fu_673_p3 = 32'd6;
    end else if (p_Result_10_fu_663_p4[7] == 1'b1) begin
        l_fu_673_p3 = 32'd7;
    end else if (p_Result_10_fu_663_p4[8] == 1'b1) begin
        l_fu_673_p3 = 32'd8;
    end else if (p_Result_10_fu_663_p4[9] == 1'b1) begin
        l_fu_673_p3 = 32'd9;
    end else if (p_Result_10_fu_663_p4[10] == 1'b1) begin
        l_fu_673_p3 = 32'd10;
    end else if (p_Result_10_fu_663_p4[11] == 1'b1) begin
        l_fu_673_p3 = 32'd11;
    end else if (p_Result_10_fu_663_p4[12] == 1'b1) begin
        l_fu_673_p3 = 32'd12;
    end else if (p_Result_10_fu_663_p4[13] == 1'b1) begin
        l_fu_673_p3 = 32'd13;
    end else if (p_Result_10_fu_663_p4[14] == 1'b1) begin
        l_fu_673_p3 = 32'd14;
    end else if (p_Result_10_fu_663_p4[15] == 1'b1) begin
        l_fu_673_p3 = 32'd15;
    end else if (p_Result_10_fu_663_p4[16] == 1'b1) begin
        l_fu_673_p3 = 32'd16;
    end else if (p_Result_10_fu_663_p4[17] == 1'b1) begin
        l_fu_673_p3 = 32'd17;
    end else if (p_Result_10_fu_663_p4[18] == 1'b1) begin
        l_fu_673_p3 = 32'd18;
    end else if (p_Result_10_fu_663_p4[19] == 1'b1) begin
        l_fu_673_p3 = 32'd19;
    end else if (p_Result_10_fu_663_p4[20] == 1'b1) begin
        l_fu_673_p3 = 32'd20;
    end else if (p_Result_10_fu_663_p4[21] == 1'b1) begin
        l_fu_673_p3 = 32'd21;
    end else if (p_Result_10_fu_663_p4[22] == 1'b1) begin
        l_fu_673_p3 = 32'd22;
    end else if (p_Result_10_fu_663_p4[23] == 1'b1) begin
        l_fu_673_p3 = 32'd23;
    end else if (p_Result_10_fu_663_p4[24] == 1'b1) begin
        l_fu_673_p3 = 32'd24;
    end else if (p_Result_10_fu_663_p4[25] == 1'b1) begin
        l_fu_673_p3 = 32'd25;
    end else if (p_Result_10_fu_663_p4[26] == 1'b1) begin
        l_fu_673_p3 = 32'd26;
    end else if (p_Result_10_fu_663_p4[27] == 1'b1) begin
        l_fu_673_p3 = 32'd27;
    end else if (p_Result_10_fu_663_p4[28] == 1'b1) begin
        l_fu_673_p3 = 32'd28;
    end else if (p_Result_10_fu_663_p4[29] == 1'b1) begin
        l_fu_673_p3 = 32'd29;
    end else if (p_Result_10_fu_663_p4[30] == 1'b1) begin
        l_fu_673_p3 = 32'd30;
    end else if (p_Result_10_fu_663_p4[31] == 1'b1) begin
        l_fu_673_p3 = 32'd31;
    end else begin
        l_fu_673_p3 = 32'd32;
    end
end

assign lhs_V_2_fu_1106_p1 = lhs_V_4_fu_1098_p2;

assign lhs_V_3_fu_1120_p1 = lhs_V_5_fu_1102_p2;

assign lhs_V_4_fu_1098_p2 = ($signed(sext_ln154_1_reg_1305) + $signed(div_i_i_i_reg_1412));

assign lhs_V_5_fu_1102_p2 = ($signed(sext_ln154_2_reg_1312) + $signed(div_i_i1570_i_reg_1418));

assign lsb_index_fu_695_p2 = ($signed(sub_ln1095_reg_1347) + $signed(32'd4294967243));

assign lshr_ln1098_fu_725_p2 = 32'd4294967295 >> zext_ln1098_fu_721_p1;

assign lshr_ln1109_fu_807_p2 = zext_ln1108_fu_795_p1 >> zext_ln1109_fu_803_p1;

assign m_7_fu_828_p3 = ((icmp_ln1109_reg_1369[0:0] == 1'b1) ? lshr_ln1109_fu_807_p2 : shl_ln1110_fu_822_p2);

assign m_8_fu_838_p2 = (m_7_fu_828_p3 + zext_ln1112_fu_835_p1);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign nms_idx_4_fu_506_p2 = (nms_idx_fu_180 + 4'd1);

assign notlhs_fu_912_p2 = ((add_ln1122_fu_887_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs_fu_918_p2 = ((tmp_5_reg_1384 == 52'd0) ? 1'b1 : 1'b0);

assign or_ln1100_fu_775_p2 = (and_ln1100_fu_769_p2 | a_fu_742_p2);

assign or_ln_fu_781_p3 = {{1'd0}, {or_ln1100_fu_775_p2}};

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_655_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_10_fu_663_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_10_fu_663_p4[ap_tvar_int_0] = tmp_V_4_fu_655_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_11_fu_900_p5 = {{tmp_1_fu_893_p3}, {zext_ln1113_fu_872_p1[51:0]}};

assign p_Result_1_fu_762_p3 = tmp_V_4_reg_1340[lsb_index_fu_695_p2];

assign p_Result_s_fu_731_p2 = (tmp_V_4_reg_1340 & lshr_ln1098_fu_725_p2);

assign p_lshr1_cast_fu_952_p1 = p_lshr1_fu_942_p4;

assign p_lshr1_fu_942_p4 = {{p_neg10_fu_937_p2[31:1]}};

assign p_lshr_cast_fu_1011_p1 = p_lshr_fu_1001_p4;

assign p_lshr_f13_cast_cast_fu_976_p1 = $unsigned(p_lshr_f13_cast_fu_972_p1);

assign p_lshr_f13_cast_fu_972_p1 = $signed(tmp_7_fu_962_p4);

assign p_lshr_f_cast_cast_fu_1035_p1 = $unsigned(p_lshr_f_cast_fu_1031_p1);

assign p_lshr_f_cast_fu_1031_p1 = $signed(tmp_9_fu_1021_p4);

assign p_lshr_fu_1001_p4 = {{p_neg_fu_996_p2[31:1]}};

assign p_neg10_fu_937_p2 = ($signed(32'd0) - $signed(sext_ln154_3_reg_1319));

assign p_neg_fu_996_p2 = ($signed(32'd0) - $signed(sext_ln154_4_reg_1325));

assign p_neg_t12_fu_956_p2 = (32'd0 - p_lshr1_cast_fu_952_p1);

assign p_neg_t_fu_1015_p2 = (32'd0 - p_lshr_cast_fu_1011_p1);

assign p_shl7_fu_1177_p3 = {{box_1_area_V_reg_1496}, {28'd0}};

assign r_V_6_fu_1184_p2 = (60'd0 - p_shl7_fu_1177_p3);

assign ret_V_2_cast_fu_1144_p1 = $signed(ret_V_6_reg_1460);

assign ret_V_3_cast_fu_1147_p1 = $signed(ret_V_3_reg_1465);

assign ret_V_3_fu_1128_p2 = ($signed(lhs_V_3_fu_1120_p1) - $signed(rhs_3_fu_1124_p1));

assign ret_V_6_fu_1114_p2 = ($signed(lhs_V_2_fu_1106_p1) - $signed(rhs_2_fu_1110_p1));

assign rhs_2_fu_1110_p1 = rhs_4_fu_1090_p2;

assign rhs_3_fu_1124_p1 = rhs_5_fu_1094_p2;

assign rhs_4_fu_1090_p2 = ($signed(sext_ln154_1_reg_1305) - $signed(div_i_i_i_reg_1412));

assign rhs_5_fu_1094_p2 = ($signed(sext_ln154_2_reg_1312) - $signed(div_i_i1570_i_reg_1418));

assign select_ln1094_fu_875_p3 = ((p_Result_7_reg_1379[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln154_1_fu_628_p1 = reg_475;

assign sext_ln154_2_fu_632_p1 = chosen_bbox_V_2_reg_1285;

assign sext_ln154_3_fu_635_p0 = bboxes_q0;

assign sext_ln154_3_fu_635_p1 = sext_ln154_3_fu_635_p0;

assign sext_ln154_4_fu_639_p0 = bboxes_q1;

assign sext_ln154_4_fu_639_p1 = sext_ln154_4_fu_639_p0;

assign sext_ln154_fu_624_p1 = reg_471;

assign sext_ln202_1_fu_1080_p1 = $signed(trunc_ln202_1_fu_1070_p4);

assign sext_ln202_fu_1056_p1 = $signed(trunc_ln4_fu_1047_p4);

assign shl_ln1110_fu_822_p2 = zext_ln1108_fu_795_p1 << zext_ln1110_fu_818_p1;

assign shl_ln145_1_fu_527_p3 = {{nms_idx_fu_180}, {2'd0}};

assign shl_ln1_fu_565_p3 = {{trunc_ln156_fu_561_p1}, {2'd0}};

assign shl_ln_fu_516_p3 = {{nms_idx_fu_180}, {4'd0}};

assign sub_ln1095_fu_681_p2 = (32'd32 - l_fu_673_p3);

assign sub_ln1098_fu_716_p2 = (6'd22 - trunc_ln1098_reg_1354);

assign sub_ln1110_fu_813_p2 = (32'd54 - sub_ln1095_reg_1347);

assign sub_ln1116_fu_882_p2 = (11'd4 - trunc_ln1094_reg_1359);

assign targetBlock_not_fu_549_p2 = (grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_return ^ 1'd1);

assign tmp_10_fu_700_p4 = {{lsb_index_fu_695_p2[31:1]}};

assign tmp_11_fu_748_p3 = lsb_index_fu_695_p2[32'd31];

assign tmp_14_fu_988_p3 = reg_475[32'd30];

assign tmp_1_fu_893_p3 = {{p_Result_9_reg_1335}, {add_ln1122_fu_887_p2}};

assign tmp_7_fu_962_p4 = {{reg_471[30:1]}};

assign tmp_9_fu_1021_p4 = {{reg_475[30:1]}};

assign tmp_V_4_fu_655_p3 = ((grp_fu_479_p3[0:0] == 1'b1) ? tmp_V_fu_649_p2 : sext_ln154_fu_624_p1);

assign tmp_V_fu_649_p2 = ($signed(32'd0) - $signed(sext_ln154_fu_624_p1));

assign trunc_ln1094_fu_691_p1 = l_fu_673_p3[10:0];

assign trunc_ln1098_fu_687_p1 = sub_ln1095_fu_681_p2[5:0];

assign trunc_ln143_fu_512_p1 = top_fu_176[5:0];

assign trunc_ln156_fu_561_p1 = top_fu_176[3:0];

assign trunc_ln202_1_fu_1070_p4 = {{add_ln202_fu_1066_p2[63:2]}};

assign trunc_ln4_fu_1047_p4 = {{add_ln145_reg_1253[63:2]}};

assign xor_ln1100_fu_756_p2 = (tmp_11_fu_748_p3 ^ 1'd1);

assign zext_ln1098_fu_721_p1 = sub_ln1098_fu_716_p2;

assign zext_ln1108_fu_795_p1 = tmp_V_4_reg_1340;

assign zext_ln1109_fu_803_p1 = add_ln1109_fu_798_p2;

assign zext_ln1110_fu_818_p1 = sub_ln1110_fu_813_p2;

assign zext_ln1112_fu_835_p1 = or_ln_reg_1364;

assign zext_ln1113_fu_872_p1 = m_reg_1374;

assign zext_ln145_1_fu_534_p1 = shl_ln145_1_fu_527_p3;

assign zext_ln145_fu_523_p1 = shl_ln_fu_516_p3;

assign zext_ln155_fu_1208_p1 = chosen_class_pred_reg_1490;

assign zext_ln156_fu_579_p1 = add_ln156_fu_573_p2;

assign zext_ln157_fu_589_p1 = add_ln157_fu_584_p2;

assign zext_ln158_fu_599_p1 = add_ln158_fu_594_p2;

assign zext_ln159_fu_609_p1 = add_ln159_fu_604_p2;

assign zext_ln160_fu_619_p1 = add_ln160_fu_614_p2;

assign zext_ln162_fu_1138_p1 = top_fu_176;

always @ (posedge ap_clk) begin
    zext_ln145_1_reg_1248[1:0] <= 2'b00;
    zext_ln145_1_reg_1248[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_1364[1] <= 1'b0;
end

endmodule //nms_non_max_suppression
