// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nms_nms_Pipeline_LOOP_C2B_ROW_LOOP_C2B_COL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        predictions_V_address0,
        predictions_V_ce0,
        predictions_V_q0,
        predictions_V_address1,
        predictions_V_ce1,
        predictions_V_q1,
        predictions_V_address2,
        predictions_V_ce2,
        predictions_V_q2,
        predictions_V_address3,
        predictions_V_ce3,
        predictions_V_q3,
        predictions_V_address4,
        predictions_V_ce4,
        predictions_V_q4,
        predictions_V_address5,
        predictions_V_ce5,
        predictions_V_q5,
        predictions_V_address6,
        predictions_V_ce6,
        predictions_V_q6,
        predictions_V_address7,
        predictions_V_ce7,
        predictions_V_q7,
        predictions_V_address8,
        predictions_V_ce8,
        predictions_V_q8,
        bboxes_V_address0,
        bboxes_V_ce0,
        bboxes_V_we0,
        bboxes_V_d0,
        bboxes_V_address1,
        bboxes_V_ce1,
        bboxes_V_we1,
        bboxes_V_d1,
        class_preds_address0,
        class_preds_ce0,
        class_preds_we0,
        class_preds_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] predictions_V_address0;
output   predictions_V_ce0;
input  [25:0] predictions_V_q0;
output  [8:0] predictions_V_address1;
output   predictions_V_ce1;
input  [25:0] predictions_V_q1;
output  [8:0] predictions_V_address2;
output   predictions_V_ce2;
input  [25:0] predictions_V_q2;
output  [8:0] predictions_V_address3;
output   predictions_V_ce3;
input  [25:0] predictions_V_q3;
output  [8:0] predictions_V_address4;
output   predictions_V_ce4;
input  [25:0] predictions_V_q4;
output  [8:0] predictions_V_address5;
output   predictions_V_ce5;
input  [25:0] predictions_V_q5;
output  [8:0] predictions_V_address6;
output   predictions_V_ce6;
input  [25:0] predictions_V_q6;
output  [8:0] predictions_V_address7;
output   predictions_V_ce7;
input  [25:0] predictions_V_q7;
output  [8:0] predictions_V_address8;
output   predictions_V_ce8;
input  [25:0] predictions_V_q8;
output  [5:0] bboxes_V_address0;
output   bboxes_V_ce0;
output   bboxes_V_we0;
output  [30:0] bboxes_V_d0;
output  [5:0] bboxes_V_address1;
output   bboxes_V_ce1;
output   bboxes_V_we1;
output  [30:0] bboxes_V_d1;
output  [3:0] class_preds_address0;
output   class_preds_ce0;
output   class_preds_we0;
output  [4:0] class_preds_d0;

reg ap_idle;
reg[8:0] predictions_V_address0;
reg predictions_V_ce0;
reg[8:0] predictions_V_address1;
reg predictions_V_ce1;
reg[8:0] predictions_V_address2;
reg predictions_V_ce2;
reg[8:0] predictions_V_address3;
reg predictions_V_ce3;
reg[8:0] predictions_V_address4;
reg predictions_V_ce4;
reg[8:0] predictions_V_address5;
reg predictions_V_ce5;
reg[8:0] predictions_V_address6;
reg predictions_V_ce6;
reg[8:0] predictions_V_address7;
reg predictions_V_ce7;
reg[8:0] predictions_V_address8;
reg predictions_V_ce8;
reg[5:0] bboxes_V_address0;
reg bboxes_V_ce0;
reg bboxes_V_we0;
reg[30:0] bboxes_V_d0;
reg[5:0] bboxes_V_address1;
reg bboxes_V_ce1;
reg bboxes_V_we1;
reg[30:0] bboxes_V_d1;
reg class_preds_ce0;
reg class_preds_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln8_reg_1567;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [25:0] reg_479;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [25:0] reg_484;
reg   [1:0] i_reg_1562;
wire   [0:0] icmp_ln8_fu_532_p2;
reg   [0:0] icmp_ln8_reg_1567_pp0_iter1_reg;
reg   [0:0] icmp_ln8_reg_1567_pp0_iter2_reg;
wire   [0:0] icmp_ln10_fu_547_p2;
reg   [0:0] icmp_ln10_reg_1571;
wire   [1:0] select_ln8_fu_553_p3;
reg   [1:0] select_ln8_reg_1576;
reg   [1:0] select_ln8_reg_1576_pp0_iter1_reg;
reg   [1:0] select_ln8_reg_1576_pp0_iter2_reg;
wire   [1:0] add_ln8_1_fu_561_p2;
reg   [1:0] add_ln8_1_reg_1582;
wire  signed [4:0] empty_48_fu_601_p2;
reg  signed [4:0] empty_48_reg_1587;
reg  signed [4:0] empty_48_reg_1587_pp0_iter1_reg;
reg  signed [4:0] empty_48_reg_1587_pp0_iter2_reg;
reg  signed [4:0] empty_48_reg_1587_pp0_iter3_reg;
wire   [3:0] empty_49_fu_607_p1;
reg   [3:0] empty_49_reg_1594;
reg   [3:0] empty_49_reg_1594_pp0_iter1_reg;
reg   [3:0] empty_49_reg_1594_pp0_iter2_reg;
wire   [8:0] empty_50_fu_634_p2;
reg   [8:0] empty_50_reg_1600;
wire   [1:0] select_ln8_2_fu_733_p3;
reg   [1:0] select_ln8_2_reg_1663;
reg   [1:0] select_ln8_2_reg_1663_pp0_iter1_reg;
wire   [0:0] icmp_ln1695_3_fu_748_p2;
reg   [0:0] icmp_ln1695_3_reg_1673;
wire   [25:0] select_ln40_fu_754_p3;
reg   [25:0] select_ln40_reg_1678;
reg   [25:0] predictions_V_load_7_reg_1684;
reg   [25:0] predictions_V_load_8_reg_1690;
reg   [25:0] predictions_V_load_9_reg_1696;
reg   [25:0] predictions_V_load_10_reg_1702;
reg   [25:0] predictions_V_load_11_reg_1708;
wire   [0:0] icmp_ln1695_fu_837_p2;
reg   [0:0] icmp_ln1695_reg_1744;
wire   [25:0] select_ln40_2_fu_863_p3;
reg   [25:0] select_ln40_2_reg_1749;
wire   [1:0] select_ln40_4_fu_884_p3;
reg   [1:0] select_ln40_4_reg_1755;
reg   [25:0] predictions_V_load_12_reg_1760;
reg   [25:0] predictions_V_load_13_reg_1766;
reg   [25:0] predictions_V_load_14_reg_1772;
reg   [25:0] predictions_V_load_14_reg_1772_pp0_iter2_reg;
reg   [25:0] predictions_V_load_15_reg_1778;
reg   [25:0] predictions_V_load_15_reg_1778_pp0_iter2_reg;
reg   [25:0] predictions_V_load_16_reg_1784;
reg   [25:0] predictions_V_load_16_reg_1784_pp0_iter2_reg;
reg   [25:0] predictions_V_load_17_reg_1790;
reg   [25:0] predictions_V_load_17_reg_1790_pp0_iter2_reg;
wire   [8:0] best_index_fu_959_p2;
reg   [8:0] best_index_reg_1826;
wire   [25:0] select_ln40_6_fu_982_p3;
reg   [25:0] select_ln40_6_reg_1835;
wire   [2:0] select_ln40_8_fu_1003_p3;
reg   [2:0] select_ln40_8_reg_1841;
reg   [25:0] predictions_V_load_18_reg_1846;
reg   [25:0] predictions_V_load_18_reg_1846_pp0_iter2_reg;
reg   [25:0] predictions_V_load_19_reg_1852;
reg   [25:0] predictions_V_load_19_reg_1852_pp0_iter2_reg;
reg   [25:0] predictions_V_load_20_reg_1858;
reg   [25:0] predictions_V_load_20_reg_1858_pp0_iter2_reg;
reg   [25:0] predictions_V_load_21_reg_1864;
reg   [25:0] predictions_V_load_21_reg_1864_pp0_iter2_reg;
reg   [25:0] predictions_V_load_22_reg_1870;
reg   [25:0] predictions_V_load_22_reg_1870_pp0_iter2_reg;
reg   [25:0] predictions_V_load_22_reg_1870_pp0_iter3_reg;
reg   [25:0] predictions_V_load_23_reg_1876;
reg   [25:0] predictions_V_load_23_reg_1876_pp0_iter2_reg;
reg   [25:0] predictions_V_load_23_reg_1876_pp0_iter3_reg;
wire   [25:0] select_ln40_10_fu_1046_p3;
reg   [25:0] select_ln40_10_reg_1891;
wire   [2:0] select_ln40_12_fu_1067_p3;
reg   [2:0] select_ln40_12_reg_1897;
wire   [25:0] select_ln40_14_fu_1116_p3;
reg   [25:0] select_ln40_14_reg_1917;
wire   [3:0] select_ln40_16_fu_1137_p3;
reg   [3:0] select_ln40_16_reg_1923;
wire   [5:0] add_ln29_fu_1180_p2;
reg   [5:0] add_ln29_reg_1938;
reg   [5:0] add_ln29_reg_1938_pp0_iter3_reg;
wire   [25:0] select_ln40_18_fu_1206_p3;
reg   [25:0] select_ln40_18_reg_1946;
wire   [3:0] select_ln40_20_fu_1227_p3;
reg   [3:0] select_ln40_20_reg_1952;
wire   [25:0] select_ln40_22_fu_1287_p3;
reg   [25:0] select_ln40_22_reg_1967;
wire   [3:0] select_ln40_24_fu_1308_p3;
reg   [3:0] select_ln40_24_reg_1973;
reg   [28:0] tmp_15_reg_1978;
reg   [28:0] tmp_16_reg_1983;
reg   [24:0] tmp_17_reg_1988;
reg   [24:0] tmp_18_reg_1993;
wire   [25:0] select_ln40_26_fu_1370_p3;
reg   [25:0] select_ln40_26_reg_1998;
wire   [3:0] select_ln40_28_fu_1391_p3;
reg   [3:0] select_ln40_28_reg_2004;
wire   [25:0] select_ln40_30_fu_1430_p3;
reg   [25:0] select_ln40_30_reg_2009;
wire   [4:0] select_ln40_32_fu_1451_p3;
reg   [4:0] select_ln40_32_reg_2015;
wire   [4:0] select_ln40_35_fu_1516_p3;
reg   [4:0] select_ln40_35_reg_2020;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln17_fu_651_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] p_cast4_fu_640_p1;
wire   [63:0] zext_ln39_fu_662_p1;
wire   [63:0] zext_ln39_2_fu_673_p1;
wire   [63:0] zext_ln39_3_fu_684_p1;
wire   [63:0] zext_ln39_5_fu_695_p1;
wire   [63:0] zext_ln39_6_fu_706_p1;
wire   [63:0] zext_ln39_7_fu_717_p1;
wire   [63:0] zext_ln39_8_fu_728_p1;
wire   [63:0] zext_ln17_1_fu_743_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln39_10_fu_767_p1;
wire   [63:0] zext_ln39_11_fu_777_p1;
wire   [63:0] zext_ln39_12_fu_787_p1;
wire   [63:0] zext_ln39_13_fu_797_p1;
wire   [63:0] zext_ln39_14_fu_807_p1;
wire   [63:0] zext_ln39_15_fu_817_p1;
wire   [63:0] zext_ln39_16_fu_897_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln39_17_fu_907_p1;
wire   [63:0] zext_ln39_19_fu_917_p1;
wire   [63:0] zext_ln39_20_fu_927_p1;
wire   [63:0] zext_ln39_21_fu_937_p1;
wire   [63:0] zext_ln39_22_fu_947_p1;
wire   [63:0] zext_ln27_fu_1016_p1;
wire   [63:0] zext_ln28_fu_1026_p1;
wire   [63:0] zext_ln24_fu_1074_p1;
wire   [63:0] zext_ln25_fu_1083_p1;
wire   [63:0] zext_ln26_fu_1093_p1;
wire   [63:0] zext_ln29_fu_1186_p1;
wire   [63:0] zext_ln30_fu_1407_p1;
wire   [63:0] zext_ln31_fu_1472_p1;
wire   [63:0] zext_ln32_fu_1482_p1;
wire   [63:0] zext_ln33_fu_1536_p1;
wire   [63:0] p_cast3_fu_1523_p1;
reg   [1:0] j_fu_152;
wire   [1:0] add_ln10_fu_822_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_j_load;
reg   [1:0] i_1_fu_156;
reg   [1:0] ap_sig_allocacmp_i;
reg   [3:0] indvar_flatten_fu_160;
wire   [3:0] add_ln8_fu_538_p2;
reg   [3:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [30:0] zext_ln23_fu_1148_p1;
wire   [30:0] zext_ln1349_fu_1398_p1;
wire   [30:0] zext_ln1349_2_fu_1459_p1;
wire   [30:0] zext_ln23_1_fu_1463_p1;
wire   [30:0] zext_ln23_2_fu_1527_p1;
wire   [3:0] p_shl_fu_514_p3;
wire   [4:0] p_shl_cast_fu_522_p1;
wire   [4:0] zext_ln8_fu_510_p1;
wire   [3:0] p_shl_mid1_fu_571_p3;
wire   [4:0] p_shl_cast_mid1_fu_579_p1;
wire   [4:0] zext_ln8_1_fu_567_p1;
wire   [4:0] p_mid1_fu_583_p2;
wire   [4:0] empty_fu_526_p2;
wire   [4:0] j_cast_fu_597_p1;
wire   [4:0] select_ln8_1_fu_589_p3;
wire   [5:0] p_shl4_fu_623_p3;
wire   [8:0] p_shl3_fu_616_p3;
wire  signed [8:0] p_shl4_cast_fu_630_p1;
wire   [8:0] empty_51_fu_645_p2;
wire   [8:0] or_ln39_fu_656_p2;
wire   [8:0] add_ln39_fu_667_p2;
wire   [8:0] add_ln39_1_fu_678_p2;
wire   [8:0] add_ln39_2_fu_689_p2;
wire   [8:0] add_ln39_3_fu_700_p2;
wire   [8:0] add_ln39_4_fu_711_p2;
wire   [8:0] add_ln39_5_fu_722_p2;
wire   [8:0] add_ln16_fu_738_p2;
wire   [8:0] add_ln39_6_fu_762_p2;
wire   [8:0] add_ln39_7_fu_772_p2;
wire   [8:0] add_ln39_8_fu_782_p2;
wire   [8:0] add_ln39_9_fu_792_p2;
wire   [8:0] add_ln39_10_fu_802_p2;
wire   [8:0] add_ln39_11_fu_812_p2;
wire   [0:0] icmp_ln1695_4_fu_846_p2;
wire   [25:0] select_ln40_1_fu_851_p3;
wire   [0:0] icmp_ln1695_5_fu_858_p2;
wire   [0:0] or_ln40_fu_878_p2;
wire   [1:0] select_ln40_3_fu_870_p3;
wire   [1:0] zext_ln39_1_fu_843_p1;
wire   [8:0] add_ln39_12_fu_892_p2;
wire   [8:0] add_ln39_13_fu_902_p2;
wire   [8:0] add_ln39_14_fu_912_p2;
wire   [8:0] add_ln39_15_fu_922_p2;
wire   [8:0] add_ln39_16_fu_932_p2;
wire   [8:0] add_ln39_17_fu_942_p2;
wire   [8:0] select_ln18_fu_952_p3;
wire   [0:0] icmp_ln1695_6_fu_967_p2;
wire   [25:0] select_ln40_5_fu_971_p3;
wire   [0:0] icmp_ln1695_7_fu_977_p2;
wire   [0:0] or_ln40_1_fu_997_p2;
wire   [2:0] select_ln40_7_fu_989_p3;
wire   [2:0] zext_ln39_4_fu_964_p1;
wire   [8:0] add_ln27_fu_1011_p2;
wire   [8:0] add_ln28_fu_1021_p2;
wire   [0:0] icmp_ln1695_8_fu_1031_p2;
wire   [25:0] select_ln40_9_fu_1035_p3;
wire   [0:0] icmp_ln1695_9_fu_1041_p2;
wire   [0:0] or_ln40_2_fu_1061_p2;
wire   [2:0] select_ln40_11_fu_1053_p3;
wire   [8:0] add_ln25_fu_1078_p2;
wire   [8:0] add_ln26_fu_1088_p2;
wire   [0:0] icmp_ln1695_10_fu_1101_p2;
wire   [25:0] select_ln40_13_fu_1105_p3;
wire   [0:0] icmp_ln1695_11_fu_1111_p2;
wire   [0:0] or_ln40_3_fu_1131_p2;
wire   [3:0] select_ln40_15_fu_1123_p3;
wire   [3:0] zext_ln39_9_fu_1098_p1;
wire   [25:0] grp_fu_1157_p0;
wire   [27:0] grp_fu_1157_p1;
wire   [25:0] grp_fu_1167_p0;
wire   [27:0] grp_fu_1167_p1;
wire   [5:0] shl_ln_fu_1173_p3;
wire  signed [5:0] p_cast2_fu_1145_p1;
wire   [0:0] icmp_ln1695_12_fu_1191_p2;
wire   [25:0] select_ln40_17_fu_1195_p3;
wire   [0:0] icmp_ln1695_13_fu_1201_p2;
wire   [0:0] or_ln40_4_fu_1221_p2;
wire   [3:0] select_ln40_19_fu_1213_p3;
wire   [29:0] tmp_fu_1234_p4;
wire   [29:0] grp_fu_1247_p0;
wire   [31:0] grp_fu_1247_p1;
wire   [29:0] tmp_3_fu_1253_p4;
wire   [29:0] grp_fu_1266_p0;
wire   [31:0] grp_fu_1266_p1;
wire   [0:0] icmp_ln1695_14_fu_1272_p2;
wire   [25:0] select_ln40_21_fu_1276_p3;
wire   [0:0] icmp_ln1695_15_fu_1282_p2;
wire   [0:0] or_ln40_5_fu_1302_p2;
wire   [3:0] select_ln40_23_fu_1294_p3;
wire   [60:0] grp_fu_1247_p2;
wire   [60:0] grp_fu_1266_p2;
wire   [52:0] grp_fu_1157_p2;
wire   [52:0] grp_fu_1167_p2;
wire   [0:0] icmp_ln1695_16_fu_1355_p2;
wire   [25:0] select_ln40_25_fu_1359_p3;
wire   [0:0] icmp_ln1695_17_fu_1365_p2;
wire   [0:0] or_ln40_6_fu_1385_p2;
wire   [3:0] select_ln40_27_fu_1377_p3;
wire   [5:0] add_ln30_fu_1402_p2;
wire   [0:0] icmp_ln1695_18_fu_1415_p2;
wire   [25:0] select_ln40_29_fu_1419_p3;
wire   [0:0] icmp_ln1695_19_fu_1425_p2;
wire   [0:0] or_ln40_7_fu_1445_p2;
wire   [4:0] select_ln40_31_fu_1437_p3;
wire   [4:0] zext_ln39_18_fu_1412_p1;
wire   [5:0] add_ln31_fu_1467_p2;
wire   [5:0] add_ln32_fu_1477_p2;
wire   [0:0] icmp_ln1695_20_fu_1487_p2;
wire   [25:0] select_ln40_33_fu_1491_p3;
wire   [0:0] icmp_ln1695_21_fu_1497_p2;
wire   [0:0] or_ln40_8_fu_1510_p2;
wire   [4:0] select_ln40_34_fu_1502_p3;
wire   [5:0] add_ln33_fu_1531_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage0;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to4;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [52:0] grp_fu_1157_p00;
wire   [52:0] grp_fu_1167_p00;
wire   [60:0] grp_fu_1247_p00;
wire   [60:0] grp_fu_1266_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

nms_mul_26ns_28ns_53_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 53 ))
mul_26ns_28ns_53_3_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1157_p0),
    .din1(grp_fu_1157_p1),
    .ce(1'b1),
    .dout(grp_fu_1157_p2)
);

nms_mul_26ns_28ns_53_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 53 ))
mul_26ns_28ns_53_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1167_p0),
    .din1(grp_fu_1167_p1),
    .ce(1'b1),
    .dout(grp_fu_1167_p2)
);

nms_mul_30ns_32ns_61_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_30ns_32ns_61_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1247_p0),
    .din1(grp_fu_1247_p1),
    .ce(1'b1),
    .dout(grp_fu_1247_p2)
);

nms_mul_30ns_32ns_61_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_30ns_32ns_61_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1266_p0),
    .din1(grp_fu_1266_p1),
    .ce(1'b1),
    .dout(grp_fu_1266_p2)
);

nms_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_fu_156 <= 2'd0;
    end else if (((icmp_ln8_reg_1567 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        i_1_fu_156 <= select_ln8_2_fu_733_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_532_p2 == 1'd0))) begin
            indvar_flatten_fu_160 <= add_ln8_fu_538_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_160 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_152 <= 2'd0;
    end else if (((icmp_ln8_reg_1567 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        j_fu_152 <= add_ln10_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_479 <= predictions_V_q1;
    end else if (((icmp_ln8_reg_1567 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_479 <= predictions_V_q8;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_484 <= predictions_V_q0;
    end else if (((icmp_ln8_reg_1567 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_484 <= predictions_V_q5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln29_reg_1938 <= add_ln29_fu_1180_p2;
        add_ln29_reg_1938_pp0_iter3_reg <= add_ln29_reg_1938;
        best_index_reg_1826 <= best_index_fu_959_p2;
        predictions_V_load_18_reg_1846_pp0_iter2_reg <= predictions_V_load_18_reg_1846;
        predictions_V_load_19_reg_1852_pp0_iter2_reg <= predictions_V_load_19_reg_1852;
        predictions_V_load_20_reg_1858_pp0_iter2_reg <= predictions_V_load_20_reg_1858;
        predictions_V_load_21_reg_1864_pp0_iter2_reg <= predictions_V_load_21_reg_1864;
        predictions_V_load_22_reg_1870_pp0_iter2_reg <= predictions_V_load_22_reg_1870;
        predictions_V_load_22_reg_1870_pp0_iter3_reg <= predictions_V_load_22_reg_1870_pp0_iter2_reg;
        predictions_V_load_23_reg_1876_pp0_iter2_reg <= predictions_V_load_23_reg_1876;
        predictions_V_load_23_reg_1876_pp0_iter3_reg <= predictions_V_load_23_reg_1876_pp0_iter2_reg;
        select_ln40_18_reg_1946 <= select_ln40_18_fu_1206_p3;
        select_ln40_20_reg_1952 <= select_ln40_20_fu_1227_p3;
        select_ln40_30_reg_2009 <= select_ln40_30_fu_1430_p3;
        select_ln40_32_reg_2015 <= select_ln40_32_fu_1451_p3;
        select_ln40_6_reg_1835 <= select_ln40_6_fu_982_p3;
        select_ln40_8_reg_1841 <= select_ln40_8_fu_1003_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_532_p2 == 1'd0))) begin
        add_ln8_1_reg_1582 <= add_ln8_1_fu_561_p2;
        empty_48_reg_1587 <= empty_48_fu_601_p2;
        empty_49_reg_1594 <= empty_49_fu_607_p1;
        icmp_ln10_reg_1571 <= icmp_ln10_fu_547_p2;
        select_ln8_reg_1576 <= select_ln8_fu_553_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_48_reg_1587_pp0_iter1_reg <= empty_48_reg_1587;
        empty_48_reg_1587_pp0_iter2_reg <= empty_48_reg_1587_pp0_iter1_reg;
        empty_48_reg_1587_pp0_iter3_reg <= empty_48_reg_1587_pp0_iter2_reg;
        empty_49_reg_1594_pp0_iter1_reg <= empty_49_reg_1594;
        empty_49_reg_1594_pp0_iter2_reg <= empty_49_reg_1594_pp0_iter1_reg;
        i_reg_1562 <= ap_sig_allocacmp_i;
        icmp_ln1695_reg_1744 <= icmp_ln1695_fu_837_p2;
        icmp_ln8_reg_1567 <= icmp_ln8_fu_532_p2;
        icmp_ln8_reg_1567_pp0_iter1_reg <= icmp_ln8_reg_1567;
        icmp_ln8_reg_1567_pp0_iter2_reg <= icmp_ln8_reg_1567_pp0_iter1_reg;
        predictions_V_load_14_reg_1772_pp0_iter2_reg <= predictions_V_load_14_reg_1772;
        predictions_V_load_15_reg_1778_pp0_iter2_reg <= predictions_V_load_15_reg_1778;
        predictions_V_load_16_reg_1784_pp0_iter2_reg <= predictions_V_load_16_reg_1784;
        predictions_V_load_17_reg_1790_pp0_iter2_reg <= predictions_V_load_17_reg_1790;
        select_ln40_14_reg_1917 <= select_ln40_14_fu_1116_p3;
        select_ln40_16_reg_1923 <= select_ln40_16_fu_1137_p3;
        select_ln40_26_reg_1998 <= select_ln40_26_fu_1370_p3;
        select_ln40_28_reg_2004 <= select_ln40_28_fu_1391_p3;
        select_ln40_2_reg_1749 <= select_ln40_2_fu_863_p3;
        select_ln40_4_reg_1755 <= select_ln40_4_fu_884_p3;
        select_ln8_reg_1576_pp0_iter1_reg <= select_ln8_reg_1576;
        select_ln8_reg_1576_pp0_iter2_reg <= select_ln8_reg_1576_pp0_iter1_reg;
        tmp_15_reg_1978 <= {{grp_fu_1247_p2[60:32]}};
        tmp_16_reg_1983 <= {{grp_fu_1266_p2[60:32]}};
        tmp_17_reg_1988 <= {{grp_fu_1157_p2[52:28]}};
        tmp_18_reg_1993 <= {{grp_fu_1167_p2[52:28]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1567 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_50_reg_1600[8 : 1] <= empty_50_fu_634_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1567 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln1695_3_reg_1673 <= icmp_ln1695_3_fu_748_p2;
        select_ln40_reg_1678 <= select_ln40_fu_754_p3;
        select_ln8_2_reg_1663 <= select_ln8_2_fu_733_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1567 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_load_10_reg_1702 <= predictions_V_q1;
        predictions_V_load_11_reg_1708 <= predictions_V_q0;
        predictions_V_load_7_reg_1684 <= predictions_V_q4;
        predictions_V_load_8_reg_1690 <= predictions_V_q3;
        predictions_V_load_9_reg_1696 <= predictions_V_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_load_12_reg_1760 <= predictions_V_q7;
        predictions_V_load_13_reg_1766 <= predictions_V_q6;
        predictions_V_load_14_reg_1772 <= predictions_V_q5;
        predictions_V_load_15_reg_1778 <= predictions_V_q4;
        predictions_V_load_16_reg_1784 <= predictions_V_q3;
        predictions_V_load_17_reg_1790 <= predictions_V_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_load_18_reg_1846 <= predictions_V_q8;
        predictions_V_load_19_reg_1852 <= predictions_V_q7;
        predictions_V_load_20_reg_1858 <= predictions_V_q6;
        predictions_V_load_21_reg_1864 <= predictions_V_q5;
        predictions_V_load_22_reg_1870 <= predictions_V_q4;
        predictions_V_load_23_reg_1876 <= predictions_V_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln40_10_reg_1891 <= select_ln40_10_fu_1046_p3;
        select_ln40_12_reg_1897 <= select_ln40_12_fu_1067_p3;
        select_ln40_22_reg_1967 <= select_ln40_22_fu_1287_p3;
        select_ln40_24_reg_1973 <= select_ln40_24_fu_1308_p3;
        select_ln40_35_reg_2020 <= select_ln40_35_fu_1516_p3;
        select_ln8_2_reg_1663_pp0_iter1_reg <= select_ln8_2_reg_1663;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_1567 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1567_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 2'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_156;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 2'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_V_address0 = zext_ln33_fu_1536_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bboxes_V_address0 = zext_ln31_fu_1472_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bboxes_V_address0 = zext_ln30_fu_1407_p1;
    end else begin
        bboxes_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bboxes_V_address1 = zext_ln32_fu_1482_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bboxes_V_address1 = zext_ln29_fu_1186_p1;
    end else begin
        bboxes_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        bboxes_V_ce0 = 1'b1;
    end else begin
        bboxes_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        bboxes_V_ce1 = 1'b1;
    end else begin
        bboxes_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bboxes_V_d0 = zext_ln23_2_fu_1527_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bboxes_V_d0 = zext_ln1349_2_fu_1459_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bboxes_V_d0 = zext_ln1349_fu_1398_p1;
    end else begin
        bboxes_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bboxes_V_d1 = zext_ln23_1_fu_1463_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bboxes_V_d1 = zext_ln23_fu_1148_p1;
    end else begin
        bboxes_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        bboxes_V_we0 = 1'b1;
    end else begin
        bboxes_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        bboxes_V_we1 = 1'b1;
    end else begin
        bboxes_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        class_preds_ce0 = 1'b1;
    end else begin
        class_preds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        class_preds_we0 = 1'b1;
    end else begin
        class_preds_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address0 = zext_ln26_fu_1093_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address0 = zext_ln28_fu_1026_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address0 = zext_ln39_8_fu_728_p1;
    end else begin
        predictions_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address1 = zext_ln25_fu_1083_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address1 = zext_ln27_fu_1016_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address1 = zext_ln39_7_fu_717_p1;
    end else begin
        predictions_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address2 = zext_ln24_fu_1074_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address2 = zext_ln39_15_fu_817_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address2 = zext_ln39_6_fu_706_p1;
    end else begin
        predictions_V_address2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address3 = zext_ln39_22_fu_947_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address3 = zext_ln39_14_fu_807_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address3 = zext_ln39_5_fu_695_p1;
    end else begin
        predictions_V_address3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address4 = zext_ln39_21_fu_937_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address4 = zext_ln39_13_fu_797_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address4 = zext_ln39_3_fu_684_p1;
    end else begin
        predictions_V_address4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address5 = zext_ln39_20_fu_927_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address5 = zext_ln39_12_fu_787_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address5 = zext_ln39_2_fu_673_p1;
    end else begin
        predictions_V_address5 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address6 = zext_ln39_19_fu_917_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address6 = zext_ln39_11_fu_777_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address6 = zext_ln39_fu_662_p1;
    end else begin
        predictions_V_address6 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address7 = zext_ln39_17_fu_907_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address7 = zext_ln39_10_fu_767_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address7 = p_cast4_fu_640_p1;
    end else begin
        predictions_V_address7 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        predictions_V_address8 = zext_ln39_16_fu_897_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        predictions_V_address8 = zext_ln17_1_fu_743_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        predictions_V_address8 = zext_ln17_fu_651_p1;
    end else begin
        predictions_V_address8 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce0 = 1'b1;
    end else begin
        predictions_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce1 = 1'b1;
    end else begin
        predictions_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce2 = 1'b1;
    end else begin
        predictions_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce3 = 1'b1;
    end else begin
        predictions_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce4 = 1'b1;
    end else begin
        predictions_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce5 = 1'b1;
    end else begin
        predictions_V_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce6 = 1'b1;
    end else begin
        predictions_V_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce7 = 1'b1;
    end else begin
        predictions_V_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        predictions_V_ce8 = 1'b1;
    end else begin
        predictions_V_ce8 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter3_stage0) & (ap_idle_pp0_0to2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_822_p2 = (select_ln8_reg_1576 + 2'd1);

assign add_ln16_fu_738_p2 = (empty_50_reg_1600 + 9'd25);

assign add_ln25_fu_1078_p2 = (best_index_reg_1826 + 9'd1);

assign add_ln26_fu_1088_p2 = (best_index_reg_1826 + 9'd2);

assign add_ln27_fu_1011_p2 = (best_index_reg_1826 + 9'd3);

assign add_ln28_fu_1021_p2 = (best_index_reg_1826 + 9'd4);

assign add_ln29_fu_1180_p2 = ($signed(shl_ln_fu_1173_p3) + $signed(p_cast2_fu_1145_p1));

assign add_ln30_fu_1402_p2 = (add_ln29_reg_1938 + 6'd1);

assign add_ln31_fu_1467_p2 = (add_ln29_reg_1938_pp0_iter3_reg + 6'd2);

assign add_ln32_fu_1477_p2 = (add_ln29_reg_1938_pp0_iter3_reg + 6'd3);

assign add_ln33_fu_1531_p2 = (add_ln29_reg_1938_pp0_iter3_reg + 6'd4);

assign add_ln39_10_fu_802_p2 = (empty_50_reg_1600 + 9'd12);

assign add_ln39_11_fu_812_p2 = (empty_50_reg_1600 + 9'd13);

assign add_ln39_12_fu_892_p2 = (empty_50_reg_1600 + 9'd14);

assign add_ln39_13_fu_902_p2 = (empty_50_reg_1600 + 9'd15);

assign add_ln39_14_fu_912_p2 = (empty_50_reg_1600 + 9'd16);

assign add_ln39_15_fu_922_p2 = (empty_50_reg_1600 + 9'd17);

assign add_ln39_16_fu_932_p2 = (empty_50_reg_1600 + 9'd18);

assign add_ln39_17_fu_942_p2 = (empty_50_reg_1600 + 9'd19);

assign add_ln39_1_fu_678_p2 = (empty_50_fu_634_p2 + 9'd3);

assign add_ln39_2_fu_689_p2 = (empty_50_fu_634_p2 + 9'd4);

assign add_ln39_3_fu_700_p2 = (empty_50_fu_634_p2 + 9'd5);

assign add_ln39_4_fu_711_p2 = (empty_50_fu_634_p2 + 9'd6);

assign add_ln39_5_fu_722_p2 = (empty_50_fu_634_p2 + 9'd7);

assign add_ln39_6_fu_762_p2 = (empty_50_reg_1600 + 9'd8);

assign add_ln39_7_fu_772_p2 = (empty_50_reg_1600 + 9'd9);

assign add_ln39_8_fu_782_p2 = (empty_50_reg_1600 + 9'd10);

assign add_ln39_9_fu_792_p2 = (empty_50_reg_1600 + 9'd11);

assign add_ln39_fu_667_p2 = (empty_50_fu_634_p2 + 9'd2);

assign add_ln8_1_fu_561_p2 = (ap_sig_allocacmp_i + 2'd1);

assign add_ln8_fu_538_p2 = (ap_sig_allocacmp_indvar_flatten_load + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign best_index_fu_959_p2 = (empty_50_reg_1600 + select_ln18_fu_952_p3);

assign class_preds_address0 = p_cast3_fu_1523_p1;

assign class_preds_d0 = select_ln40_35_reg_2020;

assign empty_48_fu_601_p2 = (j_cast_fu_597_p1 + select_ln8_1_fu_589_p3);

assign empty_49_fu_607_p1 = empty_48_fu_601_p2[3:0];

assign empty_50_fu_634_p2 = ($signed(p_shl3_fu_616_p3) - $signed(p_shl4_cast_fu_630_p1));

assign empty_51_fu_645_p2 = (empty_50_fu_634_p2 + 9'd20);

assign empty_fu_526_p2 = (p_shl_cast_fu_522_p1 - zext_ln8_fu_510_p1);

assign grp_fu_1157_p0 = grp_fu_1157_p00;

assign grp_fu_1157_p00 = reg_479;

assign grp_fu_1157_p1 = 53'd89478486;

assign grp_fu_1167_p0 = grp_fu_1167_p00;

assign grp_fu_1167_p00 = reg_484;

assign grp_fu_1167_p1 = 53'd89478486;

assign grp_fu_1247_p0 = grp_fu_1247_p00;

assign grp_fu_1247_p00 = tmp_fu_1234_p4;

assign grp_fu_1247_p1 = 61'd1431655766;

assign grp_fu_1266_p0 = grp_fu_1266_p00;

assign grp_fu_1266_p00 = tmp_3_fu_1253_p4;

assign grp_fu_1266_p1 = 61'd1431655766;

assign icmp_ln10_fu_547_p2 = ((ap_sig_allocacmp_j_load == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1695_10_fu_1101_p2 = ((predictions_V_load_12_reg_1760 > select_ln40_10_reg_1891) ? 1'b1 : 1'b0);

assign icmp_ln1695_11_fu_1111_p2 = ((predictions_V_load_13_reg_1766 > select_ln40_13_fu_1105_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_12_fu_1191_p2 = ((predictions_V_load_14_reg_1772_pp0_iter2_reg > select_ln40_14_reg_1917) ? 1'b1 : 1'b0);

assign icmp_ln1695_13_fu_1201_p2 = ((predictions_V_load_15_reg_1778_pp0_iter2_reg > select_ln40_17_fu_1195_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_14_fu_1272_p2 = ((predictions_V_load_16_reg_1784_pp0_iter2_reg > select_ln40_18_reg_1946) ? 1'b1 : 1'b0);

assign icmp_ln1695_15_fu_1282_p2 = ((predictions_V_load_17_reg_1790_pp0_iter2_reg > select_ln40_21_fu_1276_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_16_fu_1355_p2 = ((predictions_V_load_18_reg_1846_pp0_iter2_reg > select_ln40_22_reg_1967) ? 1'b1 : 1'b0);

assign icmp_ln1695_17_fu_1365_p2 = ((predictions_V_load_19_reg_1852_pp0_iter2_reg > select_ln40_25_fu_1359_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_18_fu_1415_p2 = ((predictions_V_load_20_reg_1858_pp0_iter2_reg > select_ln40_26_reg_1998) ? 1'b1 : 1'b0);

assign icmp_ln1695_19_fu_1425_p2 = ((predictions_V_load_21_reg_1864_pp0_iter2_reg > select_ln40_29_fu_1419_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_20_fu_1487_p2 = ((predictions_V_load_22_reg_1870_pp0_iter3_reg > select_ln40_30_reg_2009) ? 1'b1 : 1'b0);

assign icmp_ln1695_21_fu_1497_p2 = ((predictions_V_load_23_reg_1876_pp0_iter3_reg > select_ln40_33_fu_1491_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_3_fu_748_p2 = ((predictions_V_q6 > predictions_V_q7) ? 1'b1 : 1'b0);

assign icmp_ln1695_4_fu_846_p2 = ((reg_484 > select_ln40_reg_1678) ? 1'b1 : 1'b0);

assign icmp_ln1695_5_fu_858_p2 = ((predictions_V_load_7_reg_1684 > select_ln40_1_fu_851_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_6_fu_967_p2 = ((predictions_V_load_8_reg_1690 > select_ln40_2_reg_1749) ? 1'b1 : 1'b0);

assign icmp_ln1695_7_fu_977_p2 = ((predictions_V_load_9_reg_1696 > select_ln40_5_fu_971_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_8_fu_1031_p2 = ((predictions_V_load_10_reg_1702 > select_ln40_6_reg_1835) ? 1'b1 : 1'b0);

assign icmp_ln1695_9_fu_1041_p2 = ((predictions_V_load_11_reg_1708 > select_ln40_9_fu_1035_p3) ? 1'b1 : 1'b0);

assign icmp_ln1695_fu_837_p2 = ((predictions_V_q8 > reg_479) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_532_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 4'd9) ? 1'b1 : 1'b0);

assign j_cast_fu_597_p1 = select_ln8_fu_553_p3;

assign or_ln39_fu_656_p2 = (empty_50_fu_634_p2 | 9'd1);

assign or_ln40_1_fu_997_p2 = (icmp_ln1695_7_fu_977_p2 | icmp_ln1695_6_fu_967_p2);

assign or_ln40_2_fu_1061_p2 = (icmp_ln1695_9_fu_1041_p2 | icmp_ln1695_8_fu_1031_p2);

assign or_ln40_3_fu_1131_p2 = (icmp_ln1695_11_fu_1111_p2 | icmp_ln1695_10_fu_1101_p2);

assign or_ln40_4_fu_1221_p2 = (icmp_ln1695_13_fu_1201_p2 | icmp_ln1695_12_fu_1191_p2);

assign or_ln40_5_fu_1302_p2 = (icmp_ln1695_15_fu_1282_p2 | icmp_ln1695_14_fu_1272_p2);

assign or_ln40_6_fu_1385_p2 = (icmp_ln1695_17_fu_1365_p2 | icmp_ln1695_16_fu_1355_p2);

assign or_ln40_7_fu_1445_p2 = (icmp_ln1695_19_fu_1425_p2 | icmp_ln1695_18_fu_1415_p2);

assign or_ln40_8_fu_1510_p2 = (icmp_ln1695_21_fu_1497_p2 | icmp_ln1695_20_fu_1487_p2);

assign or_ln40_fu_878_p2 = (icmp_ln1695_5_fu_858_p2 | icmp_ln1695_4_fu_846_p2);

assign p_cast2_fu_1145_p1 = empty_48_reg_1587_pp0_iter2_reg;

assign p_cast3_fu_1523_p1 = $unsigned(empty_48_reg_1587_pp0_iter3_reg);

assign p_cast4_fu_640_p1 = empty_50_fu_634_p2;

assign p_mid1_fu_583_p2 = (p_shl_cast_mid1_fu_579_p1 - zext_ln8_1_fu_567_p1);

assign p_shl3_fu_616_p3 = {{empty_49_reg_1594}, {5'd0}};

assign p_shl4_cast_fu_630_p1 = $signed(p_shl4_fu_623_p3);

assign p_shl4_fu_623_p3 = {{empty_48_reg_1587}, {1'd0}};

assign p_shl_cast_fu_522_p1 = p_shl_fu_514_p3;

assign p_shl_cast_mid1_fu_579_p1 = p_shl_mid1_fu_571_p3;

assign p_shl_fu_514_p3 = {{ap_sig_allocacmp_i}, {2'd0}};

assign p_shl_mid1_fu_571_p3 = {{add_ln8_1_fu_561_p2}, {2'd0}};

assign select_ln18_fu_952_p3 = ((icmp_ln1695_reg_1744[0:0] == 1'b1) ? 9'd25 : 9'd20);

assign select_ln40_10_fu_1046_p3 = ((icmp_ln1695_9_fu_1041_p2[0:0] == 1'b1) ? predictions_V_load_11_reg_1708 : select_ln40_9_fu_1035_p3);

assign select_ln40_11_fu_1053_p3 = ((icmp_ln1695_9_fu_1041_p2[0:0] == 1'b1) ? 3'd7 : 3'd6);

assign select_ln40_12_fu_1067_p3 = ((or_ln40_2_fu_1061_p2[0:0] == 1'b1) ? select_ln40_11_fu_1053_p3 : select_ln40_8_reg_1841);

assign select_ln40_13_fu_1105_p3 = ((icmp_ln1695_10_fu_1101_p2[0:0] == 1'b1) ? predictions_V_load_12_reg_1760 : select_ln40_10_reg_1891);

assign select_ln40_14_fu_1116_p3 = ((icmp_ln1695_11_fu_1111_p2[0:0] == 1'b1) ? predictions_V_load_13_reg_1766 : select_ln40_13_fu_1105_p3);

assign select_ln40_15_fu_1123_p3 = ((icmp_ln1695_11_fu_1111_p2[0:0] == 1'b1) ? 4'd9 : 4'd8);

assign select_ln40_16_fu_1137_p3 = ((or_ln40_3_fu_1131_p2[0:0] == 1'b1) ? select_ln40_15_fu_1123_p3 : zext_ln39_9_fu_1098_p1);

assign select_ln40_17_fu_1195_p3 = ((icmp_ln1695_12_fu_1191_p2[0:0] == 1'b1) ? predictions_V_load_14_reg_1772_pp0_iter2_reg : select_ln40_14_reg_1917);

assign select_ln40_18_fu_1206_p3 = ((icmp_ln1695_13_fu_1201_p2[0:0] == 1'b1) ? predictions_V_load_15_reg_1778_pp0_iter2_reg : select_ln40_17_fu_1195_p3);

assign select_ln40_19_fu_1213_p3 = ((icmp_ln1695_13_fu_1201_p2[0:0] == 1'b1) ? 4'd11 : 4'd10);

assign select_ln40_1_fu_851_p3 = ((icmp_ln1695_4_fu_846_p2[0:0] == 1'b1) ? reg_484 : select_ln40_reg_1678);

assign select_ln40_20_fu_1227_p3 = ((or_ln40_4_fu_1221_p2[0:0] == 1'b1) ? select_ln40_19_fu_1213_p3 : select_ln40_16_reg_1923);

assign select_ln40_21_fu_1276_p3 = ((icmp_ln1695_14_fu_1272_p2[0:0] == 1'b1) ? predictions_V_load_16_reg_1784_pp0_iter2_reg : select_ln40_18_reg_1946);

assign select_ln40_22_fu_1287_p3 = ((icmp_ln1695_15_fu_1282_p2[0:0] == 1'b1) ? predictions_V_load_17_reg_1790_pp0_iter2_reg : select_ln40_21_fu_1276_p3);

assign select_ln40_23_fu_1294_p3 = ((icmp_ln1695_15_fu_1282_p2[0:0] == 1'b1) ? 4'd13 : 4'd12);

assign select_ln40_24_fu_1308_p3 = ((or_ln40_5_fu_1302_p2[0:0] == 1'b1) ? select_ln40_23_fu_1294_p3 : select_ln40_20_reg_1952);

assign select_ln40_25_fu_1359_p3 = ((icmp_ln1695_16_fu_1355_p2[0:0] == 1'b1) ? predictions_V_load_18_reg_1846_pp0_iter2_reg : select_ln40_22_reg_1967);

assign select_ln40_26_fu_1370_p3 = ((icmp_ln1695_17_fu_1365_p2[0:0] == 1'b1) ? predictions_V_load_19_reg_1852_pp0_iter2_reg : select_ln40_25_fu_1359_p3);

assign select_ln40_27_fu_1377_p3 = ((icmp_ln1695_17_fu_1365_p2[0:0] == 1'b1) ? 4'd15 : 4'd14);

assign select_ln40_28_fu_1391_p3 = ((or_ln40_6_fu_1385_p2[0:0] == 1'b1) ? select_ln40_27_fu_1377_p3 : select_ln40_24_reg_1973);

assign select_ln40_29_fu_1419_p3 = ((icmp_ln1695_18_fu_1415_p2[0:0] == 1'b1) ? predictions_V_load_20_reg_1858_pp0_iter2_reg : select_ln40_26_reg_1998);

assign select_ln40_2_fu_863_p3 = ((icmp_ln1695_5_fu_858_p2[0:0] == 1'b1) ? predictions_V_load_7_reg_1684 : select_ln40_1_fu_851_p3);

assign select_ln40_30_fu_1430_p3 = ((icmp_ln1695_19_fu_1425_p2[0:0] == 1'b1) ? predictions_V_load_21_reg_1864_pp0_iter2_reg : select_ln40_29_fu_1419_p3);

assign select_ln40_31_fu_1437_p3 = ((icmp_ln1695_19_fu_1425_p2[0:0] == 1'b1) ? 5'd17 : 5'd16);

assign select_ln40_32_fu_1451_p3 = ((or_ln40_7_fu_1445_p2[0:0] == 1'b1) ? select_ln40_31_fu_1437_p3 : zext_ln39_18_fu_1412_p1);

assign select_ln40_33_fu_1491_p3 = ((icmp_ln1695_20_fu_1487_p2[0:0] == 1'b1) ? predictions_V_load_22_reg_1870_pp0_iter3_reg : select_ln40_30_reg_2009);

assign select_ln40_34_fu_1502_p3 = ((icmp_ln1695_21_fu_1497_p2[0:0] == 1'b1) ? 5'd19 : 5'd18);

assign select_ln40_35_fu_1516_p3 = ((or_ln40_8_fu_1510_p2[0:0] == 1'b1) ? select_ln40_34_fu_1502_p3 : select_ln40_32_reg_2015);

assign select_ln40_3_fu_870_p3 = ((icmp_ln1695_5_fu_858_p2[0:0] == 1'b1) ? 2'd3 : 2'd2);

assign select_ln40_4_fu_884_p3 = ((or_ln40_fu_878_p2[0:0] == 1'b1) ? select_ln40_3_fu_870_p3 : zext_ln39_1_fu_843_p1);

assign select_ln40_5_fu_971_p3 = ((icmp_ln1695_6_fu_967_p2[0:0] == 1'b1) ? predictions_V_load_8_reg_1690 : select_ln40_2_reg_1749);

assign select_ln40_6_fu_982_p3 = ((icmp_ln1695_7_fu_977_p2[0:0] == 1'b1) ? predictions_V_load_9_reg_1696 : select_ln40_5_fu_971_p3);

assign select_ln40_7_fu_989_p3 = ((icmp_ln1695_7_fu_977_p2[0:0] == 1'b1) ? 3'd5 : 3'd4);

assign select_ln40_8_fu_1003_p3 = ((or_ln40_1_fu_997_p2[0:0] == 1'b1) ? select_ln40_7_fu_989_p3 : zext_ln39_4_fu_964_p1);

assign select_ln40_9_fu_1035_p3 = ((icmp_ln1695_8_fu_1031_p2[0:0] == 1'b1) ? predictions_V_load_10_reg_1702 : select_ln40_6_reg_1835);

assign select_ln40_fu_754_p3 = ((icmp_ln1695_3_fu_748_p2[0:0] == 1'b1) ? predictions_V_q6 : predictions_V_q7);

assign select_ln8_1_fu_589_p3 = ((icmp_ln10_fu_547_p2[0:0] == 1'b1) ? p_mid1_fu_583_p2 : empty_fu_526_p2);

assign select_ln8_2_fu_733_p3 = ((icmp_ln10_reg_1571[0:0] == 1'b1) ? add_ln8_1_reg_1582 : i_reg_1562);

assign select_ln8_fu_553_p3 = ((icmp_ln10_fu_547_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_j_load);

assign shl_ln_fu_1173_p3 = {{empty_49_reg_1594_pp0_iter2_reg}, {2'd0}};

assign tmp_3_fu_1253_p4 = {{{select_ln8_2_reg_1663_pp0_iter1_reg}, {2'd0}}, {reg_484}};

assign tmp_fu_1234_p4 = {{{select_ln8_reg_1576_pp0_iter2_reg}, {2'd0}}, {reg_479}};

assign zext_ln1349_2_fu_1459_p1 = tmp_16_reg_1983;

assign zext_ln1349_fu_1398_p1 = tmp_15_reg_1978;

assign zext_ln17_1_fu_743_p1 = add_ln16_fu_738_p2;

assign zext_ln17_fu_651_p1 = empty_51_fu_645_p2;

assign zext_ln23_1_fu_1463_p1 = tmp_17_reg_1988;

assign zext_ln23_2_fu_1527_p1 = tmp_18_reg_1993;

assign zext_ln23_fu_1148_p1 = predictions_V_q2;

assign zext_ln24_fu_1074_p1 = best_index_reg_1826;

assign zext_ln25_fu_1083_p1 = add_ln25_fu_1078_p2;

assign zext_ln26_fu_1093_p1 = add_ln26_fu_1088_p2;

assign zext_ln27_fu_1016_p1 = add_ln27_fu_1011_p2;

assign zext_ln28_fu_1026_p1 = add_ln28_fu_1021_p2;

assign zext_ln29_fu_1186_p1 = add_ln29_fu_1180_p2;

assign zext_ln30_fu_1407_p1 = add_ln30_fu_1402_p2;

assign zext_ln31_fu_1472_p1 = add_ln31_fu_1467_p2;

assign zext_ln32_fu_1482_p1 = add_ln32_fu_1477_p2;

assign zext_ln33_fu_1536_p1 = add_ln33_fu_1531_p2;

assign zext_ln39_10_fu_767_p1 = add_ln39_6_fu_762_p2;

assign zext_ln39_11_fu_777_p1 = add_ln39_7_fu_772_p2;

assign zext_ln39_12_fu_787_p1 = add_ln39_8_fu_782_p2;

assign zext_ln39_13_fu_797_p1 = add_ln39_9_fu_792_p2;

assign zext_ln39_14_fu_807_p1 = add_ln39_10_fu_802_p2;

assign zext_ln39_15_fu_817_p1 = add_ln39_11_fu_812_p2;

assign zext_ln39_16_fu_897_p1 = add_ln39_12_fu_892_p2;

assign zext_ln39_17_fu_907_p1 = add_ln39_13_fu_902_p2;

assign zext_ln39_18_fu_1412_p1 = select_ln40_28_reg_2004;

assign zext_ln39_19_fu_917_p1 = add_ln39_14_fu_912_p2;

assign zext_ln39_1_fu_843_p1 = icmp_ln1695_3_reg_1673;

assign zext_ln39_20_fu_927_p1 = add_ln39_15_fu_922_p2;

assign zext_ln39_21_fu_937_p1 = add_ln39_16_fu_932_p2;

assign zext_ln39_22_fu_947_p1 = add_ln39_17_fu_942_p2;

assign zext_ln39_2_fu_673_p1 = add_ln39_fu_667_p2;

assign zext_ln39_3_fu_684_p1 = add_ln39_1_fu_678_p2;

assign zext_ln39_4_fu_964_p1 = select_ln40_4_reg_1755;

assign zext_ln39_5_fu_695_p1 = add_ln39_2_fu_689_p2;

assign zext_ln39_6_fu_706_p1 = add_ln39_3_fu_700_p2;

assign zext_ln39_7_fu_717_p1 = add_ln39_4_fu_711_p2;

assign zext_ln39_8_fu_728_p1 = add_ln39_5_fu_722_p2;

assign zext_ln39_9_fu_1098_p1 = select_ln40_12_reg_1897;

assign zext_ln39_fu_662_p1 = or_ln39_fu_656_p2;

assign zext_ln8_1_fu_567_p1 = add_ln8_1_fu_561_p2;

assign zext_ln8_fu_510_p1 = ap_sig_allocacmp_i;

always @ (posedge ap_clk) begin
    empty_50_reg_1600[0] <= 1'b0;
end

endmodule //nms_nms_Pipeline_LOOP_C2B_ROW_LOOP_C2B_COL
