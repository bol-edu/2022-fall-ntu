// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nms_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln166,
        remain_list_address0,
        remain_list_ce0,
        remain_list_we0,
        remain_list_d0,
        remain_list_q0,
        class_preds_address0,
        class_preds_ce0,
        class_preds_q0,
        chosen_class_pred,
        bboxes_address0,
        bboxes_ce0,
        bboxes_q0,
        bboxes_address1,
        bboxes_ce1,
        bboxes_q1,
        rhs_4,
        rhs_5,
        lhs_V_4,
        lhs_V_5,
        box_1_area_V_1,
        top_1_out_i,
        top_1_out_o,
        top_1_out_o_ap_vld,
        grp_fu_463_p_din0,
        grp_fu_463_p_din1,
        grp_fu_463_p_opcode,
        grp_fu_463_p_dout0,
        grp_fu_463_p_ce,
        grp_fu_1150_p_din0,
        grp_fu_1150_p_din1,
        grp_fu_1150_p_dout0,
        grp_fu_1150_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 81'd1;
parameter    ap_ST_fsm_pp0_stage1 = 81'd2;
parameter    ap_ST_fsm_pp0_stage2 = 81'd4;
parameter    ap_ST_fsm_pp0_stage3 = 81'd8;
parameter    ap_ST_fsm_pp0_stage4 = 81'd16;
parameter    ap_ST_fsm_pp0_stage5 = 81'd32;
parameter    ap_ST_fsm_pp0_stage6 = 81'd64;
parameter    ap_ST_fsm_pp0_stage7 = 81'd128;
parameter    ap_ST_fsm_pp0_stage8 = 81'd256;
parameter    ap_ST_fsm_pp0_stage9 = 81'd512;
parameter    ap_ST_fsm_pp0_stage10 = 81'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 81'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 81'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 81'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 81'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 81'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 81'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 81'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 81'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 81'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 81'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 81'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 81'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 81'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 81'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 81'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 81'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 81'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 81'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 81'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 81'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 81'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 81'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 81'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 81'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 81'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 81'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 81'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 81'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 81'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 81'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 81'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 81'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 81'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 81'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 81'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 81'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 81'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 81'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 81'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 81'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 81'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 81'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 81'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 81'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 81'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 81'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 81'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 81'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 81'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 81'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 81'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 81'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 81'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 81'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 81'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 81'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage67 = 81'd147573952589676412928;
parameter    ap_ST_fsm_pp0_stage68 = 81'd295147905179352825856;
parameter    ap_ST_fsm_pp0_stage69 = 81'd590295810358705651712;
parameter    ap_ST_fsm_pp0_stage70 = 81'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage71 = 81'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage72 = 81'd4722366482869645213696;
parameter    ap_ST_fsm_pp0_stage73 = 81'd9444732965739290427392;
parameter    ap_ST_fsm_pp0_stage74 = 81'd18889465931478580854784;
parameter    ap_ST_fsm_pp0_stage75 = 81'd37778931862957161709568;
parameter    ap_ST_fsm_pp0_stage76 = 81'd75557863725914323419136;
parameter    ap_ST_fsm_pp0_stage77 = 81'd151115727451828646838272;
parameter    ap_ST_fsm_pp0_stage78 = 81'd302231454903657293676544;
parameter    ap_ST_fsm_pp0_stage79 = 81'd604462909807314587353088;
parameter    ap_ST_fsm_pp0_stage80 = 81'd1208925819614629174706176;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sext_ln166;
output  [3:0] remain_list_address0;
output   remain_list_ce0;
output   remain_list_we0;
output  [0:0] remain_list_d0;
input  [0:0] remain_list_q0;
output  [3:0] class_preds_address0;
output   class_preds_ce0;
input  [4:0] class_preds_q0;
input  [4:0] chosen_class_pred;
output  [5:0] bboxes_address0;
output   bboxes_ce0;
input  [30:0] bboxes_q0;
output  [5:0] bboxes_address1;
output   bboxes_ce1;
input  [30:0] bboxes_q1;
input  [31:0] rhs_4;
input  [31:0] rhs_5;
input  [31:0] lhs_V_4;
input  [31:0] lhs_V_5;
input  [31:0] box_1_area_V_1;
input  [31:0] top_1_out_i;
output  [31:0] top_1_out_o;
output   top_1_out_o_ap_vld;
output  [63:0] grp_fu_463_p_din0;
output  [63:0] grp_fu_463_p_din1;
output  [4:0] grp_fu_463_p_opcode;
input  [0:0] grp_fu_463_p_dout0;
output   grp_fu_463_p_ce;
output  [32:0] grp_fu_1150_p_din0;
output  [32:0] grp_fu_1150_p_din1;
input  [59:0] grp_fu_1150_p_dout0;
output   grp_fu_1150_p_ce;

reg ap_idle;
reg[3:0] remain_list_address0;
reg remain_list_ce0;
reg remain_list_we0;
reg class_preds_ce0;
reg[5:0] bboxes_address0;
reg bboxes_ce0;
reg[5:0] bboxes_address1;
reg bboxes_ce1;
reg[31:0] top_1_out_o;
reg top_1_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [80:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln166_fu_279_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage80;
wire    ap_block_state81_pp0_stage80_iter0;
wire    ap_block_pp0_stage80_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state82_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] j_1_reg_1160;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln166_reg_1168;
reg   [3:0] remain_list_addr_reg_1172;
wire   [5:0] empty_fu_292_p1;
reg   [5:0] empty_reg_1177;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] top_fu_301_p3;
reg   [31:0] top_reg_1182;
reg   [0:0] remain_list_load_reg_1187;
wire   [0:0] icmp_ln172_fu_309_p2;
reg   [0:0] icmp_ln172_reg_1196;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [5:0] add_ln182_fu_330_p2;
reg   [5:0] add_ln182_reg_1200;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] tmp_reg_1226;
reg   [30:0] lshr_ln1349_1_reg_1231;
reg   [29:0] trunc_ln1349_1_reg_1236;
reg   [0:0] tmp_1_reg_1241;
reg   [30:0] lshr_ln1349_4_reg_1246;
reg   [29:0] trunc_ln1349_3_reg_1251;
wire  signed [31:0] rhs_2_fu_484_p2;
reg  signed [31:0] rhs_2_reg_1256;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire  signed [31:0] rhs_3_fu_513_p2;
reg  signed [31:0] rhs_3_reg_1263;
wire  signed [31:0] lhs_V_2_fu_519_p2;
reg  signed [31:0] lhs_V_2_reg_1270;
wire  signed [31:0] lhs_V_3_fu_525_p2;
reg  signed [31:0] lhs_V_3_reg_1277;
wire   [32:0] ret_V_fu_603_p2;
reg   [32:0] ret_V_reg_1284;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [31:0] trunc_ln859_fu_609_p1;
reg   [31:0] trunc_ln859_reg_1289;
wire   [32:0] ret_V_1_fu_621_p2;
reg   [32:0] ret_V_1_reg_1294;
wire   [31:0] trunc_ln859_1_fu_627_p1;
reg   [31:0] trunc_ln859_1_reg_1299;
wire   [32:0] ret_V_4_fu_637_p2;
reg   [32:0] ret_V_4_reg_1304;
wire   [32:0] ret_V_3_fu_649_p2;
reg   [32:0] ret_V_3_reg_1309;
wire   [31:0] x2_x1_V_fu_660_p3;
reg  signed [31:0] x2_x1_V_reg_1314;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [31:0] y2_y1_V_fu_672_p3;
reg  signed [31:0] y2_y1_V_reg_1319;
wire  signed [59:0] sext_ln1316_1_fu_679_p1;
wire  signed [59:0] sext_ln1319_1_fu_682_p1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] box_2_area_V_reg_1344;
reg   [31:0] intersection_area_V_reg_1351;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire   [31:0] box_2_area_V_1_fu_751_p3;
reg   [31:0] box_2_area_V_1_reg_1357;
wire   [31:0] union_area_V_fu_762_p2;
reg  signed [31:0] union_area_V_reg_1362;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [59:0] grp_fu_777_p2;
reg   [59:0] sdiv_ln1349_reg_1377;
wire    ap_CS_fsm_pp0_stage74;
wire    ap_block_state75_pp0_stage74_iter0;
wire    ap_block_pp0_stage74_11001;
wire   [31:0] iou_V_fu_783_p1;
reg   [31:0] iou_V_reg_1382;
wire   [0:0] icmp_ln1086_fu_787_p2;
reg   [0:0] icmp_ln1086_reg_1389;
wire    ap_CS_fsm_pp0_stage75;
wire    ap_block_state76_pp0_stage75_iter0;
wire    ap_block_pp0_stage75_11001;
wire   [0:0] p_Result_4_fu_792_p3;
reg   [0:0] p_Result_4_reg_1393;
wire   [31:0] tmp_V_2_fu_804_p3;
reg   [31:0] tmp_V_2_reg_1398;
wire   [31:0] sub_ln1095_fu_829_p2;
reg   [31:0] sub_ln1095_reg_1405;
wire   [5:0] trunc_ln1098_fu_835_p1;
reg   [5:0] trunc_ln1098_reg_1412;
wire   [10:0] trunc_ln1094_fu_839_p1;
reg   [10:0] trunc_ln1094_reg_1417;
wire   [1:0] or_ln1100_1_fu_934_p3;
reg   [1:0] or_ln1100_1_reg_1422;
wire    ap_CS_fsm_pp0_stage76;
wire    ap_block_state77_pp0_stage76_iter0;
wire    ap_block_pp0_stage76_11001;
wire   [0:0] icmp_ln1109_fu_942_p2;
reg   [0:0] icmp_ln1109_reg_1427;
reg   [62:0] m_reg_1432;
wire    ap_CS_fsm_pp0_stage77;
wire    ap_block_state78_pp0_stage77_iter0;
wire    ap_block_pp0_stage77_11001;
reg   [0:0] p_Result_2_reg_1437;
reg   [51:0] tmp_s_reg_1442;
wire   [63:0] p_Result_6_fu_1053_p5;
reg   [63:0] p_Result_6_reg_1447;
wire    ap_CS_fsm_pp0_stage78;
wire    ap_block_state79_pp0_stage78_iter0;
wire    ap_block_pp0_stage78_11001;
wire   [0:0] notlhs31_fu_1065_p2;
reg   [0:0] notlhs31_reg_1452;
wire   [0:0] notrhs32_fu_1071_p2;
reg   [0:0] notrhs32_reg_1457;
wire   [63:0] bitcast_ln800_fu_1076_p1;
wire    ap_block_state80_pp0_stage79_iter0;
wire    ap_block_pp0_stage79_11001;
wire   [0:0] empty_42_fu_1084_p2;
reg   [0:0] empty_42_reg_1467;
wire    ap_block_pp0_stage80_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln184_fu_341_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln185_fu_352_p1;
wire   [63:0] zext_ln182_fu_362_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln183_fu_372_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] j_fu_134;
wire   [63:0] add_ln166_fu_1095_p2;
wire  signed [63:0] sext_ln166_cast_fu_257_p1;
wire    ap_loop_init;
reg   [0:0] top_is_set_fu_138;
wire    ap_block_pp0_stage79;
wire   [31:0] trunc_ln166_fu_275_p1;
wire   [31:0] add_ln169_fu_295_p2;
wire   [3:0] trunc_ln182_fu_319_p1;
wire   [5:0] shl_ln2_fu_322_p3;
wire   [5:0] add_ln184_fu_335_p2;
wire   [5:0] add_ln185_fu_346_p2;
wire   [5:0] add_ln182_1_fu_357_p2;
wire   [5:0] add_ln183_fu_367_p2;
wire  signed [30:0] sext_ln177_2_fu_377_p0;
wire  signed [30:0] sext_ln177_3_fu_381_p0;
wire  signed [30:0] tmp_fu_385_p1;
wire  signed [31:0] sext_ln177_2_fu_377_p1;
wire   [31:0] sub_ln1349_fu_393_p2;
wire  signed [30:0] trunc_ln1349_1_fu_409_p1;
wire  signed [30:0] tmp_1_fu_419_p1;
wire  signed [31:0] sext_ln177_3_fu_381_p1;
wire   [31:0] sub_ln1349_2_fu_427_p2;
wire  signed [30:0] trunc_ln1349_3_fu_443_p1;
wire    ap_block_pp0_stage5;
wire   [31:0] zext_ln1349_fu_461_p1;
wire  signed [30:0] sext_ln1349_1_fu_470_p1;
wire   [31:0] sub_ln1349_1_fu_464_p2;
wire   [31:0] zext_ln1349_1_fu_473_p1;
wire  signed [31:0] sext_ln177_fu_453_p1;
wire   [31:0] select_ln1349_fu_477_p3;
wire   [31:0] zext_ln1349_2_fu_490_p1;
wire  signed [30:0] sext_ln1349_2_fu_499_p1;
wire   [31:0] sub_ln1349_3_fu_493_p2;
wire   [31:0] zext_ln1349_3_fu_502_p1;
wire  signed [31:0] sext_ln177_1_fu_457_p1;
wire   [31:0] select_ln1349_1_fu_506_p3;
wire    ap_block_pp0_stage6;
wire   [0:0] icmp_ln1697_fu_531_p2;
wire   [0:0] xor_ln1697_fu_535_p2;
wire   [0:0] icmp_ln1697_1_fu_547_p2;
wire   [0:0] xor_ln1697_1_fu_551_p2;
wire   [0:0] icmp_ln1698_fu_563_p2;
wire   [0:0] xor_ln1698_fu_567_p2;
wire   [0:0] icmp_ln1698_1_fu_579_p2;
wire   [0:0] xor_ln1698_1_fu_583_p2;
wire   [31:0] x2_V_fu_573_p3;
wire   [31:0] x1_V_fu_541_p3;
wire  signed [32:0] sext_ln859_fu_595_p1;
wire  signed [32:0] sext_ln859_1_fu_599_p1;
wire   [31:0] y2_V_fu_589_p3;
wire   [31:0] y1_V_fu_557_p3;
wire  signed [32:0] sext_ln859_2_fu_613_p1;
wire  signed [32:0] sext_ln859_3_fu_617_p1;
wire  signed [32:0] sext_ln859_4_fu_631_p1;
wire  signed [32:0] sext_ln859_5_fu_634_p1;
wire  signed [32:0] sext_ln859_6_fu_643_p1;
wire  signed [32:0] sext_ln859_7_fu_646_p1;
wire    ap_block_pp0_stage7;
wire   [0:0] icmp_ln1695_fu_655_p2;
wire   [0:0] icmp_ln1695_1_fu_667_p2;
wire    ap_block_pp0_stage8;
wire   [59:0] grp_fu_697_p2;
wire    ap_block_pp0_stage9;
wire   [59:0] shl_ln3_fu_728_p3;
wire   [59:0] r_V_4_fu_735_p2;
wire   [0:0] icmp_ln1695_2_fu_723_p2;
wire   [31:0] trunc_ln7_fu_741_p4;
wire    ap_block_pp0_stage10;
wire   [31:0] newFirst_fu_758_p2;
wire    ap_block_pp0_stage11;
wire   [59:0] grp_fu_777_p0;
wire    ap_block_pp0_stage74;
wire    ap_block_pp0_stage75;
wire   [31:0] tmp_V_fu_799_p2;
reg   [31:0] p_Result_5_fu_811_p4;
reg   [31:0] l_fu_821_p3;
wire    ap_block_pp0_stage76;
wire   [31:0] lsb_index_fu_848_p2;
wire   [30:0] tmp_5_fu_853_p4;
wire   [5:0] sub_ln1098_fu_869_p2;
wire   [31:0] zext_ln1098_fu_874_p1;
wire   [31:0] lshr_ln1098_fu_878_p2;
wire   [31:0] p_Result_s_fu_884_p2;
wire   [0:0] icmp_ln1097_fu_863_p2;
wire   [0:0] icmp_ln1098_fu_889_p2;
wire   [0:0] tmp_6_fu_901_p3;
wire   [0:0] p_Result_1_fu_915_p3;
wire   [0:0] xor_ln1100_fu_909_p2;
wire   [0:0] and_ln1100_fu_922_p2;
wire   [0:0] a_fu_895_p2;
wire   [0:0] or_ln1100_fu_928_p2;
wire    ap_block_pp0_stage77;
wire   [31:0] add_ln1109_fu_951_p2;
wire   [63:0] zext_ln1108_fu_948_p1;
wire   [63:0] zext_ln1109_fu_956_p1;
wire   [31:0] sub_ln1110_fu_966_p2;
wire   [63:0] zext_ln1110_fu_971_p1;
wire   [63:0] lshr_ln1109_fu_960_p2;
wire   [63:0] shl_ln1110_fu_975_p2;
wire   [63:0] m_1_fu_981_p3;
wire   [63:0] zext_ln1112_fu_988_p1;
wire   [63:0] m_2_fu_991_p2;
wire    ap_block_pp0_stage78;
wire   [10:0] sub_ln1116_fu_1035_p2;
wire   [10:0] select_ln1094_fu_1028_p3;
wire   [10:0] add_ln1122_fu_1040_p2;
wire   [63:0] zext_ln1113_fu_1025_p1;
wire   [11:0] tmp_3_fu_1046_p3;
wire    ap_block_pp0_stage80;
wire   [0:0] empty_41_fu_1080_p2;
wire    ap_block_pp0_stage79_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [80:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_state41_pp0_stage40_iter0;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_state42_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_state43_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_state44_pp0_stage43_iter0;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_state45_pp0_stage44_iter0;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_state46_pp0_stage45_iter0;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_state47_pp0_stage46_iter0;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_state48_pp0_stage47_iter0;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_state49_pp0_stage48_iter0;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_state50_pp0_stage49_iter0;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_state51_pp0_stage50_iter0;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_state52_pp0_stage51_iter0;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_state53_pp0_stage52_iter0;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_state54_pp0_stage53_iter0;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_state55_pp0_stage54_iter0;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_state56_pp0_stage55_iter0;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_state57_pp0_stage56_iter0;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_state58_pp0_stage57_iter0;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_state59_pp0_stage58_iter0;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_state60_pp0_stage59_iter0;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_state61_pp0_stage60_iter0;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_state62_pp0_stage61_iter0;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_state63_pp0_stage62_iter0;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_state64_pp0_stage63_iter0;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_state65_pp0_stage64_iter0;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_state66_pp0_stage65_iter0;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_state67_pp0_stage66_iter0;
wire    ap_block_pp0_stage66_subdone;
wire    ap_block_state68_pp0_stage67_iter0;
wire    ap_block_pp0_stage67_subdone;
wire    ap_block_state69_pp0_stage68_iter0;
wire    ap_block_pp0_stage68_subdone;
wire    ap_block_state70_pp0_stage69_iter0;
wire    ap_block_pp0_stage69_subdone;
wire    ap_block_state71_pp0_stage70_iter0;
wire    ap_block_pp0_stage70_subdone;
wire    ap_block_state72_pp0_stage71_iter0;
wire    ap_block_pp0_stage71_subdone;
wire    ap_block_state73_pp0_stage72_iter0;
wire    ap_block_pp0_stage72_subdone;
wire    ap_block_state74_pp0_stage73_iter0;
wire    ap_block_pp0_stage73_subdone;
wire    ap_block_pp0_stage74_subdone;
wire    ap_block_pp0_stage75_subdone;
wire    ap_block_pp0_stage76_subdone;
wire    ap_block_pp0_stage77_subdone;
wire    ap_block_pp0_stage78_subdone;
wire    ap_block_pp0_stage79_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 81'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

nms_mul_32s_32s_60_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 60 ))
mul_32s_32s_60_2_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y2_y1_V_reg_1319),
    .din1(x2_x1_V_reg_1314),
    .ce(1'b1),
    .dout(grp_fu_697_p2)
);

nms_sdiv_60ns_32s_60_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 64 ),
    .din0_WIDTH( 60 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 60 ))
sdiv_60ns_32s_60_64_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_777_p0),
    .din1(union_area_V_reg_1362),
    .ce(1'b1),
    .dout(grp_fu_777_p2)
);

nms_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage80) & (1'b0 == ap_block_pp0_stage80_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_134 <= sext_ln166_cast_fu_257_p1;
        end else if (((icmp_ln166_reg_1168 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_134 <= add_ln166_fu_1095_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        top_is_set_fu_138 <= 1'd0;
    end else if ((((icmp_ln172_fu_309_p2 == 1'd0) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln1086_fu_787_p2 == 1'd1) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage75) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage75_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((empty_42_reg_1467 == 1'd0) & (icmp_ln1086_reg_1389 == 1'd0) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        top_is_set_fu_138 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_fu_309_p2 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln182_reg_1200 <= add_ln182_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        box_2_area_V_1_reg_1357 <= box_2_area_V_1_fu_751_p3;
        intersection_area_V_reg_1351 <= {{grp_fu_697_p2[59:28]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        box_2_area_V_reg_1344 <= {{grp_fu_1150_p_dout0[59:28]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1086_reg_1389 == 1'd0) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage80) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage80_11001))) begin
        empty_42_reg_1467 <= empty_42_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        empty_reg_1177 <= empty_fu_292_p1;
        top_reg_1182 <= top_fu_301_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage75) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage75_11001))) begin
        icmp_ln1086_reg_1389 <= icmp_ln1086_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1086_reg_1389 == 1'd0) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage76) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage76_11001))) begin
        icmp_ln1109_reg_1427 <= icmp_ln1109_fu_942_p2;
        or_ln1100_1_reg_1422[0] <= or_ln1100_1_fu_934_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln166_reg_1168 <= icmp_ln166_fu_279_p2;
        j_1_reg_1160 <= j_fu_134;
    end
end

always @ (posedge ap_clk) begin
    if (((remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        icmp_ln172_reg_1196 <= icmp_ln172_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage74) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage74_11001))) begin
        iou_V_reg_1382 <= iou_V_fu_783_p1;
        sdiv_ln1349_reg_1377 <= grp_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        lhs_V_2_reg_1270 <= lhs_V_2_fu_519_p2;
        lhs_V_3_reg_1277 <= lhs_V_3_fu_525_p2;
        rhs_2_reg_1256 <= rhs_2_fu_484_p2;
        rhs_3_reg_1263 <= rhs_3_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        lshr_ln1349_1_reg_1231 <= {{sub_ln1349_fu_393_p2[31:1]}};
        lshr_ln1349_4_reg_1246 <= {{sub_ln1349_2_fu_427_p2[31:1]}};
        tmp_1_reg_1241 <= tmp_1_fu_419_p1[32'd30];
        tmp_reg_1226 <= tmp_fu_385_p1[32'd30];
        trunc_ln1349_1_reg_1236 <= {{trunc_ln1349_1_fu_409_p1[30:1]}};
        trunc_ln1349_3_reg_1251 <= {{trunc_ln1349_3_fu_443_p1[30:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1086_reg_1389 == 1'd0) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage77) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage77_11001))) begin
        m_reg_1432 <= {{m_2_fu_991_p2[63:1]}};
        p_Result_2_reg_1437 <= m_2_fu_991_p2[32'd54];
        tmp_s_reg_1442 <= {{m_2_fu_991_p2[52:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1086_reg_1389 == 1'd0) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage78) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage78_11001))) begin
        notlhs31_reg_1452 <= notlhs31_fu_1065_p2;
        notrhs32_reg_1457 <= notrhs32_fu_1071_p2;
        p_Result_6_reg_1447 <= p_Result_6_fu_1053_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1086_fu_787_p2 == 1'd0) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage75) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage75_11001))) begin
        p_Result_4_reg_1393 <= sdiv_ln1349_reg_1377[32'd31];
        sub_ln1095_reg_1405 <= sub_ln1095_fu_829_p2;
        tmp_V_2_reg_1398 <= tmp_V_2_fu_804_p3;
        trunc_ln1094_reg_1417 <= trunc_ln1094_fu_839_p1;
        trunc_ln1098_reg_1412 <= trunc_ln1098_fu_835_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln166_fu_279_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        remain_list_addr_reg_1172 <= j_fu_134;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        remain_list_load_reg_1187 <= remain_list_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        ret_V_1_reg_1294 <= ret_V_1_fu_621_p2;
        ret_V_3_reg_1309 <= ret_V_3_fu_649_p2;
        ret_V_4_reg_1304 <= ret_V_4_fu_637_p2;
        ret_V_reg_1284 <= ret_V_fu_603_p2;
        trunc_ln859_1_reg_1299 <= trunc_ln859_1_fu_627_p1;
        trunc_ln859_reg_1289 <= trunc_ln859_fu_609_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        union_area_V_reg_1362 <= union_area_V_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        x2_x1_V_reg_1314 <= x2_x1_V_fu_660_p3;
        y2_y1_V_reg_1319 <= y2_y1_V_fu_672_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln166_fu_279_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage80) & (1'b0 == ap_block_pp0_stage80_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            bboxes_address0 = zext_ln183_fu_372_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            bboxes_address0 = zext_ln185_fu_352_p1;
        end else begin
            bboxes_address0 = 'bx;
        end
    end else begin
        bboxes_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            bboxes_address1 = zext_ln182_fu_362_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            bboxes_address1 = zext_ln184_fu_341_p1;
        end else begin
            bboxes_address1 = 'bx;
        end
    end else begin
        bboxes_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        bboxes_ce0 = 1'b1;
    end else begin
        bboxes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        bboxes_ce1 = 1'b1;
    end else begin
        bboxes_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        class_preds_ce0 = 1'b1;
    end else begin
        class_preds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        remain_list_address0 = remain_list_addr_reg_1172;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        remain_list_address0 = j_fu_134;
    end else begin
        remain_list_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        remain_list_ce0 = 1'b1;
    end else begin
        remain_list_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_42_reg_1467 == 1'd1) & (icmp_ln1086_reg_1389 == 1'd0) & (icmp_ln172_reg_1196 == 1'd1) & (remain_list_load_reg_1187 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        remain_list_we0 = 1'b1;
    end else begin
        remain_list_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        top_1_out_o = top_reg_1182;
    end else begin
        top_1_out_o = top_1_out_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln166_reg_1168 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        top_1_out_o_ap_vld = 1'b1;
    end else begin
        top_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        ap_ST_fsm_pp0_stage68 : begin
            if ((1'b0 == ap_block_pp0_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end
        end
        ap_ST_fsm_pp0_stage69 : begin
            if ((1'b0 == ap_block_pp0_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end
        end
        ap_ST_fsm_pp0_stage70 : begin
            if ((1'b0 == ap_block_pp0_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end
        end
        ap_ST_fsm_pp0_stage71 : begin
            if ((1'b0 == ap_block_pp0_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end
        end
        ap_ST_fsm_pp0_stage72 : begin
            if ((1'b0 == ap_block_pp0_stage72_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end
        end
        ap_ST_fsm_pp0_stage73 : begin
            if ((1'b0 == ap_block_pp0_stage73_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end
        end
        ap_ST_fsm_pp0_stage74 : begin
            if ((1'b0 == ap_block_pp0_stage74_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end
        end
        ap_ST_fsm_pp0_stage75 : begin
            if ((1'b0 == ap_block_pp0_stage75_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end
        end
        ap_ST_fsm_pp0_stage76 : begin
            if ((1'b0 == ap_block_pp0_stage76_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end
        end
        ap_ST_fsm_pp0_stage77 : begin
            if ((1'b0 == ap_block_pp0_stage77_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end
        end
        ap_ST_fsm_pp0_stage78 : begin
            if ((1'b0 == ap_block_pp0_stage78_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end
        end
        ap_ST_fsm_pp0_stage79 : begin
            if ((1'b0 == ap_block_pp0_stage79_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end
        end
        ap_ST_fsm_pp0_stage80 : begin
            if ((1'b0 == ap_block_pp0_stage80_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_895_p2 = (icmp_ln1098_fu_889_p2 & icmp_ln1097_fu_863_p2);

assign add_ln1109_fu_951_p2 = ($signed(sub_ln1095_reg_1405) + $signed(32'd4294967242));

assign add_ln1122_fu_1040_p2 = (sub_ln1116_fu_1035_p2 + select_ln1094_fu_1028_p3);

assign add_ln166_fu_1095_p2 = (j_1_reg_1160 + 64'd1);

assign add_ln169_fu_295_p2 = (top_1_out_i + 32'd1);

assign add_ln182_1_fu_357_p2 = (add_ln182_reg_1200 + 6'd1);

assign add_ln182_fu_330_p2 = (shl_ln2_fu_322_p3 + empty_reg_1177);

assign add_ln183_fu_367_p2 = (add_ln182_reg_1200 + 6'd2);

assign add_ln184_fu_335_p2 = (add_ln182_fu_330_p2 + 6'd3);

assign add_ln185_fu_346_p2 = (add_ln182_fu_330_p2 + 6'd4);

assign and_ln1100_fu_922_p2 = (xor_ln1100_fu_909_p2 & p_Result_1_fu_915_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage74 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_pp0_stage75 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_pp0_stage76 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp0_stage77 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_pp0_stage78 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage80 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage75 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage75_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage75_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage76 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage76_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage76_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage64_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage65_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage66_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage67_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage68_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage69_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage70_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage71_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage72_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage73_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage74_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage75_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage76_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage77_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage78_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage79_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage80_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln800_fu_1076_p1 = p_Result_6_reg_1447;

assign box_2_area_V_1_fu_751_p3 = ((icmp_ln1695_2_fu_723_p2[0:0] == 1'b1) ? box_2_area_V_reg_1344 : trunc_ln7_fu_741_p4);

assign class_preds_address0 = j_1_reg_1160;

assign empty_41_fu_1080_p2 = (notrhs32_reg_1457 | notlhs31_reg_1452);

assign empty_42_fu_1084_p2 = (grp_fu_463_p_dout0 & empty_41_fu_1080_p2);

assign empty_fu_292_p1 = j_1_reg_1160[5:0];

assign grp_fu_1150_p_ce = 1'b1;

assign grp_fu_1150_p_din0 = sext_ln1319_1_fu_682_p1;

assign grp_fu_1150_p_din1 = sext_ln1316_1_fu_679_p1;

assign grp_fu_463_p_ce = 1'b1;

assign grp_fu_463_p_din0 = bitcast_ln800_fu_1076_p1;

assign grp_fu_463_p_din1 = 64'd4602678819172646912;

assign grp_fu_463_p_opcode = 5'd3;

assign grp_fu_777_p0 = {{intersection_area_V_reg_1351}, {28'd0}};

assign icmp_ln1086_fu_787_p2 = ((iou_V_reg_1382 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1097_fu_863_p2 = (($signed(tmp_5_fu_853_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1098_fu_889_p2 = ((p_Result_s_fu_884_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1109_fu_942_p2 = (($signed(lsb_index_fu_848_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_279_p2 = (($signed(trunc_ln166_fu_275_p1) < $signed(32'd9)) ? 1'b1 : 1'b0);

assign icmp_ln1695_1_fu_667_p2 = (($signed(ret_V_1_reg_1294) > $signed(33'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_2_fu_723_p2 = (($signed(box_2_area_V_reg_1344) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1695_fu_655_p2 = (($signed(ret_V_reg_1284) > $signed(33'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1697_1_fu_547_p2 = (($signed(rhs_5) < $signed(rhs_3_reg_1263)) ? 1'b1 : 1'b0);

assign icmp_ln1697_fu_531_p2 = (($signed(rhs_4) < $signed(rhs_2_reg_1256)) ? 1'b1 : 1'b0);

assign icmp_ln1698_1_fu_579_p2 = (($signed(lhs_V_3_reg_1277) < $signed(lhs_V_5)) ? 1'b1 : 1'b0);

assign icmp_ln1698_fu_563_p2 = (($signed(lhs_V_2_reg_1270) < $signed(lhs_V_4)) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_309_p2 = ((class_preds_q0 == chosen_class_pred) ? 1'b1 : 1'b0);

assign iou_V_fu_783_p1 = grp_fu_777_p2[31:0];


always @ (p_Result_5_fu_811_p4) begin
    if (p_Result_5_fu_811_p4[0] == 1'b1) begin
        l_fu_821_p3 = 32'd0;
    end else if (p_Result_5_fu_811_p4[1] == 1'b1) begin
        l_fu_821_p3 = 32'd1;
    end else if (p_Result_5_fu_811_p4[2] == 1'b1) begin
        l_fu_821_p3 = 32'd2;
    end else if (p_Result_5_fu_811_p4[3] == 1'b1) begin
        l_fu_821_p3 = 32'd3;
    end else if (p_Result_5_fu_811_p4[4] == 1'b1) begin
        l_fu_821_p3 = 32'd4;
    end else if (p_Result_5_fu_811_p4[5] == 1'b1) begin
        l_fu_821_p3 = 32'd5;
    end else if (p_Result_5_fu_811_p4[6] == 1'b1) begin
        l_fu_821_p3 = 32'd6;
    end else if (p_Result_5_fu_811_p4[7] == 1'b1) begin
        l_fu_821_p3 = 32'd7;
    end else if (p_Result_5_fu_811_p4[8] == 1'b1) begin
        l_fu_821_p3 = 32'd8;
    end else if (p_Result_5_fu_811_p4[9] == 1'b1) begin
        l_fu_821_p3 = 32'd9;
    end else if (p_Result_5_fu_811_p4[10] == 1'b1) begin
        l_fu_821_p3 = 32'd10;
    end else if (p_Result_5_fu_811_p4[11] == 1'b1) begin
        l_fu_821_p3 = 32'd11;
    end else if (p_Result_5_fu_811_p4[12] == 1'b1) begin
        l_fu_821_p3 = 32'd12;
    end else if (p_Result_5_fu_811_p4[13] == 1'b1) begin
        l_fu_821_p3 = 32'd13;
    end else if (p_Result_5_fu_811_p4[14] == 1'b1) begin
        l_fu_821_p3 = 32'd14;
    end else if (p_Result_5_fu_811_p4[15] == 1'b1) begin
        l_fu_821_p3 = 32'd15;
    end else if (p_Result_5_fu_811_p4[16] == 1'b1) begin
        l_fu_821_p3 = 32'd16;
    end else if (p_Result_5_fu_811_p4[17] == 1'b1) begin
        l_fu_821_p3 = 32'd17;
    end else if (p_Result_5_fu_811_p4[18] == 1'b1) begin
        l_fu_821_p3 = 32'd18;
    end else if (p_Result_5_fu_811_p4[19] == 1'b1) begin
        l_fu_821_p3 = 32'd19;
    end else if (p_Result_5_fu_811_p4[20] == 1'b1) begin
        l_fu_821_p3 = 32'd20;
    end else if (p_Result_5_fu_811_p4[21] == 1'b1) begin
        l_fu_821_p3 = 32'd21;
    end else if (p_Result_5_fu_811_p4[22] == 1'b1) begin
        l_fu_821_p3 = 32'd22;
    end else if (p_Result_5_fu_811_p4[23] == 1'b1) begin
        l_fu_821_p3 = 32'd23;
    end else if (p_Result_5_fu_811_p4[24] == 1'b1) begin
        l_fu_821_p3 = 32'd24;
    end else if (p_Result_5_fu_811_p4[25] == 1'b1) begin
        l_fu_821_p3 = 32'd25;
    end else if (p_Result_5_fu_811_p4[26] == 1'b1) begin
        l_fu_821_p3 = 32'd26;
    end else if (p_Result_5_fu_811_p4[27] == 1'b1) begin
        l_fu_821_p3 = 32'd27;
    end else if (p_Result_5_fu_811_p4[28] == 1'b1) begin
        l_fu_821_p3 = 32'd28;
    end else if (p_Result_5_fu_811_p4[29] == 1'b1) begin
        l_fu_821_p3 = 32'd29;
    end else if (p_Result_5_fu_811_p4[30] == 1'b1) begin
        l_fu_821_p3 = 32'd30;
    end else if (p_Result_5_fu_811_p4[31] == 1'b1) begin
        l_fu_821_p3 = 32'd31;
    end else begin
        l_fu_821_p3 = 32'd32;
    end
end

assign lhs_V_2_fu_519_p2 = ($signed(sext_ln177_fu_453_p1) + $signed(select_ln1349_fu_477_p3));

assign lhs_V_3_fu_525_p2 = ($signed(sext_ln177_1_fu_457_p1) + $signed(select_ln1349_1_fu_506_p3));

assign lsb_index_fu_848_p2 = ($signed(sub_ln1095_reg_1405) + $signed(32'd4294967243));

assign lshr_ln1098_fu_878_p2 = 32'd4294967295 >> zext_ln1098_fu_874_p1;

assign lshr_ln1109_fu_960_p2 = zext_ln1108_fu_948_p1 >> zext_ln1109_fu_956_p1;

assign m_1_fu_981_p3 = ((icmp_ln1109_reg_1427[0:0] == 1'b1) ? lshr_ln1109_fu_960_p2 : shl_ln1110_fu_975_p2);

assign m_2_fu_991_p2 = (m_1_fu_981_p3 + zext_ln1112_fu_988_p1);

assign newFirst_fu_758_p2 = (box_1_area_V_1 + box_2_area_V_1_reg_1357);

assign notlhs31_fu_1065_p2 = ((add_ln1122_fu_1040_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs32_fu_1071_p2 = ((tmp_s_reg_1442 == 52'd0) ? 1'b1 : 1'b0);

assign or_ln1100_1_fu_934_p3 = {{1'd0}, {or_ln1100_fu_928_p2}};

assign or_ln1100_fu_928_p2 = (and_ln1100_fu_922_p2 | a_fu_895_p2);

assign p_Result_1_fu_915_p3 = tmp_V_2_reg_1398[lsb_index_fu_848_p2];

assign p_Result_4_fu_792_p3 = sdiv_ln1349_reg_1377[32'd31];

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_804_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_5_fu_811_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_5_fu_811_p4[ap_tvar_int_0] = tmp_V_2_fu_804_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_6_fu_1053_p5 = {{tmp_3_fu_1046_p3}, {zext_ln1113_fu_1025_p1[51:0]}};

assign p_Result_s_fu_884_p2 = (tmp_V_2_reg_1398 & lshr_ln1098_fu_878_p2);

assign r_V_4_fu_735_p2 = (60'd0 - shl_ln3_fu_728_p3);

assign remain_list_d0 = 1'd0;

assign ret_V_1_fu_621_p2 = ($signed(sext_ln859_2_fu_613_p1) - $signed(sext_ln859_3_fu_617_p1));

assign ret_V_3_fu_649_p2 = ($signed(sext_ln859_6_fu_643_p1) - $signed(sext_ln859_7_fu_646_p1));

assign ret_V_4_fu_637_p2 = ($signed(sext_ln859_4_fu_631_p1) - $signed(sext_ln859_5_fu_634_p1));

assign ret_V_fu_603_p2 = ($signed(sext_ln859_fu_595_p1) - $signed(sext_ln859_1_fu_599_p1));

assign rhs_2_fu_484_p2 = ($signed(sext_ln177_fu_453_p1) - $signed(select_ln1349_fu_477_p3));

assign rhs_3_fu_513_p2 = ($signed(sext_ln177_1_fu_457_p1) - $signed(select_ln1349_1_fu_506_p3));

assign select_ln1094_fu_1028_p3 = ((p_Result_2_reg_1437[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln1349_1_fu_506_p3 = ((tmp_1_reg_1241[0:0] == 1'b1) ? sub_ln1349_3_fu_493_p2 : zext_ln1349_3_fu_502_p1);

assign select_ln1349_fu_477_p3 = ((tmp_reg_1226[0:0] == 1'b1) ? sub_ln1349_1_fu_464_p2 : zext_ln1349_1_fu_473_p1);

assign sext_ln1316_1_fu_679_p1 = $signed(ret_V_4_reg_1304);

assign sext_ln1319_1_fu_682_p1 = $signed(ret_V_3_reg_1309);

assign sext_ln1349_1_fu_470_p1 = $signed(trunc_ln1349_1_reg_1236);

assign sext_ln1349_2_fu_499_p1 = $signed(trunc_ln1349_3_reg_1251);

assign sext_ln166_cast_fu_257_p1 = $signed(sext_ln166);

assign sext_ln177_1_fu_457_p1 = $signed(bboxes_q0);

assign sext_ln177_2_fu_377_p0 = bboxes_q1;

assign sext_ln177_2_fu_377_p1 = sext_ln177_2_fu_377_p0;

assign sext_ln177_3_fu_381_p0 = bboxes_q0;

assign sext_ln177_3_fu_381_p1 = sext_ln177_3_fu_381_p0;

assign sext_ln177_fu_453_p1 = $signed(bboxes_q1);

assign sext_ln859_1_fu_599_p1 = $signed(x1_V_fu_541_p3);

assign sext_ln859_2_fu_613_p1 = $signed(y2_V_fu_589_p3);

assign sext_ln859_3_fu_617_p1 = $signed(y1_V_fu_557_p3);

assign sext_ln859_4_fu_631_p1 = lhs_V_2_reg_1270;

assign sext_ln859_5_fu_634_p1 = rhs_2_reg_1256;

assign sext_ln859_6_fu_643_p1 = lhs_V_3_reg_1277;

assign sext_ln859_7_fu_646_p1 = rhs_3_reg_1263;

assign sext_ln859_fu_595_p1 = $signed(x2_V_fu_573_p3);

assign shl_ln1110_fu_975_p2 = zext_ln1108_fu_948_p1 << zext_ln1110_fu_971_p1;

assign shl_ln2_fu_322_p3 = {{trunc_ln182_fu_319_p1}, {2'd0}};

assign shl_ln3_fu_728_p3 = {{box_2_area_V_reg_1344}, {28'd0}};

assign sub_ln1095_fu_829_p2 = (32'd32 - l_fu_821_p3);

assign sub_ln1098_fu_869_p2 = (6'd22 - trunc_ln1098_reg_1412);

assign sub_ln1110_fu_966_p2 = (32'd54 - sub_ln1095_reg_1405);

assign sub_ln1116_fu_1035_p2 = (11'd4 - trunc_ln1094_reg_1417);

assign sub_ln1349_1_fu_464_p2 = (32'd0 - zext_ln1349_fu_461_p1);

assign sub_ln1349_2_fu_427_p2 = ($signed(32'd0) - $signed(sext_ln177_3_fu_381_p1));

assign sub_ln1349_3_fu_493_p2 = (32'd0 - zext_ln1349_2_fu_490_p1);

assign sub_ln1349_fu_393_p2 = ($signed(32'd0) - $signed(sext_ln177_2_fu_377_p1));

assign tmp_1_fu_419_p1 = bboxes_q0;

assign tmp_3_fu_1046_p3 = {{p_Result_4_reg_1393}, {add_ln1122_fu_1040_p2}};

assign tmp_5_fu_853_p4 = {{lsb_index_fu_848_p2[31:1]}};

assign tmp_6_fu_901_p3 = lsb_index_fu_848_p2[32'd31];

assign tmp_V_2_fu_804_p3 = ((p_Result_4_fu_792_p3[0:0] == 1'b1) ? tmp_V_fu_799_p2 : iou_V_reg_1382);

assign tmp_V_fu_799_p2 = (32'd0 - iou_V_reg_1382);

assign tmp_fu_385_p1 = bboxes_q1;

assign top_fu_301_p3 = ((top_is_set_fu_138[0:0] == 1'b1) ? top_1_out_i : add_ln169_fu_295_p2);

assign trunc_ln1094_fu_839_p1 = l_fu_821_p3[10:0];

assign trunc_ln1098_fu_835_p1 = sub_ln1095_fu_829_p2[5:0];

assign trunc_ln1349_1_fu_409_p1 = bboxes_q1;

assign trunc_ln1349_3_fu_443_p1 = bboxes_q0;

assign trunc_ln166_fu_275_p1 = j_fu_134[31:0];

assign trunc_ln182_fu_319_p1 = j_1_reg_1160[3:0];

assign trunc_ln7_fu_741_p4 = {{r_V_4_fu_735_p2[59:28]}};

assign trunc_ln859_1_fu_627_p1 = ret_V_1_fu_621_p2[31:0];

assign trunc_ln859_fu_609_p1 = ret_V_fu_603_p2[31:0];

assign union_area_V_fu_762_p2 = (newFirst_fu_758_p2 - intersection_area_V_reg_1351);

assign x1_V_fu_541_p3 = ((xor_ln1697_fu_535_p2[0:0] == 1'b1) ? rhs_4 : rhs_2_reg_1256);

assign x2_V_fu_573_p3 = ((xor_ln1698_fu_567_p2[0:0] == 1'b1) ? lhs_V_4 : lhs_V_2_reg_1270);

assign x2_x1_V_fu_660_p3 = ((icmp_ln1695_fu_655_p2[0:0] == 1'b1) ? trunc_ln859_reg_1289 : 32'd0);

assign xor_ln1100_fu_909_p2 = (tmp_6_fu_901_p3 ^ 1'd1);

assign xor_ln1697_1_fu_551_p2 = (icmp_ln1697_1_fu_547_p2 ^ 1'd1);

assign xor_ln1697_fu_535_p2 = (icmp_ln1697_fu_531_p2 ^ 1'd1);

assign xor_ln1698_1_fu_583_p2 = (icmp_ln1698_1_fu_579_p2 ^ 1'd1);

assign xor_ln1698_fu_567_p2 = (icmp_ln1698_fu_563_p2 ^ 1'd1);

assign y1_V_fu_557_p3 = ((xor_ln1697_1_fu_551_p2[0:0] == 1'b1) ? rhs_5 : rhs_3_reg_1263);

assign y2_V_fu_589_p3 = ((xor_ln1698_1_fu_583_p2[0:0] == 1'b1) ? lhs_V_5 : lhs_V_3_reg_1277);

assign y2_y1_V_fu_672_p3 = ((icmp_ln1695_1_fu_667_p2[0:0] == 1'b1) ? trunc_ln859_1_reg_1299 : 32'd0);

assign zext_ln1098_fu_874_p1 = sub_ln1098_fu_869_p2;

assign zext_ln1108_fu_948_p1 = tmp_V_2_reg_1398;

assign zext_ln1109_fu_956_p1 = add_ln1109_fu_951_p2;

assign zext_ln1110_fu_971_p1 = sub_ln1110_fu_966_p2;

assign zext_ln1112_fu_988_p1 = or_ln1100_1_reg_1422;

assign zext_ln1113_fu_1025_p1 = m_reg_1432;

assign zext_ln1349_1_fu_473_p1 = $unsigned(sext_ln1349_1_fu_470_p1);

assign zext_ln1349_2_fu_490_p1 = lshr_ln1349_4_reg_1246;

assign zext_ln1349_3_fu_502_p1 = $unsigned(sext_ln1349_2_fu_499_p1);

assign zext_ln1349_fu_461_p1 = lshr_ln1349_1_reg_1231;

assign zext_ln182_fu_362_p1 = add_ln182_1_fu_357_p2;

assign zext_ln183_fu_372_p1 = add_ln183_fu_367_p2;

assign zext_ln184_fu_341_p1 = add_ln184_fu_335_p2;

assign zext_ln185_fu_352_p1 = add_ln185_fu_346_p2;

always @ (posedge ap_clk) begin
    or_ln1100_1_reg_1422[1] <= 1'b0;
end

endmodule //nms_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J
