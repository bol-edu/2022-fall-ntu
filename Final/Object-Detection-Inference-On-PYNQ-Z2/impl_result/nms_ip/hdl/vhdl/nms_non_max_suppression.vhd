-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nms_non_max_suppression is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bboxes_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bboxes_ce0 : OUT STD_LOGIC;
    bboxes_we0 : OUT STD_LOGIC;
    bboxes_d0 : OUT STD_LOGIC_VECTOR (30 downto 0);
    bboxes_q0 : IN STD_LOGIC_VECTOR (30 downto 0);
    bboxes_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    bboxes_ce1 : OUT STD_LOGIC;
    bboxes_we1 : OUT STD_LOGIC;
    bboxes_d1 : OUT STD_LOGIC_VECTOR (30 downto 0);
    bboxes_q1 : IN STD_LOGIC_VECTOR (30 downto 0);
    class_preds_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    class_preds_ce0 : OUT STD_LOGIC;
    class_preds_we0 : OUT STD_LOGIC;
    class_preds_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    class_preds_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    nms_bboxes : IN STD_LOGIC_VECTOR (63 downto 0);
    nms_class_preds : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of nms_non_max_suppression is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv64_3FD999999999999A : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011001100110011001100110011001100110011001100110011010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_471 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal reg_475 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln143_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_reg_1239 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal nms_idx_4_fu_506_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal nms_idx_4_reg_1243 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln145_1_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln145_1_reg_1248 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln145_fu_543_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln145_reg_1253 : STD_LOGIC_VECTOR (63 downto 0);
    signal brmerge_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln156_fu_573_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln156_reg_1262 : STD_LOGIC_VECTOR (5 downto 0);
    signal chosen_bbox_V_2_reg_1285 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln154_fu_624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_reg_1300 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_1_fu_628_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_1_reg_1305 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_2_fu_632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_2_reg_1312 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_3_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_3_reg_1319 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_4_fu_639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_4_reg_1325 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1086_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1086_reg_1331 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_479_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_4_fu_655_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_4_reg_1340 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1095_fu_681_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1095_reg_1347 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1098_fu_687_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1098_reg_1354 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1094_fu_691_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1094_reg_1359 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln_fu_781_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_reg_1364 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln1109_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1109_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_reg_1374 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_Result_7_reg_1379 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1384 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_11_fu_900_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_11_reg_1389 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal notlhs_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_reg_1394 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_reg_1399 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln800_fu_923_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal div_i_i_i_fu_980_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal div_i_i_i_reg_1412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal empty_44_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal div_i_i1570_i_fu_1039_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal div_i_i1570_i_reg_1418 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_reg_1424 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1434 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_4_fu_1090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_4_reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_5_fu_1094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_5_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_4_fu_1098_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_4_reg_1450 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_5_fu_1102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_5_reg_1455 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_6_fu_1114_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_6_reg_1460 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_3_fu_1128_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_3_reg_1465 : STD_LOGIC_VECTOR (32 downto 0);
    signal top_load_1_reg_1470 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_2_cast_fu_1144_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal ret_V_3_cast_fu_1147_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal chosen_class_pred_reg_1490 : STD_LOGIC_VECTOR (4 downto 0);
    signal box_1_area_V_reg_1496 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_1166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_1503 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_1_area_V_1_fu_1200_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_1_area_V_1_reg_1508 : STD_LOGIC_VECTOR (31 downto 0);
    signal remain_list_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal remain_list_ce0 : STD_LOGIC;
    signal remain_list_we0 : STD_LOGIC;
    signal remain_list_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal remain_list_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal remain_list_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal remain_list_ce1 : STD_LOGIC;
    signal remain_list_we1 : STD_LOGIC;
    signal remain_list_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_insertion_sort_fu_433_ap_start : STD_LOGIC;
    signal grp_insertion_sort_fu_433_ap_done : STD_LOGIC;
    signal grp_insertion_sort_fu_433_ap_idle : STD_LOGIC;
    signal grp_insertion_sort_fu_433_ap_ready : STD_LOGIC;
    signal grp_insertion_sort_fu_433_bboxes_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_insertion_sort_fu_433_bboxes_ce0 : STD_LOGIC;
    signal grp_insertion_sort_fu_433_bboxes_we0 : STD_LOGIC;
    signal grp_insertion_sort_fu_433_bboxes_d0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_insertion_sort_fu_433_bboxes_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_insertion_sort_fu_433_bboxes_ce1 : STD_LOGIC;
    signal grp_insertion_sort_fu_433_bboxes_we1 : STD_LOGIC;
    signal grp_insertion_sort_fu_433_bboxes_d1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_insertion_sort_fu_433_class_preds_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_insertion_sort_fu_433_class_preds_ce0 : STD_LOGIC;
    signal grp_insertion_sort_fu_433_class_preds_we0 : STD_LOGIC;
    signal grp_insertion_sort_fu_433_class_preds_d0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_idle : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_ready : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_ce0 : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_idle : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_ready : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_ce0 : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_we0 : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_ce0 : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce0 : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce1 : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o_ap_vld : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_ce : STD_LOGIC;
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_ce : STD_LOGIC;
    signal empty_flag_reg_419 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_insertion_sort_fu_433_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg : STD_LOGIC := '0';
    signal grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg : STD_LOGIC := '0';
    signal top_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln156_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln157_fu_589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln158_fu_599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln159_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_fu_619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln162_fu_1138_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln202_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln202_1_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state17_io : BOOLEAN;
    signal zext_ln155_fu_1208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal nms_idx_fu_180 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_463_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_463_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_516_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln145_1_fu_527_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln145_1_fu_538_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln145_fu_523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal targetBlock_not_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln156_fu_561_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln1_fu_565_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln143_fu_512_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln157_fu_584_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln158_fu_594_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln159_fu_604_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln160_fu_614_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln154_3_fu_635_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln154_4_fu_639_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_V_fu_649_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_fu_663_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_673_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_695_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_700_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln1098_fu_716_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1098_fu_721_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1098_fu_725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1097_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1098_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_748_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_762_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1100_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1100_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1100_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1109_fu_798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1108_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1109_fu_803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1110_fu_813_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1110_fu_818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln1109_fu_807_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln1110_fu_822_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_7_fu_828_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1112_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_8_fu_838_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln1116_fu_882_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln1094_fu_875_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1122_fu_887_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1113_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_893_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_43_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg10_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_fu_942_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_lshr1_cast_fu_952_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_962_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_lshr_f13_cast_fu_972_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_t12_fu_956_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f13_cast_cast_fu_976_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_996_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_1001_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_lshr_cast_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1021_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_lshr_f_cast_fu_1031_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_14_fu_988_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_1015_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_cast_cast_fu_1035_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln4_fu_1047_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln202_fu_1066_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln202_1_fu_1070_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal lhs_V_2_fu_1106_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_2_fu_1110_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_3_fu_1120_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_3_fu_1124_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1150_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1150_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1150_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_shl7_fu_1177_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal r_V_6_fu_1184_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal cmp_i247_i_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_i_i_i184_i_fu_1190_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_463_ce : STD_LOGIC;
    signal grp_fu_463_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1150_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component nms_insertion_sort IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bboxes_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bboxes_ce0 : OUT STD_LOGIC;
        bboxes_we0 : OUT STD_LOGIC;
        bboxes_d0 : OUT STD_LOGIC_VECTOR (30 downto 0);
        bboxes_q0 : IN STD_LOGIC_VECTOR (30 downto 0);
        bboxes_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bboxes_ce1 : OUT STD_LOGIC;
        bboxes_we1 : OUT STD_LOGIC;
        bboxes_d1 : OUT STD_LOGIC_VECTOR (30 downto 0);
        bboxes_q1 : IN STD_LOGIC_VECTOR (30 downto 0);
        class_preds_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        class_preds_ce0 : OUT STD_LOGIC;
        class_preds_we0 : OUT STD_LOGIC;
        class_preds_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        class_preds_q0 : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component nms_non_max_suppression_Pipeline_LOOP_NMS_EMPTY IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        remain_list_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        remain_list_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        remain_list_ce0 : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component nms_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln166 : IN STD_LOGIC_VECTOR (31 downto 0);
        remain_list_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        remain_list_ce0 : OUT STD_LOGIC;
        remain_list_we0 : OUT STD_LOGIC;
        remain_list_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        remain_list_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        class_preds_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        class_preds_ce0 : OUT STD_LOGIC;
        class_preds_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        chosen_class_pred : IN STD_LOGIC_VECTOR (4 downto 0);
        bboxes_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bboxes_ce0 : OUT STD_LOGIC;
        bboxes_q0 : IN STD_LOGIC_VECTOR (30 downto 0);
        bboxes_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        bboxes_ce1 : OUT STD_LOGIC;
        bboxes_q1 : IN STD_LOGIC_VECTOR (30 downto 0);
        rhs_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        rhs_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        lhs_V_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        lhs_V_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        box_1_area_V_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        top_1_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        top_1_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        top_1_out_o_ap_vld : OUT STD_LOGIC;
        grp_fu_463_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_463_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_463_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_463_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_463_p_ce : OUT STD_LOGIC;
        grp_fu_1150_p_din0 : OUT STD_LOGIC_VECTOR (32 downto 0);
        grp_fu_1150_p_din1 : OUT STD_LOGIC_VECTOR (32 downto 0);
        grp_fu_1150_p_dout0 : IN STD_LOGIC_VECTOR (59 downto 0);
        grp_fu_1150_p_ce : OUT STD_LOGIC );
    end component;


    component nms_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component nms_mul_33s_33s_60_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (32 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component nms_non_max_suppression_remain_list_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    remain_list_U : component nms_non_max_suppression_remain_list_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => remain_list_address0,
        ce0 => remain_list_ce0,
        we0 => remain_list_we0,
        d0 => remain_list_d0,
        q0 => remain_list_q0,
        address1 => remain_list_address1,
        ce1 => remain_list_ce1,
        we1 => remain_list_we1,
        d1 => remain_list_d1);

    grp_insertion_sort_fu_433 : component nms_insertion_sort
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_insertion_sort_fu_433_ap_start,
        ap_done => grp_insertion_sort_fu_433_ap_done,
        ap_idle => grp_insertion_sort_fu_433_ap_idle,
        ap_ready => grp_insertion_sort_fu_433_ap_ready,
        bboxes_address0 => grp_insertion_sort_fu_433_bboxes_address0,
        bboxes_ce0 => grp_insertion_sort_fu_433_bboxes_ce0,
        bboxes_we0 => grp_insertion_sort_fu_433_bboxes_we0,
        bboxes_d0 => grp_insertion_sort_fu_433_bboxes_d0,
        bboxes_q0 => bboxes_q0,
        bboxes_address1 => grp_insertion_sort_fu_433_bboxes_address1,
        bboxes_ce1 => grp_insertion_sort_fu_433_bboxes_ce1,
        bboxes_we1 => grp_insertion_sort_fu_433_bboxes_we1,
        bboxes_d1 => grp_insertion_sort_fu_433_bboxes_d1,
        bboxes_q1 => bboxes_q1,
        class_preds_address0 => grp_insertion_sort_fu_433_class_preds_address0,
        class_preds_ce0 => grp_insertion_sort_fu_433_class_preds_ce0,
        class_preds_we0 => grp_insertion_sort_fu_433_class_preds_we0,
        class_preds_d0 => grp_insertion_sort_fu_433_class_preds_d0,
        class_preds_q0 => class_preds_q0);

    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441 : component nms_non_max_suppression_Pipeline_LOOP_NMS_EMPTY
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start,
        ap_done => grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done,
        ap_idle => grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_idle,
        ap_ready => grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_ready,
        remain_list_q0 => remain_list_q0,
        remain_list_address0 => grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_address0,
        remain_list_ce0 => grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_ce0,
        ap_return => grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_return);

    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446 : component nms_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start,
        ap_done => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done,
        ap_idle => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_idle,
        ap_ready => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_ready,
        sext_ln166 => j_reg_1503,
        remain_list_address0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_address0,
        remain_list_ce0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_ce0,
        remain_list_we0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_we0,
        remain_list_d0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_d0,
        remain_list_q0 => remain_list_q0,
        class_preds_address0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_address0,
        class_preds_ce0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_ce0,
        class_preds_q0 => class_preds_q0,
        chosen_class_pred => chosen_class_pred_reg_1490,
        bboxes_address0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address0,
        bboxes_ce0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce0,
        bboxes_q0 => bboxes_q0,
        bboxes_address1 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address1,
        bboxes_ce1 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce1,
        bboxes_q1 => bboxes_q1,
        rhs_4 => rhs_4_reg_1440,
        rhs_5 => rhs_5_reg_1445,
        lhs_V_4 => lhs_V_4_reg_1450,
        lhs_V_5 => lhs_V_5_reg_1455,
        box_1_area_V_1 => box_1_area_V_1_reg_1508,
        top_1_out_i => top_fu_176,
        top_1_out_o => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o,
        top_1_out_o_ap_vld => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o_ap_vld,
        grp_fu_463_p_din0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din0,
        grp_fu_463_p_din1 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din1,
        grp_fu_463_p_opcode => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_opcode,
        grp_fu_463_p_dout0 => grp_fu_463_p2,
        grp_fu_463_p_ce => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_ce,
        grp_fu_1150_p_din0 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din0,
        grp_fu_1150_p_din1 => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din1,
        grp_fu_1150_p_dout0 => grp_fu_1150_p2,
        grp_fu_1150_p_ce => grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_ce);

    dcmp_64ns_64ns_1_2_no_dsp_1_U49 : component nms_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_463_p0,
        din1 => grp_fu_463_p1,
        ce => grp_fu_463_ce,
        opcode => grp_fu_463_opcode,
        dout => grp_fu_463_p2);

    mul_33s_33s_60_2_1_U50 : component nms_mul_33s_33s_60_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 33,
        dout_WIDTH => 60)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1150_p0,
        din1 => grp_fu_1150_p1,
        ce => grp_fu_1150_ce,
        dout => grp_fu_1150_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_insertion_sort_fu_433_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_insertion_sort_fu_433_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_insertion_sort_fu_433_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_insertion_sort_fu_433_ap_ready = ap_const_logic_1)) then 
                    grp_insertion_sort_fu_433_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln143_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_ready = ap_const_logic_1)) then 
                    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg <= ap_const_logic_0;
            else
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_ready = ap_const_logic_1)) then 
                    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_flag_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                empty_flag_reg_419 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_gmem_BVALID = ap_const_logic_1))) then 
                empty_flag_reg_419 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    nms_idx_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                nms_idx_fu_180 <= ap_const_lv4_0;
            elsif (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                nms_idx_fu_180 <= nms_idx_4_reg_1243;
            end if; 
        end if;
    end process;

    top_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                top_fu_176 <= ap_const_lv32_0;
            elsif (((grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                top_fu_176 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_top_1_out_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln145_reg_1253 <= add_ln145_fu_543_p2;
                brmerge_reg_1258 <= brmerge_fu_555_p2;
                    zext_ln145_1_reg_1248(5 downto 2) <= zext_ln145_1_fu_534_p1(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                add_ln156_reg_1262 <= add_ln156_fu_573_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                box_1_area_V_1_reg_1508 <= box_1_area_V_1_fu_1200_p3;
                j_reg_1503 <= j_fu_1166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                box_1_area_V_reg_1496 <= grp_fu_1150_p2(59 downto 28);
                chosen_class_pred_reg_1490 <= class_preds_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                chosen_bbox_V_2_reg_1285 <= bboxes_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_44_fu_931_p2 = ap_const_lv1_0) and (icmp_ln1086_reg_1331 = ap_const_lv1_0) and (brmerge_reg_1258 = ap_const_lv1_1) and (icmp_ln143_reg_1239 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                div_i_i1570_i_reg_1418 <= div_i_i1570_i_fu_1039_p3;
                div_i_i_i_reg_1412 <= div_i_i_i_fu_980_p3;
                gmem_addr_1_reg_1434 <= sext_ln202_1_fu_1080_p1;
                gmem_addr_reg_1424 <= sext_ln202_fu_1056_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                icmp_ln1086_reg_1331 <= icmp_ln1086_fu_643_p2;
                sext_ln154_1_reg_1305 <= sext_ln154_1_fu_628_p1;
                sext_ln154_2_reg_1312 <= sext_ln154_2_fu_632_p1;
                sext_ln154_3_reg_1319 <= sext_ln154_3_fu_635_p1;
                sext_ln154_4_reg_1325 <= sext_ln154_4_fu_639_p1;
                sext_ln154_reg_1300 <= sext_ln154_fu_624_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln1109_reg_1369 <= icmp_ln1109_fu_789_p2;
                    or_ln_reg_1364(0) <= or_ln_fu_781_p3(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln143_reg_1239 <= icmp_ln143_fu_500_p2;
                nms_idx_4_reg_1243 <= nms_idx_4_fu_506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                lhs_V_4_reg_1450 <= lhs_V_4_fu_1098_p2;
                lhs_V_5_reg_1455 <= lhs_V_5_fu_1102_p2;
                ret_V_3_reg_1465 <= ret_V_3_fu_1128_p2;
                ret_V_6_reg_1460 <= ret_V_6_fu_1114_p2;
                rhs_4_reg_1440 <= rhs_4_fu_1090_p2;
                rhs_5_reg_1445 <= rhs_5_fu_1094_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                m_reg_1374 <= m_8_fu_838_p2(63 downto 1);
                p_Result_7_reg_1379 <= m_8_fu_838_p2(54 downto 54);
                tmp_5_reg_1384 <= m_8_fu_838_p2(52 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                notlhs_reg_1394 <= notlhs_fu_912_p2;
                notrhs_reg_1399 <= notrhs_fu_918_p2;
                p_Result_11_reg_1389 <= p_Result_11_fu_900_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1086_fu_643_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_Result_9_reg_1335 <= reg_471(30 downto 30);
                sub_ln1095_reg_1347 <= sub_ln1095_fu_681_p2;
                tmp_V_4_reg_1340 <= tmp_V_4_fu_655_p3;
                trunc_ln1094_reg_1359 <= trunc_ln1094_fu_691_p1;
                trunc_ln1098_reg_1354 <= trunc_ln1098_fu_687_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_471 <= bboxes_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then
                reg_475 <= bboxes_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                top_load_1_reg_1470 <= top_fu_176;
            end if;
        end if;
    end process;
    zext_ln145_1_reg_1248(1 downto 0) <= "00";
    zext_ln145_1_reg_1248(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    or_ln_reg_1364(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_AWREADY, m_axi_gmem_WREADY, m_axi_gmem_BVALID, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state26, ap_CS_fsm_state22, ap_CS_fsm_state27, ap_CS_fsm_state10, icmp_ln143_fu_500_p2, icmp_ln143_reg_1239, ap_CS_fsm_state6, ap_CS_fsm_state7, brmerge_fu_555_p2, brmerge_reg_1258, icmp_ln1086_fu_643_p2, icmp_ln1086_reg_1331, ap_CS_fsm_state15, empty_44_fu_931_p2, grp_insertion_sort_fu_433_ap_done, grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done, ap_CS_fsm_state2, ap_block_state17_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_insertion_sort_fu_433_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln143_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done = ap_const_logic_1) and (brmerge_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done = ap_const_logic_1) and (brmerge_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln1086_fu_643_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and ((icmp_ln143_reg_1239 = ap_const_lv1_0) or ((brmerge_reg_1258 = ap_const_lv1_0) or ((empty_44_fu_931_p2 = ap_const_lv1_1) or (icmp_ln1086_reg_1331 = ap_const_lv1_1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if ((not(((m_axi_gmem_WREADY = ap_const_logic_0) or (grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (m_axi_gmem_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_gmem_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_fu_742_p2 <= (icmp_ln1098_fu_736_p2 and icmp_ln1097_fu_710_p2);
    add_ln1109_fu_798_p2 <= std_logic_vector(unsigned(sub_ln1095_reg_1347) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln1122_fu_887_p2 <= std_logic_vector(unsigned(sub_ln1116_fu_882_p2) + unsigned(select_ln1094_fu_875_p3));
    add_ln145_1_fu_538_p2 <= std_logic_vector(unsigned(zext_ln145_1_fu_534_p1) + unsigned(nms_bboxes));
    add_ln145_fu_543_p2 <= std_logic_vector(unsigned(add_ln145_1_fu_538_p2) + unsigned(zext_ln145_fu_523_p1));
    add_ln156_fu_573_p2 <= std_logic_vector(unsigned(shl_ln1_fu_565_p3) + unsigned(trunc_ln143_fu_512_p1));
    add_ln157_fu_584_p2 <= std_logic_vector(unsigned(add_ln156_reg_1262) + unsigned(ap_const_lv6_1));
    add_ln158_fu_594_p2 <= std_logic_vector(unsigned(add_ln156_reg_1262) + unsigned(ap_const_lv6_2));
    add_ln159_fu_604_p2 <= std_logic_vector(unsigned(add_ln156_reg_1262) + unsigned(ap_const_lv6_3));
    add_ln160_fu_614_p2 <= std_logic_vector(unsigned(add_ln156_reg_1262) + unsigned(ap_const_lv6_4));
    add_ln202_fu_1066_p2 <= std_logic_vector(unsigned(zext_ln145_1_reg_1248) + unsigned(nms_class_preds));
    and_ln1100_fu_769_p2 <= (xor_ln1100_fu_756_p2 and p_Result_1_fu_762_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(m_axi_gmem_AWREADY)
    begin
        if ((m_axi_gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(ap_block_state17_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state17_io)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state18_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state19_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(m_axi_gmem_WREADY, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done)
    begin
        if (((m_axi_gmem_WREADY = ap_const_logic_0) or (grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state21_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state22_blk_assign_proc : process(m_axi_gmem_WREADY)
    begin
        if ((m_axi_gmem_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(m_axi_gmem_BVALID)
    begin
        if ((m_axi_gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state27_blk_assign_proc : process(m_axi_gmem_BVALID)
    begin
        if ((m_axi_gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_insertion_sort_fu_433_ap_done)
    begin
        if ((grp_insertion_sort_fu_433_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done)
    begin
        if ((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state17_io_assign_proc : process(m_axi_gmem_AWREADY, m_axi_gmem_WREADY)
    begin
                ap_block_state17_io <= ((m_axi_gmem_WREADY = ap_const_logic_0) or (m_axi_gmem_AWREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln143_reg_1239, brmerge_reg_1258, icmp_ln1086_reg_1331, ap_CS_fsm_state15, empty_44_fu_931_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and ((icmp_ln143_reg_1239 = ap_const_lv1_0) or ((brmerge_reg_1258 = ap_const_lv1_0) or ((empty_44_fu_931_p2 = ap_const_lv1_1) or (icmp_ln1086_reg_1331 = ap_const_lv1_1))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln143_reg_1239, brmerge_reg_1258, icmp_ln1086_reg_1331, ap_CS_fsm_state15, empty_44_fu_931_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and ((icmp_ln143_reg_1239 = ap_const_lv1_0) or ((brmerge_reg_1258 = ap_const_lv1_0) or ((empty_44_fu_931_p2 = ap_const_lv1_1) or (icmp_ln1086_reg_1331 = ap_const_lv1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= nms_idx_fu_180;

    bboxes_address0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state7, grp_insertion_sort_fu_433_bboxes_address0, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address0, ap_CS_fsm_state2, zext_ln156_fu_579_p1, zext_ln158_fu_599_p1, zext_ln159_fu_609_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bboxes_address0 <= zext_ln159_fu_609_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            bboxes_address0 <= zext_ln158_fu_599_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            bboxes_address0 <= zext_ln156_fu_579_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bboxes_address0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bboxes_address0 <= grp_insertion_sort_fu_433_bboxes_address0;
        else 
            bboxes_address0 <= "XXXXXX";
        end if; 
    end process;


    bboxes_address1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state8, ap_CS_fsm_state9, grp_insertion_sort_fu_433_bboxes_address1, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address1, ap_CS_fsm_state2, zext_ln157_fu_589_p1, zext_ln160_fu_619_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bboxes_address1 <= zext_ln160_fu_619_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            bboxes_address1 <= zext_ln157_fu_589_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bboxes_address1 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bboxes_address1 <= grp_insertion_sort_fu_433_bboxes_address1;
        else 
            bboxes_address1 <= "XXXXXX";
        end if; 
    end process;


    bboxes_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state7, grp_insertion_sort_fu_433_bboxes_ce0, grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            bboxes_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bboxes_ce0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bboxes_ce0 <= grp_insertion_sort_fu_433_bboxes_ce0;
        else 
            bboxes_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bboxes_ce1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state8, ap_CS_fsm_state9, grp_insertion_sort_fu_433_bboxes_ce1, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            bboxes_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            bboxes_ce1 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_bboxes_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bboxes_ce1 <= grp_insertion_sort_fu_433_bboxes_ce1;
        else 
            bboxes_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    bboxes_d0 <= grp_insertion_sort_fu_433_bboxes_d0;
    bboxes_d1 <= grp_insertion_sort_fu_433_bboxes_d1;

    bboxes_we0_assign_proc : process(grp_insertion_sort_fu_433_bboxes_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bboxes_we0 <= grp_insertion_sort_fu_433_bboxes_we0;
        else 
            bboxes_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bboxes_we1_assign_proc : process(grp_insertion_sort_fu_433_bboxes_we1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bboxes_we1 <= grp_insertion_sort_fu_433_bboxes_we1;
        else 
            bboxes_we1 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln800_fu_923_p1 <= p_Result_11_reg_1389;
    box_1_area_V_1_fu_1200_p3 <= 
        box_1_area_V_reg_1496 when (cmp_i247_i_fu_1172_p2(0) = '1') else 
        conv_i_i_i184_i_fu_1190_p4;
    brmerge_fu_555_p2 <= (targetBlock_not_fu_549_p2 or empty_flag_reg_419);

    class_preds_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state20, grp_insertion_sort_fu_433_class_preds_address0, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_address0, ap_CS_fsm_state2, zext_ln162_fu_1138_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            class_preds_address0 <= zext_ln162_fu_1138_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            class_preds_address0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            class_preds_address0 <= grp_insertion_sort_fu_433_class_preds_address0;
        else 
            class_preds_address0 <= "XXXX";
        end if; 
    end process;


    class_preds_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state20, grp_insertion_sort_fu_433_class_preds_ce0, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_ce0, ap_CS_fsm_state2, ap_block_state17_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            class_preds_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            class_preds_ce0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_class_preds_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            class_preds_ce0 <= grp_insertion_sort_fu_433_class_preds_ce0;
        else 
            class_preds_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    class_preds_d0 <= grp_insertion_sort_fu_433_class_preds_d0;

    class_preds_we0_assign_proc : process(grp_insertion_sort_fu_433_class_preds_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            class_preds_we0 <= grp_insertion_sort_fu_433_class_preds_we0;
        else 
            class_preds_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i247_i_fu_1172_p2 <= "1" when (signed(box_1_area_V_reg_1496) > signed(ap_const_lv32_0)) else "0";
    conv_i_i_i184_i_fu_1190_p4 <= r_V_6_fu_1184_p2(59 downto 28);
    div_i_i1570_i_fu_1039_p3 <= 
        p_neg_t_fu_1015_p2 when (tmp_14_fu_988_p3(0) = '1') else 
        p_lshr_f_cast_cast_fu_1035_p1;
    div_i_i_i_fu_980_p3 <= 
        p_neg_t12_fu_956_p2 when (grp_fu_479_p3(0) = '1') else 
        p_lshr_f13_cast_cast_fu_976_p1;
    empty_43_fu_927_p2 <= (notrhs_reg_1399 or notlhs_reg_1394);
    empty_44_fu_931_p2 <= (grp_fu_463_p2 and empty_43_fu_927_p2);

    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1150_ce_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state20, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_ce, ap_block_state17_io)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1150_ce <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_ce;
        elsif ((((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            grp_fu_1150_ce <= ap_const_logic_1;
        else 
            grp_fu_1150_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1150_p0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state20, ret_V_3_cast_fu_1147_p1, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1150_p0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_1150_p0 <= ret_V_3_cast_fu_1147_p1(33 - 1 downto 0);
        else 
            grp_fu_1150_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1150_p1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state20, ret_V_2_cast_fu_1144_p1, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1150_p1 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_1150_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_1150_p1 <= ret_V_2_cast_fu_1144_p1(33 - 1 downto 0);
        else 
            grp_fu_1150_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_463_ce_assign_proc : process(ap_CS_fsm_state20, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_463_ce <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_ce;
        else 
            grp_fu_463_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_463_opcode_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state14, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_463_opcode <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_463_opcode <= ap_const_lv5_5;
        else 
            grp_fu_463_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_463_p0_assign_proc : process(ap_CS_fsm_state20, bitcast_ln800_fu_923_p1, ap_CS_fsm_state14, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_463_p0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_463_p0 <= bitcast_ln800_fu_923_p1;
        else 
            grp_fu_463_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_463_p1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state14, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_463_p1 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_grp_fu_463_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_463_p1 <= ap_const_lv64_3FD999999999999A;
        else 
            grp_fu_463_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_479_p3 <= reg_471(30 downto 30);
    grp_insertion_sort_fu_433_ap_start <= grp_insertion_sort_fu_433_ap_start_reg;
    grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start <= grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_start_reg;
    grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_start_reg;
    icmp_ln1086_fu_643_p2 <= "1" when (reg_471 = ap_const_lv31_0) else "0";
    icmp_ln1097_fu_710_p2 <= "1" when (signed(tmp_10_fu_700_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln1098_fu_736_p2 <= "0" when (p_Result_s_fu_731_p2 = ap_const_lv32_0) else "1";
    icmp_ln1109_fu_789_p2 <= "1" when (signed(lsb_index_fu_695_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln143_fu_500_p2 <= "1" when (unsigned(nms_idx_fu_180) < unsigned(ap_const_lv4_9)) else "0";
    j_fu_1166_p2 <= std_logic_vector(unsigned(top_load_1_reg_1470) + unsigned(ap_const_lv32_1));
    
    l_fu_673_p3_proc : process(p_Result_10_fu_663_p4)
    begin
        l_fu_673_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_10_fu_663_p4(i) = '1' then
                l_fu_673_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

        lhs_V_2_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_4_fu_1098_p2),33));

        lhs_V_3_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_5_fu_1102_p2),33));

    lhs_V_4_fu_1098_p2 <= std_logic_vector(signed(sext_ln154_1_reg_1305) + signed(div_i_i_i_reg_1412));
    lhs_V_5_fu_1102_p2 <= std_logic_vector(signed(sext_ln154_2_reg_1312) + signed(div_i_i1570_i_reg_1418));
    lsb_index_fu_695_p2 <= std_logic_vector(unsigned(sub_ln1095_reg_1347) + unsigned(ap_const_lv32_FFFFFFCB));
    lshr_ln1098_fu_725_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln1098_fu_721_p1(31-1 downto 0)))));
    lshr_ln1109_fu_807_p2 <= std_logic_vector(shift_right(unsigned(zext_ln1108_fu_795_p1),to_integer(unsigned('0' & zext_ln1109_fu_803_p1(31-1 downto 0)))));
    m_7_fu_828_p3 <= 
        lshr_ln1109_fu_807_p2 when (icmp_ln1109_reg_1369(0) = '1') else 
        shl_ln1110_fu_822_p2;
    m_8_fu_838_p2 <= std_logic_vector(unsigned(m_7_fu_828_p3) + unsigned(zext_ln1112_fu_835_p1));
    m_axi_gmem_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_ARVALID <= ap_const_logic_0;

    m_axi_gmem_AWADDR_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state17, gmem_addr_reg_1424, gmem_addr_1_reg_1434, ap_block_state17_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_gmem_AWADDR <= gmem_addr_1_reg_1434;
        elsif (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            m_axi_gmem_AWADDR <= gmem_addr_reg_1424;
        else 
            m_axi_gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;

    m_axi_gmem_AWLEN_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_block_state17_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_gmem_AWLEN <= ap_const_lv32_1;
        elsif (((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            m_axi_gmem_AWLEN <= ap_const_lv32_5;
        else 
            m_axi_gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_block_state17_io)
    begin
        if ((((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state26, ap_CS_fsm_state27)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_gmem_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (m_axi_gmem_BVALID = ap_const_logic_1)))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_RREADY <= ap_const_logic_0;

    m_axi_gmem_WDATA_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, sext_ln154_reg_1300, sext_ln154_1_reg_1305, sext_ln154_2_reg_1312, sext_ln154_3_reg_1319, sext_ln154_4_reg_1325, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done, zext_ln155_fu_1208_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            m_axi_gmem_WDATA <= zext_ln155_fu_1208_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            m_axi_gmem_WDATA <= sext_ln154_4_reg_1325;
        elsif (((grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_gmem_WDATA <= sext_ln154_3_reg_1319;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            m_axi_gmem_WDATA <= sext_ln154_2_reg_1312;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            m_axi_gmem_WDATA <= sext_ln154_1_reg_1305;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            m_axi_gmem_WDATA <= sext_ln154_reg_1300;
        else 
            m_axi_gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done, ap_block_state17_io)
    begin
        if (((not(((m_axi_gmem_WREADY = ap_const_logic_0) or (grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((m_axi_gmem_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    nms_idx_4_fu_506_p2 <= std_logic_vector(unsigned(nms_idx_fu_180) + unsigned(ap_const_lv4_1));
    notlhs_fu_912_p2 <= "0" when (add_ln1122_fu_887_p2 = ap_const_lv11_7FF) else "1";
    notrhs_fu_918_p2 <= "1" when (tmp_5_reg_1384 = ap_const_lv52_0) else "0";
    or_ln1100_fu_775_p2 <= (and_ln1100_fu_769_p2 or a_fu_742_p2);
    or_ln_fu_781_p3 <= (ap_const_lv1_0 & or_ln1100_fu_775_p2);
    
    p_Result_10_fu_663_p4_proc : process(tmp_V_4_fu_655_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_10_fu_663_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := tmp_V_4_fu_655_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_10_fu_663_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_10_fu_663_p4_i) := tmp_V_4_fu_655_p3(32-1-p_Result_10_fu_663_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_10_fu_663_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_11_fu_900_p5 <= (tmp_1_fu_893_p3 & zext_ln1113_fu_872_p1(51 downto 0));
    p_Result_1_fu_762_p3 <= tmp_V_4_reg_1340(to_integer(unsigned(lsb_index_fu_695_p2)) downto to_integer(unsigned(lsb_index_fu_695_p2))) when (to_integer(unsigned(lsb_index_fu_695_p2)) >= 0 and to_integer(unsigned(lsb_index_fu_695_p2)) <=31) else "-";
    p_Result_s_fu_731_p2 <= (tmp_V_4_reg_1340 and lshr_ln1098_fu_725_p2);
    p_lshr1_cast_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr1_fu_942_p4),32));
    p_lshr1_fu_942_p4 <= p_neg10_fu_937_p2(31 downto 1);
    p_lshr_cast_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_fu_1001_p4),32));
    p_lshr_f13_cast_cast_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f13_cast_fu_972_p1),32));
        p_lshr_f13_cast_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_962_p4),31));

    p_lshr_f_cast_cast_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f_cast_fu_1031_p1),32));
        p_lshr_f_cast_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_1021_p4),31));

    p_lshr_fu_1001_p4 <= p_neg_fu_996_p2(31 downto 1);
    p_neg10_fu_937_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln154_3_reg_1319));
    p_neg_fu_996_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln154_4_reg_1325));
    p_neg_t12_fu_956_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_lshr1_cast_fu_952_p1));
    p_neg_t_fu_1015_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_lshr_cast_fu_1011_p1));
    p_shl7_fu_1177_p3 <= (box_1_area_V_reg_1496 & ap_const_lv28_0);
    r_V_6_fu_1184_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(p_shl7_fu_1177_p3));

    remain_list_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state20, ap_CS_fsm_state5, ap_CS_fsm_state7, grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_address0, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_address0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            remain_list_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            remain_list_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            remain_list_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            remain_list_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            remain_list_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            remain_list_address0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            remain_list_address0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_address0;
        else 
            remain_list_address0 <= "XXXX";
        end if; 
    end process;


    remain_list_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state17, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, zext_ln162_fu_1138_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            remain_list_address1 <= zext_ln162_fu_1138_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            remain_list_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            remain_list_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            remain_list_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            remain_list_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            remain_list_address1 <= "XXXX";
        end if; 
    end process;


    remain_list_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state20, ap_CS_fsm_state5, ap_CS_fsm_state7, grp_insertion_sort_fu_433_ap_done, grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_ce0, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_ce0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_insertion_sort_fu_433_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            remain_list_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            remain_list_ce0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            remain_list_ce0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_remain_list_ce0;
        else 
            remain_list_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    remain_list_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17, grp_insertion_sort_fu_433_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_state17_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_insertion_sort_fu_433_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            remain_list_ce1 <= ap_const_logic_1;
        else 
            remain_list_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    remain_list_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state20, ap_CS_fsm_state5, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_d0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            remain_list_d0 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            remain_list_d0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_d0;
        else 
            remain_list_d0 <= "X";
        end if; 
    end process;


    remain_list_d1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state17, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            remain_list_d1 <= ap_const_lv1_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            remain_list_d1 <= ap_const_lv1_1;
        else 
            remain_list_d1 <= "X";
        end if; 
    end process;


    remain_list_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state20, ap_CS_fsm_state5, grp_insertion_sort_fu_433_ap_done, grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_we0, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((grp_insertion_sort_fu_433_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            remain_list_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            remain_list_we0 <= grp_non_max_suppression_Pipeline_LOOP_NMS_MAIN_J_fu_446_remain_list_we0;
        else 
            remain_list_we0 <= ap_const_logic_0;
        end if; 
    end process;


    remain_list_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17, grp_insertion_sort_fu_433_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_state17_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_insertion_sort_fu_433_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_boolean_0 = ap_block_state17_io) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            remain_list_we1 <= ap_const_logic_1;
        else 
            remain_list_we1 <= ap_const_logic_0;
        end if; 
    end process;

        ret_V_2_cast_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_6_reg_1460),60));

        ret_V_3_cast_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_reg_1465),60));

    ret_V_3_fu_1128_p2 <= std_logic_vector(signed(lhs_V_3_fu_1120_p1) - signed(rhs_3_fu_1124_p1));
    ret_V_6_fu_1114_p2 <= std_logic_vector(signed(lhs_V_2_fu_1106_p1) - signed(rhs_2_fu_1110_p1));
        rhs_2_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_4_fu_1090_p2),33));

        rhs_3_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_5_fu_1094_p2),33));

    rhs_4_fu_1090_p2 <= std_logic_vector(signed(sext_ln154_1_reg_1305) - signed(div_i_i_i_reg_1412));
    rhs_5_fu_1094_p2 <= std_logic_vector(signed(sext_ln154_2_reg_1312) - signed(div_i_i1570_i_reg_1418));
    select_ln1094_fu_875_p3 <= 
        ap_const_lv11_3FF when (p_Result_7_reg_1379(0) = '1') else 
        ap_const_lv11_3FE;
        sext_ln154_1_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_475),32));

        sext_ln154_2_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(chosen_bbox_V_2_reg_1285),32));

    sext_ln154_3_fu_635_p0 <= bboxes_q0;
        sext_ln154_3_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln154_3_fu_635_p0),32));

    sext_ln154_4_fu_639_p0 <= bboxes_q1;
        sext_ln154_4_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln154_4_fu_639_p0),32));

        sext_ln154_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_471),32));

        sext_ln202_1_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln202_1_fu_1070_p4),64));

        sext_ln202_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_1047_p4),64));

    shl_ln1110_fu_822_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1108_fu_795_p1),to_integer(unsigned('0' & zext_ln1110_fu_818_p1(31-1 downto 0)))));
    shl_ln145_1_fu_527_p3 <= (nms_idx_fu_180 & ap_const_lv2_0);
    shl_ln1_fu_565_p3 <= (trunc_ln156_fu_561_p1 & ap_const_lv2_0);
    shl_ln_fu_516_p3 <= (nms_idx_fu_180 & ap_const_lv4_0);
    sub_ln1095_fu_681_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_673_p3));
    sub_ln1098_fu_716_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln1098_reg_1354));
    sub_ln1110_fu_813_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln1095_reg_1347));
    sub_ln1116_fu_882_p2 <= std_logic_vector(unsigned(ap_const_lv11_4) - unsigned(trunc_ln1094_reg_1359));
    targetBlock_not_fu_549_p2 <= (grp_non_max_suppression_Pipeline_LOOP_NMS_EMPTY_fu_441_ap_return xor ap_const_lv1_1);
    tmp_10_fu_700_p4 <= lsb_index_fu_695_p2(31 downto 1);
    tmp_11_fu_748_p3 <= lsb_index_fu_695_p2(31 downto 31);
    tmp_14_fu_988_p3 <= reg_475(30 downto 30);
    tmp_1_fu_893_p3 <= (p_Result_9_reg_1335 & add_ln1122_fu_887_p2);
    tmp_7_fu_962_p4 <= reg_471(30 downto 1);
    tmp_9_fu_1021_p4 <= reg_475(30 downto 1);
    tmp_V_4_fu_655_p3 <= 
        tmp_V_fu_649_p2 when (grp_fu_479_p3(0) = '1') else 
        sext_ln154_fu_624_p1;
    tmp_V_fu_649_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln154_fu_624_p1));
    trunc_ln1094_fu_691_p1 <= l_fu_673_p3(11 - 1 downto 0);
    trunc_ln1098_fu_687_p1 <= sub_ln1095_fu_681_p2(6 - 1 downto 0);
    trunc_ln143_fu_512_p1 <= top_fu_176(6 - 1 downto 0);
    trunc_ln156_fu_561_p1 <= top_fu_176(4 - 1 downto 0);
    trunc_ln202_1_fu_1070_p4 <= add_ln202_fu_1066_p2(63 downto 2);
    trunc_ln4_fu_1047_p4 <= add_ln145_reg_1253(63 downto 2);
    xor_ln1100_fu_756_p2 <= (tmp_11_fu_748_p3 xor ap_const_lv1_1);
    zext_ln1098_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1098_fu_716_p2),32));
    zext_ln1108_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_4_reg_1340),64));
    zext_ln1109_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1109_fu_798_p2),64));
    zext_ln1110_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1110_fu_813_p2),64));
    zext_ln1112_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_reg_1364),64));
    zext_ln1113_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_1374),64));
    zext_ln145_1_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln145_1_fu_527_p3),64));
    zext_ln145_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_516_p3),64));
    zext_ln155_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(chosen_class_pred_reg_1490),32));
    zext_ln156_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln156_fu_573_p2),64));
    zext_ln157_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln157_fu_584_p2),64));
    zext_ln158_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln158_fu_594_p2),64));
    zext_ln159_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln159_fu_604_p2),64));
    zext_ln160_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln160_fu_614_p2),64));
    zext_ln162_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(top_fu_176),64));
end behav;
