// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter4_fsm_state5 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;
parameter    ap_ST_iter4_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg   [1:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state0;
reg   [1:0] ap_CS_iter4_fsm;
wire    ap_CS_iter4_fsm_state0;
wire   [0:0] icmp_ln295_fu_621_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_CS_iter2_fsm_state3;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_CS_iter3_fsm_state4;
reg   [0:0] icmp_ln295_reg_1601;
reg   [0:0] icmp_ln295_reg_1601_pp0_iter3_reg;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state5_io;
wire    ap_CS_iter4_fsm_state5;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [1:0] p_ZL7threshs_32_address0;
reg    p_ZL7threshs_32_ce0;
wire   [0:0] p_ZL7threshs_32_q0;
wire   [1:0] p_ZL7threshs_33_address0;
reg    p_ZL7threshs_33_ce0;
wire   [0:0] p_ZL7threshs_33_q0;
wire   [1:0] p_ZL7threshs_34_address0;
reg    p_ZL7threshs_34_ce0;
wire   [0:0] p_ZL7threshs_34_q0;
wire   [1:0] p_ZL7threshs_35_address0;
reg    p_ZL7threshs_35_ce0;
wire   [0:0] p_ZL7threshs_35_q0;
wire   [1:0] p_ZL7threshs_36_address0;
reg    p_ZL7threshs_36_ce0;
wire   [0:0] p_ZL7threshs_36_q0;
wire   [1:0] p_ZL7threshs_37_address0;
reg    p_ZL7threshs_37_ce0;
wire   [0:0] p_ZL7threshs_37_q0;
wire   [1:0] p_ZL7threshs_38_address0;
reg    p_ZL7threshs_38_ce0;
wire   [0:0] p_ZL7threshs_38_q0;
wire   [1:0] p_ZL7threshs_39_address0;
reg    p_ZL7threshs_39_ce0;
wire   [0:0] p_ZL7threshs_39_q0;
wire   [1:0] p_ZL7threshs_40_address0;
reg    p_ZL7threshs_40_ce0;
wire   [0:0] p_ZL7threshs_40_q0;
wire   [1:0] p_ZL7threshs_41_address0;
reg    p_ZL7threshs_41_ce0;
wire   [0:0] p_ZL7threshs_41_q0;
wire   [1:0] p_ZL7threshs_42_address0;
reg    p_ZL7threshs_42_ce0;
wire   [0:0] p_ZL7threshs_42_q0;
wire   [1:0] p_ZL7threshs_43_address0;
reg    p_ZL7threshs_43_ce0;
wire   [0:0] p_ZL7threshs_43_q0;
wire   [1:0] p_ZL7threshs_44_address0;
reg    p_ZL7threshs_44_ce0;
wire   [1:0] p_ZL7threshs_44_q0;
wire   [1:0] p_ZL7threshs_45_address0;
reg    p_ZL7threshs_45_ce0;
wire   [1:0] p_ZL7threshs_45_q0;
wire   [1:0] p_ZL7threshs_46_address0;
reg    p_ZL7threshs_46_ce0;
wire   [1:0] p_ZL7threshs_46_q0;
wire   [1:0] p_ZL7threshs_47_address0;
reg    p_ZL7threshs_47_ce0;
wire   [1:0] p_ZL7threshs_47_q0;
wire   [1:0] p_ZL7threshs_48_address0;
reg    p_ZL7threshs_48_ce0;
wire   [1:0] p_ZL7threshs_48_q0;
wire   [1:0] p_ZL7threshs_49_address0;
reg    p_ZL7threshs_49_ce0;
wire   [1:0] p_ZL7threshs_49_q0;
wire   [1:0] p_ZL7threshs_50_address0;
reg    p_ZL7threshs_50_ce0;
wire   [1:0] p_ZL7threshs_50_q0;
wire   [1:0] p_ZL7threshs_51_address0;
reg    p_ZL7threshs_51_ce0;
wire   [1:0] p_ZL7threshs_51_q0;
wire   [1:0] p_ZL7threshs_52_address0;
reg    p_ZL7threshs_52_ce0;
wire   [1:0] p_ZL7threshs_52_q0;
wire   [1:0] p_ZL7threshs_53_address0;
reg    p_ZL7threshs_53_ce0;
wire   [1:0] p_ZL7threshs_53_q0;
wire   [1:0] p_ZL7threshs_54_address0;
reg    p_ZL7threshs_54_ce0;
wire   [1:0] p_ZL7threshs_54_q0;
wire   [1:0] p_ZL7threshs_55_address0;
reg    p_ZL7threshs_55_ce0;
wire   [1:0] p_ZL7threshs_55_q0;
wire   [1:0] p_ZL7threshs_56_address0;
reg    p_ZL7threshs_56_ce0;
wire   [1:0] p_ZL7threshs_56_q0;
wire   [1:0] p_ZL7threshs_57_address0;
reg    p_ZL7threshs_57_ce0;
wire   [0:0] p_ZL7threshs_57_q0;
wire   [1:0] p_ZL7threshs_58_address0;
reg    p_ZL7threshs_58_ce0;
wire   [0:0] p_ZL7threshs_58_q0;
wire   [1:0] p_ZL7threshs_59_address0;
reg    p_ZL7threshs_59_ce0;
wire   [0:0] p_ZL7threshs_59_q0;
wire   [1:0] p_ZL7threshs_60_address0;
reg    p_ZL7threshs_60_ce0;
wire   [0:0] p_ZL7threshs_60_q0;
wire   [1:0] p_ZL7threshs_61_address0;
reg    p_ZL7threshs_61_ce0;
wire   [0:0] p_ZL7threshs_61_q0;
wire   [1:0] p_ZL7threshs_62_address0;
reg    p_ZL7threshs_62_ce0;
wire   [0:0] p_ZL7threshs_62_q0;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
wire   [0:0] icmp_ln295_reg_1601_pp0_iter0_reg;
reg   [0:0] icmp_ln295_reg_1601_pp0_iter1_reg;
reg   [0:0] icmp_ln295_reg_1601_pp0_iter2_reg;
reg   [7:0] tmp_reg_1605;
reg   [7:0] tmp_reg_1605_pp0_iter1_reg;
wire   [1:0] add_ln886_1_fu_1320_p2;
reg   [1:0] add_ln886_1_reg_1795;
wire   [1:0] add_ln886_2_fu_1326_p2;
reg   [1:0] add_ln886_2_reg_1800;
wire   [1:0] add_ln886_3_fu_1332_p2;
reg   [1:0] add_ln886_3_reg_1805;
wire   [2:0] add_ln886_8_fu_1358_p2;
reg   [2:0] add_ln886_8_reg_1810;
wire   [2:0] add_ln886_11_fu_1384_p2;
reg   [2:0] add_ln886_11_reg_1815;
wire   [2:0] add_ln886_16_fu_1410_p2;
reg   [2:0] add_ln886_16_reg_1820;
wire   [2:0] add_ln886_19_fu_1436_p2;
reg   [2:0] add_ln886_19_reg_1825;
wire   [2:0] add_ln886_23_fu_1462_p2;
reg   [2:0] add_ln886_23_reg_1830;
wire   [2:0] add_ln886_26_fu_1488_p2;
reg   [2:0] add_ln886_26_reg_1835;
wire   [3:0] add_ln886_13_fu_1531_p2;
reg   [3:0] add_ln886_13_reg_1840;
wire   [3:0] add_ln886_20_fu_1543_p2;
reg   [3:0] add_ln886_20_reg_1845;
wire   [3:0] add_ln886_27_fu_1555_p2;
reg   [3:0] add_ln886_27_reg_1850;
wire   [63:0] idxprom2_i_fu_641_p1;
reg   [31:0] nf_1_fu_184;
wire   [31:0] nf_2_fu_688_p3;
wire    ap_loop_init;
reg   [21:0] i_fu_188;
wire   [21:0] i_2_fu_627_p2;
reg   [21:0] ap_sig_allocacmp_i_1;
wire   [31:0] nf_fu_676_p2;
wire   [0:0] icmp_ln307_fu_682_p2;
wire   [7:0] zext_ln1085_fu_701_p1;
wire   [0:0] icmp_ln1085_fu_705_p2;
wire   [0:0] result_V_1_fu_710_p2;
wire   [7:0] zext_ln1085_1_fu_720_p1;
wire   [0:0] icmp_ln1085_1_fu_724_p2;
wire   [0:0] xor_ln1085_fu_729_p2;
wire   [7:0] zext_ln1085_2_fu_739_p1;
wire   [0:0] icmp_ln1085_2_fu_743_p2;
wire   [0:0] xor_ln1085_1_fu_748_p2;
wire   [7:0] zext_ln1085_3_fu_758_p1;
wire   [0:0] icmp_ln1085_3_fu_762_p2;
wire   [0:0] xor_ln1085_2_fu_767_p2;
wire   [7:0] zext_ln1085_4_fu_777_p1;
wire   [0:0] icmp_ln1085_4_fu_781_p2;
wire   [0:0] xor_ln1085_3_fu_786_p2;
wire   [7:0] zext_ln1085_5_fu_796_p1;
wire   [0:0] icmp_ln1085_5_fu_800_p2;
wire   [0:0] xor_ln1085_4_fu_805_p2;
wire   [7:0] zext_ln1085_6_fu_815_p1;
wire   [0:0] icmp_ln1085_6_fu_819_p2;
wire   [0:0] xor_ln1085_5_fu_824_p2;
wire   [7:0] zext_ln1085_7_fu_834_p1;
wire   [0:0] icmp_ln1085_7_fu_838_p2;
wire   [0:0] xor_ln1085_6_fu_843_p2;
wire   [7:0] zext_ln1085_8_fu_853_p1;
wire   [0:0] icmp_ln1085_8_fu_857_p2;
wire   [0:0] xor_ln1085_7_fu_862_p2;
wire   [7:0] zext_ln1085_9_fu_872_p1;
wire   [0:0] icmp_ln1085_9_fu_876_p2;
wire   [0:0] xor_ln1085_8_fu_881_p2;
wire   [7:0] zext_ln1085_10_fu_891_p1;
wire   [0:0] icmp_ln1085_10_fu_895_p2;
wire   [0:0] xor_ln1085_9_fu_900_p2;
wire   [7:0] zext_ln1085_11_fu_910_p1;
wire   [0:0] icmp_ln1085_11_fu_914_p2;
wire   [0:0] xor_ln1085_10_fu_919_p2;
wire   [7:0] zext_ln1085_12_fu_929_p1;
wire   [0:0] icmp_ln1085_12_fu_933_p2;
wire   [0:0] xor_ln1085_11_fu_938_p2;
wire   [7:0] zext_ln1085_13_fu_948_p1;
wire   [0:0] icmp_ln1085_13_fu_952_p2;
wire   [0:0] xor_ln1085_12_fu_957_p2;
wire   [7:0] zext_ln1085_14_fu_967_p1;
wire   [0:0] icmp_ln1085_14_fu_971_p2;
wire   [0:0] xor_ln1085_13_fu_976_p2;
wire   [7:0] zext_ln1085_15_fu_986_p1;
wire   [0:0] icmp_ln1085_15_fu_990_p2;
wire   [0:0] xor_ln1085_14_fu_995_p2;
wire   [7:0] zext_ln1085_16_fu_1005_p1;
wire   [0:0] icmp_ln1085_16_fu_1009_p2;
wire   [0:0] xor_ln1085_15_fu_1014_p2;
wire   [7:0] zext_ln1085_17_fu_1024_p1;
wire   [0:0] icmp_ln1085_17_fu_1028_p2;
wire   [0:0] xor_ln1085_16_fu_1033_p2;
wire   [7:0] zext_ln1085_18_fu_1043_p1;
wire   [0:0] icmp_ln1085_18_fu_1047_p2;
wire   [0:0] xor_ln1085_17_fu_1052_p2;
wire   [7:0] zext_ln1085_19_fu_1062_p1;
wire   [0:0] icmp_ln1085_19_fu_1066_p2;
wire   [0:0] xor_ln1085_18_fu_1071_p2;
wire   [7:0] zext_ln1085_20_fu_1081_p1;
wire   [0:0] icmp_ln1085_20_fu_1085_p2;
wire   [0:0] xor_ln1085_19_fu_1090_p2;
wire   [7:0] zext_ln1085_21_fu_1100_p1;
wire   [0:0] icmp_ln1085_21_fu_1104_p2;
wire   [0:0] xor_ln1085_20_fu_1109_p2;
wire   [7:0] zext_ln1085_22_fu_1119_p1;
wire   [0:0] icmp_ln1085_22_fu_1123_p2;
wire   [0:0] xor_ln1085_21_fu_1128_p2;
wire   [7:0] zext_ln1085_23_fu_1138_p1;
wire   [0:0] icmp_ln1085_23_fu_1142_p2;
wire   [0:0] xor_ln1085_22_fu_1147_p2;
wire   [7:0] zext_ln1085_24_fu_1157_p1;
wire   [0:0] icmp_ln1085_24_fu_1161_p2;
wire   [0:0] xor_ln1085_23_fu_1166_p2;
wire   [7:0] select_ln1085_fu_1176_p3;
wire   [0:0] icmp_ln1085_25_fu_1184_p2;
wire   [0:0] xor_ln1085_24_fu_1189_p2;
wire   [7:0] select_ln1085_1_fu_1199_p3;
wire   [0:0] icmp_ln1085_26_fu_1207_p2;
wire   [0:0] xor_ln1085_25_fu_1212_p2;
wire   [7:0] select_ln1085_2_fu_1222_p3;
wire   [0:0] icmp_ln1085_27_fu_1230_p2;
wire   [0:0] xor_ln1085_26_fu_1235_p2;
wire   [7:0] select_ln1085_3_fu_1245_p3;
wire   [0:0] icmp_ln1085_28_fu_1253_p2;
wire   [0:0] xor_ln1085_27_fu_1258_p2;
wire   [7:0] select_ln1085_4_fu_1268_p3;
wire   [0:0] icmp_ln1085_29_fu_1276_p2;
wire   [0:0] xor_ln1085_28_fu_1281_p2;
wire   [7:0] select_ln1085_5_fu_1291_p3;
wire   [0:0] icmp_ln1085_30_fu_1299_p2;
wire   [0:0] xor_ln1085_29_fu_1304_p2;
wire   [1:0] zext_ln218_fu_735_p1;
wire   [1:0] zext_ln218_1_fu_754_p1;
wire   [1:0] add_ln886_fu_1314_p2;
wire   [1:0] zext_ln215_fu_716_p1;
wire   [1:0] zext_ln218_2_fu_773_p1;
wire   [1:0] zext_ln218_3_fu_792_p1;
wire   [1:0] zext_ln218_4_fu_811_p1;
wire   [1:0] zext_ln218_5_fu_830_p1;
wire   [1:0] zext_ln218_6_fu_849_p1;
wire   [1:0] zext_ln218_7_fu_868_p1;
wire   [1:0] add_ln886_6_fu_1338_p2;
wire   [1:0] zext_ln218_8_fu_887_p1;
wire   [1:0] zext_ln218_9_fu_906_p1;
wire   [1:0] add_ln886_7_fu_1348_p2;
wire   [2:0] zext_ln886_6_fu_1354_p1;
wire   [2:0] zext_ln886_5_fu_1344_p1;
wire   [1:0] zext_ln218_10_fu_925_p1;
wire   [1:0] zext_ln218_11_fu_944_p1;
wire   [1:0] add_ln886_9_fu_1364_p2;
wire   [1:0] zext_ln218_12_fu_963_p1;
wire   [1:0] zext_ln218_13_fu_982_p1;
wire   [1:0] add_ln886_10_fu_1374_p2;
wire   [2:0] zext_ln886_9_fu_1380_p1;
wire   [2:0] zext_ln886_8_fu_1370_p1;
wire   [1:0] zext_ln218_14_fu_1001_p1;
wire   [1:0] zext_ln218_15_fu_1020_p1;
wire   [1:0] add_ln886_14_fu_1390_p2;
wire   [1:0] zext_ln218_16_fu_1039_p1;
wire   [1:0] zext_ln218_17_fu_1058_p1;
wire   [1:0] add_ln886_15_fu_1400_p2;
wire   [2:0] zext_ln886_13_fu_1406_p1;
wire   [2:0] zext_ln886_12_fu_1396_p1;
wire   [1:0] zext_ln218_18_fu_1077_p1;
wire   [1:0] zext_ln218_19_fu_1096_p1;
wire   [1:0] add_ln886_17_fu_1416_p2;
wire   [1:0] zext_ln218_20_fu_1115_p1;
wire   [1:0] zext_ln218_21_fu_1134_p1;
wire   [1:0] add_ln886_18_fu_1426_p2;
wire   [2:0] zext_ln886_16_fu_1432_p1;
wire   [2:0] zext_ln886_15_fu_1422_p1;
wire   [1:0] zext_ln218_22_fu_1153_p1;
wire   [1:0] zext_ln218_23_fu_1172_p1;
wire   [1:0] add_ln886_21_fu_1442_p2;
wire   [1:0] zext_ln218_24_fu_1195_p1;
wire   [1:0] zext_ln218_25_fu_1218_p1;
wire   [1:0] add_ln886_22_fu_1452_p2;
wire   [2:0] zext_ln886_20_fu_1458_p1;
wire   [2:0] zext_ln886_19_fu_1448_p1;
wire   [1:0] zext_ln218_26_fu_1241_p1;
wire   [1:0] zext_ln218_27_fu_1264_p1;
wire   [1:0] add_ln886_24_fu_1468_p2;
wire   [1:0] zext_ln218_28_fu_1287_p1;
wire   [1:0] zext_ln886_fu_1310_p1;
wire   [1:0] add_ln886_25_fu_1478_p2;
wire   [2:0] zext_ln886_23_fu_1484_p1;
wire   [2:0] zext_ln886_22_fu_1474_p1;
wire   [2:0] zext_ln886_3_fu_1500_p1;
wire   [2:0] zext_ln886_2_fu_1497_p1;
wire   [2:0] add_ln886_4_fu_1503_p2;
wire   [2:0] zext_ln886_1_fu_1494_p1;
wire   [2:0] add_ln886_5_fu_1509_p2;
wire   [3:0] zext_ln886_10_fu_1522_p1;
wire   [3:0] zext_ln886_7_fu_1519_p1;
wire   [3:0] add_ln886_12_fu_1525_p2;
wire   [3:0] zext_ln886_4_fu_1515_p1;
wire   [3:0] zext_ln886_17_fu_1540_p1;
wire   [3:0] zext_ln886_14_fu_1537_p1;
wire   [3:0] zext_ln886_24_fu_1552_p1;
wire   [3:0] zext_ln886_21_fu_1549_p1;
wire   [4:0] zext_ln886_25_fu_1567_p1;
wire   [4:0] zext_ln886_18_fu_1564_p1;
wire   [4:0] add_ln886_28_fu_1570_p2;
wire   [4:0] zext_ln886_11_fu_1561_p1;
wire   [4:0] result_V_fu_1576_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg   [1:0] ap_NS_iter4_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
wire    ap_ST_iter2_fsm_state3_blk;
wire    ap_ST_iter3_fsm_state4_blk;
reg    ap_ST_iter4_fsm_state5_blk;
wire    ap_start_int;
reg    ap_condition_1271;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
#0 ap_CS_iter4_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_32_address0),
    .ce0(p_ZL7threshs_32_ce0),
    .q0(p_ZL7threshs_32_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_33_address0),
    .ce0(p_ZL7threshs_33_ce0),
    .q0(p_ZL7threshs_33_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_34_address0),
    .ce0(p_ZL7threshs_34_ce0),
    .q0(p_ZL7threshs_34_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_35_address0),
    .ce0(p_ZL7threshs_35_ce0),
    .q0(p_ZL7threshs_35_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_36_address0),
    .ce0(p_ZL7threshs_36_ce0),
    .q0(p_ZL7threshs_36_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_37_address0),
    .ce0(p_ZL7threshs_37_ce0),
    .q0(p_ZL7threshs_37_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_38_address0),
    .ce0(p_ZL7threshs_38_ce0),
    .q0(p_ZL7threshs_38_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_39_address0),
    .ce0(p_ZL7threshs_39_ce0),
    .q0(p_ZL7threshs_39_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_40_address0),
    .ce0(p_ZL7threshs_40_ce0),
    .q0(p_ZL7threshs_40_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_41_address0),
    .ce0(p_ZL7threshs_41_ce0),
    .q0(p_ZL7threshs_41_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_42_address0),
    .ce0(p_ZL7threshs_42_ce0),
    .q0(p_ZL7threshs_42_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_43_address0),
    .ce0(p_ZL7threshs_43_ce0),
    .q0(p_ZL7threshs_43_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_44_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_44_address0),
    .ce0(p_ZL7threshs_44_ce0),
    .q0(p_ZL7threshs_44_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_45_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_45_address0),
    .ce0(p_ZL7threshs_45_ce0),
    .q0(p_ZL7threshs_45_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_46_address0),
    .ce0(p_ZL7threshs_46_ce0),
    .q0(p_ZL7threshs_46_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_47_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_47_address0),
    .ce0(p_ZL7threshs_47_ce0),
    .q0(p_ZL7threshs_47_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_48_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_48_address0),
    .ce0(p_ZL7threshs_48_ce0),
    .q0(p_ZL7threshs_48_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_49_address0),
    .ce0(p_ZL7threshs_49_ce0),
    .q0(p_ZL7threshs_49_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_50_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_50_address0),
    .ce0(p_ZL7threshs_50_ce0),
    .q0(p_ZL7threshs_50_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_51_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_51_address0),
    .ce0(p_ZL7threshs_51_ce0),
    .q0(p_ZL7threshs_51_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_52_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_52_address0),
    .ce0(p_ZL7threshs_52_ce0),
    .q0(p_ZL7threshs_52_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_53_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_53_address0),
    .ce0(p_ZL7threshs_53_ce0),
    .q0(p_ZL7threshs_53_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_54_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_54_address0),
    .ce0(p_ZL7threshs_54_ce0),
    .q0(p_ZL7threshs_54_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_55_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_55_address0),
    .ce0(p_ZL7threshs_55_ce0),
    .q0(p_ZL7threshs_55_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_44_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_56_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_56_address0),
    .ce0(p_ZL7threshs_56_ce0),
    .q0(p_ZL7threshs_56_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_57_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_57_address0),
    .ce0(p_ZL7threshs_57_ce0),
    .q0(p_ZL7threshs_57_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_58_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_58_address0),
    .ce0(p_ZL7threshs_58_ce0),
    .q0(p_ZL7threshs_58_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_59_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_59_address0),
    .ce0(p_ZL7threshs_59_ce0),
    .q0(p_ZL7threshs_59_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_60_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_60_address0),
    .ce0(p_ZL7threshs_60_ce0),
    .q0(p_ZL7threshs_60_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_61_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_61_address0),
    .ce0(p_ZL7threshs_61_ce0),
    .q0(p_ZL7threshs_61_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch_p_ZL7threshs_32_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
p_ZL7threshs_62_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_62_address0),
    .ce0(p_ZL7threshs_62_ce0),
    .q0(p_ZL7threshs_62_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter4_fsm <= ap_ST_iter4_fsm_state0;
    end else begin
        ap_CS_iter4_fsm <= ap_NS_iter4_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter4_fsm_state5) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter4_fsm_state5) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1271)) begin
        if ((icmp_ln295_fu_621_p2 == 1'd0)) begin
            i_fu_188 <= i_2_fu_627_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_188 <= 22'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        nf_1_fu_184 <= 32'd0;
    end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln295_reg_1601_pp0_iter0_reg == 1'd0))) begin
        nf_1_fu_184 <= nf_2_fu_688_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (icmp_ln295_reg_1601_pp0_iter1_reg == 1'd0))) begin
        add_ln886_11_reg_1815 <= add_ln886_11_fu_1384_p2;
        add_ln886_16_reg_1820 <= add_ln886_16_fu_1410_p2;
        add_ln886_19_reg_1825 <= add_ln886_19_fu_1436_p2;
        add_ln886_1_reg_1795 <= add_ln886_1_fu_1320_p2;
        add_ln886_23_reg_1830 <= add_ln886_23_fu_1462_p2;
        add_ln886_26_reg_1835 <= add_ln886_26_fu_1488_p2;
        add_ln886_2_reg_1800 <= add_ln886_2_fu_1326_p2;
        add_ln886_3_reg_1805 <= add_ln886_3_fu_1332_p2;
        add_ln886_8_reg_1810 <= add_ln886_8_fu_1358_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4) & (icmp_ln295_reg_1601_pp0_iter2_reg == 1'd0))) begin
        add_ln886_13_reg_1840 <= add_ln886_13_fu_1531_p2;
        add_ln886_20_reg_1845 <= add_ln886_20_fu_1543_p2;
        add_ln886_27_reg_1850 <= add_ln886_27_fu_1555_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln295_reg_1601 <= icmp_ln295_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln295_reg_1601_pp0_iter1_reg <= icmp_ln295_reg_1601;
        tmp_reg_1605_pp0_iter1_reg <= tmp_reg_1605;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln295_reg_1601_pp0_iter2_reg <= icmp_ln295_reg_1601_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        icmp_ln295_reg_1601_pp0_iter3_reg <= icmp_ln295_reg_1601_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_621_p2 == 1'd0))) begin
        tmp_reg_1605 <= in0_V_TDATA;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

assign ap_ST_iter2_fsm_state3_blk = 1'b0;

assign ap_ST_iter3_fsm_state4_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter4_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_iter4_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_621_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter4_fsm_state5) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter4_fsm_state0) & (1'b1 == ap_CS_iter3_fsm_state0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 22'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_188;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_621_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_621_p2 == 1'd0))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_32_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_33_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_34_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_35_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_36_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_37_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_38_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_39_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_40_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_41_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_42_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_43_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_44_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_45_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_46_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_47_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_48_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_49_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_50_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_51_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_52_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_53_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_54_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_55_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_56_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_57_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_58_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_59_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_60_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_61_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_62_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & ~((ap_start_int == 1'b0) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b0 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter4_fsm)
        ap_ST_iter4_fsm_state5 : begin
            if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b0 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end else if (((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter3_fsm_state4)) | (~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln295_reg_1601_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_iter4_fsm_state5)))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end
        end
        ap_ST_iter4_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter4_fsm = 'bx;
        end
    endcase
end

assign add_ln886_10_fu_1374_p2 = (zext_ln218_12_fu_963_p1 + zext_ln218_13_fu_982_p1);

assign add_ln886_11_fu_1384_p2 = (zext_ln886_9_fu_1380_p1 + zext_ln886_8_fu_1370_p1);

assign add_ln886_12_fu_1525_p2 = (zext_ln886_10_fu_1522_p1 + zext_ln886_7_fu_1519_p1);

assign add_ln886_13_fu_1531_p2 = (add_ln886_12_fu_1525_p2 + zext_ln886_4_fu_1515_p1);

assign add_ln886_14_fu_1390_p2 = (zext_ln218_14_fu_1001_p1 + zext_ln218_15_fu_1020_p1);

assign add_ln886_15_fu_1400_p2 = (zext_ln218_16_fu_1039_p1 + zext_ln218_17_fu_1058_p1);

assign add_ln886_16_fu_1410_p2 = (zext_ln886_13_fu_1406_p1 + zext_ln886_12_fu_1396_p1);

assign add_ln886_17_fu_1416_p2 = (zext_ln218_18_fu_1077_p1 + zext_ln218_19_fu_1096_p1);

assign add_ln886_18_fu_1426_p2 = (zext_ln218_20_fu_1115_p1 + zext_ln218_21_fu_1134_p1);

assign add_ln886_19_fu_1436_p2 = (zext_ln886_16_fu_1432_p1 + zext_ln886_15_fu_1422_p1);

assign add_ln886_1_fu_1320_p2 = (add_ln886_fu_1314_p2 + zext_ln215_fu_716_p1);

assign add_ln886_20_fu_1543_p2 = (zext_ln886_17_fu_1540_p1 + zext_ln886_14_fu_1537_p1);

assign add_ln886_21_fu_1442_p2 = (zext_ln218_22_fu_1153_p1 + zext_ln218_23_fu_1172_p1);

assign add_ln886_22_fu_1452_p2 = (zext_ln218_24_fu_1195_p1 + zext_ln218_25_fu_1218_p1);

assign add_ln886_23_fu_1462_p2 = (zext_ln886_20_fu_1458_p1 + zext_ln886_19_fu_1448_p1);

assign add_ln886_24_fu_1468_p2 = (zext_ln218_26_fu_1241_p1 + zext_ln218_27_fu_1264_p1);

assign add_ln886_25_fu_1478_p2 = (zext_ln218_28_fu_1287_p1 + zext_ln886_fu_1310_p1);

assign add_ln886_26_fu_1488_p2 = (zext_ln886_23_fu_1484_p1 + zext_ln886_22_fu_1474_p1);

assign add_ln886_27_fu_1555_p2 = (zext_ln886_24_fu_1552_p1 + zext_ln886_21_fu_1549_p1);

assign add_ln886_28_fu_1570_p2 = (zext_ln886_25_fu_1567_p1 + zext_ln886_18_fu_1564_p1);

assign add_ln886_2_fu_1326_p2 = (zext_ln218_2_fu_773_p1 + zext_ln218_3_fu_792_p1);

assign add_ln886_3_fu_1332_p2 = (zext_ln218_4_fu_811_p1 + zext_ln218_5_fu_830_p1);

assign add_ln886_4_fu_1503_p2 = (zext_ln886_3_fu_1500_p1 + zext_ln886_2_fu_1497_p1);

assign add_ln886_5_fu_1509_p2 = (add_ln886_4_fu_1503_p2 + zext_ln886_1_fu_1494_p1);

assign add_ln886_6_fu_1338_p2 = (zext_ln218_6_fu_849_p1 + zext_ln218_7_fu_868_p1);

assign add_ln886_7_fu_1348_p2 = (zext_ln218_8_fu_887_p1 + zext_ln218_9_fu_906_p1);

assign add_ln886_8_fu_1358_p2 = (zext_ln886_6_fu_1354_p1 + zext_ln886_5_fu_1344_p1);

assign add_ln886_9_fu_1364_p2 = (zext_ln218_10_fu_925_p1 + zext_ln218_11_fu_944_p1);

assign add_ln886_fu_1314_p2 = (zext_ln218_fu_735_p1 + zext_ln218_1_fu_754_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state0 = ap_CS_iter3_fsm[32'd0];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

assign ap_CS_iter4_fsm_state0 = ap_CS_iter4_fsm[32'd0];

assign ap_CS_iter4_fsm_state5 = ap_CS_iter4_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_1271 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1601_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_621_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign i_2_fu_627_p2 = (ap_sig_allocacmp_i_1 + 22'd1);

assign icmp_ln1085_10_fu_895_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_10_fu_891_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_11_fu_914_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_11_fu_910_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_12_fu_933_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_12_fu_929_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_13_fu_952_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_13_fu_948_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_14_fu_971_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_14_fu_967_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_15_fu_990_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_15_fu_986_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_16_fu_1009_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_16_fu_1005_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_17_fu_1028_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_17_fu_1024_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_18_fu_1047_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_18_fu_1043_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_19_fu_1066_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_19_fu_1062_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_1_fu_724_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_1_fu_720_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_20_fu_1085_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_20_fu_1081_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_21_fu_1104_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_21_fu_1100_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_22_fu_1123_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_22_fu_1119_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_23_fu_1142_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_23_fu_1138_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_24_fu_1161_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_24_fu_1157_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_25_fu_1184_p2 = ((tmp_reg_1605_pp0_iter1_reg < select_ln1085_fu_1176_p3) ? 1'b1 : 1'b0);

assign icmp_ln1085_26_fu_1207_p2 = ((tmp_reg_1605_pp0_iter1_reg < select_ln1085_1_fu_1199_p3) ? 1'b1 : 1'b0);

assign icmp_ln1085_27_fu_1230_p2 = ((tmp_reg_1605_pp0_iter1_reg < select_ln1085_2_fu_1222_p3) ? 1'b1 : 1'b0);

assign icmp_ln1085_28_fu_1253_p2 = ((tmp_reg_1605_pp0_iter1_reg < select_ln1085_3_fu_1245_p3) ? 1'b1 : 1'b0);

assign icmp_ln1085_29_fu_1276_p2 = ((tmp_reg_1605_pp0_iter1_reg < select_ln1085_4_fu_1268_p3) ? 1'b1 : 1'b0);

assign icmp_ln1085_2_fu_743_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_2_fu_739_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_30_fu_1299_p2 = ((tmp_reg_1605_pp0_iter1_reg < select_ln1085_5_fu_1291_p3) ? 1'b1 : 1'b0);

assign icmp_ln1085_3_fu_762_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_3_fu_758_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_4_fu_781_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_4_fu_777_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_5_fu_800_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_5_fu_796_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_6_fu_819_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_6_fu_815_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_7_fu_838_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_7_fu_834_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_8_fu_857_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_8_fu_853_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_9_fu_876_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_9_fu_872_p1) ? 1'b1 : 1'b0);

assign icmp_ln1085_fu_705_p2 = ((tmp_reg_1605_pp0_iter1_reg < zext_ln1085_fu_701_p1) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_621_p2 = ((ap_sig_allocacmp_i_1 == 22'd3145728) ? 1'b1 : 1'b0);

assign icmp_ln295_reg_1601_pp0_iter0_reg = icmp_ln295_reg_1601;

assign icmp_ln307_fu_682_p2 = ((nf_fu_676_p2 == 32'd3) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_641_p1 = nf_1_fu_184;

assign nf_2_fu_688_p3 = ((icmp_ln307_fu_682_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_676_p2);

assign nf_fu_676_p2 = (nf_1_fu_184 + 32'd1);

assign out_V_TDATA = result_V_fu_1576_p2;

assign p_ZL7threshs_32_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_33_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_34_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_35_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_36_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_37_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_38_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_39_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_40_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_41_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_42_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_43_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_44_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_45_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_46_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_47_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_48_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_49_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_50_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_51_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_52_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_53_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_54_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_55_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_56_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_57_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_58_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_59_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_60_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_61_address0 = idxprom2_i_fu_641_p1;

assign p_ZL7threshs_62_address0 = idxprom2_i_fu_641_p1;

assign result_V_1_fu_710_p2 = (icmp_ln1085_fu_705_p2 ^ 1'd1);

assign result_V_fu_1576_p2 = (add_ln886_28_fu_1570_p2 + zext_ln886_11_fu_1561_p1);

assign select_ln1085_1_fu_1199_p3 = ((p_ZL7threshs_58_q0[0:0] == 1'b1) ? 8'd3 : 8'd0);

assign select_ln1085_2_fu_1222_p3 = ((p_ZL7threshs_59_q0[0:0] == 1'b1) ? 8'd3 : 8'd0);

assign select_ln1085_3_fu_1245_p3 = ((p_ZL7threshs_60_q0[0:0] == 1'b1) ? 8'd3 : 8'd0);

assign select_ln1085_4_fu_1268_p3 = ((p_ZL7threshs_61_q0[0:0] == 1'b1) ? 8'd3 : 8'd0);

assign select_ln1085_5_fu_1291_p3 = ((p_ZL7threshs_62_q0[0:0] == 1'b1) ? 8'd3 : 8'd0);

assign select_ln1085_fu_1176_p3 = ((p_ZL7threshs_57_q0[0:0] == 1'b1) ? 8'd3 : 8'd0);

assign xor_ln1085_10_fu_919_p2 = (icmp_ln1085_11_fu_914_p2 ^ 1'd1);

assign xor_ln1085_11_fu_938_p2 = (icmp_ln1085_12_fu_933_p2 ^ 1'd1);

assign xor_ln1085_12_fu_957_p2 = (icmp_ln1085_13_fu_952_p2 ^ 1'd1);

assign xor_ln1085_13_fu_976_p2 = (icmp_ln1085_14_fu_971_p2 ^ 1'd1);

assign xor_ln1085_14_fu_995_p2 = (icmp_ln1085_15_fu_990_p2 ^ 1'd1);

assign xor_ln1085_15_fu_1014_p2 = (icmp_ln1085_16_fu_1009_p2 ^ 1'd1);

assign xor_ln1085_16_fu_1033_p2 = (icmp_ln1085_17_fu_1028_p2 ^ 1'd1);

assign xor_ln1085_17_fu_1052_p2 = (icmp_ln1085_18_fu_1047_p2 ^ 1'd1);

assign xor_ln1085_18_fu_1071_p2 = (icmp_ln1085_19_fu_1066_p2 ^ 1'd1);

assign xor_ln1085_19_fu_1090_p2 = (icmp_ln1085_20_fu_1085_p2 ^ 1'd1);

assign xor_ln1085_1_fu_748_p2 = (icmp_ln1085_2_fu_743_p2 ^ 1'd1);

assign xor_ln1085_20_fu_1109_p2 = (icmp_ln1085_21_fu_1104_p2 ^ 1'd1);

assign xor_ln1085_21_fu_1128_p2 = (icmp_ln1085_22_fu_1123_p2 ^ 1'd1);

assign xor_ln1085_22_fu_1147_p2 = (icmp_ln1085_23_fu_1142_p2 ^ 1'd1);

assign xor_ln1085_23_fu_1166_p2 = (icmp_ln1085_24_fu_1161_p2 ^ 1'd1);

assign xor_ln1085_24_fu_1189_p2 = (icmp_ln1085_25_fu_1184_p2 ^ 1'd1);

assign xor_ln1085_25_fu_1212_p2 = (icmp_ln1085_26_fu_1207_p2 ^ 1'd1);

assign xor_ln1085_26_fu_1235_p2 = (icmp_ln1085_27_fu_1230_p2 ^ 1'd1);

assign xor_ln1085_27_fu_1258_p2 = (icmp_ln1085_28_fu_1253_p2 ^ 1'd1);

assign xor_ln1085_28_fu_1281_p2 = (icmp_ln1085_29_fu_1276_p2 ^ 1'd1);

assign xor_ln1085_29_fu_1304_p2 = (icmp_ln1085_30_fu_1299_p2 ^ 1'd1);

assign xor_ln1085_2_fu_767_p2 = (icmp_ln1085_3_fu_762_p2 ^ 1'd1);

assign xor_ln1085_3_fu_786_p2 = (icmp_ln1085_4_fu_781_p2 ^ 1'd1);

assign xor_ln1085_4_fu_805_p2 = (icmp_ln1085_5_fu_800_p2 ^ 1'd1);

assign xor_ln1085_5_fu_824_p2 = (icmp_ln1085_6_fu_819_p2 ^ 1'd1);

assign xor_ln1085_6_fu_843_p2 = (icmp_ln1085_7_fu_838_p2 ^ 1'd1);

assign xor_ln1085_7_fu_862_p2 = (icmp_ln1085_8_fu_857_p2 ^ 1'd1);

assign xor_ln1085_8_fu_881_p2 = (icmp_ln1085_9_fu_876_p2 ^ 1'd1);

assign xor_ln1085_9_fu_900_p2 = (icmp_ln1085_10_fu_895_p2 ^ 1'd1);

assign xor_ln1085_fu_729_p2 = (icmp_ln1085_1_fu_724_p2 ^ 1'd1);

assign zext_ln1085_10_fu_891_p1 = p_ZL7threshs_42_q0;

assign zext_ln1085_11_fu_910_p1 = p_ZL7threshs_43_q0;

assign zext_ln1085_12_fu_929_p1 = p_ZL7threshs_44_q0;

assign zext_ln1085_13_fu_948_p1 = p_ZL7threshs_45_q0;

assign zext_ln1085_14_fu_967_p1 = p_ZL7threshs_46_q0;

assign zext_ln1085_15_fu_986_p1 = p_ZL7threshs_47_q0;

assign zext_ln1085_16_fu_1005_p1 = p_ZL7threshs_48_q0;

assign zext_ln1085_17_fu_1024_p1 = p_ZL7threshs_49_q0;

assign zext_ln1085_18_fu_1043_p1 = p_ZL7threshs_50_q0;

assign zext_ln1085_19_fu_1062_p1 = p_ZL7threshs_51_q0;

assign zext_ln1085_1_fu_720_p1 = p_ZL7threshs_33_q0;

assign zext_ln1085_20_fu_1081_p1 = p_ZL7threshs_52_q0;

assign zext_ln1085_21_fu_1100_p1 = p_ZL7threshs_53_q0;

assign zext_ln1085_22_fu_1119_p1 = p_ZL7threshs_54_q0;

assign zext_ln1085_23_fu_1138_p1 = p_ZL7threshs_55_q0;

assign zext_ln1085_24_fu_1157_p1 = p_ZL7threshs_56_q0;

assign zext_ln1085_2_fu_739_p1 = p_ZL7threshs_34_q0;

assign zext_ln1085_3_fu_758_p1 = p_ZL7threshs_35_q0;

assign zext_ln1085_4_fu_777_p1 = p_ZL7threshs_36_q0;

assign zext_ln1085_5_fu_796_p1 = p_ZL7threshs_37_q0;

assign zext_ln1085_6_fu_815_p1 = p_ZL7threshs_38_q0;

assign zext_ln1085_7_fu_834_p1 = p_ZL7threshs_39_q0;

assign zext_ln1085_8_fu_853_p1 = p_ZL7threshs_40_q0;

assign zext_ln1085_9_fu_872_p1 = p_ZL7threshs_41_q0;

assign zext_ln1085_fu_701_p1 = p_ZL7threshs_32_q0;

assign zext_ln215_fu_716_p1 = result_V_1_fu_710_p2;

assign zext_ln218_10_fu_925_p1 = xor_ln1085_10_fu_919_p2;

assign zext_ln218_11_fu_944_p1 = xor_ln1085_11_fu_938_p2;

assign zext_ln218_12_fu_963_p1 = xor_ln1085_12_fu_957_p2;

assign zext_ln218_13_fu_982_p1 = xor_ln1085_13_fu_976_p2;

assign zext_ln218_14_fu_1001_p1 = xor_ln1085_14_fu_995_p2;

assign zext_ln218_15_fu_1020_p1 = xor_ln1085_15_fu_1014_p2;

assign zext_ln218_16_fu_1039_p1 = xor_ln1085_16_fu_1033_p2;

assign zext_ln218_17_fu_1058_p1 = xor_ln1085_17_fu_1052_p2;

assign zext_ln218_18_fu_1077_p1 = xor_ln1085_18_fu_1071_p2;

assign zext_ln218_19_fu_1096_p1 = xor_ln1085_19_fu_1090_p2;

assign zext_ln218_1_fu_754_p1 = xor_ln1085_1_fu_748_p2;

assign zext_ln218_20_fu_1115_p1 = xor_ln1085_20_fu_1109_p2;

assign zext_ln218_21_fu_1134_p1 = xor_ln1085_21_fu_1128_p2;

assign zext_ln218_22_fu_1153_p1 = xor_ln1085_22_fu_1147_p2;

assign zext_ln218_23_fu_1172_p1 = xor_ln1085_23_fu_1166_p2;

assign zext_ln218_24_fu_1195_p1 = xor_ln1085_24_fu_1189_p2;

assign zext_ln218_25_fu_1218_p1 = xor_ln1085_25_fu_1212_p2;

assign zext_ln218_26_fu_1241_p1 = xor_ln1085_26_fu_1235_p2;

assign zext_ln218_27_fu_1264_p1 = xor_ln1085_27_fu_1258_p2;

assign zext_ln218_28_fu_1287_p1 = xor_ln1085_28_fu_1281_p2;

assign zext_ln218_2_fu_773_p1 = xor_ln1085_2_fu_767_p2;

assign zext_ln218_3_fu_792_p1 = xor_ln1085_3_fu_786_p2;

assign zext_ln218_4_fu_811_p1 = xor_ln1085_4_fu_805_p2;

assign zext_ln218_5_fu_830_p1 = xor_ln1085_5_fu_824_p2;

assign zext_ln218_6_fu_849_p1 = xor_ln1085_6_fu_843_p2;

assign zext_ln218_7_fu_868_p1 = xor_ln1085_7_fu_862_p2;

assign zext_ln218_8_fu_887_p1 = xor_ln1085_8_fu_881_p2;

assign zext_ln218_9_fu_906_p1 = xor_ln1085_9_fu_900_p2;

assign zext_ln218_fu_735_p1 = xor_ln1085_fu_729_p2;

assign zext_ln886_10_fu_1522_p1 = add_ln886_11_reg_1815;

assign zext_ln886_11_fu_1561_p1 = add_ln886_13_reg_1840;

assign zext_ln886_12_fu_1396_p1 = add_ln886_14_fu_1390_p2;

assign zext_ln886_13_fu_1406_p1 = add_ln886_15_fu_1400_p2;

assign zext_ln886_14_fu_1537_p1 = add_ln886_16_reg_1820;

assign zext_ln886_15_fu_1422_p1 = add_ln886_17_fu_1416_p2;

assign zext_ln886_16_fu_1432_p1 = add_ln886_18_fu_1426_p2;

assign zext_ln886_17_fu_1540_p1 = add_ln886_19_reg_1825;

assign zext_ln886_18_fu_1564_p1 = add_ln886_20_reg_1845;

assign zext_ln886_19_fu_1448_p1 = add_ln886_21_fu_1442_p2;

assign zext_ln886_1_fu_1494_p1 = add_ln886_1_reg_1795;

assign zext_ln886_20_fu_1458_p1 = add_ln886_22_fu_1452_p2;

assign zext_ln886_21_fu_1549_p1 = add_ln886_23_reg_1830;

assign zext_ln886_22_fu_1474_p1 = add_ln886_24_fu_1468_p2;

assign zext_ln886_23_fu_1484_p1 = add_ln886_25_fu_1478_p2;

assign zext_ln886_24_fu_1552_p1 = add_ln886_26_reg_1835;

assign zext_ln886_25_fu_1567_p1 = add_ln886_27_reg_1850;

assign zext_ln886_2_fu_1497_p1 = add_ln886_2_reg_1800;

assign zext_ln886_3_fu_1500_p1 = add_ln886_3_reg_1805;

assign zext_ln886_4_fu_1515_p1 = add_ln886_5_fu_1509_p2;

assign zext_ln886_5_fu_1344_p1 = add_ln886_6_fu_1338_p2;

assign zext_ln886_6_fu_1354_p1 = add_ln886_7_fu_1348_p2;

assign zext_ln886_7_fu_1519_p1 = add_ln886_8_reg_1810;

assign zext_ln886_8_fu_1370_p1 = add_ln886_9_fu_1364_p2;

assign zext_ln886_9_fu_1380_p1 = add_ln886_10_fu_1374_p2;

assign zext_ln886_fu_1310_p1 = xor_ln1085_29_fu_1304_p2;

endmodule //StreamingDataflowPartition_1_Thresholding_Batch_0_Thresholding_Batch
