// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter4_fsm_state5 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;
parameter    ap_ST_iter4_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg   [1:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state0;
reg   [1:0] ap_CS_iter4_fsm;
wire    ap_CS_iter4_fsm_state0;
wire   [0:0] icmp_ln295_fu_561_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_CS_iter2_fsm_state3;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_CS_iter3_fsm_state4;
reg   [0:0] icmp_ln295_reg_1569;
reg   [0:0] icmp_ln295_reg_1569_pp0_iter3_reg;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state5_io;
wire    ap_CS_iter4_fsm_state5;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] p_ZL7threshs_0_address0;
reg    p_ZL7threshs_0_ce0;
wire   [0:0] p_ZL7threshs_0_q0;
wire   [5:0] p_ZL7threshs_1_address0;
reg    p_ZL7threshs_1_ce0;
wire   [0:0] p_ZL7threshs_1_q0;
wire   [5:0] p_ZL7threshs_2_address0;
reg    p_ZL7threshs_2_ce0;
wire   [1:0] p_ZL7threshs_2_q0;
wire   [5:0] p_ZL7threshs_3_address0;
reg    p_ZL7threshs_3_ce0;
wire   [0:0] p_ZL7threshs_3_q0;
wire   [5:0] p_ZL7threshs_4_address0;
reg    p_ZL7threshs_4_ce0;
wire   [0:0] p_ZL7threshs_4_q0;
wire   [5:0] p_ZL7threshs_5_address0;
reg    p_ZL7threshs_5_ce0;
wire   [2:0] p_ZL7threshs_5_q0;
wire   [5:0] p_ZL7threshs_6_address0;
reg    p_ZL7threshs_6_ce0;
wire   [2:0] p_ZL7threshs_6_q0;
wire   [5:0] p_ZL7threshs_7_address0;
reg    p_ZL7threshs_7_ce0;
wire   [2:0] p_ZL7threshs_7_q0;
wire   [5:0] p_ZL7threshs_8_address0;
reg    p_ZL7threshs_8_ce0;
wire   [2:0] p_ZL7threshs_8_q0;
wire   [5:0] p_ZL7threshs_9_address0;
reg    p_ZL7threshs_9_ce0;
wire   [1:0] p_ZL7threshs_9_q0;
wire   [5:0] p_ZL7threshs_10_address0;
reg    p_ZL7threshs_10_ce0;
wire   [0:0] p_ZL7threshs_10_q0;
wire   [5:0] p_ZL7threshs_11_address0;
reg    p_ZL7threshs_11_ce0;
wire   [0:0] p_ZL7threshs_11_q0;
wire   [5:0] p_ZL7threshs_12_address0;
reg    p_ZL7threshs_12_ce0;
wire   [3:0] p_ZL7threshs_12_q0;
wire   [5:0] p_ZL7threshs_13_address0;
reg    p_ZL7threshs_13_ce0;
wire   [3:0] p_ZL7threshs_13_q0;
wire   [5:0] p_ZL7threshs_14_address0;
reg    p_ZL7threshs_14_ce0;
wire   [3:0] p_ZL7threshs_14_q0;
wire   [5:0] p_ZL7threshs_15_address0;
reg    p_ZL7threshs_15_ce0;
wire   [3:0] p_ZL7threshs_15_q0;
wire   [5:0] p_ZL7threshs_16_address0;
reg    p_ZL7threshs_16_ce0;
wire   [3:0] p_ZL7threshs_16_q0;
wire   [5:0] p_ZL7threshs_17_address0;
reg    p_ZL7threshs_17_ce0;
wire   [3:0] p_ZL7threshs_17_q0;
wire   [5:0] p_ZL7threshs_18_address0;
reg    p_ZL7threshs_18_ce0;
wire   [3:0] p_ZL7threshs_18_q0;
wire   [5:0] p_ZL7threshs_19_address0;
reg    p_ZL7threshs_19_ce0;
wire   [2:0] p_ZL7threshs_19_q0;
wire   [5:0] p_ZL7threshs_20_address0;
reg    p_ZL7threshs_20_ce0;
wire   [2:0] p_ZL7threshs_20_q0;
wire   [5:0] p_ZL7threshs_21_address0;
reg    p_ZL7threshs_21_ce0;
wire   [2:0] p_ZL7threshs_21_q0;
wire   [5:0] p_ZL7threshs_22_address0;
reg    p_ZL7threshs_22_ce0;
wire   [1:0] p_ZL7threshs_22_q0;
wire   [5:0] p_ZL7threshs_23_address0;
reg    p_ZL7threshs_23_ce0;
wire   [1:0] p_ZL7threshs_23_q0;
wire   [5:0] p_ZL7threshs_24_address0;
reg    p_ZL7threshs_24_ce0;
wire   [0:0] p_ZL7threshs_24_q0;
wire   [5:0] p_ZL7threshs_25_address0;
reg    p_ZL7threshs_25_ce0;
wire   [0:0] p_ZL7threshs_25_q0;
wire   [5:0] p_ZL7threshs_26_address0;
reg    p_ZL7threshs_26_ce0;
wire   [4:0] p_ZL7threshs_26_q0;
wire   [5:0] p_ZL7threshs_27_address0;
reg    p_ZL7threshs_27_ce0;
wire   [4:0] p_ZL7threshs_27_q0;
wire   [5:0] p_ZL7threshs_28_address0;
reg    p_ZL7threshs_28_ce0;
wire   [4:0] p_ZL7threshs_28_q0;
wire   [5:0] p_ZL7threshs_29_address0;
reg    p_ZL7threshs_29_ce0;
wire   [4:0] p_ZL7threshs_29_q0;
wire   [5:0] p_ZL7threshs_30_address0;
reg    p_ZL7threshs_30_ce0;
wire   [4:0] p_ZL7threshs_30_q0;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
wire   [0:0] icmp_ln295_reg_1569_pp0_iter0_reg;
reg   [0:0] icmp_ln295_reg_1569_pp0_iter1_reg;
reg   [0:0] icmp_ln295_reg_1569_pp0_iter2_reg;
wire   [5:0] tmp_fu_573_p1;
reg   [5:0] tmp_reg_1573;
reg   [5:0] tmp_reg_1573_pp0_iter1_reg;
wire   [1:0] add_ln886_1_fu_1288_p2;
reg   [1:0] add_ln886_1_reg_1763;
wire   [1:0] add_ln886_2_fu_1294_p2;
reg   [1:0] add_ln886_2_reg_1768;
wire   [1:0] add_ln886_3_fu_1300_p2;
reg   [1:0] add_ln886_3_reg_1773;
wire   [2:0] add_ln886_8_fu_1326_p2;
reg   [2:0] add_ln886_8_reg_1778;
wire   [2:0] add_ln886_11_fu_1352_p2;
reg   [2:0] add_ln886_11_reg_1783;
wire   [2:0] add_ln886_16_fu_1378_p2;
reg   [2:0] add_ln886_16_reg_1788;
wire   [2:0] add_ln886_19_fu_1404_p2;
reg   [2:0] add_ln886_19_reg_1793;
wire   [2:0] add_ln886_23_fu_1430_p2;
reg   [2:0] add_ln886_23_reg_1798;
wire   [2:0] add_ln886_26_fu_1456_p2;
reg   [2:0] add_ln886_26_reg_1803;
wire   [3:0] add_ln886_13_fu_1499_p2;
reg   [3:0] add_ln886_13_reg_1808;
wire   [3:0] add_ln886_20_fu_1511_p2;
reg   [3:0] add_ln886_20_reg_1813;
wire   [3:0] add_ln886_27_fu_1523_p2;
reg   [3:0] add_ln886_27_reg_1818;
wire   [63:0] idxprom2_i_fu_585_p1;
reg   [31:0] nf_1_fu_124;
wire   [31:0] nf_2_fu_632_p3;
wire    ap_loop_init;
reg   [22:0] i_fu_128;
wire   [22:0] i_2_fu_567_p2;
reg   [22:0] ap_sig_allocacmp_i_1;
wire   [31:0] nf_fu_620_p2;
wire   [0:0] icmp_ln307_fu_626_p2;
wire   [5:0] zext_ln1085_fu_645_p1;
wire   [0:0] icmp_ln1085_fu_649_p2;
wire   [0:0] result_V_1_fu_654_p2;
wire   [5:0] zext_ln1085_1_fu_664_p1;
wire   [0:0] icmp_ln1085_1_fu_668_p2;
wire   [0:0] xor_ln1085_fu_673_p2;
wire   [5:0] zext_ln1085_2_fu_683_p1;
wire   [0:0] icmp_ln1085_2_fu_687_p2;
wire   [0:0] xor_ln1085_1_fu_692_p2;
wire   [5:0] select_ln1085_fu_702_p3;
wire   [0:0] icmp_ln1085_3_fu_710_p2;
wire   [0:0] xor_ln1085_2_fu_715_p2;
wire   [5:0] select_ln1085_1_fu_725_p3;
wire   [0:0] icmp_ln1085_4_fu_733_p2;
wire   [0:0] xor_ln1085_3_fu_738_p2;
wire   [5:0] zext_ln1085_3_fu_748_p1;
wire   [0:0] icmp_ln1085_5_fu_752_p2;
wire   [0:0] xor_ln1085_4_fu_757_p2;
wire   [5:0] zext_ln1085_4_fu_767_p1;
wire   [0:0] icmp_ln1085_6_fu_771_p2;
wire   [0:0] xor_ln1085_5_fu_776_p2;
wire   [5:0] zext_ln1085_5_fu_786_p1;
wire   [0:0] icmp_ln1085_7_fu_790_p2;
wire   [0:0] xor_ln1085_6_fu_795_p2;
wire   [5:0] zext_ln1085_6_fu_805_p1;
wire   [0:0] icmp_ln1085_8_fu_809_p2;
wire   [0:0] xor_ln1085_7_fu_814_p2;
wire  signed [2:0] sext_ln1085_fu_824_p1;
wire   [5:0] zext_ln1085_7_fu_828_p1;
wire   [0:0] icmp_ln1085_9_fu_832_p2;
wire   [0:0] xor_ln1085_8_fu_837_p2;
wire   [5:0] select_ln1085_2_fu_847_p3;
wire   [0:0] icmp_ln1085_10_fu_855_p2;
wire   [0:0] xor_ln1085_9_fu_860_p2;
wire   [5:0] select_ln1085_3_fu_870_p3;
wire   [0:0] icmp_ln1085_11_fu_878_p2;
wire   [0:0] xor_ln1085_10_fu_883_p2;
wire   [5:0] zext_ln1085_8_fu_893_p1;
wire   [0:0] icmp_ln1085_12_fu_897_p2;
wire   [0:0] xor_ln1085_11_fu_902_p2;
wire   [5:0] zext_ln1085_9_fu_912_p1;
wire   [0:0] icmp_ln1085_13_fu_916_p2;
wire   [0:0] xor_ln1085_12_fu_921_p2;
wire   [5:0] zext_ln1085_10_fu_931_p1;
wire   [0:0] icmp_ln1085_14_fu_935_p2;
wire   [0:0] xor_ln1085_13_fu_940_p2;
wire   [5:0] zext_ln1085_11_fu_950_p1;
wire   [0:0] icmp_ln1085_15_fu_954_p2;
wire   [0:0] xor_ln1085_14_fu_959_p2;
wire   [5:0] zext_ln1085_12_fu_969_p1;
wire   [0:0] icmp_ln1085_16_fu_973_p2;
wire   [0:0] xor_ln1085_15_fu_978_p2;
wire   [5:0] zext_ln1085_13_fu_988_p1;
wire   [0:0] icmp_ln1085_17_fu_992_p2;
wire   [0:0] xor_ln1085_16_fu_997_p2;
wire   [5:0] zext_ln1085_14_fu_1007_p1;
wire   [0:0] icmp_ln1085_18_fu_1011_p2;
wire   [0:0] xor_ln1085_17_fu_1016_p2;
wire  signed [3:0] sext_ln1085_1_fu_1026_p1;
wire   [5:0] zext_ln1085_15_fu_1030_p1;
wire   [0:0] icmp_ln1085_19_fu_1034_p2;
wire   [0:0] xor_ln1085_18_fu_1039_p2;
wire  signed [3:0] sext_ln1085_2_fu_1049_p1;
wire   [5:0] zext_ln1085_16_fu_1053_p1;
wire   [0:0] icmp_ln1085_20_fu_1057_p2;
wire   [0:0] xor_ln1085_19_fu_1062_p2;
wire  signed [3:0] sext_ln1085_3_fu_1072_p1;
wire   [5:0] zext_ln1085_17_fu_1076_p1;
wire   [0:0] icmp_ln1085_21_fu_1080_p2;
wire   [0:0] xor_ln1085_20_fu_1085_p2;
wire  signed [3:0] sext_ln1085_4_fu_1095_p1;
wire   [5:0] zext_ln1085_18_fu_1099_p1;
wire   [0:0] icmp_ln1085_22_fu_1103_p2;
wire   [0:0] xor_ln1085_21_fu_1108_p2;
wire  signed [3:0] sext_ln1085_5_fu_1118_p1;
wire   [5:0] zext_ln1085_19_fu_1122_p1;
wire   [0:0] icmp_ln1085_23_fu_1126_p2;
wire   [0:0] xor_ln1085_22_fu_1131_p2;
wire   [5:0] select_ln1085_4_fu_1141_p3;
wire   [0:0] icmp_ln1085_24_fu_1149_p2;
wire   [0:0] xor_ln1085_23_fu_1154_p2;
wire   [5:0] select_ln1085_5_fu_1164_p3;
wire   [0:0] icmp_ln1085_25_fu_1172_p2;
wire   [0:0] xor_ln1085_24_fu_1177_p2;
wire   [5:0] zext_ln1085_20_fu_1187_p1;
wire   [0:0] icmp_ln1085_26_fu_1191_p2;
wire   [0:0] xor_ln1085_25_fu_1196_p2;
wire   [5:0] zext_ln1085_21_fu_1206_p1;
wire   [0:0] icmp_ln1085_27_fu_1210_p2;
wire   [0:0] xor_ln1085_26_fu_1215_p2;
wire   [5:0] zext_ln1085_22_fu_1225_p1;
wire   [0:0] icmp_ln1085_28_fu_1229_p2;
wire   [0:0] xor_ln1085_27_fu_1234_p2;
wire   [5:0] zext_ln1085_23_fu_1244_p1;
wire   [0:0] icmp_ln1085_29_fu_1248_p2;
wire   [0:0] xor_ln1085_28_fu_1253_p2;
wire   [5:0] zext_ln1085_24_fu_1263_p1;
wire   [0:0] icmp_ln1085_30_fu_1267_p2;
wire   [0:0] xor_ln1085_29_fu_1272_p2;
wire   [1:0] zext_ln215_fu_660_p1;
wire   [1:0] zext_ln218_1_fu_698_p1;
wire   [1:0] add_ln886_fu_1282_p2;
wire   [1:0] zext_ln218_fu_679_p1;
wire   [1:0] zext_ln218_2_fu_721_p1;
wire   [1:0] zext_ln218_3_fu_744_p1;
wire   [1:0] zext_ln218_4_fu_763_p1;
wire   [1:0] zext_ln218_5_fu_782_p1;
wire   [1:0] zext_ln218_6_fu_801_p1;
wire   [1:0] zext_ln218_7_fu_820_p1;
wire   [1:0] add_ln886_6_fu_1306_p2;
wire   [1:0] zext_ln218_8_fu_843_p1;
wire   [1:0] zext_ln218_9_fu_866_p1;
wire   [1:0] add_ln886_7_fu_1316_p2;
wire   [2:0] zext_ln886_6_fu_1322_p1;
wire   [2:0] zext_ln886_5_fu_1312_p1;
wire   [1:0] zext_ln218_10_fu_889_p1;
wire   [1:0] zext_ln218_11_fu_908_p1;
wire   [1:0] add_ln886_9_fu_1332_p2;
wire   [1:0] zext_ln218_12_fu_927_p1;
wire   [1:0] zext_ln218_13_fu_946_p1;
wire   [1:0] add_ln886_10_fu_1342_p2;
wire   [2:0] zext_ln886_9_fu_1348_p1;
wire   [2:0] zext_ln886_8_fu_1338_p1;
wire   [1:0] zext_ln218_14_fu_965_p1;
wire   [1:0] zext_ln218_15_fu_984_p1;
wire   [1:0] add_ln886_14_fu_1358_p2;
wire   [1:0] zext_ln218_16_fu_1003_p1;
wire   [1:0] zext_ln218_17_fu_1022_p1;
wire   [1:0] add_ln886_15_fu_1368_p2;
wire   [2:0] zext_ln886_13_fu_1374_p1;
wire   [2:0] zext_ln886_12_fu_1364_p1;
wire   [1:0] zext_ln218_18_fu_1045_p1;
wire   [1:0] zext_ln218_19_fu_1068_p1;
wire   [1:0] add_ln886_17_fu_1384_p2;
wire   [1:0] zext_ln218_20_fu_1091_p1;
wire   [1:0] zext_ln218_21_fu_1114_p1;
wire   [1:0] add_ln886_18_fu_1394_p2;
wire   [2:0] zext_ln886_16_fu_1400_p1;
wire   [2:0] zext_ln886_15_fu_1390_p1;
wire   [1:0] zext_ln218_22_fu_1137_p1;
wire   [1:0] zext_ln218_23_fu_1160_p1;
wire   [1:0] add_ln886_21_fu_1410_p2;
wire   [1:0] zext_ln218_24_fu_1183_p1;
wire   [1:0] zext_ln218_25_fu_1202_p1;
wire   [1:0] add_ln886_22_fu_1420_p2;
wire   [2:0] zext_ln886_20_fu_1426_p1;
wire   [2:0] zext_ln886_19_fu_1416_p1;
wire   [1:0] zext_ln218_26_fu_1221_p1;
wire   [1:0] zext_ln218_27_fu_1240_p1;
wire   [1:0] add_ln886_24_fu_1436_p2;
wire   [1:0] zext_ln218_28_fu_1259_p1;
wire   [1:0] zext_ln886_fu_1278_p1;
wire   [1:0] add_ln886_25_fu_1446_p2;
wire   [2:0] zext_ln886_23_fu_1452_p1;
wire   [2:0] zext_ln886_22_fu_1442_p1;
wire   [2:0] zext_ln886_3_fu_1468_p1;
wire   [2:0] zext_ln886_2_fu_1465_p1;
wire   [2:0] add_ln886_4_fu_1471_p2;
wire   [2:0] zext_ln886_1_fu_1462_p1;
wire   [2:0] add_ln886_5_fu_1477_p2;
wire   [3:0] zext_ln886_10_fu_1490_p1;
wire   [3:0] zext_ln886_7_fu_1487_p1;
wire   [3:0] add_ln886_12_fu_1493_p2;
wire   [3:0] zext_ln886_4_fu_1483_p1;
wire   [3:0] zext_ln886_17_fu_1508_p1;
wire   [3:0] zext_ln886_14_fu_1505_p1;
wire   [3:0] zext_ln886_24_fu_1520_p1;
wire   [3:0] zext_ln886_21_fu_1517_p1;
wire   [4:0] zext_ln886_25_fu_1535_p1;
wire   [4:0] zext_ln886_18_fu_1532_p1;
wire   [4:0] add_ln886_28_fu_1538_p2;
wire   [4:0] zext_ln886_11_fu_1529_p1;
wire   [4:0] result_V_fu_1544_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg   [1:0] ap_NS_iter4_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
wire    ap_ST_iter2_fsm_state3_blk;
wire    ap_ST_iter3_fsm_state4_blk;
reg    ap_ST_iter4_fsm_state5_blk;
wire    ap_start_int;
reg    ap_condition_1303;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
#0 ap_CS_iter4_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_0_address0),
    .ce0(p_ZL7threshs_0_ce0),
    .q0(p_ZL7threshs_0_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_1_address0),
    .ce0(p_ZL7threshs_1_ce0),
    .q0(p_ZL7threshs_1_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_2_address0),
    .ce0(p_ZL7threshs_2_ce0),
    .q0(p_ZL7threshs_2_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_3_address0),
    .ce0(p_ZL7threshs_3_ce0),
    .q0(p_ZL7threshs_3_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_4_address0),
    .ce0(p_ZL7threshs_4_ce0),
    .q0(p_ZL7threshs_4_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_5_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_5_address0),
    .ce0(p_ZL7threshs_5_ce0),
    .q0(p_ZL7threshs_5_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_5_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_6_address0),
    .ce0(p_ZL7threshs_6_ce0),
    .q0(p_ZL7threshs_6_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_7_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_7_address0),
    .ce0(p_ZL7threshs_7_ce0),
    .q0(p_ZL7threshs_7_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_7_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_8_address0),
    .ce0(p_ZL7threshs_8_ce0),
    .q0(p_ZL7threshs_8_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_9_address0),
    .ce0(p_ZL7threshs_9_ce0),
    .q0(p_ZL7threshs_9_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_10_address0),
    .ce0(p_ZL7threshs_10_ce0),
    .q0(p_ZL7threshs_10_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_11_address0),
    .ce0(p_ZL7threshs_11_ce0),
    .q0(p_ZL7threshs_11_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_12_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_12_address0),
    .ce0(p_ZL7threshs_12_ce0),
    .q0(p_ZL7threshs_12_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_12_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_13_address0),
    .ce0(p_ZL7threshs_13_ce0),
    .q0(p_ZL7threshs_13_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_14_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_14_address0),
    .ce0(p_ZL7threshs_14_ce0),
    .q0(p_ZL7threshs_14_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_14_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_15_address0),
    .ce0(p_ZL7threshs_15_ce0),
    .q0(p_ZL7threshs_15_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_16_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_16_address0),
    .ce0(p_ZL7threshs_16_ce0),
    .q0(p_ZL7threshs_16_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_17_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_17_address0),
    .ce0(p_ZL7threshs_17_ce0),
    .q0(p_ZL7threshs_17_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_17_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_18_address0),
    .ce0(p_ZL7threshs_18_ce0),
    .q0(p_ZL7threshs_18_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_5_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_19_address0),
    .ce0(p_ZL7threshs_19_ce0),
    .q0(p_ZL7threshs_19_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_5_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_20_address0),
    .ce0(p_ZL7threshs_20_ce0),
    .q0(p_ZL7threshs_20_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_7_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_21_address0),
    .ce0(p_ZL7threshs_21_ce0),
    .q0(p_ZL7threshs_21_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_22_address0),
    .ce0(p_ZL7threshs_22_ce0),
    .q0(p_ZL7threshs_22_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_23_address0),
    .ce0(p_ZL7threshs_23_ce0),
    .q0(p_ZL7threshs_23_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_24_address0),
    .ce0(p_ZL7threshs_24_ce0),
    .q0(p_ZL7threshs_24_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_25_address0),
    .ce0(p_ZL7threshs_25_ce0),
    .q0(p_ZL7threshs_25_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_26_ROM_2P_LUTRAM_1R #(
    .DataWidth( 5 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_26_address0),
    .ce0(p_ZL7threshs_26_ce0),
    .q0(p_ZL7threshs_26_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_26_ROM_2P_LUTRAM_1R #(
    .DataWidth( 5 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_27_address0),
    .ce0(p_ZL7threshs_27_ce0),
    .q0(p_ZL7threshs_27_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_28_ROM_2P_LUTRAM_1R #(
    .DataWidth( 5 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_28_address0),
    .ce0(p_ZL7threshs_28_ce0),
    .q0(p_ZL7threshs_28_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_29_ROM_2P_LUTRAM_1R #(
    .DataWidth( 5 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_29_address0),
    .ce0(p_ZL7threshs_29_ce0),
    .q0(p_ZL7threshs_29_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch_p_ZL7threshs_29_ROM_2P_LUTRAM_1R #(
    .DataWidth( 5 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_ZL7threshs_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_30_address0),
    .ce0(p_ZL7threshs_30_ce0),
    .q0(p_ZL7threshs_30_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter4_fsm <= ap_ST_iter4_fsm_state0;
    end else begin
        ap_CS_iter4_fsm <= ap_NS_iter4_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter4_fsm_state5) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter4_fsm_state5) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1303)) begin
        if ((icmp_ln295_fu_561_p2 == 1'd0)) begin
            i_fu_128 <= i_2_fu_567_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_128 <= 23'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        nf_1_fu_124 <= 32'd0;
    end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln295_reg_1569_pp0_iter0_reg == 1'd0))) begin
        nf_1_fu_124 <= nf_2_fu_632_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (icmp_ln295_reg_1569_pp0_iter1_reg == 1'd0))) begin
        add_ln886_11_reg_1783 <= add_ln886_11_fu_1352_p2;
        add_ln886_16_reg_1788 <= add_ln886_16_fu_1378_p2;
        add_ln886_19_reg_1793 <= add_ln886_19_fu_1404_p2;
        add_ln886_1_reg_1763 <= add_ln886_1_fu_1288_p2;
        add_ln886_23_reg_1798 <= add_ln886_23_fu_1430_p2;
        add_ln886_26_reg_1803 <= add_ln886_26_fu_1456_p2;
        add_ln886_2_reg_1768 <= add_ln886_2_fu_1294_p2;
        add_ln886_3_reg_1773 <= add_ln886_3_fu_1300_p2;
        add_ln886_8_reg_1778 <= add_ln886_8_fu_1326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4) & (icmp_ln295_reg_1569_pp0_iter2_reg == 1'd0))) begin
        add_ln886_13_reg_1808 <= add_ln886_13_fu_1499_p2;
        add_ln886_20_reg_1813 <= add_ln886_20_fu_1511_p2;
        add_ln886_27_reg_1818 <= add_ln886_27_fu_1523_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln295_reg_1569 <= icmp_ln295_fu_561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln295_reg_1569_pp0_iter1_reg <= icmp_ln295_reg_1569;
        tmp_reg_1573_pp0_iter1_reg <= tmp_reg_1573;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln295_reg_1569_pp0_iter2_reg <= icmp_ln295_reg_1569_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        icmp_ln295_reg_1569_pp0_iter3_reg <= icmp_ln295_reg_1569_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_561_p2 == 1'd0))) begin
        tmp_reg_1573 <= tmp_fu_573_p1;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

assign ap_ST_iter2_fsm_state3_blk = 1'b0;

assign ap_ST_iter3_fsm_state4_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter4_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_iter4_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_561_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter4_fsm_state5) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter4_fsm_state0) & (1'b1 == ap_CS_iter3_fsm_state0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 23'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_128;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_561_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (icmp_ln295_fu_561_p2 == 1'd0))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_iter4_fsm_state5))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_0_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_10_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_11_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_12_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_13_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_14_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_15_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_16_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_17_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_18_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_19_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_1_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_20_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_21_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_22_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_23_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_24_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_25_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_26_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_27_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_28_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_29_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_2_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_30_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_3_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_4_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_5_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_6_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_7_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_8_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_9_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & ~((ap_start_int == 1'b0) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b0 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter4_fsm)
        ap_ST_iter4_fsm_state5 : begin
            if ((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b0 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end else if (((~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter3_fsm_state4)) | (~((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln295_reg_1569_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_iter4_fsm_state5)))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end
        end
        ap_ST_iter4_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state5;
            end else begin
                ap_NS_iter4_fsm = ap_ST_iter4_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter4_fsm = 'bx;
        end
    endcase
end

assign add_ln886_10_fu_1342_p2 = (zext_ln218_12_fu_927_p1 + zext_ln218_13_fu_946_p1);

assign add_ln886_11_fu_1352_p2 = (zext_ln886_9_fu_1348_p1 + zext_ln886_8_fu_1338_p1);

assign add_ln886_12_fu_1493_p2 = (zext_ln886_10_fu_1490_p1 + zext_ln886_7_fu_1487_p1);

assign add_ln886_13_fu_1499_p2 = (add_ln886_12_fu_1493_p2 + zext_ln886_4_fu_1483_p1);

assign add_ln886_14_fu_1358_p2 = (zext_ln218_14_fu_965_p1 + zext_ln218_15_fu_984_p1);

assign add_ln886_15_fu_1368_p2 = (zext_ln218_16_fu_1003_p1 + zext_ln218_17_fu_1022_p1);

assign add_ln886_16_fu_1378_p2 = (zext_ln886_13_fu_1374_p1 + zext_ln886_12_fu_1364_p1);

assign add_ln886_17_fu_1384_p2 = (zext_ln218_18_fu_1045_p1 + zext_ln218_19_fu_1068_p1);

assign add_ln886_18_fu_1394_p2 = (zext_ln218_20_fu_1091_p1 + zext_ln218_21_fu_1114_p1);

assign add_ln886_19_fu_1404_p2 = (zext_ln886_16_fu_1400_p1 + zext_ln886_15_fu_1390_p1);

assign add_ln886_1_fu_1288_p2 = (add_ln886_fu_1282_p2 + zext_ln218_fu_679_p1);

assign add_ln886_20_fu_1511_p2 = (zext_ln886_17_fu_1508_p1 + zext_ln886_14_fu_1505_p1);

assign add_ln886_21_fu_1410_p2 = (zext_ln218_22_fu_1137_p1 + zext_ln218_23_fu_1160_p1);

assign add_ln886_22_fu_1420_p2 = (zext_ln218_24_fu_1183_p1 + zext_ln218_25_fu_1202_p1);

assign add_ln886_23_fu_1430_p2 = (zext_ln886_20_fu_1426_p1 + zext_ln886_19_fu_1416_p1);

assign add_ln886_24_fu_1436_p2 = (zext_ln218_26_fu_1221_p1 + zext_ln218_27_fu_1240_p1);

assign add_ln886_25_fu_1446_p2 = (zext_ln218_28_fu_1259_p1 + zext_ln886_fu_1278_p1);

assign add_ln886_26_fu_1456_p2 = (zext_ln886_23_fu_1452_p1 + zext_ln886_22_fu_1442_p1);

assign add_ln886_27_fu_1523_p2 = (zext_ln886_24_fu_1520_p1 + zext_ln886_21_fu_1517_p1);

assign add_ln886_28_fu_1538_p2 = (zext_ln886_25_fu_1535_p1 + zext_ln886_18_fu_1532_p1);

assign add_ln886_2_fu_1294_p2 = (zext_ln218_2_fu_721_p1 + zext_ln218_3_fu_744_p1);

assign add_ln886_3_fu_1300_p2 = (zext_ln218_4_fu_763_p1 + zext_ln218_5_fu_782_p1);

assign add_ln886_4_fu_1471_p2 = (zext_ln886_3_fu_1468_p1 + zext_ln886_2_fu_1465_p1);

assign add_ln886_5_fu_1477_p2 = (add_ln886_4_fu_1471_p2 + zext_ln886_1_fu_1462_p1);

assign add_ln886_6_fu_1306_p2 = (zext_ln218_6_fu_801_p1 + zext_ln218_7_fu_820_p1);

assign add_ln886_7_fu_1316_p2 = (zext_ln218_8_fu_843_p1 + zext_ln218_9_fu_866_p1);

assign add_ln886_8_fu_1326_p2 = (zext_ln886_6_fu_1322_p1 + zext_ln886_5_fu_1312_p1);

assign add_ln886_9_fu_1332_p2 = (zext_ln218_10_fu_889_p1 + zext_ln218_11_fu_908_p1);

assign add_ln886_fu_1282_p2 = (zext_ln215_fu_660_p1 + zext_ln218_1_fu_698_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state0 = ap_CS_iter3_fsm[32'd0];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

assign ap_CS_iter4_fsm_state0 = ap_CS_iter4_fsm[32'd0];

assign ap_CS_iter4_fsm_state5 = ap_CS_iter4_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_1303 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter4_fsm_state5) & ((1'b1 == ap_block_state5_io) | ((icmp_ln295_reg_1569_pp0_iter3_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_561_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign i_2_fu_567_p2 = (ap_sig_allocacmp_i_1 + 23'd1);

assign icmp_ln1085_10_fu_855_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(select_ln1085_2_fu_847_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_11_fu_878_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(select_ln1085_3_fu_870_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_12_fu_897_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_8_fu_893_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_13_fu_916_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_9_fu_912_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_14_fu_935_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_10_fu_931_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_15_fu_954_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_11_fu_950_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_16_fu_973_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_12_fu_969_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_17_fu_992_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_13_fu_988_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_18_fu_1011_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_14_fu_1007_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_19_fu_1034_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_15_fu_1030_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_1_fu_668_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_1_fu_664_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_20_fu_1057_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_16_fu_1053_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_21_fu_1080_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_17_fu_1076_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_22_fu_1103_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_18_fu_1099_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_23_fu_1126_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_19_fu_1122_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_24_fu_1149_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(select_ln1085_4_fu_1141_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_25_fu_1172_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(select_ln1085_5_fu_1164_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_26_fu_1191_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_20_fu_1187_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_27_fu_1210_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_21_fu_1206_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_28_fu_1229_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_22_fu_1225_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_29_fu_1248_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_23_fu_1244_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_2_fu_687_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_2_fu_683_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_30_fu_1267_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_24_fu_1263_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_3_fu_710_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(select_ln1085_fu_702_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_4_fu_733_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(select_ln1085_1_fu_725_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_5_fu_752_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_3_fu_748_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_6_fu_771_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_4_fu_767_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_7_fu_790_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_5_fu_786_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_8_fu_809_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_6_fu_805_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_9_fu_832_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_7_fu_828_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_fu_649_p2 = (($signed(tmp_reg_1573_pp0_iter1_reg) < $signed(zext_ln1085_fu_645_p1)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_561_p2 = ((ap_sig_allocacmp_i_1 == 23'd4194304) ? 1'b1 : 1'b0);

assign icmp_ln295_reg_1569_pp0_iter0_reg = icmp_ln295_reg_1569;

assign icmp_ln307_fu_626_p2 = ((nf_fu_620_p2 == 32'd64) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_585_p1 = nf_1_fu_124;

assign nf_2_fu_632_p3 = ((icmp_ln307_fu_626_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_620_p2);

assign nf_fu_620_p2 = (nf_1_fu_124 + 32'd1);

assign out_V_TDATA = result_V_fu_1544_p2;

assign p_ZL7threshs_0_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_10_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_11_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_12_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_13_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_14_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_15_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_16_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_17_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_18_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_19_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_1_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_20_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_21_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_22_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_23_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_24_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_25_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_26_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_27_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_28_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_29_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_2_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_30_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_3_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_4_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_5_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_6_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_7_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_8_address0 = idxprom2_i_fu_585_p1;

assign p_ZL7threshs_9_address0 = idxprom2_i_fu_585_p1;

assign result_V_1_fu_654_p2 = (icmp_ln1085_fu_649_p2 ^ 1'd1);

assign result_V_fu_1544_p2 = (add_ln886_28_fu_1538_p2 + zext_ln886_11_fu_1529_p1);

assign select_ln1085_1_fu_725_p3 = ((p_ZL7threshs_4_q0[0:0] == 1'b1) ? 6'd3 : 6'd0);

assign select_ln1085_2_fu_847_p3 = ((p_ZL7threshs_10_q0[0:0] == 1'b1) ? 6'd7 : 6'd0);

assign select_ln1085_3_fu_870_p3 = ((p_ZL7threshs_11_q0[0:0] == 1'b1) ? 6'd7 : 6'd0);

assign select_ln1085_4_fu_1141_p3 = ((p_ZL7threshs_24_q0[0:0] == 1'b1) ? 6'd15 : 6'd0);

assign select_ln1085_5_fu_1164_p3 = ((p_ZL7threshs_25_q0[0:0] == 1'b1) ? 6'd15 : 6'd0);

assign select_ln1085_fu_702_p3 = ((p_ZL7threshs_3_q0[0:0] == 1'b1) ? 6'd3 : 6'd0);

assign sext_ln1085_1_fu_1026_p1 = $signed(p_ZL7threshs_19_q0);

assign sext_ln1085_2_fu_1049_p1 = $signed(p_ZL7threshs_20_q0);

assign sext_ln1085_3_fu_1072_p1 = $signed(p_ZL7threshs_21_q0);

assign sext_ln1085_4_fu_1095_p1 = $signed(p_ZL7threshs_22_q0);

assign sext_ln1085_5_fu_1118_p1 = $signed(p_ZL7threshs_23_q0);

assign sext_ln1085_fu_824_p1 = $signed(p_ZL7threshs_9_q0);

assign tmp_fu_573_p1 = in0_V_TDATA[5:0];

assign xor_ln1085_10_fu_883_p2 = (icmp_ln1085_11_fu_878_p2 ^ 1'd1);

assign xor_ln1085_11_fu_902_p2 = (icmp_ln1085_12_fu_897_p2 ^ 1'd1);

assign xor_ln1085_12_fu_921_p2 = (icmp_ln1085_13_fu_916_p2 ^ 1'd1);

assign xor_ln1085_13_fu_940_p2 = (icmp_ln1085_14_fu_935_p2 ^ 1'd1);

assign xor_ln1085_14_fu_959_p2 = (icmp_ln1085_15_fu_954_p2 ^ 1'd1);

assign xor_ln1085_15_fu_978_p2 = (icmp_ln1085_16_fu_973_p2 ^ 1'd1);

assign xor_ln1085_16_fu_997_p2 = (icmp_ln1085_17_fu_992_p2 ^ 1'd1);

assign xor_ln1085_17_fu_1016_p2 = (icmp_ln1085_18_fu_1011_p2 ^ 1'd1);

assign xor_ln1085_18_fu_1039_p2 = (icmp_ln1085_19_fu_1034_p2 ^ 1'd1);

assign xor_ln1085_19_fu_1062_p2 = (icmp_ln1085_20_fu_1057_p2 ^ 1'd1);

assign xor_ln1085_1_fu_692_p2 = (icmp_ln1085_2_fu_687_p2 ^ 1'd1);

assign xor_ln1085_20_fu_1085_p2 = (icmp_ln1085_21_fu_1080_p2 ^ 1'd1);

assign xor_ln1085_21_fu_1108_p2 = (icmp_ln1085_22_fu_1103_p2 ^ 1'd1);

assign xor_ln1085_22_fu_1131_p2 = (icmp_ln1085_23_fu_1126_p2 ^ 1'd1);

assign xor_ln1085_23_fu_1154_p2 = (icmp_ln1085_24_fu_1149_p2 ^ 1'd1);

assign xor_ln1085_24_fu_1177_p2 = (icmp_ln1085_25_fu_1172_p2 ^ 1'd1);

assign xor_ln1085_25_fu_1196_p2 = (icmp_ln1085_26_fu_1191_p2 ^ 1'd1);

assign xor_ln1085_26_fu_1215_p2 = (icmp_ln1085_27_fu_1210_p2 ^ 1'd1);

assign xor_ln1085_27_fu_1234_p2 = (icmp_ln1085_28_fu_1229_p2 ^ 1'd1);

assign xor_ln1085_28_fu_1253_p2 = (icmp_ln1085_29_fu_1248_p2 ^ 1'd1);

assign xor_ln1085_29_fu_1272_p2 = (icmp_ln1085_30_fu_1267_p2 ^ 1'd1);

assign xor_ln1085_2_fu_715_p2 = (icmp_ln1085_3_fu_710_p2 ^ 1'd1);

assign xor_ln1085_3_fu_738_p2 = (icmp_ln1085_4_fu_733_p2 ^ 1'd1);

assign xor_ln1085_4_fu_757_p2 = (icmp_ln1085_5_fu_752_p2 ^ 1'd1);

assign xor_ln1085_5_fu_776_p2 = (icmp_ln1085_6_fu_771_p2 ^ 1'd1);

assign xor_ln1085_6_fu_795_p2 = (icmp_ln1085_7_fu_790_p2 ^ 1'd1);

assign xor_ln1085_7_fu_814_p2 = (icmp_ln1085_8_fu_809_p2 ^ 1'd1);

assign xor_ln1085_8_fu_837_p2 = (icmp_ln1085_9_fu_832_p2 ^ 1'd1);

assign xor_ln1085_9_fu_860_p2 = (icmp_ln1085_10_fu_855_p2 ^ 1'd1);

assign xor_ln1085_fu_673_p2 = (icmp_ln1085_1_fu_668_p2 ^ 1'd1);

assign zext_ln1085_10_fu_931_p1 = p_ZL7threshs_14_q0;

assign zext_ln1085_11_fu_950_p1 = p_ZL7threshs_15_q0;

assign zext_ln1085_12_fu_969_p1 = p_ZL7threshs_16_q0;

assign zext_ln1085_13_fu_988_p1 = p_ZL7threshs_17_q0;

assign zext_ln1085_14_fu_1007_p1 = p_ZL7threshs_18_q0;

assign zext_ln1085_15_fu_1030_p1 = $unsigned(sext_ln1085_1_fu_1026_p1);

assign zext_ln1085_16_fu_1053_p1 = $unsigned(sext_ln1085_2_fu_1049_p1);

assign zext_ln1085_17_fu_1076_p1 = $unsigned(sext_ln1085_3_fu_1072_p1);

assign zext_ln1085_18_fu_1099_p1 = $unsigned(sext_ln1085_4_fu_1095_p1);

assign zext_ln1085_19_fu_1122_p1 = $unsigned(sext_ln1085_5_fu_1118_p1);

assign zext_ln1085_1_fu_664_p1 = p_ZL7threshs_1_q0;

assign zext_ln1085_20_fu_1187_p1 = p_ZL7threshs_26_q0;

assign zext_ln1085_21_fu_1206_p1 = p_ZL7threshs_27_q0;

assign zext_ln1085_22_fu_1225_p1 = p_ZL7threshs_28_q0;

assign zext_ln1085_23_fu_1244_p1 = p_ZL7threshs_29_q0;

assign zext_ln1085_24_fu_1263_p1 = p_ZL7threshs_30_q0;

assign zext_ln1085_2_fu_683_p1 = p_ZL7threshs_2_q0;

assign zext_ln1085_3_fu_748_p1 = p_ZL7threshs_5_q0;

assign zext_ln1085_4_fu_767_p1 = p_ZL7threshs_6_q0;

assign zext_ln1085_5_fu_786_p1 = p_ZL7threshs_7_q0;

assign zext_ln1085_6_fu_805_p1 = p_ZL7threshs_8_q0;

assign zext_ln1085_7_fu_828_p1 = $unsigned(sext_ln1085_fu_824_p1);

assign zext_ln1085_8_fu_893_p1 = p_ZL7threshs_12_q0;

assign zext_ln1085_9_fu_912_p1 = p_ZL7threshs_13_q0;

assign zext_ln1085_fu_645_p1 = p_ZL7threshs_0_q0;

assign zext_ln215_fu_660_p1 = result_V_1_fu_654_p2;

assign zext_ln218_10_fu_889_p1 = xor_ln1085_10_fu_883_p2;

assign zext_ln218_11_fu_908_p1 = xor_ln1085_11_fu_902_p2;

assign zext_ln218_12_fu_927_p1 = xor_ln1085_12_fu_921_p2;

assign zext_ln218_13_fu_946_p1 = xor_ln1085_13_fu_940_p2;

assign zext_ln218_14_fu_965_p1 = xor_ln1085_14_fu_959_p2;

assign zext_ln218_15_fu_984_p1 = xor_ln1085_15_fu_978_p2;

assign zext_ln218_16_fu_1003_p1 = xor_ln1085_16_fu_997_p2;

assign zext_ln218_17_fu_1022_p1 = xor_ln1085_17_fu_1016_p2;

assign zext_ln218_18_fu_1045_p1 = xor_ln1085_18_fu_1039_p2;

assign zext_ln218_19_fu_1068_p1 = xor_ln1085_19_fu_1062_p2;

assign zext_ln218_1_fu_698_p1 = xor_ln1085_1_fu_692_p2;

assign zext_ln218_20_fu_1091_p1 = xor_ln1085_20_fu_1085_p2;

assign zext_ln218_21_fu_1114_p1 = xor_ln1085_21_fu_1108_p2;

assign zext_ln218_22_fu_1137_p1 = xor_ln1085_22_fu_1131_p2;

assign zext_ln218_23_fu_1160_p1 = xor_ln1085_23_fu_1154_p2;

assign zext_ln218_24_fu_1183_p1 = xor_ln1085_24_fu_1177_p2;

assign zext_ln218_25_fu_1202_p1 = xor_ln1085_25_fu_1196_p2;

assign zext_ln218_26_fu_1221_p1 = xor_ln1085_26_fu_1215_p2;

assign zext_ln218_27_fu_1240_p1 = xor_ln1085_27_fu_1234_p2;

assign zext_ln218_28_fu_1259_p1 = xor_ln1085_28_fu_1253_p2;

assign zext_ln218_2_fu_721_p1 = xor_ln1085_2_fu_715_p2;

assign zext_ln218_3_fu_744_p1 = xor_ln1085_3_fu_738_p2;

assign zext_ln218_4_fu_763_p1 = xor_ln1085_4_fu_757_p2;

assign zext_ln218_5_fu_782_p1 = xor_ln1085_5_fu_776_p2;

assign zext_ln218_6_fu_801_p1 = xor_ln1085_6_fu_795_p2;

assign zext_ln218_7_fu_820_p1 = xor_ln1085_7_fu_814_p2;

assign zext_ln218_8_fu_843_p1 = xor_ln1085_8_fu_837_p2;

assign zext_ln218_9_fu_866_p1 = xor_ln1085_9_fu_860_p2;

assign zext_ln218_fu_679_p1 = xor_ln1085_fu_673_p2;

assign zext_ln886_10_fu_1490_p1 = add_ln886_11_reg_1783;

assign zext_ln886_11_fu_1529_p1 = add_ln886_13_reg_1808;

assign zext_ln886_12_fu_1364_p1 = add_ln886_14_fu_1358_p2;

assign zext_ln886_13_fu_1374_p1 = add_ln886_15_fu_1368_p2;

assign zext_ln886_14_fu_1505_p1 = add_ln886_16_reg_1788;

assign zext_ln886_15_fu_1390_p1 = add_ln886_17_fu_1384_p2;

assign zext_ln886_16_fu_1400_p1 = add_ln886_18_fu_1394_p2;

assign zext_ln886_17_fu_1508_p1 = add_ln886_19_reg_1793;

assign zext_ln886_18_fu_1532_p1 = add_ln886_20_reg_1813;

assign zext_ln886_19_fu_1416_p1 = add_ln886_21_fu_1410_p2;

assign zext_ln886_1_fu_1462_p1 = add_ln886_1_reg_1763;

assign zext_ln886_20_fu_1426_p1 = add_ln886_22_fu_1420_p2;

assign zext_ln886_21_fu_1517_p1 = add_ln886_23_reg_1798;

assign zext_ln886_22_fu_1442_p1 = add_ln886_24_fu_1436_p2;

assign zext_ln886_23_fu_1452_p1 = add_ln886_25_fu_1446_p2;

assign zext_ln886_24_fu_1520_p1 = add_ln886_26_reg_1803;

assign zext_ln886_25_fu_1535_p1 = add_ln886_27_reg_1818;

assign zext_ln886_2_fu_1465_p1 = add_ln886_2_reg_1768;

assign zext_ln886_3_fu_1468_p1 = add_ln886_3_reg_1773;

assign zext_ln886_4_fu_1483_p1 = add_ln886_5_fu_1477_p2;

assign zext_ln886_5_fu_1312_p1 = add_ln886_6_fu_1306_p2;

assign zext_ln886_6_fu_1322_p1 = add_ln886_7_fu_1316_p2;

assign zext_ln886_7_fu_1487_p1 = add_ln886_8_reg_1778;

assign zext_ln886_8_fu_1338_p1 = add_ln886_9_fu_1332_p2;

assign zext_ln886_9_fu_1348_p1 = add_ln886_10_fu_1342_p2;

assign zext_ln886_fu_1278_p1 = xor_ln1085_29_fu_1272_p2;

endmodule //StreamingDataflowPartition_1_Thresholding_Batch_3_Thresholding_Batch
