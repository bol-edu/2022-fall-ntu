// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter3_fsm_state4 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;
parameter    ap_ST_iter3_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
reg   [1:0] ap_CS_iter3_fsm;
wire    ap_CS_iter3_fsm_state0;
wire   [0:0] icmp_ln295_fu_319_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_CS_iter1_fsm_state2;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_CS_iter2_fsm_state3;
reg   [0:0] icmp_ln295_reg_830;
reg   [0:0] icmp_ln295_reg_830_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
wire    ap_CS_iter3_fsm_state4;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [6:0] p_ZL7threshs_0_address0;
reg    p_ZL7threshs_0_ce0;
wire   [0:0] p_ZL7threshs_0_q0;
wire   [6:0] p_ZL7threshs_1_address0;
reg    p_ZL7threshs_1_ce0;
wire   [0:0] p_ZL7threshs_1_q0;
wire   [6:0] p_ZL7threshs_2_address0;
reg    p_ZL7threshs_2_ce0;
wire   [1:0] p_ZL7threshs_2_q0;
wire   [6:0] p_ZL7threshs_3_address0;
reg    p_ZL7threshs_3_ce0;
wire   [1:0] p_ZL7threshs_3_q0;
wire   [6:0] p_ZL7threshs_4_address0;
reg    p_ZL7threshs_4_ce0;
wire   [0:0] p_ZL7threshs_4_q0;
wire   [6:0] p_ZL7threshs_5_address0;
reg    p_ZL7threshs_5_ce0;
wire   [2:0] p_ZL7threshs_5_q0;
wire   [6:0] p_ZL7threshs_6_address0;
reg    p_ZL7threshs_6_ce0;
wire   [2:0] p_ZL7threshs_6_q0;
wire   [6:0] p_ZL7threshs_7_address0;
reg    p_ZL7threshs_7_ce0;
wire   [2:0] p_ZL7threshs_7_q0;
wire   [6:0] p_ZL7threshs_8_address0;
reg    p_ZL7threshs_8_ce0;
wire   [2:0] p_ZL7threshs_8_q0;
wire   [6:0] p_ZL7threshs_9_address0;
reg    p_ZL7threshs_9_ce0;
wire   [1:0] p_ZL7threshs_9_q0;
wire   [6:0] p_ZL7threshs_10_address0;
reg    p_ZL7threshs_10_ce0;
wire   [1:0] p_ZL7threshs_10_q0;
wire   [6:0] p_ZL7threshs_11_address0;
reg    p_ZL7threshs_11_ce0;
wire   [0:0] p_ZL7threshs_11_q0;
wire   [6:0] p_ZL7threshs_12_address0;
reg    p_ZL7threshs_12_ce0;
wire   [0:0] p_ZL7threshs_12_q0;
wire   [6:0] p_ZL7threshs_13_address0;
reg    p_ZL7threshs_13_ce0;
wire   [3:0] p_ZL7threshs_13_q0;
wire   [6:0] p_ZL7threshs_14_address0;
reg    p_ZL7threshs_14_ce0;
wire   [3:0] p_ZL7threshs_14_q0;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
wire   [0:0] icmp_ln295_reg_830_pp0_iter0_reg;
reg   [0:0] icmp_ln295_reg_830_pp0_iter1_reg;
wire   [4:0] tmp_fu_331_p1;
reg   [4:0] tmp_reg_834;
reg   [4:0] tmp_reg_834_pp0_iter1_reg;
wire   [1:0] add_ln886_1_fu_698_p2;
reg   [1:0] add_ln886_1_reg_928;
wire   [1:0] add_ln886_2_fu_704_p2;
reg   [1:0] add_ln886_2_reg_933;
wire   [1:0] add_ln886_3_fu_710_p2;
reg   [1:0] add_ln886_3_reg_938;
wire   [2:0] add_ln886_8_fu_736_p2;
reg   [2:0] add_ln886_8_reg_943;
wire   [2:0] add_ln886_11_fu_762_p2;
reg   [2:0] add_ln886_11_reg_948;
wire   [63:0] idxprom2_i_fu_343_p1;
reg   [31:0] nf_1_fu_90;
wire   [31:0] nf_2_fu_374_p3;
wire    ap_loop_init;
reg   [19:0] i_fu_94;
wire   [19:0] i_2_fu_325_p2;
reg   [19:0] ap_sig_allocacmp_i_1;
wire   [31:0] nf_fu_362_p2;
wire   [0:0] icmp_ln307_fu_368_p2;
wire   [4:0] zext_ln1085_fu_387_p1;
wire   [0:0] icmp_ln1085_fu_391_p2;
wire   [0:0] result_V_fu_396_p2;
wire   [4:0] zext_ln1085_1_fu_406_p1;
wire   [0:0] icmp_ln1085_1_fu_410_p2;
wire   [0:0] xor_ln1085_fu_415_p2;
wire   [4:0] zext_ln1085_2_fu_425_p1;
wire   [0:0] icmp_ln1085_2_fu_429_p2;
wire   [0:0] xor_ln1085_1_fu_434_p2;
wire   [4:0] zext_ln1085_3_fu_444_p1;
wire   [0:0] icmp_ln1085_3_fu_448_p2;
wire   [0:0] xor_ln1085_2_fu_453_p2;
wire   [4:0] select_ln1085_fu_463_p3;
wire   [0:0] icmp_ln1085_4_fu_471_p2;
wire   [0:0] xor_ln1085_3_fu_476_p2;
wire   [4:0] zext_ln1085_4_fu_486_p1;
wire   [0:0] icmp_ln1085_5_fu_490_p2;
wire   [0:0] xor_ln1085_4_fu_495_p2;
wire   [4:0] zext_ln1085_5_fu_505_p1;
wire   [0:0] icmp_ln1085_6_fu_509_p2;
wire   [0:0] xor_ln1085_5_fu_514_p2;
wire   [4:0] zext_ln1085_6_fu_524_p1;
wire   [0:0] icmp_ln1085_7_fu_528_p2;
wire   [0:0] xor_ln1085_6_fu_533_p2;
wire   [4:0] zext_ln1085_7_fu_543_p1;
wire   [0:0] icmp_ln1085_8_fu_547_p2;
wire   [0:0] xor_ln1085_7_fu_552_p2;
wire  signed [2:0] sext_ln1085_fu_562_p1;
wire   [4:0] zext_ln1085_8_fu_566_p1;
wire   [0:0] icmp_ln1085_9_fu_570_p2;
wire   [0:0] xor_ln1085_8_fu_575_p2;
wire  signed [2:0] sext_ln1085_1_fu_585_p1;
wire   [4:0] zext_ln1085_9_fu_589_p1;
wire   [0:0] icmp_ln1085_10_fu_593_p2;
wire   [0:0] xor_ln1085_9_fu_598_p2;
wire   [4:0] select_ln1085_1_fu_608_p3;
wire   [0:0] icmp_ln1085_11_fu_616_p2;
wire   [0:0] xor_ln1085_10_fu_621_p2;
wire   [4:0] select_ln1085_2_fu_631_p3;
wire   [0:0] icmp_ln1085_12_fu_639_p2;
wire   [0:0] xor_ln1085_11_fu_644_p2;
wire   [4:0] zext_ln1085_10_fu_654_p1;
wire   [0:0] icmp_ln1085_13_fu_658_p2;
wire   [0:0] xor_ln1085_12_fu_663_p2;
wire   [4:0] zext_ln1085_11_fu_673_p1;
wire   [0:0] icmp_ln1085_14_fu_677_p2;
wire   [0:0] xor_ln1085_13_fu_682_p2;
wire   [1:0] zext_ln215_fu_402_p1;
wire   [1:0] zext_ln218_1_fu_440_p1;
wire   [1:0] add_ln886_fu_692_p2;
wire   [1:0] zext_ln218_fu_421_p1;
wire   [1:0] zext_ln218_2_fu_459_p1;
wire   [1:0] zext_ln218_3_fu_482_p1;
wire   [1:0] zext_ln218_4_fu_501_p1;
wire   [1:0] zext_ln218_5_fu_520_p1;
wire   [1:0] zext_ln218_6_fu_539_p1;
wire   [1:0] zext_ln218_7_fu_558_p1;
wire   [1:0] add_ln886_6_fu_716_p2;
wire   [1:0] zext_ln218_8_fu_581_p1;
wire   [1:0] zext_ln218_9_fu_604_p1;
wire   [1:0] add_ln886_7_fu_726_p2;
wire   [2:0] zext_ln886_6_fu_732_p1;
wire   [2:0] zext_ln886_5_fu_722_p1;
wire   [1:0] zext_ln218_10_fu_627_p1;
wire   [1:0] zext_ln218_11_fu_650_p1;
wire   [1:0] add_ln886_9_fu_742_p2;
wire   [1:0] zext_ln218_12_fu_669_p1;
wire   [1:0] zext_ln886_fu_688_p1;
wire   [1:0] add_ln886_10_fu_752_p2;
wire   [2:0] zext_ln886_9_fu_758_p1;
wire   [2:0] zext_ln886_8_fu_748_p1;
wire   [2:0] zext_ln886_3_fu_774_p1;
wire   [2:0] zext_ln886_2_fu_771_p1;
wire   [2:0] add_ln886_4_fu_777_p2;
wire   [2:0] zext_ln886_1_fu_768_p1;
wire   [2:0] add_ln886_5_fu_783_p2;
wire   [3:0] zext_ln886_10_fu_796_p1;
wire   [3:0] zext_ln886_7_fu_793_p1;
wire   [3:0] add_ln886_12_fu_799_p2;
wire   [3:0] zext_ln886_4_fu_789_p1;
wire   [3:0] result_V_2_fu_805_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg   [1:0] ap_NS_iter3_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
wire    ap_ST_iter2_fsm_state3_blk;
reg    ap_ST_iter3_fsm_state4_blk;
wire    ap_start_int;
reg    ap_condition_723;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 ap_CS_iter3_fsm = 2'd1;
#0 ap_done_reg = 1'b0;
end

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_0_address0),
    .ce0(p_ZL7threshs_0_ce0),
    .q0(p_ZL7threshs_0_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_1_address0),
    .ce0(p_ZL7threshs_1_ce0),
    .q0(p_ZL7threshs_1_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_2_address0),
    .ce0(p_ZL7threshs_2_ce0),
    .q0(p_ZL7threshs_2_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_3_address0),
    .ce0(p_ZL7threshs_3_ce0),
    .q0(p_ZL7threshs_3_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_4_address0),
    .ce0(p_ZL7threshs_4_ce0),
    .q0(p_ZL7threshs_4_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_5_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_5_address0),
    .ce0(p_ZL7threshs_5_ce0),
    .q0(p_ZL7threshs_5_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_5_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_6_address0),
    .ce0(p_ZL7threshs_6_ce0),
    .q0(p_ZL7threshs_6_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_7_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_7_address0),
    .ce0(p_ZL7threshs_7_ce0),
    .q0(p_ZL7threshs_7_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_7_ROM_2P_LUTRAM_1R #(
    .DataWidth( 3 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_8_address0),
    .ce0(p_ZL7threshs_8_ce0),
    .q0(p_ZL7threshs_8_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_9_address0),
    .ce0(p_ZL7threshs_9_ce0),
    .q0(p_ZL7threshs_9_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_2_ROM_2P_LUTRAM_1R #(
    .DataWidth( 2 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_10_address0),
    .ce0(p_ZL7threshs_10_ce0),
    .q0(p_ZL7threshs_10_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_11_address0),
    .ce0(p_ZL7threshs_11_ce0),
    .q0(p_ZL7threshs_11_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_0_ROM_2P_LUTRAM_1R #(
    .DataWidth( 1 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_12_address0),
    .ce0(p_ZL7threshs_12_ce0),
    .q0(p_ZL7threshs_12_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_13_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_13_address0),
    .ce0(p_ZL7threshs_13_ce0),
    .q0(p_ZL7threshs_13_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch_p_ZL7threshs_13_ROM_2P_LUTRAM_1R #(
    .DataWidth( 4 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
p_ZL7threshs_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL7threshs_14_address0),
    .ce0(p_ZL7threshs_14_ce0),
    .q0(p_ZL7threshs_14_q0)
);

StreamingDataflowPartition_1_Thresholding_Batch_2_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter3_fsm <= ap_ST_iter3_fsm_state0;
    end else begin
        ap_CS_iter3_fsm <= ap_NS_iter3_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_723)) begin
        if ((icmp_ln295_fu_319_p2 == 1'd0)) begin
            i_fu_94 <= i_2_fu_325_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_94 <= 20'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        nf_1_fu_90 <= 32'd0;
    end else if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln295_reg_830_pp0_iter0_reg == 1'd0))) begin
        nf_1_fu_90 <= nf_2_fu_374_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3) & (icmp_ln295_reg_830_pp0_iter1_reg == 1'd0))) begin
        add_ln886_11_reg_948 <= add_ln886_11_fu_762_p2;
        add_ln886_1_reg_928 <= add_ln886_1_fu_698_p2;
        add_ln886_2_reg_933 <= add_ln886_2_fu_704_p2;
        add_ln886_3_reg_938 <= add_ln886_3_fu_710_p2;
        add_ln886_8_reg_943 <= add_ln886_8_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln295_reg_830 <= icmp_ln295_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln295_reg_830_pp0_iter1_reg <= icmp_ln295_reg_830;
        tmp_reg_834_pp0_iter1_reg <= tmp_reg_834;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        icmp_ln295_reg_830_pp0_iter2_reg <= icmp_ln295_reg_830_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (icmp_ln295_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        tmp_reg_834 <= tmp_fu_331_p1;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0)))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

assign ap_ST_iter2_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) begin
        ap_ST_iter3_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_iter3_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (icmp_ln295_fu_319_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_iter3_fsm_state0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 20'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_94;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln295_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (icmp_ln295_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_iter3_fsm_state4))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_0_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_10_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_11_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_12_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_13_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_14_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_1_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_2_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_3_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_4_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_5_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_6_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_7_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_8_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        p_ZL7threshs_9_ce0 = 1'b1;
    end else begin
        p_ZL7threshs_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & ~((ap_start_int == 1'b0) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & ((ap_start_int == 1'b0) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter3_fsm)
        ap_ST_iter3_fsm_state4 : begin
            if ((~((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b0 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end else if (((~((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (icmp_ln295_reg_830_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_iter3_fsm_state4)) | (~((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0))) & (1'b1 == ap_CS_iter2_fsm_state3)))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end
        end
        ap_ST_iter3_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state4;
            end else begin
                ap_NS_iter3_fsm = ap_ST_iter3_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter3_fsm = 'bx;
        end
    endcase
end

assign add_ln886_10_fu_752_p2 = (zext_ln218_12_fu_669_p1 + zext_ln886_fu_688_p1);

assign add_ln886_11_fu_762_p2 = (zext_ln886_9_fu_758_p1 + zext_ln886_8_fu_748_p1);

assign add_ln886_12_fu_799_p2 = (zext_ln886_10_fu_796_p1 + zext_ln886_7_fu_793_p1);

assign add_ln886_1_fu_698_p2 = (add_ln886_fu_692_p2 + zext_ln218_fu_421_p1);

assign add_ln886_2_fu_704_p2 = (zext_ln218_2_fu_459_p1 + zext_ln218_3_fu_482_p1);

assign add_ln886_3_fu_710_p2 = (zext_ln218_4_fu_501_p1 + zext_ln218_5_fu_520_p1);

assign add_ln886_4_fu_777_p2 = (zext_ln886_3_fu_774_p1 + zext_ln886_2_fu_771_p1);

assign add_ln886_5_fu_783_p2 = (add_ln886_4_fu_777_p2 + zext_ln886_1_fu_768_p1);

assign add_ln886_6_fu_716_p2 = (zext_ln218_6_fu_539_p1 + zext_ln218_7_fu_558_p1);

assign add_ln886_7_fu_726_p2 = (zext_ln218_8_fu_581_p1 + zext_ln218_9_fu_604_p1);

assign add_ln886_8_fu_736_p2 = (zext_ln886_6_fu_732_p1 + zext_ln886_5_fu_722_p1);

assign add_ln886_9_fu_742_p2 = (zext_ln218_10_fu_627_p1 + zext_ln218_11_fu_650_p1);

assign add_ln886_fu_692_p2 = (zext_ln215_fu_402_p1 + zext_ln218_1_fu_440_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

assign ap_CS_iter3_fsm_state0 = ap_CS_iter3_fsm[32'd0];

assign ap_CS_iter3_fsm_state4 = ap_CS_iter3_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_723 = (~((ap_start_int == 1'b0) | ((1'b1 == ap_CS_iter3_fsm_state4) & ((1'b1 == ap_block_state4_io) | ((icmp_ln295_reg_830_pp0_iter2_reg == 1'd0) & (out_V_TREADY == 1'b0)))) | ((icmp_ln295_fu_319_p2 == 1'd0) & (in0_V_TVALID == 1'b0))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign i_2_fu_325_p2 = (ap_sig_allocacmp_i_1 + 20'd1);

assign icmp_ln1085_10_fu_593_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_9_fu_589_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_11_fu_616_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(select_ln1085_1_fu_608_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_12_fu_639_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(select_ln1085_2_fu_631_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_13_fu_658_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_10_fu_654_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_14_fu_677_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_11_fu_673_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_1_fu_410_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_1_fu_406_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_2_fu_429_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_2_fu_425_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_3_fu_448_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_3_fu_444_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_4_fu_471_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(select_ln1085_fu_463_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1085_5_fu_490_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_4_fu_486_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_6_fu_509_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_5_fu_505_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_7_fu_528_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_6_fu_524_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_8_fu_547_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_7_fu_543_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_9_fu_570_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_8_fu_566_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1085_fu_391_p2 = (($signed(tmp_reg_834_pp0_iter1_reg) < $signed(zext_ln1085_fu_387_p1)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_319_p2 = ((ap_sig_allocacmp_i_1 == 20'd524288) ? 1'b1 : 1'b0);

assign icmp_ln295_reg_830_pp0_iter0_reg = icmp_ln295_reg_830;

assign icmp_ln307_fu_368_p2 = ((nf_fu_362_p2 == 32'd128) ? 1'b1 : 1'b0);

assign idxprom2_i_fu_343_p1 = nf_1_fu_90;

assign nf_2_fu_374_p3 = ((icmp_ln307_fu_368_p2[0:0] == 1'b1) ? 32'd0 : nf_fu_362_p2);

assign nf_fu_362_p2 = (nf_1_fu_90 + 32'd1);

assign out_V_TDATA = result_V_2_fu_805_p2;

assign p_ZL7threshs_0_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_10_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_11_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_12_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_13_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_14_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_1_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_2_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_3_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_4_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_5_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_6_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_7_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_8_address0 = idxprom2_i_fu_343_p1;

assign p_ZL7threshs_9_address0 = idxprom2_i_fu_343_p1;

assign result_V_2_fu_805_p2 = (add_ln886_12_fu_799_p2 + zext_ln886_4_fu_789_p1);

assign result_V_fu_396_p2 = (icmp_ln1085_fu_391_p2 ^ 1'd1);

assign select_ln1085_1_fu_608_p3 = ((p_ZL7threshs_11_q0[0:0] == 1'b1) ? 5'd7 : 5'd0);

assign select_ln1085_2_fu_631_p3 = ((p_ZL7threshs_12_q0[0:0] == 1'b1) ? 5'd7 : 5'd0);

assign select_ln1085_fu_463_p3 = ((p_ZL7threshs_4_q0[0:0] == 1'b1) ? 5'd3 : 5'd0);

assign sext_ln1085_1_fu_585_p1 = $signed(p_ZL7threshs_10_q0);

assign sext_ln1085_fu_562_p1 = $signed(p_ZL7threshs_9_q0);

assign tmp_fu_331_p1 = in0_V_TDATA[4:0];

assign xor_ln1085_10_fu_621_p2 = (icmp_ln1085_11_fu_616_p2 ^ 1'd1);

assign xor_ln1085_11_fu_644_p2 = (icmp_ln1085_12_fu_639_p2 ^ 1'd1);

assign xor_ln1085_12_fu_663_p2 = (icmp_ln1085_13_fu_658_p2 ^ 1'd1);

assign xor_ln1085_13_fu_682_p2 = (icmp_ln1085_14_fu_677_p2 ^ 1'd1);

assign xor_ln1085_1_fu_434_p2 = (icmp_ln1085_2_fu_429_p2 ^ 1'd1);

assign xor_ln1085_2_fu_453_p2 = (icmp_ln1085_3_fu_448_p2 ^ 1'd1);

assign xor_ln1085_3_fu_476_p2 = (icmp_ln1085_4_fu_471_p2 ^ 1'd1);

assign xor_ln1085_4_fu_495_p2 = (icmp_ln1085_5_fu_490_p2 ^ 1'd1);

assign xor_ln1085_5_fu_514_p2 = (icmp_ln1085_6_fu_509_p2 ^ 1'd1);

assign xor_ln1085_6_fu_533_p2 = (icmp_ln1085_7_fu_528_p2 ^ 1'd1);

assign xor_ln1085_7_fu_552_p2 = (icmp_ln1085_8_fu_547_p2 ^ 1'd1);

assign xor_ln1085_8_fu_575_p2 = (icmp_ln1085_9_fu_570_p2 ^ 1'd1);

assign xor_ln1085_9_fu_598_p2 = (icmp_ln1085_10_fu_593_p2 ^ 1'd1);

assign xor_ln1085_fu_415_p2 = (icmp_ln1085_1_fu_410_p2 ^ 1'd1);

assign zext_ln1085_10_fu_654_p1 = p_ZL7threshs_13_q0;

assign zext_ln1085_11_fu_673_p1 = p_ZL7threshs_14_q0;

assign zext_ln1085_1_fu_406_p1 = p_ZL7threshs_1_q0;

assign zext_ln1085_2_fu_425_p1 = p_ZL7threshs_2_q0;

assign zext_ln1085_3_fu_444_p1 = p_ZL7threshs_3_q0;

assign zext_ln1085_4_fu_486_p1 = p_ZL7threshs_5_q0;

assign zext_ln1085_5_fu_505_p1 = p_ZL7threshs_6_q0;

assign zext_ln1085_6_fu_524_p1 = p_ZL7threshs_7_q0;

assign zext_ln1085_7_fu_543_p1 = p_ZL7threshs_8_q0;

assign zext_ln1085_8_fu_566_p1 = $unsigned(sext_ln1085_fu_562_p1);

assign zext_ln1085_9_fu_589_p1 = $unsigned(sext_ln1085_1_fu_585_p1);

assign zext_ln1085_fu_387_p1 = p_ZL7threshs_0_q0;

assign zext_ln215_fu_402_p1 = result_V_fu_396_p2;

assign zext_ln218_10_fu_627_p1 = xor_ln1085_10_fu_621_p2;

assign zext_ln218_11_fu_650_p1 = xor_ln1085_11_fu_644_p2;

assign zext_ln218_12_fu_669_p1 = xor_ln1085_12_fu_663_p2;

assign zext_ln218_1_fu_440_p1 = xor_ln1085_1_fu_434_p2;

assign zext_ln218_2_fu_459_p1 = xor_ln1085_2_fu_453_p2;

assign zext_ln218_3_fu_482_p1 = xor_ln1085_3_fu_476_p2;

assign zext_ln218_4_fu_501_p1 = xor_ln1085_4_fu_495_p2;

assign zext_ln218_5_fu_520_p1 = xor_ln1085_5_fu_514_p2;

assign zext_ln218_6_fu_539_p1 = xor_ln1085_6_fu_533_p2;

assign zext_ln218_7_fu_558_p1 = xor_ln1085_7_fu_552_p2;

assign zext_ln218_8_fu_581_p1 = xor_ln1085_8_fu_575_p2;

assign zext_ln218_9_fu_604_p1 = xor_ln1085_9_fu_598_p2;

assign zext_ln218_fu_421_p1 = xor_ln1085_fu_415_p2;

assign zext_ln886_10_fu_796_p1 = add_ln886_11_reg_948;

assign zext_ln886_1_fu_768_p1 = add_ln886_1_reg_928;

assign zext_ln886_2_fu_771_p1 = add_ln886_2_reg_933;

assign zext_ln886_3_fu_774_p1 = add_ln886_3_reg_938;

assign zext_ln886_4_fu_789_p1 = add_ln886_5_fu_783_p2;

assign zext_ln886_5_fu_722_p1 = add_ln886_6_fu_716_p2;

assign zext_ln886_6_fu_732_p1 = add_ln886_7_fu_726_p2;

assign zext_ln886_7_fu_793_p1 = add_ln886_8_reg_943;

assign zext_ln886_8_fu_748_p1 = add_ln886_9_fu_742_p2;

assign zext_ln886_9_fu_758_p1 = add_ln886_10_fu_752_p2;

assign zext_ln886_fu_688_p1 = xor_ln1085_13_fu_682_p2;

endmodule //StreamingDataflowPartition_1_Thresholding_Batch_2_Thresholding_Batch
