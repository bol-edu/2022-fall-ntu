-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hdc_maxi is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    test_data_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    test_data_TVALID : IN STD_LOGIC;
    test_data_TREADY : OUT STD_LOGIC;
    test_data_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    test_data_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    test_data_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    test_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    test_data_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    test_data_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    test_label_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    test_label_out_TVALID : OUT STD_LOGIC;
    test_label_out_TREADY : IN STD_LOGIC;
    test_label_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    test_label_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    test_label_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    test_label_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    test_label_out_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    test_label_out_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    IM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    IM_TVALID : IN STD_LOGIC;
    IM_TREADY : OUT STD_LOGIC;
    IM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    IM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    IM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    IM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    IM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    IM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    AM_out_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    AM_out_TVALID : IN STD_LOGIC;
    AM_out_TREADY : OUT STD_LOGIC;
    AM_out_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    AM_out_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    AM_out_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    AM_out_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    AM_out_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    AM_out_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of hdc_maxi is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hdc_maxi_hdc_maxi,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.180000,HLS_SYN_LAT=91921,HLS_SYN_TPT=none,HLS_SYN_MEM=38,HLS_SYN_DSP=0,HLS_SYN_FF=35581,HLS_SYN_LUT=40555,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (65 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (65 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (65 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (65 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (65 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (65 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (65 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (65 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (65 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (65 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (65 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (65 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv64_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100001";
    constant ap_const_lv64_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100010";
    constant ap_const_lv64_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100011";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv64_28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101000";
    constant ap_const_lv64_29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101001";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv64_2B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101011";
    constant ap_const_lv64_2C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101100";
    constant ap_const_lv64_2D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101101";
    constant ap_const_lv64_2E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101110";
    constant ap_const_lv64_2F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101111";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv64_33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110011";
    constant ap_const_lv64_34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110100";
    constant ap_const_lv64_35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110101";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111001";
    constant ap_const_lv64_3A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111010";
    constant ap_const_lv64_3B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111011";
    constant ap_const_lv64_3C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111100";
    constant ap_const_lv64_3D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111101";
    constant ap_const_lv64_3E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111110";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv64_40 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000";
    constant ap_const_lv64_41 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000001";
    constant ap_const_lv64_42 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000010";
    constant ap_const_lv64_43 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000011";
    constant ap_const_lv64_44 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000100";
    constant ap_const_lv64_45 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000101";
    constant ap_const_lv64_46 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000110";
    constant ap_const_lv64_47 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000111";
    constant ap_const_lv64_48 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001000";
    constant ap_const_lv64_49 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001001";
    constant ap_const_lv64_4A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001010";
    constant ap_const_lv64_4B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001011";
    constant ap_const_lv64_4C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001100";
    constant ap_const_lv64_4D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001101";
    constant ap_const_lv64_4E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001110";
    constant ap_const_lv64_4F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001001111";
    constant ap_const_lv64_50 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010000";
    constant ap_const_lv64_51 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010001";
    constant ap_const_lv64_52 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010010";
    constant ap_const_lv64_53 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010011";
    constant ap_const_lv64_54 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010100";
    constant ap_const_lv64_55 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010101";
    constant ap_const_lv64_56 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010110";
    constant ap_const_lv64_57 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001010111";
    constant ap_const_lv64_58 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011000";
    constant ap_const_lv64_59 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011001";
    constant ap_const_lv64_5A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011010";
    constant ap_const_lv64_5B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011011";
    constant ap_const_lv64_5C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011100";
    constant ap_const_lv64_5D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011101";
    constant ap_const_lv64_5E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001011110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv128_lc_3 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_76C : STD_LOGIC_VECTOR (10 downto 0) := "11101101100";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv9_17C : STD_LOGIC_VECTOR (8 downto 0) := "101111100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal test_label_out_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal tmp_reg_1961 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal d_2_fu_1242_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal d_2_reg_1965 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_last_V_loc_load_reg_1979 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal add_ln46_1_fu_1272_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln46_1_reg_1992 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal select_ln46_fu_1290_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln46_reg_1997 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln46_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln46_1_fu_1298_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_1_reg_2005 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln55_fu_1309_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln55_reg_2012 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal tmp_10_fu_1318_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_2017 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ngram_addr_1_reg_2021 : STD_LOGIC_VECTOR (6 downto 0);
    signal ngram_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal ngram_load_reg_2027 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal trunc_ln61_fu_1340_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln61_reg_2032 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal shl_ln6_fu_1343_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln6_reg_2037 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln61_fu_1364_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln61_reg_2042 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln61_fu_1376_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln61_reg_2047 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal add_ln48_fu_1400_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal AM_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal AM_ce0 : STD_LOGIC;
    signal AM_we0 : STD_LOGIC_VECTOR (15 downto 0);
    signal AM_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal ngram_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ngram_ce0 : STD_LOGIC;
    signal ngram_we0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ngram_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal ngram_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal ngram_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ngram_ce1 : STD_LOGIC;
    signal ngram_we1 : STD_LOGIC_VECTOR (15 downto 0);
    signal test_data_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal test_data_d_ce0 : STD_LOGIC;
    signal test_data_d_we0 : STD_LOGIC_VECTOR (63 downto 0);
    signal test_data_d_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_done : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_idle : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_ready : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_IM_TREADY : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_1_02_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_1_02_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_0_01_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_0_01_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_done : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_idle : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_ready : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_out_TREADY : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_ce0 : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_we0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_idle : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_ready : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_TREADY : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_ce0 : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_we0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_keep_V_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_keep_V_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_strb_V_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_strb_V_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_user_V_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_user_V_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_last_V_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_last_V_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_id_V_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_id_V_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_dest_V_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_dest_V_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_done : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_idle : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_ready : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_ce0 : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_ce0 : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_label_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_label_1_out_ap_vld : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_done : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_idle : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_ready : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_ce0 : STD_LOGIC;
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_tmp_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_tmp_out_ap_vld : STD_LOGIC;
    signal indvar_flatten6_reg_1106 : STD_LOGIC_VECTOR (10 downto 0);
    signal t_reg_1117 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_1128 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal label_1_loc_fu_348 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal zext_ln61_fu_1335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal d_fu_344 : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_test_label_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state66 : BOOLEAN;
    signal ap_block_state66_io : BOOLEAN;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal shl_ln61_1_fu_1393_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln48_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln46_fu_1278_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln46_fu_1306_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln3_fu_1326_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln61_1_fu_1351_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln61_fu_1355_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln61_1_fu_1360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln61_3_fu_1373_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln61_2_fu_1370_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal udiv_fu_1382_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln61_4_fu_1389_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (65 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal regslice_both_test_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal test_data_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal test_data_TVALID_int_regslice : STD_LOGIC;
    signal test_data_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_test_data_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_test_data_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal test_data_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_test_data_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_data_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_test_data_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal test_data_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_test_data_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_data_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_test_data_V_user_V_U_apdone_blk : STD_LOGIC;
    signal test_data_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_test_data_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_data_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_test_data_V_last_V_U_apdone_blk : STD_LOGIC;
    signal test_data_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_test_data_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_data_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_test_data_V_id_V_U_apdone_blk : STD_LOGIC;
    signal test_data_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_test_data_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_data_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_test_data_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal test_data_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_test_data_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_data_V_dest_V_U_ack_in : STD_LOGIC;
    signal test_label_out_TVALID_int_regslice : STD_LOGIC;
    signal test_label_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_test_label_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_label_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_test_label_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_test_label_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_label_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_test_label_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_test_label_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_label_out_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_test_label_out_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_test_label_out_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_label_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_test_label_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_test_label_out_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_label_out_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_test_label_out_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_test_label_out_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_test_label_out_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_test_label_out_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_test_label_out_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_IM_V_data_V_U_apdone_blk : STD_LOGIC;
    signal IM_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal IM_TVALID_int_regslice : STD_LOGIC;
    signal IM_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_IM_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_IM_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal IM_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_IM_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_IM_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_IM_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal IM_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_IM_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_IM_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_IM_V_user_V_U_apdone_blk : STD_LOGIC;
    signal IM_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_IM_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_IM_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_IM_V_last_V_U_apdone_blk : STD_LOGIC;
    signal IM_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_IM_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_IM_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_IM_V_id_V_U_apdone_blk : STD_LOGIC;
    signal IM_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_IM_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_IM_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_IM_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal IM_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_IM_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_IM_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_AM_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal AM_out_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal AM_out_TVALID_int_regslice : STD_LOGIC;
    signal AM_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_AM_out_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_AM_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal AM_out_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_AM_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_AM_out_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_AM_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal AM_out_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_AM_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_AM_out_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_AM_out_V_user_V_U_apdone_blk : STD_LOGIC;
    signal AM_out_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_AM_out_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_AM_out_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_AM_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal AM_out_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_AM_out_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_AM_out_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_AM_out_V_id_V_U_apdone_blk : STD_LOGIC;
    signal AM_out_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_AM_out_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_AM_out_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_AM_out_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal AM_out_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_AM_out_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_AM_out_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_15_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IM_TVALID : IN STD_LOGIC;
        IM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        IM_TREADY : OUT STD_LOGIC;
        IM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        IM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        IM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        IM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        IM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        IM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        new_IM_1_02_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        new_IM_1_02_out_ap_vld : OUT STD_LOGIC;
        new_IM_0_01_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        new_IM_0_01_out_ap_vld : OUT STD_LOGIC );
    end component;


    component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        AM_out_TVALID : IN STD_LOGIC;
        AM_out_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        AM_out_TREADY : OUT STD_LOGIC;
        AM_out_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        AM_out_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        AM_out_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        AM_out_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        AM_out_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        AM_out_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        AM_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        AM_ce0 : OUT STD_LOGIC;
        AM_we0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        AM_d0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_40_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        test_data_TVALID : IN STD_LOGIC;
        test_data_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        test_data_TREADY : OUT STD_LOGIC;
        test_data_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        test_data_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        test_data_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        test_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        test_data_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        test_data_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        test_data_d_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        test_data_d_ce0 : OUT STD_LOGIC;
        test_data_d_we0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        test_data_d_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        tmp_keep_V_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        tmp_keep_V_out_ap_vld : OUT STD_LOGIC;
        tmp_strb_V_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        tmp_strb_V_out_ap_vld : OUT STD_LOGIC;
        tmp_user_V_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        tmp_user_V_out_ap_vld : OUT STD_LOGIC;
        tmp_last_V_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        tmp_last_V_out_ap_vld : OUT STD_LOGIC;
        tmp_id_V_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        tmp_id_V_out_ap_vld : OUT STD_LOGIC;
        tmp_dest_V_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        tmp_dest_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        AM_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        AM_ce0 : OUT STD_LOGIC;
        AM_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        ngram_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        ngram_ce0 : OUT STD_LOGIC;
        ngram_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        label_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        label_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_51_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln55 : IN STD_LOGIC_VECTOR (8 downto 0);
        new_IM_1_02_reload : IN STD_LOGIC_VECTOR (8191 downto 0);
        new_IM_0_01_reload : IN STD_LOGIC_VECTOR (8191 downto 0);
        select_ln46_1 : IN STD_LOGIC_VECTOR (2 downto 0);
        test_data_d_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        test_data_d_ce0 : OUT STD_LOGIC;
        test_data_d_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        tmp_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_out_ap_vld : OUT STD_LOGIC );
    end component;


    component hdc_maxi_AM_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (15 downto 0);
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component hdc_maxi_ngram_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (15 downto 0);
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC_VECTOR (15 downto 0);
        d1 : IN STD_LOGIC_VECTOR (127 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component hdc_maxi_test_data_d_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (63 downto 0);
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component hdc_maxi_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component hdc_maxi_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    AM_U : component hdc_maxi_AM_RAM_AUTO_1R1W
    generic map (
        DataWidth => 128,
        AddressRange => 1250,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => AM_address0,
        ce0 => AM_ce0,
        we0 => AM_we0,
        d0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_d0,
        q0 => AM_q0);

    ngram_U : component hdc_maxi_ngram_RAM_AUTO_1R1W
    generic map (
        DataWidth => 128,
        AddressRange => 95,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ngram_address0,
        ce0 => ngram_ce0,
        we0 => ngram_we0,
        d0 => ngram_d0,
        q0 => ngram_q0,
        address1 => ngram_address1,
        ce1 => ngram_ce1,
        we1 => ngram_we1,
        d1 => ap_const_lv128_lc_3,
        q1 => ngram_q1);

    test_data_d_U : component hdc_maxi_test_data_d_RAM_AUTO_1R1W
    generic map (
        DataWidth => 512,
        AddressRange => 20,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => test_data_d_address0,
        ce0 => test_data_d_ce0,
        we0 => test_data_d_we0,
        d0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_d0,
        q0 => test_data_d_q0);

    grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139 : component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_15_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start,
        ap_done => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_done,
        ap_idle => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_idle,
        ap_ready => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_ready,
        IM_TVALID => IM_TVALID_int_regslice,
        IM_TDATA => IM_TDATA_int_regslice,
        IM_TREADY => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_IM_TREADY,
        IM_TKEEP => IM_TKEEP_int_regslice,
        IM_TSTRB => IM_TSTRB_int_regslice,
        IM_TUSER => IM_TUSER_int_regslice,
        IM_TLAST => IM_TLAST_int_regslice,
        IM_TID => IM_TID_int_regslice,
        IM_TDEST => IM_TDEST_int_regslice,
        new_IM_1_02_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_1_02_out,
        new_IM_1_02_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_1_02_out_ap_vld,
        new_IM_0_01_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_0_01_out,
        new_IM_0_01_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_0_01_out_ap_vld);

    grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159 : component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start,
        ap_done => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_done,
        ap_idle => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_idle,
        ap_ready => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_ready,
        AM_out_TVALID => AM_out_TVALID_int_regslice,
        AM_out_TDATA => AM_out_TDATA_int_regslice,
        AM_out_TREADY => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_out_TREADY,
        AM_out_TKEEP => AM_out_TKEEP_int_regslice,
        AM_out_TSTRB => AM_out_TSTRB_int_regslice,
        AM_out_TUSER => AM_out_TUSER_int_regslice,
        AM_out_TLAST => AM_out_TLAST_int_regslice,
        AM_out_TID => AM_out_TID_int_regslice,
        AM_out_TDEST => AM_out_TDEST_int_regslice,
        AM_address0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_address0,
        AM_ce0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_ce0,
        AM_we0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_we0,
        AM_d0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_d0);

    grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178 : component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_40_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start,
        ap_done => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done,
        ap_idle => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_idle,
        ap_ready => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_ready,
        test_data_TVALID => test_data_TVALID_int_regslice,
        test_data_TDATA => test_data_TDATA_int_regslice,
        test_data_TREADY => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_TREADY,
        test_data_TKEEP => test_data_TKEEP_int_regslice,
        test_data_TSTRB => test_data_TSTRB_int_regslice,
        test_data_TUSER => test_data_TUSER_int_regslice,
        test_data_TLAST => test_data_TLAST_int_regslice,
        test_data_TID => test_data_TID_int_regslice,
        test_data_TDEST => test_data_TDEST_int_regslice,
        test_data_d_address0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_address0,
        test_data_d_ce0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_ce0,
        test_data_d_we0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_we0,
        test_data_d_d0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_d0,
        tmp_keep_V_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_keep_V_out,
        tmp_keep_V_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_keep_V_out_ap_vld,
        tmp_strb_V_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_strb_V_out,
        tmp_strb_V_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_strb_V_out_ap_vld,
        tmp_user_V_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_user_V_out,
        tmp_user_V_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_user_V_out_ap_vld,
        tmp_last_V_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_last_V_out,
        tmp_last_V_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_last_V_out_ap_vld,
        tmp_id_V_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_id_V_out,
        tmp_id_V_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_id_V_out_ap_vld,
        tmp_dest_V_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_dest_V_out,
        tmp_dest_V_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_dest_V_out_ap_vld);

    grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203 : component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start,
        ap_done => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_done,
        ap_idle => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_idle,
        ap_ready => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_ready,
        AM_address0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_address0,
        AM_ce0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_ce0,
        AM_q0 => AM_q0,
        ngram_address0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_address0,
        ngram_ce0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_ce0,
        ngram_q0 => ngram_q0,
        label_1_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_label_1_out,
        label_1_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_label_1_out_ap_vld);

    grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210 : component hdc_maxi_hdc_maxi_Pipeline_VITIS_LOOP_51_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start,
        ap_done => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_done,
        ap_idle => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_idle,
        ap_ready => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_ready,
        add_ln55 => add_ln55_reg_2012,
        new_IM_1_02_reload => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_1_02_out,
        new_IM_0_01_reload => grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_new_IM_0_01_out,
        select_ln46_1 => select_ln46_1_reg_2005,
        test_data_d_address0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_address0,
        test_data_d_ce0 => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_ce0,
        test_data_d_q0 => test_data_d_q0,
        tmp_out => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_tmp_out,
        tmp_out_ap_vld => grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_tmp_out_ap_vld);

    control_s_axi_U : component hdc_maxi_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    regslice_both_test_data_V_data_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => test_data_TDATA,
        vld_in => test_data_TVALID,
        ack_in => regslice_both_test_data_V_data_V_U_ack_in,
        data_out => test_data_TDATA_int_regslice,
        vld_out => test_data_TVALID_int_regslice,
        ack_out => test_data_TREADY_int_regslice,
        apdone_blk => regslice_both_test_data_V_data_V_U_apdone_blk);

    regslice_both_test_data_V_keep_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => test_data_TKEEP,
        vld_in => test_data_TVALID,
        ack_in => regslice_both_test_data_V_keep_V_U_ack_in,
        data_out => test_data_TKEEP_int_regslice,
        vld_out => regslice_both_test_data_V_keep_V_U_vld_out,
        ack_out => test_data_TREADY_int_regslice,
        apdone_blk => regslice_both_test_data_V_keep_V_U_apdone_blk);

    regslice_both_test_data_V_strb_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => test_data_TSTRB,
        vld_in => test_data_TVALID,
        ack_in => regslice_both_test_data_V_strb_V_U_ack_in,
        data_out => test_data_TSTRB_int_regslice,
        vld_out => regslice_both_test_data_V_strb_V_U_vld_out,
        ack_out => test_data_TREADY_int_regslice,
        apdone_blk => regslice_both_test_data_V_strb_V_U_apdone_blk);

    regslice_both_test_data_V_user_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => test_data_TUSER,
        vld_in => test_data_TVALID,
        ack_in => regslice_both_test_data_V_user_V_U_ack_in,
        data_out => test_data_TUSER_int_regslice,
        vld_out => regslice_both_test_data_V_user_V_U_vld_out,
        ack_out => test_data_TREADY_int_regslice,
        apdone_blk => regslice_both_test_data_V_user_V_U_apdone_blk);

    regslice_both_test_data_V_last_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => test_data_TLAST,
        vld_in => test_data_TVALID,
        ack_in => regslice_both_test_data_V_last_V_U_ack_in,
        data_out => test_data_TLAST_int_regslice,
        vld_out => regslice_both_test_data_V_last_V_U_vld_out,
        ack_out => test_data_TREADY_int_regslice,
        apdone_blk => regslice_both_test_data_V_last_V_U_apdone_blk);

    regslice_both_test_data_V_id_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => test_data_TID,
        vld_in => test_data_TVALID,
        ack_in => regslice_both_test_data_V_id_V_U_ack_in,
        data_out => test_data_TID_int_regslice,
        vld_out => regslice_both_test_data_V_id_V_U_vld_out,
        ack_out => test_data_TREADY_int_regslice,
        apdone_blk => regslice_both_test_data_V_id_V_U_apdone_blk);

    regslice_both_test_data_V_dest_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => test_data_TDEST,
        vld_in => test_data_TVALID,
        ack_in => regslice_both_test_data_V_dest_V_U_ack_in,
        data_out => test_data_TDEST_int_regslice,
        vld_out => regslice_both_test_data_V_dest_V_U_vld_out,
        ack_out => test_data_TREADY_int_regslice,
        apdone_blk => regslice_both_test_data_V_dest_V_U_apdone_blk);

    regslice_both_test_label_out_V_data_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => label_1_loc_fu_348,
        vld_in => test_label_out_TVALID_int_regslice,
        ack_in => test_label_out_TREADY_int_regslice,
        data_out => test_label_out_TDATA,
        vld_out => regslice_both_test_label_out_V_data_V_U_vld_out,
        ack_out => test_label_out_TREADY,
        apdone_blk => regslice_both_test_label_out_V_data_V_U_apdone_blk);

    regslice_both_test_label_out_V_keep_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_keep_V_out,
        vld_in => test_label_out_TVALID_int_regslice,
        ack_in => regslice_both_test_label_out_V_keep_V_U_ack_in_dummy,
        data_out => test_label_out_TKEEP,
        vld_out => regslice_both_test_label_out_V_keep_V_U_vld_out,
        ack_out => test_label_out_TREADY,
        apdone_blk => regslice_both_test_label_out_V_keep_V_U_apdone_blk);

    regslice_both_test_label_out_V_strb_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_strb_V_out,
        vld_in => test_label_out_TVALID_int_regslice,
        ack_in => regslice_both_test_label_out_V_strb_V_U_ack_in_dummy,
        data_out => test_label_out_TSTRB,
        vld_out => regslice_both_test_label_out_V_strb_V_U_vld_out,
        ack_out => test_label_out_TREADY,
        apdone_blk => regslice_both_test_label_out_V_strb_V_U_apdone_blk);

    regslice_both_test_label_out_V_user_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_user_V_out,
        vld_in => test_label_out_TVALID_int_regslice,
        ack_in => regslice_both_test_label_out_V_user_V_U_ack_in_dummy,
        data_out => test_label_out_TUSER,
        vld_out => regslice_both_test_label_out_V_user_V_U_vld_out,
        ack_out => test_label_out_TREADY,
        apdone_blk => regslice_both_test_label_out_V_user_V_U_apdone_blk);

    regslice_both_test_label_out_V_last_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_last_V_out,
        vld_in => test_label_out_TVALID_int_regslice,
        ack_in => regslice_both_test_label_out_V_last_V_U_ack_in_dummy,
        data_out => test_label_out_TLAST,
        vld_out => regslice_both_test_label_out_V_last_V_U_vld_out,
        ack_out => test_label_out_TREADY,
        apdone_blk => regslice_both_test_label_out_V_last_V_U_apdone_blk);

    regslice_both_test_label_out_V_id_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_id_V_out,
        vld_in => test_label_out_TVALID_int_regslice,
        ack_in => regslice_both_test_label_out_V_id_V_U_ack_in_dummy,
        data_out => test_label_out_TID,
        vld_out => regslice_both_test_label_out_V_id_V_U_vld_out,
        ack_out => test_label_out_TREADY,
        apdone_blk => regslice_both_test_label_out_V_id_V_U_apdone_blk);

    regslice_both_test_label_out_V_dest_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_dest_V_out,
        vld_in => test_label_out_TVALID_int_regslice,
        ack_in => regslice_both_test_label_out_V_dest_V_U_ack_in_dummy,
        data_out => test_label_out_TDEST,
        vld_out => regslice_both_test_label_out_V_dest_V_U_vld_out,
        ack_out => test_label_out_TREADY,
        apdone_blk => regslice_both_test_label_out_V_dest_V_U_apdone_blk);

    regslice_both_IM_V_data_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IM_TDATA,
        vld_in => IM_TVALID,
        ack_in => regslice_both_IM_V_data_V_U_ack_in,
        data_out => IM_TDATA_int_regslice,
        vld_out => IM_TVALID_int_regslice,
        ack_out => IM_TREADY_int_regslice,
        apdone_blk => regslice_both_IM_V_data_V_U_apdone_blk);

    regslice_both_IM_V_keep_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IM_TKEEP,
        vld_in => IM_TVALID,
        ack_in => regslice_both_IM_V_keep_V_U_ack_in,
        data_out => IM_TKEEP_int_regslice,
        vld_out => regslice_both_IM_V_keep_V_U_vld_out,
        ack_out => IM_TREADY_int_regslice,
        apdone_blk => regslice_both_IM_V_keep_V_U_apdone_blk);

    regslice_both_IM_V_strb_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IM_TSTRB,
        vld_in => IM_TVALID,
        ack_in => regslice_both_IM_V_strb_V_U_ack_in,
        data_out => IM_TSTRB_int_regslice,
        vld_out => regslice_both_IM_V_strb_V_U_vld_out,
        ack_out => IM_TREADY_int_regslice,
        apdone_blk => regslice_both_IM_V_strb_V_U_apdone_blk);

    regslice_both_IM_V_user_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IM_TUSER,
        vld_in => IM_TVALID,
        ack_in => regslice_both_IM_V_user_V_U_ack_in,
        data_out => IM_TUSER_int_regslice,
        vld_out => regslice_both_IM_V_user_V_U_vld_out,
        ack_out => IM_TREADY_int_regslice,
        apdone_blk => regslice_both_IM_V_user_V_U_apdone_blk);

    regslice_both_IM_V_last_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IM_TLAST,
        vld_in => IM_TVALID,
        ack_in => regslice_both_IM_V_last_V_U_ack_in,
        data_out => IM_TLAST_int_regslice,
        vld_out => regslice_both_IM_V_last_V_U_vld_out,
        ack_out => IM_TREADY_int_regslice,
        apdone_blk => regslice_both_IM_V_last_V_U_apdone_blk);

    regslice_both_IM_V_id_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IM_TID,
        vld_in => IM_TVALID,
        ack_in => regslice_both_IM_V_id_V_U_ack_in,
        data_out => IM_TID_int_regslice,
        vld_out => regslice_both_IM_V_id_V_U_vld_out,
        ack_out => IM_TREADY_int_regslice,
        apdone_blk => regslice_both_IM_V_id_V_U_apdone_blk);

    regslice_both_IM_V_dest_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IM_TDEST,
        vld_in => IM_TVALID,
        ack_in => regslice_both_IM_V_dest_V_U_ack_in,
        data_out => IM_TDEST_int_regslice,
        vld_out => regslice_both_IM_V_dest_V_U_vld_out,
        ack_out => IM_TREADY_int_regslice,
        apdone_blk => regslice_both_IM_V_dest_V_U_apdone_blk);

    regslice_both_AM_out_V_data_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => AM_out_TDATA,
        vld_in => AM_out_TVALID,
        ack_in => regslice_both_AM_out_V_data_V_U_ack_in,
        data_out => AM_out_TDATA_int_regslice,
        vld_out => AM_out_TVALID_int_regslice,
        ack_out => AM_out_TREADY_int_regslice,
        apdone_blk => regslice_both_AM_out_V_data_V_U_apdone_blk);

    regslice_both_AM_out_V_keep_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => AM_out_TKEEP,
        vld_in => AM_out_TVALID,
        ack_in => regslice_both_AM_out_V_keep_V_U_ack_in,
        data_out => AM_out_TKEEP_int_regslice,
        vld_out => regslice_both_AM_out_V_keep_V_U_vld_out,
        ack_out => AM_out_TREADY_int_regslice,
        apdone_blk => regslice_both_AM_out_V_keep_V_U_apdone_blk);

    regslice_both_AM_out_V_strb_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => AM_out_TSTRB,
        vld_in => AM_out_TVALID,
        ack_in => regslice_both_AM_out_V_strb_V_U_ack_in,
        data_out => AM_out_TSTRB_int_regslice,
        vld_out => regslice_both_AM_out_V_strb_V_U_vld_out,
        ack_out => AM_out_TREADY_int_regslice,
        apdone_blk => regslice_both_AM_out_V_strb_V_U_apdone_blk);

    regslice_both_AM_out_V_user_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => AM_out_TUSER,
        vld_in => AM_out_TVALID,
        ack_in => regslice_both_AM_out_V_user_V_U_ack_in,
        data_out => AM_out_TUSER_int_regslice,
        vld_out => regslice_both_AM_out_V_user_V_U_vld_out,
        ack_out => AM_out_TREADY_int_regslice,
        apdone_blk => regslice_both_AM_out_V_user_V_U_apdone_blk);

    regslice_both_AM_out_V_last_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => AM_out_TLAST,
        vld_in => AM_out_TVALID,
        ack_in => regslice_both_AM_out_V_last_V_U_ack_in,
        data_out => AM_out_TLAST_int_regslice,
        vld_out => regslice_both_AM_out_V_last_V_U_vld_out,
        ack_out => AM_out_TREADY_int_regslice,
        apdone_blk => regslice_both_AM_out_V_last_V_U_apdone_blk);

    regslice_both_AM_out_V_id_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => AM_out_TID,
        vld_in => AM_out_TVALID,
        ack_in => regslice_both_AM_out_V_id_V_U_ack_in,
        data_out => AM_out_TID_int_regslice,
        vld_out => regslice_both_AM_out_V_id_V_U_vld_out,
        ack_out => AM_out_TREADY_int_regslice,
        apdone_blk => regslice_both_AM_out_V_id_V_U_apdone_blk);

    regslice_both_AM_out_V_dest_V_U : component hdc_maxi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => AM_out_TDEST,
        vld_in => AM_out_TVALID,
        ack_in => regslice_both_AM_out_V_dest_V_U_ack_in,
        data_out => AM_out_TDEST_int_regslice,
        vld_out => regslice_both_AM_out_V_dest_V_U_vld_out,
        ack_out => AM_out_TREADY_int_regslice,
        apdone_blk => regslice_both_AM_out_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_ready = ap_const_logic_1)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_ready = ap_const_logic_1)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_1234_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_ready = ap_const_logic_1)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_ready = ap_const_logic_1)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln46_fu_1266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_ready = ap_const_logic_1)) then 
                    grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                d_fu_344 <= ap_const_lv2_0;
            elsif ((not(((ap_const_boolean_1 = ap_block_state66_io) or (regslice_both_test_label_out_V_data_V_U_apdone_blk = ap_const_logic_1) or ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0)))) and (tmp_last_V_loc_load_reg_1979 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66) and (tmp_reg_1961 = ap_const_lv1_0))) then 
                d_fu_344 <= d_2_reg_1965;
            end if; 
        end if;
    end process;

    i_reg_1128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                i_reg_1128 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                i_reg_1128 <= add_ln48_fu_1400_p2;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_1106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                indvar_flatten6_reg_1106 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                indvar_flatten6_reg_1106 <= add_ln46_1_reg_1992;
            end if; 
        end if;
    end process;

    t_reg_1117_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                t_reg_1117 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                t_reg_1117 <= select_ln46_1_reg_2005;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                add_ln46_1_reg_1992 <= add_ln46_1_fu_1272_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                add_ln55_reg_2012 <= add_ln55_fu_1309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                d_2_reg_1965 <= d_2_fu_1242_p2;
                tmp_reg_1961 <= d_fu_344(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_label_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                label_1_loc_fu_348 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_label_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_10_fu_1318_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                ngram_addr_1_reg_2021 <= zext_ln61_fu_1335_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                ngram_load_reg_2027 <= ngram_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_1266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                select_ln46_1_reg_2005 <= select_ln46_1_fu_1298_p3;
                select_ln46_reg_1997 <= select_ln46_fu_1290_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                shl_ln61_reg_2047 <= shl_ln61_fu_1376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                    shl_ln6_reg_2037(6 downto 5) <= shl_ln6_fu_1343_p3(6 downto 5);
                sub_ln61_reg_2042 <= sub_ln61_fu_1364_p2;
                trunc_ln61_reg_2032 <= trunc_ln61_fu_1340_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                tmp_10_reg_2017 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_tmp_out(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                tmp_last_V_loc_load_reg_1979 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_tmp_last_V_out;
            end if;
        end if;
    end process;
    shl_ln6_reg_2037(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state65, ap_CS_fsm_state66, tmp_reg_1961, tmp_fu_1234_p3, ap_CS_fsm_state8, tmp_last_V_loc_load_reg_1979, ap_CS_fsm_state56, icmp_ln46_fu_1266_p2, tmp_10_fu_1318_p3, ap_CS_fsm_state59, grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_done, grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_done, grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done, grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_done, grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state64, ap_CS_fsm_state58, regslice_both_test_label_out_V_data_V_U_apdone_blk, ap_block_state66_io, test_label_out_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((tmp_fu_1234_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((icmp_ln46_fu_1266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                if (((tmp_10_fu_1318_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state64 => 
                if (((grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state65) and (test_label_out_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                if ((not(((ap_const_boolean_1 = ap_block_state66_io) or (regslice_both_test_label_out_V_data_V_U_apdone_blk = ap_const_logic_1) or ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state66) and ((tmp_last_V_loc_load_reg_1979 = ap_const_lv1_1) or (tmp_reg_1961 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((ap_const_boolean_1 = ap_block_state66_io) or (regslice_both_test_label_out_V_data_V_U_apdone_blk = ap_const_logic_1) or ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0)))) and (tmp_last_V_loc_load_reg_1979 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66) and (tmp_reg_1961 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    AM_address0_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_address0, grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_address0, ap_CS_fsm_state6, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            AM_address0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            AM_address0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_address0;
        else 
            AM_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    AM_ce0_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_ce0, grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_ce0, ap_CS_fsm_state6, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            AM_ce0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_AM_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            AM_ce0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_ce0;
        else 
            AM_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AM_out_TREADY <= regslice_both_AM_out_V_data_V_U_ack_in;

    AM_out_TREADY_int_regslice_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_out_TREADY, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            AM_out_TREADY_int_regslice <= grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_out_TREADY;
        else 
            AM_out_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    AM_we0_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            AM_we0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_AM_we0;
        else 
            AM_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

    IM_TREADY <= regslice_both_IM_V_data_V_U_ack_in;

    IM_TREADY_int_regslice_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_IM_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            IM_TREADY_int_regslice <= grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_IM_TREADY;
        else 
            IM_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    add_ln46_1_fu_1272_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_1106) + unsigned(ap_const_lv11_1));
    add_ln46_fu_1278_p2 <= std_logic_vector(unsigned(t_reg_1117) + unsigned(ap_const_lv3_1));
    add_ln48_fu_1400_p2 <= std_logic_vector(unsigned(select_ln46_reg_1997) + unsigned(ap_const_lv9_1));
    add_ln55_fu_1309_p2 <= std_logic_vector(unsigned(select_ln46_reg_1997) + unsigned(zext_ln46_fu_1306_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_done)
    begin
        if ((grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;

    ap_ST_fsm_state58_blk_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_done)
    begin
        if ((grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;

    ap_ST_fsm_state64_blk_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_done)
    begin
        if ((grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state64_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state64_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state65_blk_assign_proc : process(test_label_out_TREADY_int_regslice)
    begin
        if ((test_label_out_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state65_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state65_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state66_blk_assign_proc : process(tmp_reg_1961, regslice_both_test_label_out_V_data_V_U_apdone_blk, ap_block_state66_io, test_label_out_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state66_io) or (regslice_both_test_label_out_V_data_V_U_apdone_blk = ap_const_logic_1) or ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0)))) then 
            ap_ST_fsm_state66_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state66_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_done)
    begin
        if ((grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done)
    begin
        if ((grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state66_assign_proc : process(tmp_reg_1961, regslice_both_test_label_out_V_data_V_U_apdone_blk, test_label_out_TREADY_int_regslice)
    begin
                ap_block_state66 <= ((regslice_both_test_label_out_V_data_V_U_apdone_blk = ap_const_logic_1) or ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0)));
    end process;


    ap_block_state66_io_assign_proc : process(tmp_reg_1961, test_label_out_TREADY_int_regslice)
    begin
                ap_block_state66_io <= ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state66, tmp_reg_1961, tmp_last_V_loc_load_reg_1979, regslice_both_test_label_out_V_data_V_U_apdone_blk, ap_block_state66_io, test_label_out_TREADY_int_regslice)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state66_io) or (regslice_both_test_label_out_V_data_V_U_apdone_blk = ap_const_logic_1) or ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state66) and ((tmp_last_V_loc_load_reg_1979 = ap_const_lv1_1) or (tmp_reg_1961 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state66, tmp_reg_1961, tmp_last_V_loc_load_reg_1979, regslice_both_test_label_out_V_data_V_U_apdone_blk, ap_block_state66_io, test_label_out_TREADY_int_regslice)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state66_io) or (regslice_both_test_label_out_V_data_V_U_apdone_blk = ap_const_logic_1) or ((test_label_out_TREADY_int_regslice = ap_const_logic_0) and (tmp_reg_1961 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state66) and ((tmp_last_V_loc_load_reg_1979 = ap_const_lv1_1) or (tmp_reg_1961 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    d_2_fu_1242_p2 <= std_logic_vector(unsigned(d_fu_344) + unsigned(ap_const_lv2_1));
    grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start <= grp_hdc_maxi_Pipeline_VITIS_LOOP_15_1_fu_1139_ap_start_reg;
    grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start <= grp_hdc_maxi_Pipeline_VITIS_LOOP_21_2_VITIS_LOOP_22_3_fu_1159_ap_start_reg;
    grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start <= grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_start_reg;
    grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start <= grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_ap_start_reg;
    grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start <= grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ap_start_reg;
    icmp_ln46_fu_1266_p2 <= "1" when (indvar_flatten6_reg_1106 = ap_const_lv11_76C) else "0";
    icmp_ln48_fu_1284_p2 <= "1" when (i_reg_1128 = ap_const_lv9_17C) else "0";
    lshr_ln3_fu_1326_p4 <= select_ln46_reg_1997(8 downto 2);
    lshr_ln61_fu_1355_p2 <= std_logic_vector(shift_right(unsigned(ngram_load_reg_2027),to_integer(unsigned('0' & zext_ln61_1_fu_1351_p1(31-1 downto 0)))));

    ngram_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state55, ngram_addr_1_reg_2021, ap_CS_fsm_state63, grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_address0, ap_CS_fsm_state9, ap_CS_fsm_state64, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ngram_address0 <= ngram_addr_1_reg_2021;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            ngram_address0 <= ap_const_lv64_5E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ngram_address0 <= ap_const_lv64_5D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ngram_address0 <= ap_const_lv64_5B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ngram_address0 <= ap_const_lv64_59(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ngram_address0 <= ap_const_lv64_57(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ngram_address0 <= ap_const_lv64_55(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            ngram_address0 <= ap_const_lv64_53(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ngram_address0 <= ap_const_lv64_51(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ngram_address0 <= ap_const_lv64_4F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ngram_address0 <= ap_const_lv64_4D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ngram_address0 <= ap_const_lv64_4B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            ngram_address0 <= ap_const_lv64_49(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            ngram_address0 <= ap_const_lv64_47(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ngram_address0 <= ap_const_lv64_45(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ngram_address0 <= ap_const_lv64_43(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ngram_address0 <= ap_const_lv64_41(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ngram_address0 <= ap_const_lv64_3F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ngram_address0 <= ap_const_lv64_3D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ngram_address0 <= ap_const_lv64_3B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            ngram_address0 <= ap_const_lv64_39(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            ngram_address0 <= ap_const_lv64_37(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            ngram_address0 <= ap_const_lv64_35(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ngram_address0 <= ap_const_lv64_33(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ngram_address0 <= ap_const_lv64_31(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ngram_address0 <= ap_const_lv64_2F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            ngram_address0 <= ap_const_lv64_2D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ngram_address0 <= ap_const_lv64_2B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            ngram_address0 <= ap_const_lv64_29(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ngram_address0 <= ap_const_lv64_27(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ngram_address0 <= ap_const_lv64_25(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ngram_address0 <= ap_const_lv64_23(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ngram_address0 <= ap_const_lv64_21(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ngram_address0 <= ap_const_lv64_1F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ngram_address0 <= ap_const_lv64_1D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ngram_address0 <= ap_const_lv64_1B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ngram_address0 <= ap_const_lv64_19(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ngram_address0 <= ap_const_lv64_17(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ngram_address0 <= ap_const_lv64_15(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ngram_address0 <= ap_const_lv64_13(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ngram_address0 <= ap_const_lv64_11(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ngram_address0 <= ap_const_lv64_F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ngram_address0 <= ap_const_lv64_D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ngram_address0 <= ap_const_lv64_B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ngram_address0 <= ap_const_lv64_9(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ngram_address0 <= ap_const_lv64_7(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ngram_address0 <= ap_const_lv64_5(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ngram_address0 <= ap_const_lv64_3(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ngram_address0 <= ap_const_lv64_1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ngram_address0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_address0;
        else 
            ngram_address0 <= "XXXXXXX";
        end if; 
    end process;


    ngram_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state59, ap_CS_fsm_state9, zext_ln61_fu_1335_p1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            ngram_address1 <= zext_ln61_fu_1335_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            ngram_address1 <= ap_const_lv64_5C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ngram_address1 <= ap_const_lv64_5A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            ngram_address1 <= ap_const_lv64_58(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ngram_address1 <= ap_const_lv64_56(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            ngram_address1 <= ap_const_lv64_54(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            ngram_address1 <= ap_const_lv64_52(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ngram_address1 <= ap_const_lv64_50(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ngram_address1 <= ap_const_lv64_4E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ngram_address1 <= ap_const_lv64_4C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ngram_address1 <= ap_const_lv64_4A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            ngram_address1 <= ap_const_lv64_48(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            ngram_address1 <= ap_const_lv64_46(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ngram_address1 <= ap_const_lv64_44(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ngram_address1 <= ap_const_lv64_42(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ngram_address1 <= ap_const_lv64_40(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ngram_address1 <= ap_const_lv64_3E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            ngram_address1 <= ap_const_lv64_3C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            ngram_address1 <= ap_const_lv64_3A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            ngram_address1 <= ap_const_lv64_38(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            ngram_address1 <= ap_const_lv64_36(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            ngram_address1 <= ap_const_lv64_34(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ngram_address1 <= ap_const_lv64_32(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ngram_address1 <= ap_const_lv64_30(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ngram_address1 <= ap_const_lv64_2E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            ngram_address1 <= ap_const_lv64_2C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ngram_address1 <= ap_const_lv64_2A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            ngram_address1 <= ap_const_lv64_28(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ngram_address1 <= ap_const_lv64_26(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ngram_address1 <= ap_const_lv64_24(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ngram_address1 <= ap_const_lv64_22(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ngram_address1 <= ap_const_lv64_20(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ngram_address1 <= ap_const_lv64_1E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ngram_address1 <= ap_const_lv64_1C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ngram_address1 <= ap_const_lv64_1A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ngram_address1 <= ap_const_lv64_18(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ngram_address1 <= ap_const_lv64_16(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ngram_address1 <= ap_const_lv64_14(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ngram_address1 <= ap_const_lv64_12(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ngram_address1 <= ap_const_lv64_10(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ngram_address1 <= ap_const_lv64_E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ngram_address1 <= ap_const_lv64_C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ngram_address1 <= ap_const_lv64_A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ngram_address1 <= ap_const_lv64_8(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ngram_address1 <= ap_const_lv64_6(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ngram_address1 <= ap_const_lv64_4(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ngram_address1 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ngram_address1 <= ap_const_lv64_0(7 - 1 downto 0);
        else 
            ngram_address1 <= "XXXXXXX";
        end if; 
    end process;


    ngram_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state55, ap_CS_fsm_state63, grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done, grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_ce0, ap_CS_fsm_state9, ap_CS_fsm_state64, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            ngram_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            ngram_ce0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_68_9_VITIS_LOOP_70_10_fu_1203_ngram_ce0;
        else 
            ngram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ngram_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state59, grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            ngram_ce1 <= ap_const_logic_1;
        else 
            ngram_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ngram_d0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state55, shl_ln61_reg_2047, ap_CS_fsm_state63, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            ngram_d0 <= shl_ln61_reg_2047;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            ngram_d0 <= ap_const_lv128_lc_3;
        else 
            ngram_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ngram_we0_assign_proc : process(tmp_fu_1234_p3, ap_CS_fsm_state8, ap_CS_fsm_state55, tmp_10_reg_2017, ap_CS_fsm_state63, grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, shl_ln61_1_fu_1393_p2)
    begin
        if (((tmp_10_reg_2017 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            ngram_we0 <= shl_ln61_1_fu_1393_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_fu_1234_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            ngram_we0 <= ap_const_lv16_FFFF;
        else 
            ngram_we0 <= ap_const_lv16_0;
        end if; 
    end process;


    ngram_we1_assign_proc : process(tmp_fu_1234_p3, ap_CS_fsm_state8, grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or ((grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((tmp_fu_1234_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            ngram_we1 <= ap_const_lv16_FFFF;
        else 
            ngram_we1 <= ap_const_lv16_0;
        end if; 
    end process;

    select_ln46_1_fu_1298_p3 <= 
        add_ln46_fu_1278_p2 when (icmp_ln48_fu_1284_p2(0) = '1') else 
        t_reg_1117;
    select_ln46_fu_1290_p3 <= 
        ap_const_lv9_0 when (icmp_ln48_fu_1284_p2(0) = '1') else 
        i_reg_1128;
    shl_ln61_1_fu_1393_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv16_F),to_integer(unsigned('0' & zext_ln61_4_fu_1389_p1(16-1 downto 0)))));
    shl_ln61_fu_1376_p2 <= std_logic_vector(shift_left(unsigned(zext_ln61_3_fu_1373_p1),to_integer(unsigned('0' & zext_ln61_2_fu_1370_p1(31-1 downto 0)))));
    shl_ln6_fu_1343_p3 <= (trunc_ln61_fu_1340_p1 & ap_const_lv5_0);
    sub_ln61_fu_1364_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(trunc_ln61_1_fu_1360_p1));
    test_data_TREADY <= regslice_both_test_data_V_data_V_U_ack_in;

    test_data_TREADY_int_regslice_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_TREADY, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            test_data_TREADY_int_regslice <= grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_TREADY;
        else 
            test_data_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    test_data_d_address0_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_address0, grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_address0, ap_CS_fsm_state9, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            test_data_d_address0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            test_data_d_address0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_address0;
        else 
            test_data_d_address0 <= "XXXXX";
        end if; 
    end process;


    test_data_d_ce0_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_ce0, grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_ce0, ap_CS_fsm_state9, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            test_data_d_ce0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_test_data_d_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            test_data_d_ce0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_ce0;
        else 
            test_data_d_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    test_data_d_we0_assign_proc : process(grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            test_data_d_we0 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_40_5_fu_1178_test_data_d_we0;
        else 
            test_data_d_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    test_label_out_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state66, tmp_reg_1961, test_label_out_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or ((ap_const_logic_1 = ap_CS_fsm_state66) and (tmp_reg_1961 = ap_const_lv1_0)))) then 
            test_label_out_TDATA_blk_n <= test_label_out_TREADY_int_regslice;
        else 
            test_label_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    test_label_out_TVALID <= regslice_both_test_label_out_V_data_V_U_vld_out;

    test_label_out_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state65, test_label_out_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) and (test_label_out_TREADY_int_regslice = ap_const_logic_1))) then 
            test_label_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            test_label_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_1318_p3 <= grp_hdc_maxi_Pipeline_VITIS_LOOP_51_8_fu_1210_tmp_out(31 downto 31);
    tmp_fu_1234_p3 <= d_fu_344(1 downto 1);
    trunc_ln61_1_fu_1360_p1 <= lshr_ln61_fu_1355_p2(32 - 1 downto 0);
    trunc_ln61_fu_1340_p1 <= select_ln46_reg_1997(2 - 1 downto 0);
    udiv_fu_1382_p3 <= (trunc_ln61_reg_2032 & ap_const_lv2_0);
    zext_ln46_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln46_1_reg_2005),9));
    zext_ln61_1_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_1343_p3),128));
    zext_ln61_2_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_reg_2037),128));
    zext_ln61_3_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln61_reg_2042),128));
    zext_ln61_4_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_fu_1382_p3),16));
    zext_ln61_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_fu_1326_p4),64));
end behav;
