#include "filt.h"

// ch_bias = bias*b2_tap
data_t ch_bias[64] = {  9.79015176538739,	8.94418953673492,	8.57543378788956,	9.82840638012456,	9.79977620295674,	11.2333502191127,	9.35857568300782,	9.50984199226210,
                        12.5983894933022,	9.22069494623368,	9.68780389028074,	10.4324556736752,	10.9355756752145,	8.52592398527408,	9.26396927562125,	9.60012822309167,
                        10.3353860124830,	9.54459575115052,	9.27325281473637,	9.35572921542570,	10.9112400869916,	9.18264160456840,	8.57400146919785,	10.9786205450375,
                        11.5439677419630,	10.3144811245053,	8.98311507851628,	9.71930320656600,	12.1456660962240,	10.0176662806260,	10.6814151274541,	16.3031272172326,
                        9.34557545520420,	9.74775635796855,	9.69830441581028,	8.85634780188320,	9.15576444647630,	9.96642225968549,	9.70882806578611,	9.45333222056705,
                        10.1412025354453,	9.70504528549765,	10.6380988177000,	9.23346075725133,	12.0014018400600,	10.5433504088519,	10.3904705254132,	10.9992772005658,
                        10.2578516394063,	10.6059522442832,	11.1227913153468,	10.8526230462659,	10.1163847397959,	10.9481823672848,	11.2016884209396,	10.1121684017962,
                        10.7044619467556,	11.4650550932181,	12.5129379293184,	11.0395724941917,	9.75507149295493,	9.57707348982029,	9.67625199426393,	9.32515213766658};
// ch_scale = scale*16/b2_tap
data_t ch_scale[64] = { 0.0251194162856143,	0.0126569934197688,	0.0114712817764594,	0.0088876937475446,	0.0109892157322775,	0.0180142874620027,	0.0047405212266032,	0.0019476038157924,
                        0.0176558959894782,	0.0157646601003083,	0.0142197268864908,	0.0126482521607438,	0.0158853407907229,	0.0141623505952021,	0.0125100645737659,	0.0137386768099341,
                        0.0226728111812623,	0.0207135961587250,	0.0189502369316971,	0.0174296792431995,	0.0364093829258327,	0.0358521730318899,	0.0005420148118909,	0.0005485894574110,
                        0.0597526645445920,	0.0560581626257594,	0.0539592828402276,	0.0224822809981198,	0.0648601558837006,	0.0627877823423831,	0.0592543849869703,	0.0513794480287935,
                        0.0617949844414019,	0.0329397356159909,	0.0217845321058154,	0.0251825223810332,	0.0519581481165711,	0.0459246121687835,	0.0265659415946507,	0.0180640080788444,
                        0.0378093945856738,	0.0340989934842311,	0.0365186601556275,	0.0288777051347790,	0.0371945060922051,	0.0177148539968117,	0.0302824392190496,	0.0241871333721846,
                        0.0136715497552078,	0.0143711204209983,	0.0305891762805472,	0.0165715320558681,	0.0058371987513241,	0.0381717462451011,	0.0250683225332182,	0.0376816898785478,
                        0.0147733396304550,	0.0215770856486677,	0.0077070471110468,	0.0251603462260391,	0.0202644189478268,	0.0302780512000361,	0.0091274500263639,	0.0210702764706286};


void filt(int data_counter, int &in_loc, int &in_loc_last, int &out_loc, data_t data_in[b2_tap][64], ap_int<4> data_out[N*64], bool reset){
    #pragma HLS INLINE
    #pragma HLS ARRAY_PARTITION dim=1 complete variable=ch_bias
    #pragma HLS ARRAY_PARTITION dim=1 complete variable=ch_scale
    
    static data_t abs_sum[64];

FILT_LOOP:
    for(int ch=0; ch<64; ch++){
        # pragma HLS UNROLL
        if(reset){
            abs_sum[ch] = 0;
            data_out[0] = 0;
        }
        else{
            abs_sum[ch] = abs_sum[ch] - data_in[in_loc_last][ch] + data_in[in_loc][ch];
            if(data_counter==Period-1){
            	data_t temp;
            	temp = (abs_sum[ch] - ch_bias[ch]) * ch_scale[ch];
            	for(int bit=0;bit<4;bit++){
            		data_out[out_loc*64+ch][bit] = temp[6+bit];
            	}
//            	data_out[out_loc*64+ch] = (abs_sum[ch] - ch_bias[ch]) * ch_scale[ch];
            }
        }
    }
    if(!reset){
        if(in_loc==b2_tap-1) in_loc = 0;
        else                 in_loc += 1;
        if(in_loc_last==b2_tap-1) in_loc_last = 0;
        else                      in_loc_last += 1;

        if(data_counter==Period-1){
            data_counter = 0;
            if(out_loc==N-1) out_loc = 0;
            else             out_loc += 1;
        }
    }
    return;
}
