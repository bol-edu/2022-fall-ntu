// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dpu_keygen_dpu_pack_4_Pipeline_VITIS_LOOP_490_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        this_5_6,
        sk_address0,
        sk_ce0,
        sk_q0,
        sk_address1,
        sk_ce1,
        sk_q1,
        this_5_7_out,
        this_5_7_out_ap_vld,
        ptr_i,
        ptr_o,
        ptr_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 7'd1;
parameter    ap_ST_fsm_pp0_stage1 = 7'd2;
parameter    ap_ST_fsm_pp0_stage2 = 7'd4;
parameter    ap_ST_fsm_pp0_stage3 = 7'd8;
parameter    ap_ST_fsm_pp0_stage4 = 7'd16;
parameter    ap_ST_fsm_pp0_stage5 = 7'd32;
parameter    ap_ST_fsm_pp0_stage6 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8191:0] this_5_6;
output  [11:0] sk_address0;
output   sk_ce0;
input  [7:0] sk_q0;
output  [11:0] sk_address1;
output   sk_ce1;
input  [7:0] sk_q1;
output  [8191:0] this_5_7_out;
output   this_5_7_out_ap_vld;
input  [31:0] ptr_i;
output  [31:0] ptr_o;
output   ptr_o_ap_vld;

reg ap_idle;
reg[11:0] sk_address0;
reg sk_ce0;
reg[11:0] sk_address1;
reg sk_ce1;
reg this_5_7_out_ap_vld;
reg[31:0] ptr_o;
reg ptr_o_ap_vld;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln490_reg_1210;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_subdone;
reg   [7:0] reg_276;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [5:0] i_reg_1204;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln490_fu_294_p2;
wire   [11:0] trunc_ln492_fu_304_p1;
reg   [11:0] trunc_ln492_reg_1214;
wire   [12:0] shl_ln_fu_393_p3;
reg   [12:0] shl_ln_reg_1249;
wire   [12:0] or_ln502_fu_439_p2;
reg   [12:0] or_ln502_reg_1255;
wire   [8191:0] zext_ln502_fu_445_p1;
reg   [8191:0] zext_ln502_reg_1260;
wire   [8191:0] and_ln502_fu_461_p2;
reg   [8191:0] and_ln502_reg_1265;
reg   [5:0] lshr_ln3_reg_1270;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [13:0] sub_ln502_fu_570_p2;
reg   [13:0] sub_ln502_reg_1285;
reg   [7:0] sk_load_9_reg_1290;
wire   [8191:0] or_ln503_fu_675_p2;
reg   [8191:0] or_ln503_reg_1305;
reg   [3:0] lshr_ln5_reg_1310;
wire   [12:0] or_ln504_fu_770_p2;
reg   [12:0] or_ln504_reg_1325;
wire   [8191:0] zext_ln505_fu_818_p1;
reg   [8191:0] zext_ln505_reg_1331;
wire   [8191:0] and_ln505_fu_834_p2;
reg   [8191:0] and_ln505_reg_1336;
wire   [8191:0] or_ln506_fu_974_p2;
reg   [8191:0] or_ln506_reg_1351;
reg   [4:0] lshr_ln8_reg_1356;
wire    ap_block_pp0_stage6_11001;
wire   [8191:0] zext_ln508_fu_1123_p1;
reg   [8191:0] zext_ln508_reg_1366;
wire   [8191:0] and_ln508_fu_1139_p2;
reg   [8191:0] and_ln508_reg_1371;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln492_fu_308_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln492_1_fu_319_p1;
wire   [63:0] zext_ln493_fu_365_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln493_2_fu_375_p1;
wire   [63:0] zext_ln494_fu_555_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln495_fu_565_p1;
wire   [63:0] zext_ln495_2_fu_596_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln496_fu_606_p1;
wire   [63:0] zext_ln496_1_fu_745_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln497_fu_755_p1;
wire   [63:0] zext_ln498_fu_888_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln498_2_fu_898_p1;
wire   [63:0] zext_ln499_fu_1061_p1;
wire    ap_block_pp0_stage6;
wire   [31:0] add_ln509_fu_324_p2;
reg   [5:0] i_28_fu_142;
wire   [5:0] add_ln490_fu_336_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i;
reg   [8191:0] this_5_7_fu_146;
wire   [8191:0] or_ln508_1_fu_1175_p2;
wire    ap_block_pp0_stage1_01001;
wire   [11:0] add_ln492_fu_313_p2;
wire   [4:0] trunc_ln492_1_fu_344_p1;
wire   [12:0] t_fu_348_p3;
wire   [11:0] add_ln493_fu_360_p2;
wire   [11:0] add_ln493_1_fu_370_p2;
wire   [13:0] zext_ln491_fu_356_p1;
wire   [13:0] sub_ln501_fu_380_p2;
wire   [4:0] trunc_ln501_fu_390_p1;
wire   [8191:0] zext_ln501_fu_401_p1;
wire   [8191:0] shl_ln501_fu_405_p2;
wire   [8191:0] xor_ln501_fu_411_p2;
wire  signed [31:0] sext_ln501_fu_386_p1;
wire   [8191:0] zext_ln501_1_fu_423_p1;
wire   [8191:0] and_ln501_fu_417_p2;
wire   [8191:0] shl_ln501_1_fu_427_p2;
wire   [8191:0] shl_ln502_fu_449_p2;
wire   [8191:0] or_ln501_fu_433_p2;
wire   [8191:0] xor_ln502_fu_455_p2;
wire   [2:0] lshr_ln2_fu_472_p4;
wire   [7:0] zext_ln493_1_fu_482_p1;
wire   [5:0] trunc_ln493_fu_486_p1;
wire   [8:0] tmp_fu_502_p3;
wire   [8:0] tmp_781_fu_494_p3;
wire   [1:0] trunc_ln493_1_fu_490_p1;
wire   [1:0] tmp_1288_fu_516_p4;
wire   [8:0] or_ln493_fu_510_p2;
wire   [12:0] t_1_fu_526_p4;
wire   [11:0] add_ln494_fu_550_p2;
wire   [11:0] add_ln495_fu_560_p2;
wire   [13:0] zext_ln491_1_fu_536_p1;
wire   [6:0] trunc_ln494_fu_576_p1;
wire   [12:0] t_2_fu_580_p3;
wire   [11:0] add_ln495_1_fu_591_p2;
wire   [11:0] add_ln496_fu_601_p2;
wire  signed [31:0] sext_ln502_fu_611_p1;
wire   [8191:0] zext_ln502_1_fu_614_p1;
wire   [8191:0] shl_ln502_1_fu_618_p2;
wire   [13:0] zext_ln491_2_fu_587_p1;
wire   [13:0] sub_ln503_fu_628_p2;
wire   [12:0] add_ln503_fu_638_p2;
wire   [8191:0] zext_ln503_fu_643_p1;
wire   [8191:0] shl_ln503_fu_647_p2;
wire   [8191:0] or_ln502_1_fu_623_p2;
wire   [8191:0] xor_ln503_fu_653_p2;
wire  signed [31:0] sext_ln503_fu_634_p1;
wire   [8191:0] zext_ln503_1_fu_665_p1;
wire   [8191:0] and_ln503_fu_659_p2;
wire   [8191:0] shl_ln503_1_fu_669_p2;
wire   [0:0] tmp_1289_fu_681_p3;
wire   [7:0] zext_ln495_1_fu_689_p1;
wire   [8:0] tmp_784_fu_704_p3;
wire   [8:0] shl_ln8_fu_693_p3;
wire   [3:0] trunc_ln495_fu_700_p1;
wire   [8:0] or_ln495_fu_712_p2;
wire   [12:0] t_3_fu_718_p3;
wire   [11:0] add_ln496_1_fu_740_p2;
wire   [11:0] add_ln497_fu_750_p2;
wire   [13:0] zext_ln491_3_fu_726_p1;
wire   [13:0] sub_ln504_fu_760_p2;
wire   [8191:0] zext_ln504_fu_775_p1;
wire   [8191:0] shl_ln504_fu_779_p2;
wire   [8191:0] xor_ln504_fu_785_p2;
wire  signed [31:0] sext_ln504_fu_766_p1;
wire   [8191:0] zext_ln504_1_fu_796_p1;
wire   [8191:0] and_ln504_fu_791_p2;
wire   [8191:0] shl_ln504_1_fu_800_p2;
wire   [12:0] add_ln505_fu_812_p2;
wire   [8191:0] shl_ln505_fu_822_p2;
wire   [8191:0] or_ln504_1_fu_806_p2;
wire   [8191:0] xor_ln505_fu_828_p2;
wire   [0:0] trunc_ln496_fu_840_p1;
wire   [12:0] t_4_fu_844_p4;
wire   [5:0] trunc_ln497_fu_867_p1;
wire   [6:0] lshr_ln6_fu_857_p4;
wire   [12:0] t_5_fu_871_p3;
wire   [11:0] add_ln498_fu_883_p2;
wire   [11:0] add_ln498_1_fu_893_p2;
wire   [13:0] zext_ln491_4_fu_853_p1;
wire   [13:0] sub_ln505_fu_903_p2;
wire  signed [31:0] sext_ln505_fu_909_p1;
wire   [8191:0] zext_ln505_1_fu_913_p1;
wire   [8191:0] shl_ln505_1_fu_917_p2;
wire   [13:0] zext_ln491_5_fu_879_p1;
wire   [13:0] sub_ln506_fu_927_p2;
wire   [12:0] add_ln506_fu_937_p2;
wire   [8191:0] zext_ln506_fu_942_p1;
wire   [8191:0] shl_ln506_fu_946_p2;
wire   [8191:0] or_ln505_fu_922_p2;
wire   [8191:0] xor_ln506_fu_952_p2;
wire  signed [31:0] sext_ln506_fu_933_p1;
wire   [8191:0] zext_ln506_1_fu_964_p1;
wire   [8191:0] and_ln506_fu_958_p2;
wire   [8191:0] shl_ln506_1_fu_968_p2;
wire   [1:0] lshr_ln7_fu_980_p4;
wire   [7:0] zext_ln498_1_fu_990_p1;
wire   [6:0] trunc_ln498_fu_994_p1;
wire   [8:0] tmp_1290_fu_1010_p3;
wire   [8:0] tmp_798_fu_1002_p3;
wire   [2:0] trunc_ln498_1_fu_998_p1;
wire   [0:0] tmp_1291_fu_1024_p3;
wire   [8:0] or_ln498_fu_1018_p2;
wire   [12:0] t_6_fu_1032_p4;
wire   [11:0] add_ln499_fu_1056_p2;
wire   [13:0] zext_ln491_6_fu_1042_p1;
wire   [13:0] sub_ln507_fu_1066_p2;
wire   [12:0] add_ln507_fu_1076_p2;
wire   [8191:0] zext_ln507_fu_1081_p1;
wire   [8191:0] shl_ln507_fu_1085_p2;
wire   [8191:0] xor_ln507_fu_1091_p2;
wire  signed [31:0] sext_ln507_fu_1072_p1;
wire   [8191:0] zext_ln507_1_fu_1102_p1;
wire   [8191:0] and_ln507_fu_1097_p2;
wire   [8191:0] shl_ln507_1_fu_1106_p2;
wire   [12:0] or_ln508_fu_1118_p2;
wire   [8191:0] shl_ln508_fu_1127_p2;
wire   [8191:0] or_ln507_fu_1112_p2;
wire   [8191:0] xor_ln508_fu_1133_p2;
wire   [12:0] t_7_fu_1145_p3;
wire   [13:0] zext_ln491_7_fu_1152_p1;
wire   [13:0] sub_ln508_fu_1156_p2;
wire  signed [31:0] sext_ln508_fu_1162_p1;
wire   [8191:0] zext_ln508_1_fu_1166_p1;
wire   [8191:0] shl_ln508_1_fu_1170_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dpu_keygen_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_28_fu_142 <= 6'd0;
    end else if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_28_fu_142 <= add_ln490_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_276 <= sk_q1;
    end else if ((((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_276 <= sk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_5_7_fu_146 <= this_5_6;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            this_5_7_fu_146 <= or_ln508_1_fu_1175_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln502_reg_1265 <= and_ln502_fu_461_p2;
        or_ln502_reg_1255[12 : 8] <= or_ln502_fu_439_p2[12 : 8];
        shl_ln_reg_1249[12 : 8] <= shl_ln_fu_393_p3[12 : 8];
        zext_ln502_reg_1260[12 : 8] <= zext_ln502_fu_445_p1[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln505_reg_1336 <= and_ln505_fu_834_p2;
        lshr_ln5_reg_1310 <= {{sk_q0[7:4]}};
        or_ln504_reg_1325[12 : 8] <= or_ln504_fu_770_p2[12 : 8];
        zext_ln505_reg_1331[12 : 8] <= zext_ln505_fu_818_p1[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln508_reg_1371 <= and_ln508_fu_1139_p2;
        lshr_ln8_reg_1356 <= {{sk_q0[7:3]}};
        zext_ln508_reg_1366[12 : 8] <= zext_ln508_fu_1123_p1[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1204 <= ap_sig_allocacmp_i;
        icmp_ln490_reg_1210 <= icmp_ln490_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lshr_ln3_reg_1270 <= {{sk_q0[7:2]}};
        sub_ln502_reg_1285 <= sub_ln502_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln503_reg_1305 <= or_ln503_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        or_ln506_reg_1351 <= or_ln506_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sk_load_9_reg_1290 <= sk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln490_fu_294_p2 == 1'd0))) begin
        trunc_ln492_reg_1214 <= trunc_ln492_fu_304_p1;
    end
end

always @ (*) begin
    if (((icmp_ln490_reg_1210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 6'd0;
    end else begin
        ap_sig_allocacmp_i = i_28_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln490_fu_294_p2 == 1'd0))) begin
        ptr_o = add_ln509_fu_324_p2;
    end else begin
        ptr_o = ptr_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln490_fu_294_p2 == 1'd0))) begin
        ptr_o_ap_vld = 1'b1;
    end else begin
        ptr_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            sk_address0 = zext_ln499_fu_1061_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            sk_address0 = zext_ln498_2_fu_898_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            sk_address0 = zext_ln497_fu_755_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            sk_address0 = zext_ln496_fu_606_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            sk_address0 = zext_ln495_fu_565_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            sk_address0 = zext_ln493_2_fu_375_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sk_address0 = zext_ln492_1_fu_319_p1;
        end else begin
            sk_address0 = 'bx;
        end
    end else begin
        sk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            sk_address1 = zext_ln498_fu_888_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            sk_address1 = zext_ln496_1_fu_745_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            sk_address1 = zext_ln495_2_fu_596_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            sk_address1 = zext_ln494_fu_555_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            sk_address1 = zext_ln493_fu_365_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sk_address1 = zext_ln492_fu_308_p1;
        end else begin
            sk_address1 = 'bx;
        end
    end else begin
        sk_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        sk_ce0 = 1'b1;
    end else begin
        sk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        sk_ce1 = 1'b1;
    end else begin
        sk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln490_reg_1210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_5_7_out_ap_vld = 1'b1;
    end else begin
        this_5_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln490_fu_336_p2 = (i_reg_1204 + 6'd1);

assign add_ln492_fu_313_p2 = (trunc_ln492_fu_304_p1 + 12'd1);

assign add_ln493_1_fu_370_p2 = (trunc_ln492_reg_1214 + 12'd3);

assign add_ln493_fu_360_p2 = (trunc_ln492_reg_1214 + 12'd2);

assign add_ln494_fu_550_p2 = (trunc_ln492_reg_1214 + 12'd4);

assign add_ln495_1_fu_591_p2 = (trunc_ln492_reg_1214 + 12'd6);

assign add_ln495_fu_560_p2 = (trunc_ln492_reg_1214 + 12'd5);

assign add_ln496_1_fu_740_p2 = (trunc_ln492_reg_1214 + 12'd8);

assign add_ln496_fu_601_p2 = (trunc_ln492_reg_1214 + 12'd7);

assign add_ln497_fu_750_p2 = (trunc_ln492_reg_1214 + 12'd9);

assign add_ln498_1_fu_893_p2 = (trunc_ln492_reg_1214 + 12'd11);

assign add_ln498_fu_883_p2 = (trunc_ln492_reg_1214 + 12'd10);

assign add_ln499_fu_1056_p2 = (trunc_ln492_reg_1214 + 12'd12);

assign add_ln503_fu_638_p2 = (or_ln502_reg_1255 + 13'd32);

assign add_ln505_fu_812_p2 = (or_ln504_fu_770_p2 + 13'd32);

assign add_ln506_fu_937_p2 = (or_ln504_reg_1325 + 13'd64);

assign add_ln507_fu_1076_p2 = (or_ln504_reg_1325 + 13'd96);

assign add_ln509_fu_324_p2 = (ptr_i + 32'd13);

assign and_ln501_fu_417_p2 = (xor_ln501_fu_411_p2 & this_5_7_fu_146);

assign and_ln502_fu_461_p2 = (xor_ln502_fu_455_p2 & or_ln501_fu_433_p2);

assign and_ln503_fu_659_p2 = (xor_ln503_fu_653_p2 & or_ln502_1_fu_623_p2);

assign and_ln504_fu_791_p2 = (xor_ln504_fu_785_p2 & or_ln503_reg_1305);

assign and_ln505_fu_834_p2 = (xor_ln505_fu_828_p2 & or_ln504_1_fu_806_p2);

assign and_ln506_fu_958_p2 = (xor_ln506_fu_952_p2 & or_ln505_fu_922_p2);

assign and_ln507_fu_1097_p2 = (xor_ln507_fu_1091_p2 & or_ln506_reg_1351);

assign and_ln508_fu_1139_p2 = (xor_ln508_fu_1133_p2 & or_ln507_fu_1112_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign icmp_ln490_fu_294_p2 = ((ap_sig_allocacmp_i == 6'd32) ? 1'b1 : 1'b0);

assign lshr_ln2_fu_472_p4 = {{reg_276[7:5]}};

assign lshr_ln6_fu_857_p4 = {{sk_q1[7:1]}};

assign lshr_ln7_fu_980_p4 = {{reg_276[7:6]}};

assign or_ln493_fu_510_p2 = (tmp_fu_502_p3 | tmp_781_fu_494_p3);

assign or_ln495_fu_712_p2 = (tmp_784_fu_704_p3 | shl_ln8_fu_693_p3);

assign or_ln498_fu_1018_p2 = (tmp_798_fu_1002_p3 | tmp_1290_fu_1010_p3);

assign or_ln501_fu_433_p2 = (shl_ln501_1_fu_427_p2 | and_ln501_fu_417_p2);

assign or_ln502_1_fu_623_p2 = (shl_ln502_1_fu_618_p2 | and_ln502_reg_1265);

assign or_ln502_fu_439_p2 = (shl_ln_fu_393_p3 | 13'd32);

assign or_ln503_fu_675_p2 = (shl_ln503_1_fu_669_p2 | and_ln503_fu_659_p2);

assign or_ln504_1_fu_806_p2 = (shl_ln504_1_fu_800_p2 | and_ln504_fu_791_p2);

assign or_ln504_fu_770_p2 = (shl_ln_reg_1249 | 13'd96);

assign or_ln505_fu_922_p2 = (shl_ln505_1_fu_917_p2 | and_ln505_reg_1336);

assign or_ln506_fu_974_p2 = (shl_ln506_1_fu_968_p2 | and_ln506_fu_958_p2);

assign or_ln507_fu_1112_p2 = (shl_ln507_1_fu_1106_p2 | and_ln507_fu_1097_p2);

assign or_ln508_1_fu_1175_p2 = (shl_ln508_1_fu_1170_p2 | and_ln508_reg_1371);

assign or_ln508_fu_1118_p2 = (shl_ln_reg_1249 | 13'd224);

assign sext_ln501_fu_386_p1 = $signed(sub_ln501_fu_380_p2);

assign sext_ln502_fu_611_p1 = $signed(sub_ln502_reg_1285);

assign sext_ln503_fu_634_p1 = $signed(sub_ln503_fu_628_p2);

assign sext_ln504_fu_766_p1 = $signed(sub_ln504_fu_760_p2);

assign sext_ln505_fu_909_p1 = $signed(sub_ln505_fu_903_p2);

assign sext_ln506_fu_933_p1 = $signed(sub_ln506_fu_927_p2);

assign sext_ln507_fu_1072_p1 = $signed(sub_ln507_fu_1066_p2);

assign sext_ln508_fu_1162_p1 = $signed(sub_ln508_fu_1156_p2);

assign shl_ln501_1_fu_427_p2 = zext_ln501_1_fu_423_p1 << zext_ln501_fu_401_p1;

assign shl_ln501_fu_405_p2 = 8192'd4294967295 << zext_ln501_fu_401_p1;

assign shl_ln502_1_fu_618_p2 = zext_ln502_1_fu_614_p1 << zext_ln502_reg_1260;

assign shl_ln502_fu_449_p2 = 8192'd4294967295 << zext_ln502_fu_445_p1;

assign shl_ln503_1_fu_669_p2 = zext_ln503_1_fu_665_p1 << zext_ln503_fu_643_p1;

assign shl_ln503_fu_647_p2 = 8192'd4294967295 << zext_ln503_fu_643_p1;

assign shl_ln504_1_fu_800_p2 = zext_ln504_1_fu_796_p1 << zext_ln504_fu_775_p1;

assign shl_ln504_fu_779_p2 = 8192'd4294967295 << zext_ln504_fu_775_p1;

assign shl_ln505_1_fu_917_p2 = zext_ln505_1_fu_913_p1 << zext_ln505_reg_1331;

assign shl_ln505_fu_822_p2 = 8192'd4294967295 << zext_ln505_fu_818_p1;

assign shl_ln506_1_fu_968_p2 = zext_ln506_1_fu_964_p1 << zext_ln506_fu_942_p1;

assign shl_ln506_fu_946_p2 = 8192'd4294967295 << zext_ln506_fu_942_p1;

assign shl_ln507_1_fu_1106_p2 = zext_ln507_1_fu_1102_p1 << zext_ln507_fu_1081_p1;

assign shl_ln507_fu_1085_p2 = 8192'd4294967295 << zext_ln507_fu_1081_p1;

assign shl_ln508_1_fu_1170_p2 = zext_ln508_1_fu_1166_p1 << zext_ln508_reg_1366;

assign shl_ln508_fu_1127_p2 = 8192'd4294967295 << zext_ln508_fu_1123_p1;

assign shl_ln8_fu_693_p3 = {{sk_load_9_reg_1290}, {1'd0}};

assign shl_ln_fu_393_p3 = {{trunc_ln501_fu_390_p1}, {8'd0}};

assign sub_ln501_fu_380_p2 = (14'd4096 - zext_ln491_fu_356_p1);

assign sub_ln502_fu_570_p2 = (14'd4096 - zext_ln491_1_fu_536_p1);

assign sub_ln503_fu_628_p2 = (14'd4096 - zext_ln491_2_fu_587_p1);

assign sub_ln504_fu_760_p2 = (14'd4096 - zext_ln491_3_fu_726_p1);

assign sub_ln505_fu_903_p2 = (14'd4096 - zext_ln491_4_fu_853_p1);

assign sub_ln506_fu_927_p2 = (14'd4096 - zext_ln491_5_fu_879_p1);

assign sub_ln507_fu_1066_p2 = (14'd4096 - zext_ln491_6_fu_1042_p1);

assign sub_ln508_fu_1156_p2 = (14'd4096 - zext_ln491_7_fu_1152_p1);

assign t_1_fu_526_p4 = {{{trunc_ln493_1_fu_490_p1}, {tmp_1288_fu_516_p4}}, {or_ln493_fu_510_p2}};

assign t_2_fu_580_p3 = {{trunc_ln494_fu_576_p1}, {lshr_ln3_reg_1270}};

assign t_3_fu_718_p3 = {{trunc_ln495_fu_700_p1}, {or_ln495_fu_712_p2}};

assign t_4_fu_844_p4 = {{{trunc_ln496_fu_840_p1}, {reg_276}}, {lshr_ln5_reg_1310}};

assign t_5_fu_871_p3 = {{trunc_ln497_fu_867_p1}, {lshr_ln6_fu_857_p4}};

assign t_6_fu_1032_p4 = {{{trunc_ln498_1_fu_998_p1}, {tmp_1291_fu_1024_p3}}, {or_ln498_fu_1018_p2}};

assign t_7_fu_1145_p3 = {{sk_q0}, {lshr_ln8_reg_1356}};

assign t_fu_348_p3 = {{trunc_ln492_1_fu_344_p1}, {sk_q1}};

assign this_5_7_out = this_5_7_fu_146;

assign tmp_1288_fu_516_p4 = {{sk_q1[7:6]}};

assign tmp_1289_fu_681_p3 = reg_276[32'd7];

assign tmp_1290_fu_1010_p3 = {{trunc_ln498_fu_994_p1}, {2'd0}};

assign tmp_1291_fu_1024_p3 = sk_q1[32'd7];

assign tmp_781_fu_494_p3 = {{1'd0}, {zext_ln493_1_fu_482_p1}};

assign tmp_784_fu_704_p3 = {{1'd0}, {zext_ln495_1_fu_689_p1}};

assign tmp_798_fu_1002_p3 = {{1'd0}, {zext_ln498_1_fu_990_p1}};

assign tmp_fu_502_p3 = {{trunc_ln493_fu_486_p1}, {3'd0}};

assign trunc_ln492_1_fu_344_p1 = sk_q0[4:0];

assign trunc_ln492_fu_304_p1 = ptr_i[11:0];

assign trunc_ln493_1_fu_490_p1 = sk_q0[1:0];

assign trunc_ln493_fu_486_p1 = sk_q1[5:0];

assign trunc_ln494_fu_576_p1 = sk_q1[6:0];

assign trunc_ln495_fu_700_p1 = sk_q1[3:0];

assign trunc_ln496_fu_840_p1 = sk_q1[0:0];

assign trunc_ln497_fu_867_p1 = sk_q0[5:0];

assign trunc_ln498_1_fu_998_p1 = sk_q0[2:0];

assign trunc_ln498_fu_994_p1 = sk_q1[6:0];

assign trunc_ln501_fu_390_p1 = i_reg_1204[4:0];

assign xor_ln501_fu_411_p2 = (shl_ln501_fu_405_p2 ^ 8192'd

assign xor_ln502_fu_455_p2 = (shl_ln502_fu_449_p2 ^ 8192'd

assign xor_ln503_fu_653_p2 = (shl_ln503_fu_647_p2 ^ 8192'd

assign xor_ln504_fu_785_p2 = (shl_ln504_fu_779_p2 ^ 8192'd

assign xor_ln505_fu_828_p2 = (shl_ln505_fu_822_p2 ^ 8192'd1090748135619415929462984244733782862448264161996232692431832786189721331849119295216264234525201987223957291796157025273109870820177184063610979765077554799078906298842192989538609825228048205159696851613591638196771886542609324560121290553901886301017900252535799917200010079600026535836800905297805880952350501630195475653911005312364560014847426035293551245843928918752768696279344088055617515694349945406677825140814900616105920256438504578013326493565836047242407382442812245131517757519164899226365743722432277368075027627883045206501792761700945699168497257879683851737049996900961120515655050115561271491492515342105748966629547032786321505730828430221664970324396138635251626409516168005427623435996308921691446181187406395310665404885739434832877428167407495370993511868756359970390117021823616749458620969857006263612082706715408157066575137281027022310927564910276759160520878304632411049364568754920967322982459184763427383790272448438018526977764941072715611580434690827459339991961414242741410599117426060556483763756314527611362658628383368621157993638020878537675545336789915694234433955666315070087213535470255670312004130725495834508357439653828936077080978550578912967907352780054935621561090795845172954115972927479877527738560008204118558930004777748727761853813510493840581861598652211605960308356405941821189714037868726219481498727603653616298856174822413033485438785324024751419417183012281078209729303537372804574372095228703622776363945290869806258422355148507571039619387449629866808188769662815778153079393179093143648340761738581819563002994422790754955061288818308430079648693232179158765918035565216157115402992120276155607873107937477466841528362987708699450152031231862594203085693838944657061346236704234026821102958954951197087076546186622796294536451620756509351018906023773821539532776208676978589731966330308893304665169436185078350641568336944530051437491311298834367265238595404904273455928723949525227184617404367854754610474377019768025576605881038077270707717942221977090385438585844095492116099852538903974655703943973086090930596963360767529964938414598185705963754561497355827813623833288906309004288017321424808663962671333528009232758350873059614118723781422101460198615747386855096896089189180441339558524822867541113212638793675567650340362970031930023397828465318547238244232028015189689660418822976000815437610652254270163595650875433851147123214227266605403581781469090806576468950587661997186505665475715792895);

assign xor_ln506_fu_952_p2 = (shl_ln506_fu_946_p2 ^ 8192'd

assign xor_ln507_fu_1091_p2 = (shl_ln507_fu_1085_p2 ^ 8192'd1090748135619415929462984244733782862448264161996232692431832786189721331849119295216264234525201987223957291796157025273109870820177184063610979765077554799078906298842192989538609825228048205159696851613591638196771886542609324560121290553901886301017900252535799917200010079600026535836800905297805880952350501630195475653911005312364560014847426035293551245843928918752768696279344088055617515694349945406677825140814900616105920256438504578013326493565836047242407382442812245131517757519164899226365743722432277368075027627883045206501792761700945699168497257879683851737049996900961120515655050115561271491492515342105748966629547032786321505730828430221664970324396138635251626409516168005427623435996308921691446181187406395310665404885739434832877428167407495370993511868756359970390117021823616749458620969857006263612082706715408157066575137281027022310927564910276759160520878304632411049364568754920967322982459184763427383790272448438018526977764941072715611580434690827459339991961414242741410599117426060556483763756314527611362658628383368621157993638020878537675545336789915694234433955666315070087213535470255670312004130725495834508357439653828936077080978550578912967907352780054935621561090795845172954115972927479877527738560008204118558930004777748727761853813510493840581861598652211605960308356405941821189714037868726219481498727603653616298856174822413033485438785324024751419417183012281078209729303537372804574372095228703622776363945290869806258422355148507571039619387449629866808188769662815778153079393179093143648340761738581819563002994422790754955061288818308430079648693232179158765918035565216157115402992120276155607873107937477466841528362987708699450152031231862594203085693838944657061346236704234026821102958954951197087076546186622796294536451620756509351018906023773821539532776208676978589731966330308893304665169436185078350641568336944530051437491311298834367265238595404904273455928723949525227184617404367854754610474377019768025576605881038077270707717942221977090385438585844095492116099852538903974655703943973086090930596963360767529964938414598185705963754561497355827813623833288906309004288017321424808663962671333528009232758350873059614118723781422101460198615747386855096896089189180441339558524822867541113212638793675567650340362970031930023397828465318547238244232028015189689660418822976000815437610652254270163595650875433851147123214227266605403581781469090806576468950587661997186505665475715792895);

assign xor_ln508_fu_1133_p2 = (shl_ln508_fu_1127_p2 ^ 8192'd

assign zext_ln491_1_fu_536_p1 = t_1_fu_526_p4;

assign zext_ln491_2_fu_587_p1 = t_2_fu_580_p3;

assign zext_ln491_3_fu_726_p1 = t_3_fu_718_p3;

assign zext_ln491_4_fu_853_p1 = t_4_fu_844_p4;

assign zext_ln491_5_fu_879_p1 = t_5_fu_871_p3;

assign zext_ln491_6_fu_1042_p1 = t_6_fu_1032_p4;

assign zext_ln491_7_fu_1152_p1 = t_7_fu_1145_p3;

assign zext_ln491_fu_356_p1 = t_fu_348_p3;

assign zext_ln492_1_fu_319_p1 = add_ln492_fu_313_p2;

assign zext_ln492_fu_308_p1 = ptr_i;

assign zext_ln493_1_fu_482_p1 = lshr_ln2_fu_472_p4;

assign zext_ln493_2_fu_375_p1 = add_ln493_1_fu_370_p2;

assign zext_ln493_fu_365_p1 = add_ln493_fu_360_p2;

assign zext_ln494_fu_555_p1 = add_ln494_fu_550_p2;

assign zext_ln495_1_fu_689_p1 = tmp_1289_fu_681_p3;

assign zext_ln495_2_fu_596_p1 = add_ln495_1_fu_591_p2;

assign zext_ln495_fu_565_p1 = add_ln495_fu_560_p2;

assign zext_ln496_1_fu_745_p1 = add_ln496_1_fu_740_p2;

assign zext_ln496_fu_606_p1 = add_ln496_fu_601_p2;

assign zext_ln497_fu_755_p1 = add_ln497_fu_750_p2;

assign zext_ln498_1_fu_990_p1 = lshr_ln7_fu_980_p4;

assign zext_ln498_2_fu_898_p1 = add_ln498_1_fu_893_p2;

assign zext_ln498_fu_888_p1 = add_ln498_fu_883_p2;

assign zext_ln499_fu_1061_p1 = add_ln499_fu_1056_p2;

assign zext_ln501_1_fu_423_p1 = $unsigned(sext_ln501_fu_386_p1);

assign zext_ln501_fu_401_p1 = shl_ln_fu_393_p3;

assign zext_ln502_1_fu_614_p1 = $unsigned(sext_ln502_fu_611_p1);

assign zext_ln502_fu_445_p1 = or_ln502_fu_439_p2;

assign zext_ln503_1_fu_665_p1 = $unsigned(sext_ln503_fu_634_p1);

assign zext_ln503_fu_643_p1 = add_ln503_fu_638_p2;

assign zext_ln504_1_fu_796_p1 = $unsigned(sext_ln504_fu_766_p1);

assign zext_ln504_fu_775_p1 = or_ln504_fu_770_p2;

assign zext_ln505_1_fu_913_p1 = $unsigned(sext_ln505_fu_909_p1);

assign zext_ln505_fu_818_p1 = add_ln505_fu_812_p2;

assign zext_ln506_1_fu_964_p1 = $unsigned(sext_ln506_fu_933_p1);

assign zext_ln506_fu_942_p1 = add_ln506_fu_937_p2;

assign zext_ln507_1_fu_1102_p1 = $unsigned(sext_ln507_fu_1072_p1);

assign zext_ln507_fu_1081_p1 = add_ln507_fu_1076_p2;

assign zext_ln508_1_fu_1166_p1 = $unsigned(sext_ln508_fu_1162_p1);

assign zext_ln508_fu_1123_p1 = or_ln508_fu_1118_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1249[7:0] <= 8'b00000000;
    or_ln502_reg_1255[7:0] <= 8'b00100000;
    zext_ln502_reg_1260[7:0] <= 8'b00100000;
    zext_ln502_reg_1260[8191:13] <= 8179'
    or_ln504_reg_1325[7:0] <= 8'b01100000;
    zext_ln505_reg_1331[7:0] <= 8'b10000000;
    zext_ln505_reg_1331[8191:13] <= 8179'
    zext_ln508_reg_1366[7:0] <= 8'b11100000;
    zext_ln508_reg_1366[8191:13] <= 8179'
end

endmodule //dpu_keygen_dpu_pack_4_Pipeline_VITIS_LOOP_490_8
