// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dpu_keygen_dpu_func_Pipeline_FUNC_NTT_LOOP5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        this_p1_22_reload,
        this_p2_11_reload,
        this_p3_23_reload,
        this_p4_23_reload,
        itr_cast,
        this_pMem_address0,
        this_pMem_ce0,
        this_pMem_we0,
        this_pMem_d0,
        this_pMem_q0,
        addr1,
        this_p1_23_out,
        this_p1_23_out_ap_vld,
        this_p2_12_out,
        this_p2_12_out_ap_vld,
        this_p3_24_out,
        this_p3_24_out_ap_vld,
        this_p4_24_out,
        this_p4_24_out_ap_vld,
        grp_dpu_unit_fu_2995_p_din1,
        grp_dpu_unit_fu_2995_p_din2,
        grp_dpu_unit_fu_2995_p_din3,
        grp_dpu_unit_fu_2995_p_din4,
        grp_dpu_unit_fu_2995_p_din5,
        grp_dpu_unit_fu_2995_p_dout0_0,
        grp_dpu_unit_fu_2995_p_dout0_1,
        grp_dpu_unit_fu_2995_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8191:0] this_p1_22_reload;
input  [8191:0] this_p2_11_reload;
input  [8191:0] this_p3_23_reload;
input  [8191:0] this_p4_23_reload;
input  [2:0] itr_cast;
output  [7:0] this_pMem_address0;
output   this_pMem_ce0;
output  [1023:0] this_pMem_we0;
output  [8191:0] this_pMem_d0;
input  [8191:0] this_pMem_q0;
input  [7:0] addr1;
output  [8191:0] this_p1_23_out;
output   this_p1_23_out_ap_vld;
output  [8191:0] this_p2_12_out;
output   this_p2_12_out_ap_vld;
output  [8191:0] this_p3_24_out;
output   this_p3_24_out_ap_vld;
output  [8191:0] this_p4_24_out;
output   this_p4_24_out_ap_vld;
output  [8191:0] grp_dpu_unit_fu_2995_p_din1;
output  [8191:0] grp_dpu_unit_fu_2995_p_din2;
output  [8191:0] grp_dpu_unit_fu_2995_p_din3;
output  [8191:0] grp_dpu_unit_fu_2995_p_din4;
output  [7:0] grp_dpu_unit_fu_2995_p_din5;
input  [8191:0] grp_dpu_unit_fu_2995_p_dout0_0;
input  [8191:0] grp_dpu_unit_fu_2995_p_dout0_1;
output   grp_dpu_unit_fu_2995_p_ce;

reg ap_idle;
reg[7:0] this_pMem_address0;
reg this_pMem_ce0;
reg[1023:0] this_pMem_we0;
reg this_p1_23_out_ap_vld;
reg this_p2_12_out_ap_vld;
reg this_p3_24_out_ap_vld;
reg this_p4_24_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln329_reg_4446;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln329_fu_1233_p2;
reg   [7:0] this_pMem_addr_reg_4450;
reg   [7:0] this_pMem_addr_reg_4450_pp0_iter1_reg;
reg   [8191:0] this_p3_ret_reg_4455;
reg   [8191:0] this_p4_ret_reg_4461;
reg    ap_enable_reg_pp0_iter0_reg;
reg    grp_dpu_unit_fu_1195_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call268;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call268;
wire    ap_block_pp0_stage0_11001_ignoreCallOp304;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call268;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call268;
wire    ap_block_pp0_stage1_11001_ignoreCallOp301;
wire   [8191:0] tmp_665_fu_2551_p130;
wire    ap_block_pp0_stage1;
wire   [8191:0] tmp_795_fu_4104_p130;
wire   [63:0] idxprom_i236_fu_1255_p1;
wire    ap_block_pp0_stage0;
reg   [2:0] i_fu_1098;
wire   [2:0] i_41_fu_1239_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_40;
reg   [8191:0] this_p4_24_fu_1102;
wire    ap_block_pp0_stage1_11001;
reg   [8191:0] ap_sig_allocacmp_this_p4_24_load_1;
reg   [8191:0] this_p3_24_fu_1106;
reg   [8191:0] ap_sig_allocacmp_this_p3_24_load_1;
reg   [8191:0] this_p2_12_fu_1110;
reg   [8191:0] this_p1_23_fu_1114;
wire    ap_block_pp0_stage1_01001;
wire   [7:0] zext_ln331_fu_1245_p1;
wire   [7:0] add_ln331_fu_1249_p2;
wire   [31:0] tmp_1098_fu_1277_p4;
wire   [63:0] tmp_s_fu_1287_p4;
wire   [63:0] tmp_540_fu_1297_p4;
wire   [63:0] tmp_541_fu_1307_p4;
wire   [63:0] tmp_542_fu_1317_p4;
wire   [63:0] tmp_543_fu_1327_p4;
wire   [63:0] tmp_544_fu_1337_p4;
wire   [63:0] tmp_545_fu_1347_p4;
wire   [63:0] tmp_546_fu_1357_p4;
wire   [63:0] tmp_547_fu_1367_p4;
wire   [63:0] tmp_548_fu_1377_p4;
wire   [63:0] tmp_549_fu_1387_p4;
wire   [63:0] tmp_550_fu_1397_p4;
wire   [63:0] tmp_551_fu_1407_p4;
wire   [63:0] tmp_552_fu_1417_p4;
wire   [63:0] tmp_553_fu_1427_p4;
wire   [63:0] tmp_554_fu_1437_p4;
wire   [63:0] tmp_555_fu_1447_p4;
wire   [63:0] tmp_556_fu_1457_p4;
wire   [63:0] tmp_557_fu_1467_p4;
wire   [63:0] tmp_558_fu_1477_p4;
wire   [63:0] tmp_559_fu_1487_p4;
wire   [63:0] tmp_560_fu_1497_p4;
wire   [63:0] tmp_561_fu_1507_p4;
wire   [63:0] tmp_562_fu_1517_p4;
wire   [63:0] tmp_563_fu_1527_p4;
wire   [63:0] tmp_564_fu_1537_p4;
wire   [63:0] tmp_565_fu_1547_p4;
wire   [63:0] tmp_566_fu_1557_p4;
wire   [63:0] tmp_567_fu_1567_p4;
wire   [63:0] tmp_568_fu_1577_p4;
wire   [63:0] tmp_569_fu_1587_p4;
wire   [63:0] tmp_570_fu_1597_p4;
wire   [63:0] tmp_571_fu_1607_p4;
wire   [63:0] tmp_572_fu_1617_p4;
wire   [63:0] tmp_573_fu_1627_p4;
wire   [63:0] tmp_574_fu_1637_p4;
wire   [63:0] tmp_575_fu_1647_p4;
wire   [63:0] tmp_576_fu_1657_p4;
wire   [63:0] tmp_577_fu_1667_p4;
wire   [63:0] tmp_578_fu_1677_p4;
wire   [63:0] tmp_579_fu_1687_p4;
wire   [63:0] tmp_580_fu_1697_p4;
wire   [63:0] tmp_581_fu_1707_p4;
wire   [63:0] tmp_582_fu_1717_p4;
wire   [63:0] tmp_583_fu_1727_p4;
wire   [63:0] tmp_584_fu_1737_p4;
wire   [63:0] tmp_585_fu_1747_p4;
wire   [63:0] tmp_586_fu_1757_p4;
wire   [63:0] tmp_587_fu_1767_p4;
wire   [63:0] tmp_588_fu_1777_p4;
wire   [63:0] tmp_589_fu_1787_p4;
wire   [63:0] tmp_590_fu_1797_p4;
wire   [63:0] tmp_591_fu_1807_p4;
wire   [63:0] tmp_592_fu_1817_p4;
wire   [63:0] tmp_593_fu_1827_p4;
wire   [63:0] tmp_594_fu_1837_p4;
wire   [63:0] tmp_595_fu_1847_p4;
wire   [63:0] tmp_596_fu_1857_p4;
wire   [63:0] tmp_597_fu_1867_p4;
wire   [63:0] tmp_598_fu_1877_p4;
wire   [63:0] tmp_599_fu_1887_p4;
wire   [63:0] tmp_600_fu_1897_p4;
wire   [63:0] tmp_601_fu_1907_p4;
wire   [63:0] tmp_602_fu_1917_p4;
wire   [63:0] tmp_603_fu_1927_p4;
wire   [63:0] tmp_604_fu_1937_p4;
wire   [63:0] tmp_605_fu_1947_p4;
wire   [63:0] tmp_606_fu_1957_p4;
wire   [63:0] tmp_607_fu_1967_p4;
wire   [63:0] tmp_608_fu_1977_p4;
wire   [63:0] tmp_609_fu_1987_p4;
wire   [63:0] tmp_610_fu_1997_p4;
wire   [63:0] tmp_611_fu_2007_p4;
wire   [63:0] tmp_612_fu_2017_p4;
wire   [63:0] tmp_613_fu_2027_p4;
wire   [63:0] tmp_614_fu_2037_p4;
wire   [63:0] tmp_615_fu_2047_p4;
wire   [63:0] tmp_616_fu_2057_p4;
wire   [63:0] tmp_617_fu_2067_p4;
wire   [63:0] tmp_618_fu_2077_p4;
wire   [63:0] tmp_619_fu_2087_p4;
wire   [63:0] tmp_620_fu_2097_p4;
wire   [63:0] tmp_621_fu_2107_p4;
wire   [63:0] tmp_622_fu_2117_p4;
wire   [63:0] tmp_623_fu_2127_p4;
wire   [63:0] tmp_624_fu_2137_p4;
wire   [63:0] tmp_625_fu_2147_p4;
wire   [63:0] tmp_626_fu_2157_p4;
wire   [63:0] tmp_627_fu_2167_p4;
wire   [63:0] tmp_628_fu_2177_p4;
wire   [63:0] tmp_629_fu_2187_p4;
wire   [63:0] tmp_630_fu_2197_p4;
wire   [63:0] tmp_631_fu_2207_p4;
wire   [63:0] tmp_632_fu_2217_p4;
wire   [63:0] tmp_633_fu_2227_p4;
wire   [63:0] tmp_634_fu_2237_p4;
wire   [63:0] tmp_635_fu_2247_p4;
wire   [63:0] tmp_636_fu_2257_p4;
wire   [63:0] tmp_637_fu_2267_p4;
wire   [63:0] tmp_638_fu_2277_p4;
wire   [63:0] tmp_639_fu_2287_p4;
wire   [63:0] tmp_640_fu_2297_p4;
wire   [63:0] tmp_641_fu_2307_p4;
wire   [63:0] tmp_642_fu_2317_p4;
wire   [63:0] tmp_643_fu_2327_p4;
wire   [63:0] tmp_644_fu_2337_p4;
wire   [63:0] tmp_645_fu_2347_p4;
wire   [63:0] tmp_646_fu_2357_p4;
wire   [63:0] tmp_647_fu_2367_p4;
wire   [63:0] tmp_648_fu_2377_p4;
wire   [63:0] tmp_649_fu_2387_p4;
wire   [63:0] tmp_650_fu_2397_p4;
wire   [63:0] tmp_651_fu_2407_p4;
wire   [63:0] tmp_652_fu_2417_p4;
wire   [63:0] tmp_653_fu_2427_p4;
wire   [63:0] tmp_654_fu_2437_p4;
wire   [63:0] tmp_655_fu_2447_p4;
wire   [63:0] tmp_656_fu_2457_p4;
wire   [63:0] tmp_657_fu_2467_p4;
wire   [63:0] tmp_658_fu_2477_p4;
wire   [63:0] tmp_659_fu_2487_p4;
wire   [63:0] tmp_660_fu_2497_p4;
wire   [63:0] tmp_661_fu_2507_p4;
wire   [63:0] tmp_662_fu_2517_p4;
wire   [63:0] tmp_663_fu_2527_p4;
wire   [63:0] tmp_664_fu_2537_p4;
wire   [63:0] trunc_ln112_fu_2547_p1;
wire   [31:0] tmp_fu_1273_p1;
wire   [31:0] tmp_667_fu_2824_p4;
wire   [63:0] tmp_668_fu_2834_p4;
wire   [63:0] tmp_669_fu_2844_p4;
wire   [63:0] tmp_670_fu_2854_p4;
wire   [63:0] tmp_671_fu_2864_p4;
wire   [63:0] tmp_672_fu_2874_p4;
wire   [63:0] tmp_673_fu_2884_p4;
wire   [63:0] tmp_674_fu_2894_p4;
wire   [63:0] tmp_675_fu_2904_p4;
wire   [63:0] tmp_676_fu_2914_p4;
wire   [63:0] tmp_677_fu_2924_p4;
wire   [63:0] tmp_678_fu_2934_p4;
wire   [63:0] tmp_679_fu_2944_p4;
wire   [63:0] tmp_680_fu_2954_p4;
wire   [63:0] tmp_681_fu_2964_p4;
wire   [63:0] tmp_682_fu_2974_p4;
wire   [63:0] tmp_683_fu_2984_p4;
wire   [63:0] tmp_684_fu_2994_p4;
wire   [63:0] tmp_685_fu_3004_p4;
wire   [63:0] tmp_686_fu_3014_p4;
wire   [63:0] tmp_687_fu_3024_p4;
wire   [63:0] tmp_688_fu_3034_p4;
wire   [63:0] tmp_689_fu_3044_p4;
wire   [63:0] tmp_690_fu_3054_p4;
wire   [63:0] tmp_691_fu_3064_p4;
wire   [63:0] tmp_692_fu_3074_p4;
wire   [63:0] tmp_693_fu_3084_p4;
wire   [63:0] tmp_694_fu_3094_p4;
wire   [63:0] tmp_695_fu_3104_p4;
wire   [63:0] tmp_696_fu_3114_p4;
wire   [63:0] tmp_697_fu_3124_p4;
wire   [63:0] tmp_698_fu_3134_p4;
wire   [63:0] tmp_699_fu_3144_p4;
wire   [63:0] tmp_700_fu_3154_p4;
wire   [63:0] tmp_701_fu_3164_p4;
wire   [63:0] tmp_702_fu_3174_p4;
wire   [63:0] tmp_703_fu_3184_p4;
wire   [63:0] tmp_704_fu_3194_p4;
wire   [63:0] tmp_705_fu_3204_p4;
wire   [63:0] tmp_706_fu_3214_p4;
wire   [63:0] tmp_707_fu_3224_p4;
wire   [63:0] tmp_708_fu_3234_p4;
wire   [63:0] tmp_709_fu_3244_p4;
wire   [63:0] tmp_710_fu_3254_p4;
wire   [63:0] tmp_711_fu_3264_p4;
wire   [63:0] tmp_712_fu_3274_p4;
wire   [63:0] tmp_713_fu_3284_p4;
wire   [63:0] tmp_714_fu_3294_p4;
wire   [63:0] tmp_715_fu_3304_p4;
wire   [63:0] tmp_716_fu_3314_p4;
wire   [63:0] tmp_717_fu_3324_p4;
wire   [63:0] tmp_718_fu_3334_p4;
wire   [63:0] tmp_719_fu_3344_p4;
wire   [63:0] tmp_720_fu_3354_p4;
wire   [63:0] tmp_721_fu_3364_p4;
wire   [63:0] tmp_722_fu_3374_p4;
wire   [63:0] tmp_723_fu_3384_p4;
wire   [63:0] tmp_724_fu_3394_p4;
wire   [63:0] tmp_725_fu_3404_p4;
wire   [63:0] tmp_726_fu_3414_p4;
wire   [63:0] tmp_727_fu_3424_p4;
wire   [63:0] tmp_728_fu_3434_p4;
wire   [63:0] tmp_729_fu_3444_p4;
wire   [63:0] tmp_730_fu_3454_p4;
wire   [63:0] tmp_731_fu_3464_p4;
wire   [63:0] tmp_732_fu_3474_p4;
wire   [63:0] tmp_733_fu_3484_p4;
wire   [63:0] tmp_734_fu_3494_p4;
wire   [63:0] tmp_735_fu_3504_p4;
wire   [63:0] tmp_736_fu_3514_p4;
wire   [63:0] tmp_737_fu_3524_p4;
wire   [63:0] tmp_738_fu_3534_p4;
wire   [63:0] tmp_739_fu_3544_p4;
wire   [63:0] tmp_740_fu_3554_p4;
wire   [63:0] tmp_741_fu_3564_p4;
wire   [63:0] tmp_742_fu_3574_p4;
wire   [63:0] tmp_743_fu_3584_p4;
wire   [63:0] tmp_744_fu_3594_p4;
wire   [63:0] tmp_745_fu_3604_p4;
wire   [63:0] tmp_746_fu_3614_p4;
wire   [63:0] tmp_747_fu_3624_p4;
wire   [63:0] tmp_748_fu_3634_p4;
wire   [63:0] tmp_749_fu_3644_p4;
wire   [63:0] tmp_750_fu_3654_p4;
wire   [63:0] tmp_751_fu_3664_p4;
wire   [63:0] tmp_752_fu_3674_p4;
wire   [63:0] tmp_753_fu_3684_p4;
wire   [63:0] tmp_754_fu_3694_p4;
wire   [63:0] tmp_755_fu_3704_p4;
wire   [63:0] tmp_756_fu_3714_p4;
wire   [63:0] tmp_757_fu_3724_p4;
wire   [63:0] tmp_758_fu_3734_p4;
wire   [63:0] tmp_759_fu_3744_p4;
wire   [63:0] tmp_760_fu_3754_p4;
wire   [63:0] tmp_761_fu_3764_p4;
wire   [63:0] tmp_762_fu_3774_p4;
wire   [63:0] tmp_763_fu_3784_p4;
wire   [63:0] tmp_764_fu_3794_p4;
wire   [63:0] tmp_765_fu_3804_p4;
wire   [63:0] tmp_766_fu_3814_p4;
wire   [63:0] tmp_767_fu_3824_p4;
wire   [63:0] tmp_768_fu_3834_p4;
wire   [63:0] tmp_769_fu_3844_p4;
wire   [63:0] tmp_770_fu_3854_p4;
wire   [63:0] tmp_771_fu_3864_p4;
wire   [63:0] tmp_772_fu_3874_p4;
wire   [63:0] tmp_773_fu_3884_p4;
wire   [63:0] tmp_774_fu_3894_p4;
wire   [63:0] tmp_775_fu_3904_p4;
wire   [63:0] tmp_776_fu_3914_p4;
wire   [63:0] tmp_777_fu_3924_p4;
wire   [63:0] tmp_778_fu_3934_p4;
wire   [63:0] tmp_779_fu_3944_p4;
wire   [63:0] tmp_780_fu_3954_p4;
wire   [63:0] tmp_781_fu_3964_p4;
wire   [63:0] tmp_782_fu_3974_p4;
wire   [63:0] tmp_783_fu_3984_p4;
wire   [63:0] tmp_784_fu_3994_p4;
wire   [63:0] tmp_785_fu_4004_p4;
wire   [63:0] tmp_786_fu_4014_p4;
wire   [63:0] tmp_787_fu_4024_p4;
wire   [63:0] tmp_788_fu_4034_p4;
wire   [63:0] tmp_789_fu_4044_p4;
wire   [63:0] tmp_790_fu_4054_p4;
wire   [63:0] tmp_791_fu_4064_p4;
wire   [63:0] tmp_792_fu_4074_p4;
wire   [63:0] tmp_793_fu_4084_p4;
wire   [63:0] tmp_794_fu_4094_p4;
wire   [31:0] tmp_666_fu_2814_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0;
reg    ap_enable_operation_36;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_enable_operation_40;
reg    ap_enable_state2_pp0_iter0_stage1;
wire    ap_enable_operation_308;
reg    ap_enable_state4_pp0_iter1_stage1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dpu_keygen_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln329_fu_1233_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_1098 <= i_41_fu_1239_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_1098 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        this_p1_23_fu_1114 <= this_p1_22_reload;
    end else if (((icmp_ln329_reg_4446 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p1_23_fu_1114 <= tmp_665_fu_2551_p130;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        this_p2_12_fu_1110 <= this_p2_11_reload;
    end else if (((icmp_ln329_reg_4446 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p2_12_fu_1110 <= tmp_795_fu_4104_p130;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        this_p3_24_fu_1106 <= this_p3_23_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p3_24_fu_1106 <= this_p3_ret_reg_4455;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        this_p4_24_fu_1102 <= this_p4_23_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p4_24_fu_1102 <= this_p4_ret_reg_4461;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln329_reg_4446 <= icmp_ln329_fu_1233_p2;
        this_p3_ret_reg_4455 <= grp_dpu_unit_fu_2995_p_dout0_0;
        this_p4_ret_reg_4461 <= grp_dpu_unit_fu_2995_p_dout0_1;
        this_pMem_addr_reg_4450_pp0_iter1_reg <= this_pMem_addr_reg_4450;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_1233_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pMem_addr_reg_4450 <= idxprom_i236_fu_1255_p1;
    end
end

always @ (*) begin
    if (((icmp_ln329_reg_4446 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_40 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_40 = i_fu_1098;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_this_p3_24_load_1 = this_p3_ret_reg_4455;
    end else begin
        ap_sig_allocacmp_this_p3_24_load_1 = this_p3_24_fu_1106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_this_p4_24_load_1 = this_p4_ret_reg_4461;
    end else begin
        ap_sig_allocacmp_this_p4_24_load_1 = this_p4_24_fu_1102;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp304) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp301) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_dpu_unit_fu_1195_ap_ce = 1'b1;
    end else begin
        grp_dpu_unit_fu_1195_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln329_reg_4446 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p1_23_out_ap_vld = 1'b1;
    end else begin
        this_p1_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln329_reg_4446 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p2_12_out_ap_vld = 1'b1;
    end else begin
        this_p2_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln329_reg_4446 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p3_24_out_ap_vld = 1'b1;
    end else begin
        this_p3_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln329_reg_4446 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_p4_24_out_ap_vld = 1'b1;
    end else begin
        this_p4_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_pMem_address0 = this_pMem_addr_reg_4450_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_pMem_address0 = idxprom_i236_fu_1255_p1;
    end else begin
        this_pMem_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        this_pMem_ce0 = 1'b1;
    end else begin
        this_pMem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_pMem_we0 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215;
    end else begin
        this_pMem_we0 = 1024'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln331_fu_1249_p2 = (zext_ln331_fu_1245_p1 + addr1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp304 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp301 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_enable_operation_308 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_36 = (icmp_ln329_fu_1233_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_40 = (icmp_ln329_reg_4446 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_dpu_unit_fu_2995_p_ce = grp_dpu_unit_fu_1195_ap_ce;

assign grp_dpu_unit_fu_2995_p_din1 = tmp_665_fu_2551_p130;

assign grp_dpu_unit_fu_2995_p_din2 = tmp_795_fu_4104_p130;

assign grp_dpu_unit_fu_2995_p_din3 = ap_sig_allocacmp_this_p3_24_load_1;

assign grp_dpu_unit_fu_2995_p_din4 = ap_sig_allocacmp_this_p4_24_load_1;

assign grp_dpu_unit_fu_2995_p_din5 = 8'd7;

assign i_41_fu_1239_p2 = (ap_sig_allocacmp_i_40 + 3'd1);

assign icmp_ln329_fu_1233_p2 = ((ap_sig_allocacmp_i_40 == itr_cast) ? 1'b1 : 1'b0);

assign idxprom_i236_fu_1255_p1 = add_ln331_fu_1249_p2;

assign this_p1_23_out = this_p1_23_fu_1114;

assign this_p2_12_out = this_p2_12_fu_1110;

assign this_p3_24_out = this_p3_24_fu_1106;

assign this_p4_24_out = this_p4_24_fu_1102;

assign this_pMem_d0 = this_p3_ret_reg_4455;

assign tmp_1098_fu_1277_p4 = {{this_pMem_q0[4095:4064]}};

assign tmp_540_fu_1297_p4 = {{this_pMem_q0[4063:4000]}};

assign tmp_541_fu_1307_p4 = {{this_pMem_q0[4031:3968]}};

assign tmp_542_fu_1317_p4 = {{this_pMem_q0[3999:3936]}};

assign tmp_543_fu_1327_p4 = {{this_pMem_q0[3967:3904]}};

assign tmp_544_fu_1337_p4 = {{this_pMem_q0[3935:3872]}};

assign tmp_545_fu_1347_p4 = {{this_pMem_q0[3903:3840]}};

assign tmp_546_fu_1357_p4 = {{this_pMem_q0[3871:3808]}};

assign tmp_547_fu_1367_p4 = {{this_pMem_q0[3839:3776]}};

assign tmp_548_fu_1377_p4 = {{this_pMem_q0[3807:3744]}};

assign tmp_549_fu_1387_p4 = {{this_pMem_q0[3775:3712]}};

assign tmp_550_fu_1397_p4 = {{this_pMem_q0[3743:3680]}};

assign tmp_551_fu_1407_p4 = {{this_pMem_q0[3711:3648]}};

assign tmp_552_fu_1417_p4 = {{this_pMem_q0[3679:3616]}};

assign tmp_553_fu_1427_p4 = {{this_pMem_q0[3647:3584]}};

assign tmp_554_fu_1437_p4 = {{this_pMem_q0[3615:3552]}};

assign tmp_555_fu_1447_p4 = {{this_pMem_q0[3583:3520]}};

assign tmp_556_fu_1457_p4 = {{this_pMem_q0[3551:3488]}};

assign tmp_557_fu_1467_p4 = {{this_pMem_q0[3519:3456]}};

assign tmp_558_fu_1477_p4 = {{this_pMem_q0[3487:3424]}};

assign tmp_559_fu_1487_p4 = {{this_pMem_q0[3455:3392]}};

assign tmp_560_fu_1497_p4 = {{this_pMem_q0[3423:3360]}};

assign tmp_561_fu_1507_p4 = {{this_pMem_q0[3391:3328]}};

assign tmp_562_fu_1517_p4 = {{this_pMem_q0[3359:3296]}};

assign tmp_563_fu_1527_p4 = {{this_pMem_q0[3327:3264]}};

assign tmp_564_fu_1537_p4 = {{this_pMem_q0[3295:3232]}};

assign tmp_565_fu_1547_p4 = {{this_pMem_q0[3263:3200]}};

assign tmp_566_fu_1557_p4 = {{this_pMem_q0[3231:3168]}};

assign tmp_567_fu_1567_p4 = {{this_pMem_q0[3199:3136]}};

assign tmp_568_fu_1577_p4 = {{this_pMem_q0[3167:3104]}};

assign tmp_569_fu_1587_p4 = {{this_pMem_q0[3135:3072]}};

assign tmp_570_fu_1597_p4 = {{this_pMem_q0[3103:3040]}};

assign tmp_571_fu_1607_p4 = {{this_pMem_q0[3071:3008]}};

assign tmp_572_fu_1617_p4 = {{this_pMem_q0[3039:2976]}};

assign tmp_573_fu_1627_p4 = {{this_pMem_q0[3007:2944]}};

assign tmp_574_fu_1637_p4 = {{this_pMem_q0[2975:2912]}};

assign tmp_575_fu_1647_p4 = {{this_pMem_q0[2943:2880]}};

assign tmp_576_fu_1657_p4 = {{this_pMem_q0[2911:2848]}};

assign tmp_577_fu_1667_p4 = {{this_pMem_q0[2879:2816]}};

assign tmp_578_fu_1677_p4 = {{this_pMem_q0[2847:2784]}};

assign tmp_579_fu_1687_p4 = {{this_pMem_q0[2815:2752]}};

assign tmp_580_fu_1697_p4 = {{this_pMem_q0[2783:2720]}};

assign tmp_581_fu_1707_p4 = {{this_pMem_q0[2751:2688]}};

assign tmp_582_fu_1717_p4 = {{this_pMem_q0[2719:2656]}};

assign tmp_583_fu_1727_p4 = {{this_pMem_q0[2687:2624]}};

assign tmp_584_fu_1737_p4 = {{this_pMem_q0[2655:2592]}};

assign tmp_585_fu_1747_p4 = {{this_pMem_q0[2623:2560]}};

assign tmp_586_fu_1757_p4 = {{this_pMem_q0[2591:2528]}};

assign tmp_587_fu_1767_p4 = {{this_pMem_q0[2559:2496]}};

assign tmp_588_fu_1777_p4 = {{this_pMem_q0[2527:2464]}};

assign tmp_589_fu_1787_p4 = {{this_pMem_q0[2495:2432]}};

assign tmp_590_fu_1797_p4 = {{this_pMem_q0[2463:2400]}};

assign tmp_591_fu_1807_p4 = {{this_pMem_q0[2431:2368]}};

assign tmp_592_fu_1817_p4 = {{this_pMem_q0[2399:2336]}};

assign tmp_593_fu_1827_p4 = {{this_pMem_q0[2367:2304]}};

assign tmp_594_fu_1837_p4 = {{this_pMem_q0[2335:2272]}};

assign tmp_595_fu_1847_p4 = {{this_pMem_q0[2303:2240]}};

assign tmp_596_fu_1857_p4 = {{this_pMem_q0[2271:2208]}};

assign tmp_597_fu_1867_p4 = {{this_pMem_q0[2239:2176]}};

assign tmp_598_fu_1877_p4 = {{this_pMem_q0[2207:2144]}};

assign tmp_599_fu_1887_p4 = {{this_pMem_q0[2175:2112]}};

assign tmp_600_fu_1897_p4 = {{this_pMem_q0[2143:2080]}};

assign tmp_601_fu_1907_p4 = {{this_pMem_q0[2111:2048]}};

assign tmp_602_fu_1917_p4 = {{this_pMem_q0[2079:2016]}};

assign tmp_603_fu_1927_p4 = {{this_pMem_q0[2047:1984]}};

assign tmp_604_fu_1937_p4 = {{this_pMem_q0[2015:1952]}};

assign tmp_605_fu_1947_p4 = {{this_pMem_q0[1983:1920]}};

assign tmp_606_fu_1957_p4 = {{this_pMem_q0[1951:1888]}};

assign tmp_607_fu_1967_p4 = {{this_pMem_q0[1919:1856]}};

assign tmp_608_fu_1977_p4 = {{this_pMem_q0[1887:1824]}};

assign tmp_609_fu_1987_p4 = {{this_pMem_q0[1855:1792]}};

assign tmp_610_fu_1997_p4 = {{this_pMem_q0[1823:1760]}};

assign tmp_611_fu_2007_p4 = {{this_pMem_q0[1791:1728]}};

assign tmp_612_fu_2017_p4 = {{this_pMem_q0[1759:1696]}};

assign tmp_613_fu_2027_p4 = {{this_pMem_q0[1727:1664]}};

assign tmp_614_fu_2037_p4 = {{this_pMem_q0[1695:1632]}};

assign tmp_615_fu_2047_p4 = {{this_pMem_q0[1663:1600]}};

assign tmp_616_fu_2057_p4 = {{this_pMem_q0[1631:1568]}};

assign tmp_617_fu_2067_p4 = {{this_pMem_q0[1599:1536]}};

assign tmp_618_fu_2077_p4 = {{this_pMem_q0[1567:1504]}};

assign tmp_619_fu_2087_p4 = {{this_pMem_q0[1535:1472]}};

assign tmp_620_fu_2097_p4 = {{this_pMem_q0[1503:1440]}};

assign tmp_621_fu_2107_p4 = {{this_pMem_q0[1471:1408]}};

assign tmp_622_fu_2117_p4 = {{this_pMem_q0[1439:1376]}};

assign tmp_623_fu_2127_p4 = {{this_pMem_q0[1407:1344]}};

assign tmp_624_fu_2137_p4 = {{this_pMem_q0[1375:1312]}};

assign tmp_625_fu_2147_p4 = {{this_pMem_q0[1343:1280]}};

assign tmp_626_fu_2157_p4 = {{this_pMem_q0[1311:1248]}};

assign tmp_627_fu_2167_p4 = {{this_pMem_q0[1279:1216]}};

assign tmp_628_fu_2177_p4 = {{this_pMem_q0[1247:1184]}};

assign tmp_629_fu_2187_p4 = {{this_pMem_q0[1215:1152]}};

assign tmp_630_fu_2197_p4 = {{this_pMem_q0[1183:1120]}};

assign tmp_631_fu_2207_p4 = {{this_pMem_q0[1151:1088]}};

assign tmp_632_fu_2217_p4 = {{this_pMem_q0[1119:1056]}};

assign tmp_633_fu_2227_p4 = {{this_pMem_q0[1087:1024]}};

assign tmp_634_fu_2237_p4 = {{this_pMem_q0[1055:992]}};

assign tmp_635_fu_2247_p4 = {{this_pMem_q0[1023:960]}};

assign tmp_636_fu_2257_p4 = {{this_pMem_q0[991:928]}};

assign tmp_637_fu_2267_p4 = {{this_pMem_q0[959:896]}};

assign tmp_638_fu_2277_p4 = {{this_pMem_q0[927:864]}};

assign tmp_639_fu_2287_p4 = {{this_pMem_q0[895:832]}};

assign tmp_640_fu_2297_p4 = {{this_pMem_q0[863:800]}};

assign tmp_641_fu_2307_p4 = {{this_pMem_q0[831:768]}};

assign tmp_642_fu_2317_p4 = {{this_pMem_q0[799:736]}};

assign tmp_643_fu_2327_p4 = {{this_pMem_q0[767:704]}};

assign tmp_644_fu_2337_p4 = {{this_pMem_q0[735:672]}};

assign tmp_645_fu_2347_p4 = {{this_pMem_q0[703:640]}};

assign tmp_646_fu_2357_p4 = {{this_pMem_q0[671:608]}};

assign tmp_647_fu_2367_p4 = {{this_pMem_q0[639:576]}};

assign tmp_648_fu_2377_p4 = {{this_pMem_q0[607:544]}};

assign tmp_649_fu_2387_p4 = {{this_pMem_q0[575:512]}};

assign tmp_650_fu_2397_p4 = {{this_pMem_q0[543:480]}};

assign tmp_651_fu_2407_p4 = {{this_pMem_q0[511:448]}};

assign tmp_652_fu_2417_p4 = {{this_pMem_q0[479:416]}};

assign tmp_653_fu_2427_p4 = {{this_pMem_q0[447:384]}};

assign tmp_654_fu_2437_p4 = {{this_pMem_q0[415:352]}};

assign tmp_655_fu_2447_p4 = {{this_pMem_q0[383:320]}};

assign tmp_656_fu_2457_p4 = {{this_pMem_q0[351:288]}};

assign tmp_657_fu_2467_p4 = {{this_pMem_q0[319:256]}};

assign tmp_658_fu_2477_p4 = {{this_pMem_q0[287:224]}};

assign tmp_659_fu_2487_p4 = {{this_pMem_q0[255:192]}};

assign tmp_660_fu_2497_p4 = {{this_pMem_q0[223:160]}};

assign tmp_661_fu_2507_p4 = {{this_pMem_q0[191:128]}};

assign tmp_662_fu_2517_p4 = {{this_pMem_q0[159:96]}};

assign tmp_663_fu_2527_p4 = {{this_pMem_q0[127:64]}};

assign tmp_664_fu_2537_p4 = {{this_pMem_q0[95:32]}};

assign tmp_665_fu_2551_p130 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_1098_fu_1277_p4}, {tmp_s_fu_1287_p4}}, {tmp_540_fu_1297_p4}}, {tmp_541_fu_1307_p4}}, {tmp_542_fu_1317_p4}}, {tmp_543_fu_1327_p4}}, {tmp_544_fu_1337_p4}}, {tmp_545_fu_1347_p4}}, {tmp_546_fu_1357_p4}}, {tmp_547_fu_1367_p4}}, {tmp_548_fu_1377_p4}}, {tmp_549_fu_1387_p4}}, {tmp_550_fu_1397_p4}}, {tmp_551_fu_1407_p4}}, {tmp_552_fu_1417_p4}}, {tmp_553_fu_1427_p4}}, {tmp_554_fu_1437_p4}}, {tmp_555_fu_1447_p4}}, {tmp_556_fu_1457_p4}}, {tmp_557_fu_1467_p4}}, {tmp_558_fu_1477_p4}}, {tmp_559_fu_1487_p4}}, {tmp_560_fu_1497_p4}}, {tmp_561_fu_1507_p4}}, {tmp_562_fu_1517_p4}}, {tmp_563_fu_1527_p4}}, {tmp_564_fu_1537_p4}}, {tmp_565_fu_1547_p4}}, {tmp_566_fu_1557_p4}}, {tmp_567_fu_1567_p4}}, {tmp_568_fu_1577_p4}}, {tmp_569_fu_1587_p4}}, {tmp_570_fu_1597_p4}}, {tmp_571_fu_1607_p4}}, {tmp_572_fu_1617_p4}}, {tmp_573_fu_1627_p4}}, {tmp_574_fu_1637_p4}}, {tmp_575_fu_1647_p4}}, {tmp_576_fu_1657_p4}}, {tmp_577_fu_1667_p4}}, {tmp_578_fu_1677_p4}}, {tmp_579_fu_1687_p4}}, {tmp_580_fu_1697_p4}}, {tmp_581_fu_1707_p4}}, {tmp_582_fu_1717_p4}}, {tmp_583_fu_1727_p4}}, {tmp_584_fu_1737_p4}}, {tmp_585_fu_1747_p4}}, {tmp_586_fu_1757_p4}}, {tmp_587_fu_1767_p4}}, {tmp_588_fu_1777_p4}}, {tmp_589_fu_1787_p4}}, {tmp_590_fu_1797_p4}}, {tmp_591_fu_1807_p4}}, {tmp_592_fu_1817_p4}}, {tmp_593_fu_1827_p4}}, {tmp_594_fu_1837_p4}}, {tmp_595_fu_1847_p4}}, {tmp_596_fu_1857_p4}}, {tmp_597_fu_1867_p4}}, {tmp_598_fu_1877_p4}}, {tmp_599_fu_1887_p4}}, {tmp_600_fu_1897_p4}}, {tmp_601_fu_1907_p4}}, {tmp_602_fu_1917_p4}}, {tmp_603_fu_1927_p4}}, {tmp_604_fu_1937_p4}}, {tmp_605_fu_1947_p4}}, {tmp_606_fu_1957_p4}}, {tmp_607_fu_1967_p4}}, {tmp_608_fu_1977_p4}}, {tmp_609_fu_1987_p4}}, {tmp_610_fu_1997_p4}}, {tmp_611_fu_2007_p4}}, {tmp_612_fu_2017_p4}}, {tmp_613_fu_2027_p4}}, {tmp_614_fu_2037_p4}}, {tmp_615_fu_2047_p4}}, {tmp_616_fu_2057_p4}}, {tmp_617_fu_2067_p4}}, {tmp_618_fu_2077_p4}}, {tmp_619_fu_2087_p4}}, {tmp_620_fu_2097_p4}}, {tmp_621_fu_2107_p4}}, {tmp_622_fu_2117_p4}}, {tmp_623_fu_2127_p4}}, {tmp_624_fu_2137_p4}}, {tmp_625_fu_2147_p4}}, {tmp_626_fu_2157_p4}}, {tmp_627_fu_2167_p4}}, {tmp_628_fu_2177_p4}}, {tmp_629_fu_2187_p4}}, {tmp_630_fu_2197_p4}}, {tmp_631_fu_2207_p4}}, {tmp_632_fu_2217_p4}}, {tmp_633_fu_2227_p4}}, {tmp_634_fu_2237_p4}}, {tmp_635_fu_2247_p4}}, {tmp_636_fu_2257_p4}}, {tmp_637_fu_2267_p4}}, {tmp_638_fu_2277_p4}}, {tmp_639_fu_2287_p4}}, {tmp_640_fu_2297_p4}}, {tmp_641_fu_2307_p4}}, {tmp_642_fu_2317_p4}}, {tmp_643_fu_2327_p4}}, {tmp_644_fu_2337_p4}}, {tmp_645_fu_2347_p4}}, {tmp_646_fu_2357_p4}}, {tmp_647_fu_2367_p4}}, {tmp_648_fu_2377_p4}}, {tmp_649_fu_2387_p4}}, {tmp_650_fu_2397_p4}}, {tmp_651_fu_2407_p4}}, {tmp_652_fu_2417_p4}}, {tmp_653_fu_2427_p4}}, {tmp_654_fu_2437_p4}}, {tmp_655_fu_2447_p4}}, {tmp_656_fu_2457_p4}}, {tmp_657_fu_2467_p4}}, {tmp_658_fu_2477_p4}}, {tmp_659_fu_2487_p4}}, {tmp_660_fu_2497_p4}}, {tmp_661_fu_2507_p4}}, {tmp_662_fu_2517_p4}}, {tmp_663_fu_2527_p4}}, {tmp_664_fu_2537_p4}}, {trunc_ln112_fu_2547_p1}}, {tmp_fu_1273_p1}};

assign tmp_666_fu_2814_p4 = {{this_pMem_q0[4127:4096]}};

assign tmp_667_fu_2824_p4 = {{this_pMem_q0[8191:8160]}};

assign tmp_668_fu_2834_p4 = {{this_pMem_q0[8191:8128]}};

assign tmp_669_fu_2844_p4 = {{this_pMem_q0[8159:8096]}};

assign tmp_670_fu_2854_p4 = {{this_pMem_q0[8127:8064]}};

assign tmp_671_fu_2864_p4 = {{this_pMem_q0[8095:8032]}};

assign tmp_672_fu_2874_p4 = {{this_pMem_q0[8063:8000]}};

assign tmp_673_fu_2884_p4 = {{this_pMem_q0[8031:7968]}};

assign tmp_674_fu_2894_p4 = {{this_pMem_q0[7999:7936]}};

assign tmp_675_fu_2904_p4 = {{this_pMem_q0[7967:7904]}};

assign tmp_676_fu_2914_p4 = {{this_pMem_q0[7935:7872]}};

assign tmp_677_fu_2924_p4 = {{this_pMem_q0[7903:7840]}};

assign tmp_678_fu_2934_p4 = {{this_pMem_q0[7871:7808]}};

assign tmp_679_fu_2944_p4 = {{this_pMem_q0[7839:7776]}};

assign tmp_680_fu_2954_p4 = {{this_pMem_q0[7807:7744]}};

assign tmp_681_fu_2964_p4 = {{this_pMem_q0[7775:7712]}};

assign tmp_682_fu_2974_p4 = {{this_pMem_q0[7743:7680]}};

assign tmp_683_fu_2984_p4 = {{this_pMem_q0[7711:7648]}};

assign tmp_684_fu_2994_p4 = {{this_pMem_q0[7679:7616]}};

assign tmp_685_fu_3004_p4 = {{this_pMem_q0[7647:7584]}};

assign tmp_686_fu_3014_p4 = {{this_pMem_q0[7615:7552]}};

assign tmp_687_fu_3024_p4 = {{this_pMem_q0[7583:7520]}};

assign tmp_688_fu_3034_p4 = {{this_pMem_q0[7551:7488]}};

assign tmp_689_fu_3044_p4 = {{this_pMem_q0[7519:7456]}};

assign tmp_690_fu_3054_p4 = {{this_pMem_q0[7487:7424]}};

assign tmp_691_fu_3064_p4 = {{this_pMem_q0[7455:7392]}};

assign tmp_692_fu_3074_p4 = {{this_pMem_q0[7423:7360]}};

assign tmp_693_fu_3084_p4 = {{this_pMem_q0[7391:7328]}};

assign tmp_694_fu_3094_p4 = {{this_pMem_q0[7359:7296]}};

assign tmp_695_fu_3104_p4 = {{this_pMem_q0[7327:7264]}};

assign tmp_696_fu_3114_p4 = {{this_pMem_q0[7295:7232]}};

assign tmp_697_fu_3124_p4 = {{this_pMem_q0[7263:7200]}};

assign tmp_698_fu_3134_p4 = {{this_pMem_q0[7231:7168]}};

assign tmp_699_fu_3144_p4 = {{this_pMem_q0[7199:7136]}};

assign tmp_700_fu_3154_p4 = {{this_pMem_q0[7167:7104]}};

assign tmp_701_fu_3164_p4 = {{this_pMem_q0[7135:7072]}};

assign tmp_702_fu_3174_p4 = {{this_pMem_q0[7103:7040]}};

assign tmp_703_fu_3184_p4 = {{this_pMem_q0[7071:7008]}};

assign tmp_704_fu_3194_p4 = {{this_pMem_q0[7039:6976]}};

assign tmp_705_fu_3204_p4 = {{this_pMem_q0[7007:6944]}};

assign tmp_706_fu_3214_p4 = {{this_pMem_q0[6975:6912]}};

assign tmp_707_fu_3224_p4 = {{this_pMem_q0[6943:6880]}};

assign tmp_708_fu_3234_p4 = {{this_pMem_q0[6911:6848]}};

assign tmp_709_fu_3244_p4 = {{this_pMem_q0[6879:6816]}};

assign tmp_710_fu_3254_p4 = {{this_pMem_q0[6847:6784]}};

assign tmp_711_fu_3264_p4 = {{this_pMem_q0[6815:6752]}};

assign tmp_712_fu_3274_p4 = {{this_pMem_q0[6783:6720]}};

assign tmp_713_fu_3284_p4 = {{this_pMem_q0[6751:6688]}};

assign tmp_714_fu_3294_p4 = {{this_pMem_q0[6719:6656]}};

assign tmp_715_fu_3304_p4 = {{this_pMem_q0[6687:6624]}};

assign tmp_716_fu_3314_p4 = {{this_pMem_q0[6655:6592]}};

assign tmp_717_fu_3324_p4 = {{this_pMem_q0[6623:6560]}};

assign tmp_718_fu_3334_p4 = {{this_pMem_q0[6591:6528]}};

assign tmp_719_fu_3344_p4 = {{this_pMem_q0[6559:6496]}};

assign tmp_720_fu_3354_p4 = {{this_pMem_q0[6527:6464]}};

assign tmp_721_fu_3364_p4 = {{this_pMem_q0[6495:6432]}};

assign tmp_722_fu_3374_p4 = {{this_pMem_q0[6463:6400]}};

assign tmp_723_fu_3384_p4 = {{this_pMem_q0[6431:6368]}};

assign tmp_724_fu_3394_p4 = {{this_pMem_q0[6399:6336]}};

assign tmp_725_fu_3404_p4 = {{this_pMem_q0[6367:6304]}};

assign tmp_726_fu_3414_p4 = {{this_pMem_q0[6335:6272]}};

assign tmp_727_fu_3424_p4 = {{this_pMem_q0[6303:6240]}};

assign tmp_728_fu_3434_p4 = {{this_pMem_q0[6271:6208]}};

assign tmp_729_fu_3444_p4 = {{this_pMem_q0[6239:6176]}};

assign tmp_730_fu_3454_p4 = {{this_pMem_q0[6207:6144]}};

assign tmp_731_fu_3464_p4 = {{this_pMem_q0[6175:6112]}};

assign tmp_732_fu_3474_p4 = {{this_pMem_q0[6143:6080]}};

assign tmp_733_fu_3484_p4 = {{this_pMem_q0[6111:6048]}};

assign tmp_734_fu_3494_p4 = {{this_pMem_q0[6079:6016]}};

assign tmp_735_fu_3504_p4 = {{this_pMem_q0[6047:5984]}};

assign tmp_736_fu_3514_p4 = {{this_pMem_q0[6015:5952]}};

assign tmp_737_fu_3524_p4 = {{this_pMem_q0[5983:5920]}};

assign tmp_738_fu_3534_p4 = {{this_pMem_q0[5951:5888]}};

assign tmp_739_fu_3544_p4 = {{this_pMem_q0[5919:5856]}};

assign tmp_740_fu_3554_p4 = {{this_pMem_q0[5887:5824]}};

assign tmp_741_fu_3564_p4 = {{this_pMem_q0[5855:5792]}};

assign tmp_742_fu_3574_p4 = {{this_pMem_q0[5823:5760]}};

assign tmp_743_fu_3584_p4 = {{this_pMem_q0[5791:5728]}};

assign tmp_744_fu_3594_p4 = {{this_pMem_q0[5759:5696]}};

assign tmp_745_fu_3604_p4 = {{this_pMem_q0[5727:5664]}};

assign tmp_746_fu_3614_p4 = {{this_pMem_q0[5695:5632]}};

assign tmp_747_fu_3624_p4 = {{this_pMem_q0[5663:5600]}};

assign tmp_748_fu_3634_p4 = {{this_pMem_q0[5631:5568]}};

assign tmp_749_fu_3644_p4 = {{this_pMem_q0[5599:5536]}};

assign tmp_750_fu_3654_p4 = {{this_pMem_q0[5567:5504]}};

assign tmp_751_fu_3664_p4 = {{this_pMem_q0[5535:5472]}};

assign tmp_752_fu_3674_p4 = {{this_pMem_q0[5503:5440]}};

assign tmp_753_fu_3684_p4 = {{this_pMem_q0[5471:5408]}};

assign tmp_754_fu_3694_p4 = {{this_pMem_q0[5439:5376]}};

assign tmp_755_fu_3704_p4 = {{this_pMem_q0[5407:5344]}};

assign tmp_756_fu_3714_p4 = {{this_pMem_q0[5375:5312]}};

assign tmp_757_fu_3724_p4 = {{this_pMem_q0[5343:5280]}};

assign tmp_758_fu_3734_p4 = {{this_pMem_q0[5311:5248]}};

assign tmp_759_fu_3744_p4 = {{this_pMem_q0[5279:5216]}};

assign tmp_760_fu_3754_p4 = {{this_pMem_q0[5247:5184]}};

assign tmp_761_fu_3764_p4 = {{this_pMem_q0[5215:5152]}};

assign tmp_762_fu_3774_p4 = {{this_pMem_q0[5183:5120]}};

assign tmp_763_fu_3784_p4 = {{this_pMem_q0[5151:5088]}};

assign tmp_764_fu_3794_p4 = {{this_pMem_q0[5119:5056]}};

assign tmp_765_fu_3804_p4 = {{this_pMem_q0[5087:5024]}};

assign tmp_766_fu_3814_p4 = {{this_pMem_q0[5055:4992]}};

assign tmp_767_fu_3824_p4 = {{this_pMem_q0[5023:4960]}};

assign tmp_768_fu_3834_p4 = {{this_pMem_q0[4991:4928]}};

assign tmp_769_fu_3844_p4 = {{this_pMem_q0[4959:4896]}};

assign tmp_770_fu_3854_p4 = {{this_pMem_q0[4927:4864]}};

assign tmp_771_fu_3864_p4 = {{this_pMem_q0[4895:4832]}};

assign tmp_772_fu_3874_p4 = {{this_pMem_q0[4863:4800]}};

assign tmp_773_fu_3884_p4 = {{this_pMem_q0[4831:4768]}};

assign tmp_774_fu_3894_p4 = {{this_pMem_q0[4799:4736]}};

assign tmp_775_fu_3904_p4 = {{this_pMem_q0[4767:4704]}};

assign tmp_776_fu_3914_p4 = {{this_pMem_q0[4735:4672]}};

assign tmp_777_fu_3924_p4 = {{this_pMem_q0[4703:4640]}};

assign tmp_778_fu_3934_p4 = {{this_pMem_q0[4671:4608]}};

assign tmp_779_fu_3944_p4 = {{this_pMem_q0[4639:4576]}};

assign tmp_780_fu_3954_p4 = {{this_pMem_q0[4607:4544]}};

assign tmp_781_fu_3964_p4 = {{this_pMem_q0[4575:4512]}};

assign tmp_782_fu_3974_p4 = {{this_pMem_q0[4543:4480]}};

assign tmp_783_fu_3984_p4 = {{this_pMem_q0[4511:4448]}};

assign tmp_784_fu_3994_p4 = {{this_pMem_q0[4479:4416]}};

assign tmp_785_fu_4004_p4 = {{this_pMem_q0[4447:4384]}};

assign tmp_786_fu_4014_p4 = {{this_pMem_q0[4415:4352]}};

assign tmp_787_fu_4024_p4 = {{this_pMem_q0[4383:4320]}};

assign tmp_788_fu_4034_p4 = {{this_pMem_q0[4351:4288]}};

assign tmp_789_fu_4044_p4 = {{this_pMem_q0[4319:4256]}};

assign tmp_790_fu_4054_p4 = {{this_pMem_q0[4287:4224]}};

assign tmp_791_fu_4064_p4 = {{this_pMem_q0[4255:4192]}};

assign tmp_792_fu_4074_p4 = {{this_pMem_q0[4223:4160]}};

assign tmp_793_fu_4084_p4 = {{this_pMem_q0[4191:4128]}};

assign tmp_794_fu_4094_p4 = {{this_pMem_q0[4159:4096]}};

assign tmp_795_fu_4104_p130 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_667_fu_2824_p4}, {tmp_668_fu_2834_p4}}, {tmp_669_fu_2844_p4}}, {tmp_670_fu_2854_p4}}, {tmp_671_fu_2864_p4}}, {tmp_672_fu_2874_p4}}, {tmp_673_fu_2884_p4}}, {tmp_674_fu_2894_p4}}, {tmp_675_fu_2904_p4}}, {tmp_676_fu_2914_p4}}, {tmp_677_fu_2924_p4}}, {tmp_678_fu_2934_p4}}, {tmp_679_fu_2944_p4}}, {tmp_680_fu_2954_p4}}, {tmp_681_fu_2964_p4}}, {tmp_682_fu_2974_p4}}, {tmp_683_fu_2984_p4}}, {tmp_684_fu_2994_p4}}, {tmp_685_fu_3004_p4}}, {tmp_686_fu_3014_p4}}, {tmp_687_fu_3024_p4}}, {tmp_688_fu_3034_p4}}, {tmp_689_fu_3044_p4}}, {tmp_690_fu_3054_p4}}, {tmp_691_fu_3064_p4}}, {tmp_692_fu_3074_p4}}, {tmp_693_fu_3084_p4}}, {tmp_694_fu_3094_p4}}, {tmp_695_fu_3104_p4}}, {tmp_696_fu_3114_p4}}, {tmp_697_fu_3124_p4}}, {tmp_698_fu_3134_p4}}, {tmp_699_fu_3144_p4}}, {tmp_700_fu_3154_p4}}, {tmp_701_fu_3164_p4}}, {tmp_702_fu_3174_p4}}, {tmp_703_fu_3184_p4}}, {tmp_704_fu_3194_p4}}, {tmp_705_fu_3204_p4}}, {tmp_706_fu_3214_p4}}, {tmp_707_fu_3224_p4}}, {tmp_708_fu_3234_p4}}, {tmp_709_fu_3244_p4}}, {tmp_710_fu_3254_p4}}, {tmp_711_fu_3264_p4}}, {tmp_712_fu_3274_p4}}, {tmp_713_fu_3284_p4}}, {tmp_714_fu_3294_p4}}, {tmp_715_fu_3304_p4}}, {tmp_716_fu_3314_p4}}, {tmp_717_fu_3324_p4}}, {tmp_718_fu_3334_p4}}, {tmp_719_fu_3344_p4}}, {tmp_720_fu_3354_p4}}, {tmp_721_fu_3364_p4}}, {tmp_722_fu_3374_p4}}, {tmp_723_fu_3384_p4}}, {tmp_724_fu_3394_p4}}, {tmp_725_fu_3404_p4}}, {tmp_726_fu_3414_p4}}, {tmp_727_fu_3424_p4}}, {tmp_728_fu_3434_p4}}, {tmp_729_fu_3444_p4}}, {tmp_730_fu_3454_p4}}, {tmp_731_fu_3464_p4}}, {tmp_732_fu_3474_p4}}, {tmp_733_fu_3484_p4}}, {tmp_734_fu_3494_p4}}, {tmp_735_fu_3504_p4}}, {tmp_736_fu_3514_p4}}, {tmp_737_fu_3524_p4}}, {tmp_738_fu_3534_p4}}, {tmp_739_fu_3544_p4}}, {tmp_740_fu_3554_p4}}, {tmp_741_fu_3564_p4}}, {tmp_742_fu_3574_p4}}, {tmp_743_fu_3584_p4}}, {tmp_744_fu_3594_p4}}, {tmp_745_fu_3604_p4}}, {tmp_746_fu_3614_p4}}, {tmp_747_fu_3624_p4}}, {tmp_748_fu_3634_p4}}, {tmp_749_fu_3644_p4}}, {tmp_750_fu_3654_p4}}, {tmp_751_fu_3664_p4}}, {tmp_752_fu_3674_p4}}, {tmp_753_fu_3684_p4}}, {tmp_754_fu_3694_p4}}, {tmp_755_fu_3704_p4}}, {tmp_756_fu_3714_p4}}, {tmp_757_fu_3724_p4}}, {tmp_758_fu_3734_p4}}, {tmp_759_fu_3744_p4}}, {tmp_760_fu_3754_p4}}, {tmp_761_fu_3764_p4}}, {tmp_762_fu_3774_p4}}, {tmp_763_fu_3784_p4}}, {tmp_764_fu_3794_p4}}, {tmp_765_fu_3804_p4}}, {tmp_766_fu_3814_p4}}, {tmp_767_fu_3824_p4}}, {tmp_768_fu_3834_p4}}, {tmp_769_fu_3844_p4}}, {tmp_770_fu_3854_p4}}, {tmp_771_fu_3864_p4}}, {tmp_772_fu_3874_p4}}, {tmp_773_fu_3884_p4}}, {tmp_774_fu_3894_p4}}, {tmp_775_fu_3904_p4}}, {tmp_776_fu_3914_p4}}, {tmp_777_fu_3924_p4}}, {tmp_778_fu_3934_p4}}, {tmp_779_fu_3944_p4}}, {tmp_780_fu_3954_p4}}, {tmp_781_fu_3964_p4}}, {tmp_782_fu_3974_p4}}, {tmp_783_fu_3984_p4}}, {tmp_784_fu_3994_p4}}, {tmp_785_fu_4004_p4}}, {tmp_786_fu_4014_p4}}, {tmp_787_fu_4024_p4}}, {tmp_788_fu_4034_p4}}, {tmp_789_fu_4044_p4}}, {tmp_790_fu_4054_p4}}, {tmp_791_fu_4064_p4}}, {tmp_792_fu_4074_p4}}, {tmp_793_fu_4084_p4}}, {tmp_794_fu_4094_p4}}, {tmp_666_fu_2814_p4}};

assign tmp_fu_1273_p1 = this_pMem_q0[31:0];

assign tmp_s_fu_1287_p4 = {{this_pMem_q0[4095:4032]}};

assign trunc_ln112_fu_2547_p1 = this_pMem_q0[63:0];

assign zext_ln331_fu_1245_p1 = ap_sig_allocacmp_i_40;

endmodule //dpu_keygen_dpu_func_Pipeline_FUNC_NTT_LOOP5
