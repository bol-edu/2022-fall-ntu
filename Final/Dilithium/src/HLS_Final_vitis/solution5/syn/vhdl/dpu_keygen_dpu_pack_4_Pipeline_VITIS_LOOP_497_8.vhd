-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen_dpu_pack_4_Pipeline_VITIS_LOOP_497_8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_5_6 : IN STD_LOGIC_VECTOR (8191 downto 0);
    sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sk_ce0 : OUT STD_LOGIC;
    sk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sk_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sk_ce1 : OUT STD_LOGIC;
    sk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    this_5_7_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
    this_5_7_out_ap_vld : OUT STD_LOGIC;
    ptr_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ptr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ptr_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of dpu_keygen_dpu_pack_4_Pipeline_VITIS_LOOP_497_8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv14_1000 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8192_lc_1 : STD_LOGIC_VECTOR (8191 downto
    constant ap_const_lv8192_lc_2 : STD_LOGIC_VECTOR (8191 downto 0) := "";
    constant ap_const_lv13_20 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv13_60 : STD_LOGIC_VECTOR (12 downto 0) := "0000001100000";
    constant ap_const_lv12_A : STD_LOGIC_VECTOR (11 downto 0) := "000000001010";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv13_40 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_C : STD_LOGIC_VECTOR (11 downto 0) := "000000001100";
    constant ap_const_lv13_E0 : STD_LOGIC_VECTOR (12 downto 0) := "0000011100000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln497_reg_1210 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal reg_276 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal i_reg_1204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln497_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln499_fu_304_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln499_reg_1214 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln6_fu_393_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln6_reg_1249 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln509_fu_439_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln509_reg_1255 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln509_fu_445_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln509_reg_1260 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln509_fu_461_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln509_reg_1265 : STD_LOGIC_VECTOR (8191 downto 0);
    signal lshr_ln3_reg_1270 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal sub_ln509_fu_570_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln509_reg_1285 : STD_LOGIC_VECTOR (13 downto 0);
    signal sk_load_9_reg_1290 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln510_fu_675_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln510_reg_1305 : STD_LOGIC_VECTOR (8191 downto 0);
    signal lshr_ln5_reg_1310 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln511_fu_770_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln511_reg_1325 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln512_fu_818_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln512_reg_1331 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln512_fu_834_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln512_reg_1336 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln513_fu_974_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln513_reg_1351 : STD_LOGIC_VECTOR (8191 downto 0);
    signal lshr_ln8_reg_1356 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal zext_ln515_fu_1123_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln515_reg_1366 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln515_fu_1139_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln515_reg_1371 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln499_fu_308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln499_1_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln500_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln500_2_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln501_fu_555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln502_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln502_2_fu_596_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln503_fu_606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln503_1_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln504_fu_755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln505_fu_888_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln505_2_fu_898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln506_fu_1061_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal add_ln516_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_28_fu_142 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln497_fu_336_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (5 downto 0);
    signal this_5_7_fu_146 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln515_1_fu_1175_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal add_ln499_fu_313_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln499_1_fu_344_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal t_fu_348_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln500_fu_360_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln500_1_fu_370_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln498_fu_356_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln508_fu_380_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln508_fu_390_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln508_fu_401_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln508_fu_405_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln508_fu_411_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal sext_ln508_fu_386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln508_1_fu_423_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln508_fu_417_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln508_1_fu_427_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln509_fu_449_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln508_fu_433_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln509_fu_455_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal lshr_ln2_fu_472_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln500_1_fu_482_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln500_fu_486_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_502_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_494_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln500_1_fu_490_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1033_fu_516_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln500_fu_510_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_1_fu_526_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln501_fu_550_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln502_fu_560_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln498_1_fu_536_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln501_fu_576_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_2_fu_580_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln502_1_fu_591_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln503_fu_601_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln509_fu_611_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln509_1_fu_614_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln509_1_fu_618_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln498_2_fu_587_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln510_fu_628_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln510_fu_638_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln510_fu_643_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln510_fu_647_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln509_1_fu_623_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln510_fu_653_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal sext_ln510_fu_634_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln510_1_fu_665_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln510_fu_659_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln510_1_fu_669_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal tmp_1034_fu_681_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln502_1_fu_689_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_538_fu_704_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_693_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln502_fu_700_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln502_fu_712_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_3_fu_718_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln503_1_fu_740_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln504_fu_750_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln498_3_fu_726_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln511_fu_760_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln511_fu_775_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln511_fu_779_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln511_fu_785_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal sext_ln511_fu_766_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln511_1_fu_796_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln511_fu_791_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln511_1_fu_800_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal add_ln512_fu_812_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln512_fu_822_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln511_1_fu_806_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln512_fu_828_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal trunc_ln503_fu_840_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_4_fu_844_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln504_fu_867_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln6_fu_857_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_5_fu_871_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln505_fu_883_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln505_1_fu_893_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln498_4_fu_853_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln512_fu_903_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln512_fu_909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln512_1_fu_913_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln512_1_fu_917_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln498_5_fu_879_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln513_fu_927_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln513_fu_937_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln513_fu_942_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln513_fu_946_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln512_fu_922_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln513_fu_952_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal sext_ln513_fu_933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln513_1_fu_964_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln513_fu_958_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln513_1_fu_968_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal lshr_ln7_fu_980_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln505_1_fu_990_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln505_fu_994_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1035_fu_1010_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_539_fu_1002_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln505_1_fu_998_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1036_fu_1024_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln505_fu_1018_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_6_fu_1032_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln506_fu_1056_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln498_6_fu_1042_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln514_fu_1066_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln514_fu_1076_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln514_fu_1081_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln514_fu_1085_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln514_fu_1091_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal sext_ln514_fu_1072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln514_1_fu_1102_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln514_fu_1097_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln514_1_fu_1106_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln515_fu_1118_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln515_fu_1127_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal or_ln514_fu_1112_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln515_fu_1133_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal t_7_fu_1145_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln498_7_fu_1152_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln515_fu_1156_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln515_fu_1162_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln515_1_fu_1166_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln515_1_fu_1170_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dpu_keygen_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component dpu_keygen_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    i_28_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_28_fu_142 <= ap_const_lv6_0;
            elsif (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                i_28_fu_142 <= add_ln497_fu_336_p2;
            end if; 
        end if;
    end process;

    reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                reg_276 <= sk_q1;
            elsif ((((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                reg_276 <= sk_q0;
            end if; 
        end if;
    end process;

    this_5_7_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    this_5_7_fu_146 <= this_5_6;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    this_5_7_fu_146 <= or_ln515_1_fu_1175_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                and_ln509_reg_1265 <= and_ln509_fu_461_p2;
                    or_ln509_reg_1255(12 downto 8) <= or_ln509_fu_439_p2(12 downto 8);
                    shl_ln6_reg_1249(12 downto 8) <= shl_ln6_fu_393_p3(12 downto 8);
                    zext_ln509_reg_1260(12 downto 8) <= zext_ln509_fu_445_p1(12 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln512_reg_1336 <= and_ln512_fu_834_p2;
                lshr_ln5_reg_1310 <= sk_q0(7 downto 4);
                    or_ln511_reg_1325(12 downto 8) <= or_ln511_fu_770_p2(12 downto 8);
                    zext_ln512_reg_1331(12 downto 8) <= zext_ln512_fu_818_p1(12 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln515_reg_1371 <= and_ln515_fu_1139_p2;
                lshr_ln8_reg_1356 <= sk_q0(7 downto 3);
                    zext_ln515_reg_1366(12 downto 8) <= zext_ln515_fu_1123_p1(12 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_1204 <= ap_sig_allocacmp_i;
                icmp_ln497_reg_1210 <= icmp_ln497_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                lshr_ln3_reg_1270 <= sk_q0(7 downto 2);
                sub_ln509_reg_1285 <= sub_ln509_fu_570_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                or_ln510_reg_1305 <= or_ln510_fu_675_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                or_ln513_reg_1351 <= or_ln513_fu_974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln497_reg_1210 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                sk_load_9_reg_1290 <= sk_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln497_fu_294_p2 = ap_const_lv1_0))) then
                trunc_ln499_reg_1214 <= trunc_ln499_fu_304_p1;
            end if;
        end if;
    end process;
    shl_ln6_reg_1249(7 downto 0) <= "00000000";
    or_ln509_reg_1255(7 downto 0) <= "00100000";
    zext_ln509_reg_1260(7 downto 0) <= "00100000";
    zext_ln509_reg_1260(8191 downto
    or_ln511_reg_1325(7 downto 0) <= "01100000";
    zext_ln512_reg_1331(7 downto 0) <= "10000000";
    zext_ln512_reg_1331(8191 downto
    zext_ln515_reg_1366(7 downto 0) <= "11100000";
    zext_ln515_reg_1366(8191 downto

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter0_stage1, ap_block_pp0_stage6_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln497_fu_336_p2 <= std_logic_vector(unsigned(i_reg_1204) + unsigned(ap_const_lv6_1));
    add_ln499_fu_313_p2 <= std_logic_vector(unsigned(trunc_ln499_fu_304_p1) + unsigned(ap_const_lv12_1));
    add_ln500_1_fu_370_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_3));
    add_ln500_fu_360_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_2));
    add_ln501_fu_550_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_4));
    add_ln502_1_fu_591_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_6));
    add_ln502_fu_560_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_5));
    add_ln503_1_fu_740_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_8));
    add_ln503_fu_601_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_7));
    add_ln504_fu_750_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_9));
    add_ln505_1_fu_893_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_B));
    add_ln505_fu_883_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_A));
    add_ln506_fu_1056_p2 <= std_logic_vector(unsigned(trunc_ln499_reg_1214) + unsigned(ap_const_lv12_C));
    add_ln510_fu_638_p2 <= std_logic_vector(unsigned(or_ln509_reg_1255) + unsigned(ap_const_lv13_20));
    add_ln512_fu_812_p2 <= std_logic_vector(unsigned(or_ln511_fu_770_p2) + unsigned(ap_const_lv13_20));
    add_ln513_fu_937_p2 <= std_logic_vector(unsigned(or_ln511_reg_1325) + unsigned(ap_const_lv13_40));
    add_ln514_fu_1076_p2 <= std_logic_vector(unsigned(or_ln511_reg_1325) + unsigned(ap_const_lv13_60));
    add_ln516_fu_324_p2 <= std_logic_vector(unsigned(ptr_i) + unsigned(ap_const_lv32_D));
    and_ln508_fu_417_p2 <= (xor_ln508_fu_411_p2 and this_5_7_fu_146);
    and_ln509_fu_461_p2 <= (xor_ln509_fu_455_p2 and or_ln508_fu_433_p2);
    and_ln510_fu_659_p2 <= (xor_ln510_fu_653_p2 and or_ln509_1_fu_623_p2);
    and_ln511_fu_791_p2 <= (xor_ln511_fu_785_p2 and or_ln510_reg_1305);
    and_ln512_fu_834_p2 <= (xor_ln512_fu_828_p2 and or_ln511_1_fu_806_p2);
    and_ln513_fu_958_p2 <= (xor_ln513_fu_952_p2 and or_ln512_fu_922_p2);
    and_ln514_fu_1097_p2 <= (xor_ln514_fu_1091_p2 and or_ln513_reg_1351);
    and_ln515_fu_1139_p2 <= (xor_ln515_fu_1133_p2 and or_ln514_fu_1112_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln497_reg_1210)
    begin
        if (((icmp_ln497_reg_1210 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_28_fu_142, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_i <= i_28_fu_142;
        end if; 
    end process;

    icmp_ln497_fu_294_p2 <= "1" when (ap_sig_allocacmp_i = ap_const_lv6_20) else "0";
    lshr_ln2_fu_472_p4 <= reg_276(7 downto 5);
    lshr_ln6_fu_857_p4 <= sk_q1(7 downto 1);
    lshr_ln7_fu_980_p4 <= reg_276(7 downto 6);
    or_ln500_fu_510_p2 <= (tmp_s_fu_494_p3 or tmp_fu_502_p3);
    or_ln502_fu_712_p2 <= (tmp_538_fu_704_p3 or shl_ln_fu_693_p3);
    or_ln505_fu_1018_p2 <= (tmp_539_fu_1002_p3 or tmp_1035_fu_1010_p3);
    or_ln508_fu_433_p2 <= (shl_ln508_1_fu_427_p2 or and_ln508_fu_417_p2);
    or_ln509_1_fu_623_p2 <= (shl_ln509_1_fu_618_p2 or and_ln509_reg_1265);
    or_ln509_fu_439_p2 <= (shl_ln6_fu_393_p3 or ap_const_lv13_20);
    or_ln510_fu_675_p2 <= (shl_ln510_1_fu_669_p2 or and_ln510_fu_659_p2);
    or_ln511_1_fu_806_p2 <= (shl_ln511_1_fu_800_p2 or and_ln511_fu_791_p2);
    or_ln511_fu_770_p2 <= (shl_ln6_reg_1249 or ap_const_lv13_60);
    or_ln512_fu_922_p2 <= (shl_ln512_1_fu_917_p2 or and_ln512_reg_1336);
    or_ln513_fu_974_p2 <= (shl_ln513_1_fu_968_p2 or and_ln513_fu_958_p2);
    or_ln514_fu_1112_p2 <= (shl_ln514_1_fu_1106_p2 or and_ln514_fu_1097_p2);
    or_ln515_1_fu_1175_p2 <= (shl_ln515_1_fu_1170_p2 or and_ln515_reg_1371);
    or_ln515_fu_1118_p2 <= (shl_ln6_reg_1249 or ap_const_lv13_E0);

    ptr_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ptr_i, icmp_ln497_fu_294_p2, ap_block_pp0_stage0, add_ln516_fu_324_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln497_fu_294_p2 = ap_const_lv1_0))) then 
            ptr_o <= add_ln516_fu_324_p2;
        else 
            ptr_o <= ptr_i;
        end if; 
    end process;


    ptr_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln497_fu_294_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln497_fu_294_p2 = ap_const_lv1_0))) then 
            ptr_o_ap_vld <= ap_const_logic_1;
        else 
            ptr_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln508_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln508_fu_380_p2),32));

        sext_ln509_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln509_reg_1285),32));

        sext_ln510_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln510_fu_628_p2),32));

        sext_ln511_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln511_fu_760_p2),32));

        sext_ln512_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln512_fu_903_p2),32));

        sext_ln513_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln513_fu_927_p2),32));

        sext_ln514_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln514_fu_1066_p2),32));

        sext_ln515_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln515_fu_1156_p2),32));

    shl_ln508_1_fu_427_p2 <= std_logic_vector(shift_left(unsigned(zext_ln508_1_fu_423_p1),to_integer(unsigned('0' & zext_ln508_fu_401_p1(31-1 downto 0)))));
    shl_ln508_fu_405_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln508_fu_401_p1(31-1 downto 0)))));
    shl_ln509_1_fu_618_p2 <= std_logic_vector(shift_left(unsigned(zext_ln509_1_fu_614_p1),to_integer(unsigned('0' & zext_ln509_reg_1260(31-1 downto 0)))));
    shl_ln509_fu_449_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln509_fu_445_p1(31-1 downto 0)))));
    shl_ln510_1_fu_669_p2 <= std_logic_vector(shift_left(unsigned(zext_ln510_1_fu_665_p1),to_integer(unsigned('0' & zext_ln510_fu_643_p1(31-1 downto 0)))));
    shl_ln510_fu_647_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln510_fu_643_p1(31-1 downto 0)))));
    shl_ln511_1_fu_800_p2 <= std_logic_vector(shift_left(unsigned(zext_ln511_1_fu_796_p1),to_integer(unsigned('0' & zext_ln511_fu_775_p1(31-1 downto 0)))));
    shl_ln511_fu_779_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln511_fu_775_p1(31-1 downto 0)))));
    shl_ln512_1_fu_917_p2 <= std_logic_vector(shift_left(unsigned(zext_ln512_1_fu_913_p1),to_integer(unsigned('0' & zext_ln512_reg_1331(31-1 downto 0)))));
    shl_ln512_fu_822_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln512_fu_818_p1(31-1 downto 0)))));
    shl_ln513_1_fu_968_p2 <= std_logic_vector(shift_left(unsigned(zext_ln513_1_fu_964_p1),to_integer(unsigned('0' & zext_ln513_fu_942_p1(31-1 downto 0)))));
    shl_ln513_fu_946_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln513_fu_942_p1(31-1 downto 0)))));
    shl_ln514_1_fu_1106_p2 <= std_logic_vector(shift_left(unsigned(zext_ln514_1_fu_1102_p1),to_integer(unsigned('0' & zext_ln514_fu_1081_p1(31-1 downto 0)))));
    shl_ln514_fu_1085_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln514_fu_1081_p1(31-1 downto 0)))));
    shl_ln515_1_fu_1170_p2 <= std_logic_vector(shift_left(unsigned(zext_ln515_1_fu_1166_p1),to_integer(unsigned('0' & zext_ln515_reg_1366(31-1 downto 0)))));
    shl_ln515_fu_1127_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln515_fu_1123_p1(31-1 downto 0)))));
    shl_ln6_fu_393_p3 <= (trunc_ln508_fu_390_p1 & ap_const_lv8_0);
    shl_ln_fu_693_p3 <= (sk_load_9_reg_1290 & ap_const_lv1_0);

    sk_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln499_1_fu_319_p1, ap_block_pp0_stage1, zext_ln500_2_fu_375_p1, ap_block_pp0_stage2, zext_ln502_fu_565_p1, ap_block_pp0_stage3, zext_ln503_fu_606_p1, ap_block_pp0_stage4, zext_ln504_fu_755_p1, ap_block_pp0_stage5, zext_ln505_2_fu_898_p1, zext_ln506_fu_1061_p1, ap_block_pp0_stage6)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                sk_address0 <= zext_ln506_fu_1061_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                sk_address0 <= zext_ln505_2_fu_898_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                sk_address0 <= zext_ln504_fu_755_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                sk_address0 <= zext_ln503_fu_606_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                sk_address0 <= zext_ln502_fu_565_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                sk_address0 <= zext_ln500_2_fu_375_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                sk_address0 <= zext_ln499_1_fu_319_p1(12 - 1 downto 0);
            else 
                sk_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            sk_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sk_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, zext_ln499_fu_308_p1, ap_block_pp0_stage0, zext_ln500_fu_365_p1, ap_block_pp0_stage1, zext_ln501_fu_555_p1, ap_block_pp0_stage2, zext_ln502_2_fu_596_p1, ap_block_pp0_stage3, zext_ln503_1_fu_745_p1, ap_block_pp0_stage4, zext_ln505_fu_888_p1, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                sk_address1 <= zext_ln505_fu_888_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                sk_address1 <= zext_ln503_1_fu_745_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                sk_address1 <= zext_ln502_2_fu_596_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                sk_address1 <= zext_ln501_fu_555_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                sk_address1 <= zext_ln500_fu_365_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                sk_address1 <= zext_ln499_fu_308_p1(12 - 1 downto 0);
            else 
                sk_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            sk_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sk_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            sk_ce0 <= ap_const_logic_1;
        else 
            sk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sk_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            sk_ce1 <= ap_const_logic_1;
        else 
            sk_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln508_fu_380_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_fu_356_p1));
    sub_ln509_fu_570_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_1_fu_536_p1));
    sub_ln510_fu_628_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_2_fu_587_p1));
    sub_ln511_fu_760_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_3_fu_726_p1));
    sub_ln512_fu_903_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_4_fu_853_p1));
    sub_ln513_fu_927_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_5_fu_879_p1));
    sub_ln514_fu_1066_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_6_fu_1042_p1));
    sub_ln515_fu_1156_p2 <= std_logic_vector(unsigned(ap_const_lv14_1000) - unsigned(zext_ln498_7_fu_1152_p1));
    t_1_fu_526_p4 <= ((trunc_ln500_1_fu_490_p1 & tmp_1033_fu_516_p4) & or_ln500_fu_510_p2);
    t_2_fu_580_p3 <= (trunc_ln501_fu_576_p1 & lshr_ln3_reg_1270);
    t_3_fu_718_p3 <= (trunc_ln502_fu_700_p1 & or_ln502_fu_712_p2);
    t_4_fu_844_p4 <= ((trunc_ln503_fu_840_p1 & reg_276) & lshr_ln5_reg_1310);
    t_5_fu_871_p3 <= (trunc_ln504_fu_867_p1 & lshr_ln6_fu_857_p4);
    t_6_fu_1032_p4 <= ((trunc_ln505_1_fu_998_p1 & tmp_1036_fu_1024_p3) & or_ln505_fu_1018_p2);
    t_7_fu_1145_p3 <= (sk_q0 & lshr_ln8_reg_1356);
    t_fu_348_p3 <= (trunc_ln499_1_fu_344_p1 & sk_q1);
    this_5_7_out <= this_5_7_fu_146;

    this_5_7_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln497_reg_1210, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln497_reg_1210 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            this_5_7_out_ap_vld <= ap_const_logic_1;
        else 
            this_5_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1033_fu_516_p4 <= sk_q1(7 downto 6);
    tmp_1034_fu_681_p3 <= reg_276(7 downto 7);
    tmp_1035_fu_1010_p3 <= (trunc_ln505_fu_994_p1 & ap_const_lv2_0);
    tmp_1036_fu_1024_p3 <= sk_q1(7 downto 7);
    tmp_538_fu_704_p3 <= (ap_const_lv1_0 & zext_ln502_1_fu_689_p1);
    tmp_539_fu_1002_p3 <= (ap_const_lv1_0 & zext_ln505_1_fu_990_p1);
    tmp_fu_502_p3 <= (trunc_ln500_fu_486_p1 & ap_const_lv3_0);
    tmp_s_fu_494_p3 <= (ap_const_lv1_0 & zext_ln500_1_fu_482_p1);
    trunc_ln499_1_fu_344_p1 <= sk_q0(5 - 1 downto 0);
    trunc_ln499_fu_304_p1 <= ptr_i(12 - 1 downto 0);
    trunc_ln500_1_fu_490_p1 <= sk_q0(2 - 1 downto 0);
    trunc_ln500_fu_486_p1 <= sk_q1(6 - 1 downto 0);
    trunc_ln501_fu_576_p1 <= sk_q1(7 - 1 downto 0);
    trunc_ln502_fu_700_p1 <= sk_q1(4 - 1 downto 0);
    trunc_ln503_fu_840_p1 <= sk_q1(1 - 1 downto 0);
    trunc_ln504_fu_867_p1 <= sk_q0(6 - 1 downto 0);
    trunc_ln505_1_fu_998_p1 <= sk_q0(3 - 1 downto 0);
    trunc_ln505_fu_994_p1 <= sk_q1(7 - 1 downto 0);
    trunc_ln508_fu_390_p1 <= i_reg_1204(5 - 1 downto 0);
    xor_ln508_fu_411_p2 <= (shl_ln508_fu_405_p2 xor ap_const_lv8192_lc_2);
    xor_ln509_fu_455_p2 <= (shl_ln509_fu_449_p2 xor ap_const_lv8192_lc_2);
    xor_ln510_fu_653_p2 <= (shl_ln510_fu_647_p2 xor ap_const_lv8192_lc_2);
    xor_ln511_fu_785_p2 <= (shl_ln511_fu_779_p2 xor ap_const_lv8192_lc_2);
    xor_ln512_fu_828_p2 <= (shl_ln512_fu_822_p2 xor ap_const_lv8192_lc_2);
    xor_ln513_fu_952_p2 <= (shl_ln513_fu_946_p2 xor ap_const_lv8192_lc_2);
    xor_ln514_fu_1091_p2 <= (shl_ln514_fu_1085_p2 xor ap_const_lv8192_lc_2);
    xor_ln515_fu_1133_p2 <= (shl_ln515_fu_1127_p2 xor ap_const_lv8192_lc_2);
    zext_ln498_1_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_1_fu_526_p4),14));
    zext_ln498_2_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_2_fu_580_p3),14));
    zext_ln498_3_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_3_fu_718_p3),14));
    zext_ln498_4_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_4_fu_844_p4),14));
    zext_ln498_5_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_5_fu_871_p3),14));
    zext_ln498_6_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_6_fu_1032_p4),14));
    zext_ln498_7_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_7_fu_1145_p3),14));
    zext_ln498_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_fu_348_p3),14));
    zext_ln499_1_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln499_fu_313_p2),64));
    zext_ln499_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ptr_i),64));
    zext_ln500_1_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_fu_472_p4),8));
    zext_ln500_2_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln500_1_fu_370_p2),64));
    zext_ln500_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln500_fu_360_p2),64));
    zext_ln501_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln501_fu_550_p2),64));
    zext_ln502_1_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1034_fu_681_p3),8));
    zext_ln502_2_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln502_1_fu_591_p2),64));
    zext_ln502_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln502_fu_560_p2),64));
    zext_ln503_1_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln503_1_fu_740_p2),64));
    zext_ln503_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln503_fu_601_p2),64));
    zext_ln504_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln504_fu_750_p2),64));
    zext_ln505_1_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln7_fu_980_p4),8));
    zext_ln505_2_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln505_1_fu_893_p2),64));
    zext_ln505_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln505_fu_883_p2),64));
    zext_ln506_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln506_fu_1056_p2),64));
    zext_ln508_1_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln508_fu_386_p1),8192));
    zext_ln508_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_393_p3),8192));
    zext_ln509_1_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln509_fu_611_p1),8192));
    zext_ln509_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln509_fu_439_p2),8192));
    zext_ln510_1_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln510_fu_634_p1),8192));
    zext_ln510_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln510_fu_638_p2),8192));
    zext_ln511_1_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln511_fu_766_p1),8192));
    zext_ln511_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln511_fu_770_p2),8192));
    zext_ln512_1_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln512_fu_909_p1),8192));
    zext_ln512_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln512_fu_812_p2),8192));
    zext_ln513_1_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln513_fu_933_p1),8192));
    zext_ln513_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln513_fu_937_p2),8192));
    zext_ln514_1_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln514_fu_1072_p1),8192));
    zext_ln514_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln514_fu_1076_p2),8192));
    zext_ln515_1_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln515_fu_1162_p1),8192));
    zext_ln515_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln515_fu_1118_p2),8192));
end behav;
