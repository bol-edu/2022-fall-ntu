-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_503_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    empty : IN STD_LOGIC_VECTOR (8191 downto 0);
    ctr : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_r_ce0 : OUT STD_LOGIC;
    buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_r_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_r_ce1 : OUT STD_LOGIC;
    buf_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
    p_out_ap_vld : OUT STD_LOGIC;
    ctr_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    ctr_1_out_ap_vld : OUT STD_LOGIC;
    select_ln510_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
    select_ln510_out_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_503_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv23_7FE001 : STD_LOGIC_VECTOR (22 downto 0) := "11111111110000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8192_lc_1 : STD_LOGIC_VECTOR (8191 downto
    constant ap_const_lv8192_lc_2 : STD_LOGIC_VECTOR (8191 downto
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_375 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln503_fu_196_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln503_reg_380 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln503_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln503_reg_385 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_load_reg_399 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal buf_load_1_reg_404 : STD_LOGIC_VECTOR (7 downto 0);
    signal ctr_1_load_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_load_reg_419 : STD_LOGIC_VECTOR (8191 downto 0);
    signal select_ln510_fu_308_p3 : STD_LOGIC_VECTOR (8191 downto 0);
    signal select_ln510_reg_424 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_phi_mux_UnifiedRetVal_phi_fu_158_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal UnifiedRetVal_reg_154 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_18_cast_fu_208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln507_fu_219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln508_fu_229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ctr_1_fu_76 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctr_10_fu_316_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctr_cast_fu_174_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln514_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_17_fu_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_121_fu_84 : STD_LOGIC_VECTOR (8191 downto 0);
    signal add_ln507_fu_213_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln508_fu_224_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln509_fu_234_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_fu_238_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln511_fu_252_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1037_fu_256_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln511_fu_264_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln511_fu_268_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal xor_ln511_fu_274_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln511_2_fu_286_p1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal and_ln511_fu_280_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal shl_ln511_2_fu_290_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal icmp_ln510_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln511_fu_296_p2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ctr_9_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1038_fu_324_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_158_p4;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                UnifiedRetVal_reg_154 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                UnifiedRetVal_reg_154 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    ctr_1_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                ctr_1_fu_76 <= ctr_cast_fu_174_p1;
            elsif (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln514_fu_334_p2 = ap_const_lv1_1))) then 
                ctr_1_fu_76 <= ctr_10_fu_316_p3;
            end if; 
        end if;
    end process;

    empty_121_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_121_fu_84 <= empty;
            elsif (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln514_fu_334_p2 = ap_const_lv1_1))) then 
                empty_121_fu_84 <= select_ln510_fu_308_p3;
            end if; 
        end if;
    end process;

    i_17_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_17_fu_80 <= ap_const_lv8_0;
            elsif (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln514_fu_334_p2 = ap_const_lv1_1))) then 
                i_17_fu_80 <= add_ln503_reg_380;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln503_reg_380 <= add_ln503_fu_196_p2;
                i_reg_375 <= i_17_fu_80;
                icmp_ln503_reg_385 <= icmp_ln503_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                buf_load_1_reg_404 <= buf_r_q0;
                buf_load_reg_399 <= buf_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                ctr_1_load_reg_414 <= ctr_1_fu_76;
                p_load_reg_419 <= empty_121_fu_84;
                select_ln510_reg_424 <= select_ln510_fu_308_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln503_reg_385, ap_CS_fsm_state4, icmp_ln514_fu_334_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln514_fu_334_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln503_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln503_fu_196_p2 <= std_logic_vector(unsigned(i_17_fu_80) + unsigned(ap_const_lv8_3));
    add_ln507_fu_213_p2 <= std_logic_vector(unsigned(i_17_fu_80) + unsigned(ap_const_lv8_1));
    add_ln508_fu_224_p2 <= std_logic_vector(unsigned(i_reg_375) + unsigned(ap_const_lv8_2));
    and_ln511_fu_280_p2 <= (xor_ln511_fu_274_p2 and empty_121_fu_84);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_158_p4_assign_proc : process(icmp_ln503_reg_385, UnifiedRetVal_reg_154, ap_CS_fsm_state5)
    begin
        if (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_158_p4 <= ap_const_lv1_0;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_158_p4 <= UnifiedRetVal_reg_154;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_158_p4, ap_CS_fsm_state5, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_158_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    buf_r_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, zext_ln507_fu_219_p1, zext_ln508_fu_229_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_r_address0 <= zext_ln508_fu_229_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_r_address0 <= zext_ln507_fu_219_p1(8 - 1 downto 0);
        else 
            buf_r_address0 <= "XXXXXXXX";
        end if; 
    end process;

    buf_r_address1 <= i_18_cast_fu_208_p1(8 - 1 downto 0);

    buf_r_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            buf_r_ce0 <= ap_const_logic_1;
        else 
            buf_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_r_ce1 <= ap_const_logic_1;
        else 
            buf_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    ctr_10_fu_316_p3 <= 
        ctr_9_fu_302_p2 when (icmp_ln510_fu_246_p2(0) = '1') else 
        ctr_1_fu_76;

    ctr_1_out_assign_proc : process(icmp_ln503_reg_385, ctr_1_load_reg_414, ap_CS_fsm_state6, ap_CS_fsm_state5, ctr_1_fu_76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ctr_1_out <= ctr_1_fu_76;
        elsif (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ctr_1_out <= ctr_1_load_reg_414;
        else 
            ctr_1_out <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ctr_1_out_ap_vld_assign_proc : process(icmp_ln503_reg_385, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            ctr_1_out_ap_vld <= ap_const_logic_1;
        else 
            ctr_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ctr_9_fu_302_p2 <= std_logic_vector(unsigned(ctr_1_fu_76) + unsigned(ap_const_lv32_1));
    ctr_cast_fu_174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ctr),32));
    i_18_cast_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_17_fu_80),64));
    icmp_ln503_fu_202_p2 <= "1" when (unsigned(add_ln503_fu_196_p2) < unsigned(ap_const_lv8_A9)) else "0";
    icmp_ln510_fu_246_p2 <= "1" when (unsigned(t_fu_238_p4) < unsigned(ap_const_lv23_7FE001)) else "0";
    icmp_ln514_fu_334_p2 <= "1" when (tmp_1038_fu_324_p4 = ap_const_lv24_0) else "0";
    or_ln511_fu_296_p2 <= (shl_ln511_2_fu_290_p2 or and_ln511_fu_280_p2);

    p_out_assign_proc : process(icmp_ln503_reg_385, p_load_reg_419, ap_CS_fsm_state6, ap_CS_fsm_state5, empty_121_fu_84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_out <= empty_121_fu_84;
        elsif (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            p_out <= p_load_reg_419;
        else 
            p_out
        end if; 
    end process;


    p_out_ap_vld_assign_proc : process(icmp_ln503_reg_385, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            p_out_ap_vld <= ap_const_logic_1;
        else 
            p_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln510_fu_308_p3 <= 
        or_ln511_fu_296_p2 when (icmp_ln510_fu_246_p2(0) = '1') else 
        empty_121_fu_84;
    select_ln510_out <= select_ln510_reg_424;

    select_ln510_out_ap_vld_assign_proc : process(icmp_ln503_reg_385, ap_CS_fsm_state5)
    begin
        if (((icmp_ln503_reg_385 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            select_ln510_out_ap_vld <= ap_const_logic_1;
        else 
            select_ln510_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln511_2_fu_290_p2 <= std_logic_vector(shift_left(unsigned(zext_ln511_2_fu_286_p1),to_integer(unsigned('0' & zext_ln511_fu_264_p1(31-1 downto 0)))));
    shl_ln511_fu_268_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8192_lc_1),to_integer(unsigned('0' & zext_ln511_fu_264_p1(31-1 downto 0)))));
    t_fu_238_p4 <= ((trunc_ln509_fu_234_p1 & buf_load_1_reg_404) & buf_load_reg_399);
    tmp_1037_fu_256_p3 <= (trunc_ln511_fu_252_p1 & ap_const_lv5_0);
    tmp_1038_fu_324_p4 <= ctr_10_fu_316_p3(31 downto 8);
    trunc_ln509_fu_234_p1 <= buf_r_q0(7 - 1 downto 0);
    trunc_ln511_fu_252_p1 <= ctr_1_fu_76(8 - 1 downto 0);
    xor_ln511_fu_274_p2 <= (shl_ln511_fu_268_p2 xor ap_const_lv8192_lc_2);
    zext_ln507_fu_219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln507_fu_213_p2),64));
    zext_ln508_fu_229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln508_fu_224_p2),64));
    zext_ln511_2_fu_286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_fu_238_p4),8192));
    zext_ln511_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1037_fu_256_p3),8192));
end behav;
