// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dpu_keygen_dpu_pack (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        this_0_address0,
        this_0_ce0,
        this_0_q0,
        pk_address0,
        pk_ce0,
        pk_we0,
        pk_d0,
        pk_address1,
        pk_ce1,
        pk_we1,
        pk_d1,
        ptr_i,
        ptr_o,
        ptr_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] this_0_address0;
output   this_0_ce0;
input  [8191:0] this_0_q0;
output  [10:0] pk_address0;
output   pk_ce0;
output   pk_we0;
output  [7:0] pk_d0;
output  [10:0] pk_address1;
output   pk_ce1;
output   pk_we1;
output  [7:0] pk_d1;
input  [31:0] ptr_i;
output  [31:0] ptr_o;
output   ptr_o_ap_vld;
output  [8191:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg this_0_ce0;
reg[31:0] ptr_o;
reg ptr_o_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln431_fu_114_p2;
reg   [8191:0] this_5_0_load_reg_182;
wire    ap_CS_fsm_state3;
reg   [8191:0] this_0_load_reg_187;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_done;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_idle;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_ready;
wire   [8191:0] grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_this_5_1_out;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_this_5_1_out_ap_vld;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_done;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_idle;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_ready;
wire   [10:0] grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_address0;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_ce0;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_we0;
wire   [7:0] grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_d0;
wire   [10:0] grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_address1;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_ce1;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_we1;
wire   [7:0] grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_d1;
wire   [31:0] grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ptr_o;
wire    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ptr_o_ap_vld;
reg    grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [63:0] idxprom_i_fu_136_p1;
reg   [2:0] j_10_fu_54;
wire   [2:0] j_15_fu_120_p2;
reg   [8191:0] this_5_0_fu_58;
wire   [6:0] zext_ln432_fu_126_p1;
wire   [6:0] addr_fu_130_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start_reg = 1'b0;
#0 grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start_reg = 1'b0;
end

dpu_keygen_dpu_pack_Pipeline_VITIS_LOOP_75_1 grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start),
    .ap_done(grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_done),
    .ap_idle(grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_idle),
    .ap_ready(grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_ready),
    .this_5_0(this_5_0_load_reg_182),
    .this_0_load(this_0_load_reg_187),
    .this_5_1_out(grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_this_5_1_out),
    .this_5_1_out_ap_vld(grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_this_5_1_out_ap_vld)
);

dpu_keygen_dpu_pack_Pipeline_VITIS_LOOP_433_2 grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start),
    .ap_done(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_done),
    .ap_idle(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_idle),
    .ap_ready(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_ready),
    .this_5_1_reload(grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_this_5_1_out),
    .pk_address0(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_address0),
    .pk_ce0(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_ce0),
    .pk_we0(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_we0),
    .pk_d0(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_d0),
    .pk_address1(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_address1),
    .pk_ce1(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_ce1),
    .pk_we1(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_we1),
    .pk_d1(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_d1),
    .ptr_i(ptr_i),
    .ptr_o(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ptr_o),
    .ptr_o_ap_vld(grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ptr_o_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start_reg <= 1'b1;
        end else if ((grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_ready == 1'b1)) begin
            grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start_reg <= 1'b1;
        end else if ((grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_ready == 1'b1)) begin
            grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_10_fu_54 <= 3'd0;
    end else if (((icmp_ln431_fu_114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_10_fu_54 <= j_15_fu_120_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        this_0_load_reg_187 <= this_0_q0;
        this_5_0_load_reg_182 <= this_5_0_fu_58;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        this_5_0_fu_58 <= grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_this_5_1_out;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((icmp_ln431_fu_114_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln431_fu_114_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        ptr_o = 32'd32;
    end else if (((grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ptr_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ptr_o = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ptr_o;
    end else begin
        ptr_o = ptr_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ptr_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ptr_o_ap_vld = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ptr_o_ap_vld;
    end else begin
        ptr_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        this_0_ce0 = 1'b1;
    end else begin
        this_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln431_fu_114_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign addr_fu_130_p2 = (zext_ln432_fu_126_p1 + 7'd63);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_return = this_5_0_fu_58;

assign grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_ap_start_reg;

assign grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start = grp_dpu_pack_Pipeline_VITIS_LOOP_75_1_fu_79_ap_start_reg;

assign icmp_ln431_fu_114_p2 = ((j_10_fu_54 == 3'd6) ? 1'b1 : 1'b0);

assign idxprom_i_fu_136_p1 = addr_fu_130_p2;

assign j_15_fu_120_p2 = (j_10_fu_54 + 3'd1);

assign pk_address0 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_address0;

assign pk_address1 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_address1;

assign pk_ce0 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_ce0;

assign pk_ce1 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_ce1;

assign pk_d0 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_d0;

assign pk_d1 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_d1;

assign pk_we0 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_we0;

assign pk_we1 = grp_dpu_pack_Pipeline_VITIS_LOOP_433_2_fu_87_pk_we1;

assign this_0_address0 = idxprom_i_fu_136_p1;

assign zext_ln432_fu_126_p1 = j_10_fu_54;

endmodule //dpu_keygen_dpu_pack
