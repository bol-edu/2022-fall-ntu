-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen_sample_eta is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    this_s_ce0 : OUT STD_LOGIC;
    this_s_we0 : OUT STD_LOGIC;
    this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    this_s_ce1 : OUT STD_LOGIC;
    this_s_we1 : OUT STD_LOGIC;
    this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (8191 downto 0);
    seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    seedbuf_ce0 : OUT STD_LOGIC;
    seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    seedbuf_ce1 : OUT STD_LOGIC;
    seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    nonce : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (8191 downto 0) );
end;


architecture behav of dpu_keygen_sample_eta is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_shake_absorb_1_fu_159_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal call_ret_reg_410 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_shake_absorb_fu_173_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret8_reg_415 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_reg_420 : STD_LOGIC_VECTOR (4 downto 0);
    signal this_s_addr_reg_425 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal this_s_addr_2_reg_430 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal trunc_ln530_fu_305_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln530_reg_435 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal a_0_load_reg_443 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_448 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal buf_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_ce0 : STD_LOGIC;
    signal buf_we0 : STD_LOGIC;
    signal buf_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_ce1 : STD_LOGIC;
    signal buf_we1 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_ap_start : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_ap_done : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_fu_159_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_fu_159_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_fu_159_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_this_s_we1 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_fu_159_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_fu_159_seedbuf_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_seedbuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_fu_159_seedbuf_ce1 : STD_LOGIC;
    signal grp_shake_absorb_fu_173_ap_start : STD_LOGIC;
    signal grp_shake_absorb_fu_173_ap_done : STD_LOGIC;
    signal grp_shake_absorb_fu_173_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_fu_173_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_fu_173_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_fu_173_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_fu_173_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_fu_173_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_fu_173_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_fu_173_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_fu_173_this_s_we1 : STD_LOGIC;
    signal grp_shake_absorb_fu_173_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_185_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_185_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_done : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_idle : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_ready : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_ce0 : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce0 : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we0 : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce1 : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we1 : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_done : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_idle : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_ready : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_ce0 : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_a_1_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_a_1_out_ap_vld : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ctr_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ctr_1_out_ap_vld : STD_LOGIC;
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_select_ln538_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_select_ln538_out_ap_vld : STD_LOGIC;
    signal grp_shake_absorb_1_fu_159_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln321_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_shake_absorb_fu_173_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_KeccakF1600_StatePermute_fu_185_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln530_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start_reg : STD_LOGIC := '0';
    signal a_1_loc_fu_100 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ctr_1_loc_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln538_loc_fu_92 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln321_fu_222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln402_1_fu_263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_20_fu_88 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln321_fu_233_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ctr_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctr_7_fu_341_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_fu_112 : STD_LOGIC_VECTOR (8191 downto 0);
    signal select_ln533_fu_334_p3 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal xor_ln402_fu_288_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal xor_ln403_fu_295_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln402_fu_267_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_270_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln402_fu_278_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln402_fu_282_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_309_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dpu_keygen_shake_absorb_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        mode : IN STD_LOGIC_VECTOR (8 downto 0);
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce1 : OUT STD_LOGIC;
        seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        m : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component dpu_keygen_shake_absorb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (3 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_KeccakF1600_StatePermute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_sample_eta_Pipeline_VITIS_LOOP_417_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_we0 : OUT STD_LOGIC;
        buf_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_sample_eta_Pipeline_VITIS_LOOP_533_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_0 : IN STD_LOGIC_VECTOR (8191 downto 0);
        ctr : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_1_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        a_1_out_ap_vld : OUT STD_LOGIC;
        ctr_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctr_1_out_ap_vld : OUT STD_LOGIC;
        select_ln538_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        select_ln538_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dpu_keygen_sample_eta_buf_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_U : component dpu_keygen_sample_eta_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 168,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_address0,
        ce0 => buf_ce0,
        we0 => buf_we0,
        d0 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_d0,
        q0 => buf_q0,
        address1 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_address1,
        ce1 => buf_ce1,
        we1 => buf_we1,
        d1 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_d1);

    grp_shake_absorb_1_fu_159 : component dpu_keygen_shake_absorb_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_1_fu_159_ap_start,
        ap_done => grp_shake_absorb_1_fu_159_ap_done,
        ap_idle => grp_shake_absorb_1_fu_159_ap_idle,
        ap_ready => grp_shake_absorb_1_fu_159_ap_ready,
        this_s_address0 => grp_shake_absorb_1_fu_159_this_s_address0,
        this_s_ce0 => grp_shake_absorb_1_fu_159_this_s_ce0,
        this_s_we0 => grp_shake_absorb_1_fu_159_this_s_we0,
        this_s_d0 => grp_shake_absorb_1_fu_159_this_s_d0,
        this_s_q0 => this_s_q0,
        this_s_address1 => grp_shake_absorb_1_fu_159_this_s_address1,
        this_s_ce1 => grp_shake_absorb_1_fu_159_this_s_ce1,
        this_s_we1 => grp_shake_absorb_1_fu_159_this_s_we1,
        this_s_d1 => grp_shake_absorb_1_fu_159_this_s_d1,
        this_s_q1 => this_s_q1,
        mode => ap_const_lv9_80,
        seedbuf_address0 => grp_shake_absorb_1_fu_159_seedbuf_address0,
        seedbuf_ce0 => grp_shake_absorb_1_fu_159_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        seedbuf_address1 => grp_shake_absorb_1_fu_159_seedbuf_address1,
        seedbuf_ce1 => grp_shake_absorb_1_fu_159_seedbuf_ce1,
        seedbuf_q1 => seedbuf_q1,
        m => ap_const_lv6_20,
        ap_return => grp_shake_absorb_1_fu_159_ap_return);

    grp_shake_absorb_fu_173 : component dpu_keygen_shake_absorb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_fu_173_ap_start,
        ap_done => grp_shake_absorb_fu_173_ap_done,
        ap_idle => grp_shake_absorb_fu_173_ap_idle,
        ap_ready => grp_shake_absorb_fu_173_ap_ready,
        this_s_address0 => grp_shake_absorb_fu_173_this_s_address0,
        this_s_ce0 => grp_shake_absorb_fu_173_this_s_ce0,
        this_s_we0 => grp_shake_absorb_fu_173_this_s_we0,
        this_s_d0 => grp_shake_absorb_fu_173_this_s_d0,
        this_s_q0 => this_s_q0,
        this_s_address1 => grp_shake_absorb_fu_173_this_s_address1,
        this_s_ce1 => grp_shake_absorb_fu_173_this_s_ce1,
        this_s_we1 => grp_shake_absorb_fu_173_this_s_we1,
        this_s_d1 => grp_shake_absorb_fu_173_this_s_d1,
        this_s_q1 => this_s_q1,
        p_read => call_ret_reg_410,
        p_read1 => nonce,
        p_read2 => ap_const_lv3_0,
        ap_return => grp_shake_absorb_fu_173_ap_return);

    grp_KeccakF1600_StatePermute_fu_185 : component dpu_keygen_KeccakF1600_StatePermute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_fu_185_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_fu_185_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_fu_185_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_fu_185_ap_ready,
        this_s_address0 => grp_KeccakF1600_StatePermute_fu_185_this_s_address0,
        this_s_ce0 => grp_KeccakF1600_StatePermute_fu_185_this_s_ce0,
        this_s_we0 => grp_KeccakF1600_StatePermute_fu_185_this_s_we0,
        this_s_d0 => grp_KeccakF1600_StatePermute_fu_185_this_s_d0,
        this_s_q0 => this_s_q0,
        this_s_address1 => grp_KeccakF1600_StatePermute_fu_185_this_s_address1,
        this_s_ce1 => grp_KeccakF1600_StatePermute_fu_185_this_s_ce1,
        this_s_we1 => grp_KeccakF1600_StatePermute_fu_185_this_s_we1,
        this_s_d1 => grp_KeccakF1600_StatePermute_fu_185_this_s_d1,
        this_s_q1 => this_s_q1);

    grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193 : component dpu_keygen_sample_eta_Pipeline_VITIS_LOOP_417_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start,
        ap_done => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_done,
        ap_idle => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_idle,
        ap_ready => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_ready,
        this_s_address0 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_address0,
        this_s_ce0 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_ce0,
        this_s_q0 => this_s_q0,
        buf_r_address0 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_address0,
        buf_r_ce0 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce0,
        buf_r_we0 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we0,
        buf_r_d0 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_d0,
        buf_r_address1 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_address1,
        buf_r_ce1 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce1,
        buf_r_we1 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we1,
        buf_r_d1 => grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_d1);

    grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200 : component dpu_keygen_sample_eta_Pipeline_VITIS_LOOP_533_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start,
        ap_done => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_done,
        ap_idle => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_idle,
        ap_ready => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_ready,
        a_0 => a_0_load_reg_443,
        ctr => trunc_ln530_reg_435,
        buf_r_address0 => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_address0,
        buf_r_ce0 => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_ce0,
        buf_r_q0 => buf_q0,
        a_1_out => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_a_1_out,
        a_1_out_ap_vld => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_a_1_out_ap_vld,
        ctr_1_out => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ctr_1_out,
        ctr_1_out_ap_vld => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ctr_1_out_ap_vld,
        select_ln538_out => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_select_ln538_out,
        select_ln538_out_ap_vld => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_select_ln538_out_ap_vld,
        ap_return => grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_fu_185_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_fu_185_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln530_fu_319_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_KeccakF1600_StatePermute_fu_185_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_fu_185_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_fu_185_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_ready = ap_const_logic_1)) then 
                    grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_ready = ap_const_logic_1)) then 
                    grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_1_fu_159_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_1_fu_159_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln321_fu_227_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_shake_absorb_1_fu_159_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_1_fu_159_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_1_fu_159_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_fu_173_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_fu_173_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_shake_absorb_fu_173_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_fu_173_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_fu_173_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    a_0_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln321_fu_227_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                a_0_fu_112 <= p_read1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                a_0_fu_112 <= select_ln533_fu_334_p3;
            end if; 
        end if;
    end process;

    ctr_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln321_fu_227_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ctr_fu_108 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                ctr_fu_108 <= ctr_7_fu_341_p3;
            end if; 
        end if;
    end process;

    i_20_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_20_fu_88 <= ap_const_lv5_0;
            elsif (((icmp_ln321_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_20_fu_88 <= add_ln321_fu_233_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                a_0_load_reg_443 <= a_0_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_a_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                a_1_loc_fu_100 <= grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_a_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                call_ret8_reg_415 <= grp_shake_absorb_fu_173_ap_return;
                i_reg_420 <= grp_shake_absorb_fu_173_ap_return(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                call_ret_reg_410 <= grp_shake_absorb_1_fu_159_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ctr_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                ctr_1_loc_fu_96 <= grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ctr_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_select_ln538_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                select_ln538_loc_fu_92 <= grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_select_ln538_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                targetBlock_reg_448 <= grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                this_s_addr_reg_425 <= zext_ln402_1_fu_263_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                trunc_ln530_reg_435 <= trunc_ln530_fu_305_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state15, grp_shake_absorb_1_fu_159_ap_done, grp_shake_absorb_fu_173_ap_done, grp_KeccakF1600_StatePermute_fu_185_ap_done, grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_done, grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_done, ap_CS_fsm_state2, icmp_ln321_fu_227_p2, icmp_ln530_fu_319_p2, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln321_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_shake_absorb_1_fu_159_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_shake_absorb_fu_173_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln530_fu_319_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_KeccakF1600_StatePermute_fu_185_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln321_fu_233_p2 <= std_logic_vector(unsigned(i_20_fu_88) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_185_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_185_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_done)
    begin
        if ((grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_done)
    begin
        if ((grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_shake_absorb_1_fu_159_ap_done)
    begin
        if ((grp_shake_absorb_1_fu_159_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_shake_absorb_fu_173_ap_done)
    begin
        if ((grp_shake_absorb_fu_173_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state10, icmp_ln530_fu_319_p2)
    begin
        if ((((icmp_ln530_fu_319_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10, icmp_ln530_fu_319_p2)
    begin
        if (((icmp_ln530_fu_319_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= a_0_fu_112;

    buf_address0_assign_proc : process(ap_CS_fsm_state15, grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_address0, grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            buf_address0 <= grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buf_address0 <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_address0;
        else 
            buf_address0 <= "XXXXXXXX";
        end if; 
    end process;


    buf_ce0_assign_proc : process(ap_CS_fsm_state15, grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce0, grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            buf_ce0 <= grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_buf_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buf_ce0 <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce0;
        else 
            buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_ce1_assign_proc : process(grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buf_ce1 <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_ce1;
        else 
            buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_we0_assign_proc : process(grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buf_we0 <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we0;
        else 
            buf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_we1_assign_proc : process(grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buf_we1 <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_buf_r_we1;
        else 
            buf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ctr_7_fu_341_p3 <= 
        ctr_1_loc_fu_96 when (targetBlock_reg_448(0) = '1') else 
        ap_const_lv32_100;
    grp_KeccakF1600_StatePermute_fu_185_ap_start <= grp_KeccakF1600_StatePermute_fu_185_ap_start_reg;
    grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_ap_start_reg;
    grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start <= grp_sample_eta_Pipeline_VITIS_LOOP_533_2_fu_200_ap_start_reg;
    grp_shake_absorb_1_fu_159_ap_start <= grp_shake_absorb_1_fu_159_ap_start_reg;
    grp_shake_absorb_fu_173_ap_start <= grp_shake_absorb_fu_173_ap_start_reg;
    icmp_ln321_fu_227_p2 <= "1" when (i_20_fu_88 = ap_const_lv5_19) else "0";
    icmp_ln530_fu_319_p2 <= "1" when (tmp_fu_309_p4 = ap_const_lv24_0) else "0";
    seedbuf_address0 <= grp_shake_absorb_1_fu_159_seedbuf_address0;
    seedbuf_address1 <= grp_shake_absorb_1_fu_159_seedbuf_address1;
    seedbuf_ce0 <= grp_shake_absorb_1_fu_159_seedbuf_ce0;
    seedbuf_ce1 <= grp_shake_absorb_1_fu_159_seedbuf_ce1;
    select_ln533_fu_334_p3 <= 
        a_1_loc_fu_100 when (targetBlock_reg_448(0) = '1') else 
        select_ln538_loc_fu_92;
    shl_ln402_fu_282_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1F),to_integer(unsigned('0' & zext_ln402_fu_278_p1(31-1 downto 0)))));
    shl_ln_fu_270_p3 <= (trunc_ln402_fu_267_p1 & ap_const_lv3_0);
    this_s_addr_2_reg_430 <= ap_const_lv64_14(5 - 1 downto 0);

    this_s_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, this_s_addr_reg_425, ap_CS_fsm_state6, this_s_addr_2_reg_430, ap_CS_fsm_state8, grp_shake_absorb_1_fu_159_this_s_address0, grp_shake_absorb_fu_173_this_s_address0, grp_KeccakF1600_StatePermute_fu_185_this_s_address0, grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_address0, ap_CS_fsm_state2, icmp_ln321_fu_227_p2, ap_CS_fsm_state11, ap_CS_fsm_state13, zext_ln321_fu_222_p1, zext_ln402_1_fu_263_p1, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            this_s_address0 <= this_s_addr_2_reg_430;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            this_s_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_address0 <= this_s_addr_reg_425;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_address0 <= zext_ln402_1_fu_263_p1(5 - 1 downto 0);
        elsif (((icmp_ln321_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            this_s_address0 <= zext_ln321_fu_222_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            this_s_address0 <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_address0 <= grp_KeccakF1600_StatePermute_fu_185_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_address0 <= grp_shake_absorb_fu_173_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_address0 <= grp_shake_absorb_1_fu_159_this_s_address0;
        else 
            this_s_address0 <= "XXXXX";
        end if; 
    end process;


    this_s_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_shake_absorb_1_fu_159_this_s_address1, grp_shake_absorb_fu_173_this_s_address1, grp_KeccakF1600_StatePermute_fu_185_this_s_address1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_address1 <= grp_KeccakF1600_StatePermute_fu_185_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_address1 <= grp_shake_absorb_fu_173_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_address1 <= grp_shake_absorb_1_fu_159_this_s_address1;
        else 
            this_s_address1 <= "XXXXX";
        end if; 
    end process;


    this_s_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, grp_shake_absorb_1_fu_159_this_s_ce0, grp_shake_absorb_fu_173_this_s_ce0, grp_KeccakF1600_StatePermute_fu_185_this_s_ce0, grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_ce0, ap_CS_fsm_state2, icmp_ln321_fu_227_p2, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln321_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            this_s_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            this_s_ce0 <= grp_sample_eta_Pipeline_VITIS_LOOP_417_2_fu_193_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_ce0 <= grp_KeccakF1600_StatePermute_fu_185_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_ce0 <= grp_shake_absorb_fu_173_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_ce0 <= grp_shake_absorb_1_fu_159_this_s_ce0;
        else 
            this_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_shake_absorb_1_fu_159_this_s_ce1, grp_shake_absorb_fu_173_this_s_ce1, grp_KeccakF1600_StatePermute_fu_185_this_s_ce1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_ce1 <= grp_KeccakF1600_StatePermute_fu_185_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_ce1 <= grp_shake_absorb_fu_173_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_ce1 <= grp_shake_absorb_1_fu_159_this_s_ce1;
        else 
            this_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_shake_absorb_1_fu_159_this_s_d0, grp_shake_absorb_fu_173_this_s_d0, grp_KeccakF1600_StatePermute_fu_185_this_s_d0, ap_CS_fsm_state2, icmp_ln321_fu_227_p2, ap_CS_fsm_state11, ap_CS_fsm_state7, xor_ln402_fu_288_p2, ap_CS_fsm_state9, xor_ln403_fu_295_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            this_s_d0 <= xor_ln403_fu_295_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_d0 <= xor_ln402_fu_288_p2;
        elsif (((icmp_ln321_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            this_s_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_d0 <= grp_KeccakF1600_StatePermute_fu_185_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_d0 <= grp_shake_absorb_fu_173_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_d0 <= grp_shake_absorb_1_fu_159_this_s_d0;
        else 
            this_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    this_s_d1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_shake_absorb_1_fu_159_this_s_d1, grp_shake_absorb_fu_173_this_s_d1, grp_KeccakF1600_StatePermute_fu_185_this_s_d1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_d1 <= grp_KeccakF1600_StatePermute_fu_185_this_s_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_d1 <= grp_shake_absorb_fu_173_this_s_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_d1 <= grp_shake_absorb_1_fu_159_this_s_d1;
        else 
            this_s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    this_s_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_shake_absorb_1_fu_159_this_s_we0, grp_shake_absorb_fu_173_this_s_we0, grp_KeccakF1600_StatePermute_fu_185_this_s_we0, ap_CS_fsm_state2, icmp_ln321_fu_227_p2, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln321_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            this_s_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_we0 <= grp_KeccakF1600_StatePermute_fu_185_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_we0 <= grp_shake_absorb_fu_173_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_we0 <= grp_shake_absorb_1_fu_159_this_s_we0;
        else 
            this_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_we1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, grp_shake_absorb_1_fu_159_this_s_we1, grp_shake_absorb_fu_173_this_s_we1, grp_KeccakF1600_StatePermute_fu_185_this_s_we1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            this_s_we1 <= grp_KeccakF1600_StatePermute_fu_185_this_s_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_we1 <= grp_shake_absorb_fu_173_this_s_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            this_s_we1 <= grp_shake_absorb_1_fu_159_this_s_we1;
        else 
            this_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_309_p4 <= ctr_fu_108(31 downto 8);
    trunc_ln402_fu_267_p1 <= call_ret8_reg_415(3 - 1 downto 0);
    trunc_ln530_fu_305_p1 <= ctr_fu_108(8 - 1 downto 0);
    xor_ln402_fu_288_p2 <= (this_s_q0 xor shl_ln402_fu_282_p2);
    xor_ln403_fu_295_p2 <= (this_s_q0 xor ap_const_lv64_8000000000000000);
    zext_ln321_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_20_fu_88),64));
    zext_ln402_1_fu_263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_420),64));
    zext_ln402_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_270_p3),64));
end behav;
