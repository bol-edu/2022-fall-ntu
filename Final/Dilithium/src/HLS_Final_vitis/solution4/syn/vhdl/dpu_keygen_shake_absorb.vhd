-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen_shake_absorb is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    this_s_ce0 : OUT STD_LOGIC;
    this_s_we0 : OUT STD_LOGIC;
    this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    this_s_ce1 : OUT STD_LOGIC;
    this_s_we1 : OUT STD_LOGIC;
    this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read : IN STD_LOGIC_VECTOR (9 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (3 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (2 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of dpu_keygen_shake_absorb is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_A8 : STD_LOGIC_VECTOR (10 downto 0) := "00010101000";
    constant ap_const_lv64_A7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010100111";
    constant ap_const_lv64_FFFFFFFFFFFFFF58 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111101011000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_116_fu_314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_116_reg_714 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_read2_cast_fu_318_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_read2_cast_reg_719 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_read_cast3_fu_322_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_read_cast3_reg_727 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_326_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_733 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln349_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln349_reg_744 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond9413_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_118_fu_377_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_118_reg_748 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln_reg_760 : STD_LOGIC_VECTOR (4 downto 0);
    signal this_s_addr_reg_765 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln340_fu_472_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln340_fu_476_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln340_reg_776 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln359_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln359_reg_783 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln359_fu_496_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln359_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln359_1_fu_500_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln359_1_reg_792 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln359_1_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln359_1_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln342_2_reg_801 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln13_fu_520_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln13_reg_806 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal select_ln13_1_fu_527_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln13_1_reg_811 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln13_2_fu_550_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln13_2_reg_824 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal select_ln13_3_fu_556_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln13_3_reg_830 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln7_reg_841 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln368_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_602_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_reg_846 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln340_fu_629_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln340_reg_851 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln382_fu_635_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln382_reg_857 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln382_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln382_reg_864 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln388_fu_647_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln388_reg_868 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal this_s_addr_1_reg_873 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_ce0 : STD_LOGIC;
    signal t_we0 : STD_LOGIC;
    signal t_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_we0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_r_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_r_out_ap_vld : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_265_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_we0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_we0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_r_3_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_r_3_out_ap_vld : STD_LOGIC;
    signal add_ln351_fu_456_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_this_pos_1_phi_fu_165_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal this_pos_1_reg_162 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln340_fu_439_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_mlen_assign_6_phi_fu_175_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal mlen_assign_6_reg_171 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln351_1_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_phi_ln13_phi_fu_186_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln13_reg_182 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln340_reg_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op95_call_state10 : BOOLEAN;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal sub_ln363_fu_535_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_mlen_assign_8_phi_fu_210_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal mlen_assign_8_reg_207 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln366_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_phi_ln340_1_phi_fu_221_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln340_1_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln388_fu_674_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_phi_ln390_phi_fu_235_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_ln390_reg_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_KeccakF1600_StatePermute_fu_265_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start_reg : STD_LOGIC := '0';
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_cast13_fu_338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln356_fu_412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln387_fu_659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_90 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_117_fu_349_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mlen_assign_9_fu_106 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln368_fu_576_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln340_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln356_fu_465_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln387_fu_667_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_116_fu_314_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_read_cast3_fu_322_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_fu_326_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln349_fu_360_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln351_fu_371_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_381_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln351_fu_368_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln356_fu_397_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln351_fu_416_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal umax_fu_421_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln351_fu_428_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_119_fu_446_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln351_1_fu_452_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln359_fu_490_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln340_1_fu_480_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal and_ln_fu_613_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln340_3_fu_587_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln379_fu_625_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln378_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln1_fu_650_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_351_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln349 : IN STD_LOGIC_VECTOR (2 downto 0);
        p_read2_cast : IN STD_LOGIC_VECTOR (2 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_12_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        r_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        r_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_360_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_ln13_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln13_37 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln361_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        trunc_ln342_2 : IN STD_LOGIC_VECTOR (4 downto 0);
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_KeccakF1600_StatePermute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_369_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_ln13_3 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln13_38 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln368 : IN STD_LOGIC_VECTOR (3 downto 0);
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_376_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_4 : IN STD_LOGIC_VECTOR (4 downto 0);
        select_ln13_3 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln13_38 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln368 : IN STD_LOGIC_VECTOR (3 downto 0);
        trunc_ln7 : IN STD_LOGIC_VECTOR (4 downto 0);
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_383_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_385_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln340_1 : IN STD_LOGIC_VECTOR (8 downto 0);
        phi_ln340_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read2_cast : IN STD_LOGIC_VECTOR (2 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_12_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        r_3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        r_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_shake_absorb_t_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    t_U : component dpu_keygen_shake_absorb_t_RAM_AUTO_1R1W
    generic map (
        DataWidth => 4,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_address0,
        ce0 => t_ce0,
        we0 => t_we0,
        d0 => t_d0,
        q0 => t_q0);

    grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_351_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_ready,
        zext_ln349 => i_reg_733,
        p_read2_cast => p_read2,
        p_read1 => p_read1,
        t_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_address0,
        t_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_ce0,
        t_we0 => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_we0,
        t_d0 => grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_d0);

    grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_12_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_ready,
        t_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_address0,
        t_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_ce0,
        t_q0 => t_q0,
        r_out => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_r_out,
        r_out_ap_vld => grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_r_out_ap_vld);

    grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_360_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_ready,
        select_ln13_1 => select_ln13_1_reg_811,
        zext_ln13_37 => select_ln13_reg_806,
        zext_ln361_1 => select_ln13_1_reg_811,
        trunc_ln342_2 => trunc_ln342_2_reg_801,
        this_s_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address0,
        this_s_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce0,
        this_s_we0 => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_we0,
        this_s_d0 => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_d0,
        this_s_address1 => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address1,
        this_s_ce1 => grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce1,
        this_s_q1 => this_s_q1);

    grp_KeccakF1600_StatePermute_fu_265 : component dpu_keygen_KeccakF1600_StatePermute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_fu_265_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_fu_265_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_fu_265_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_fu_265_ap_ready,
        this_s_address0 => grp_KeccakF1600_StatePermute_fu_265_this_s_address0,
        this_s_ce0 => grp_KeccakF1600_StatePermute_fu_265_this_s_ce0,
        this_s_we0 => grp_KeccakF1600_StatePermute_fu_265_this_s_we0,
        this_s_d0 => grp_KeccakF1600_StatePermute_fu_265_this_s_d0,
        this_s_q0 => this_s_q0,
        this_s_address1 => grp_KeccakF1600_StatePermute_fu_265_this_s_address1,
        this_s_ce1 => grp_KeccakF1600_StatePermute_fu_265_this_s_ce1,
        this_s_we1 => grp_KeccakF1600_StatePermute_fu_265_this_s_we1,
        this_s_d1 => grp_KeccakF1600_StatePermute_fu_265_this_s_d1,
        this_s_q1 => this_s_q1);

    grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_369_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_ready,
        select_ln13_3 => select_ln13_3_reg_830,
        zext_ln13_38 => select_ln13_2_reg_824,
        zext_ln368 => select_ln13_3_reg_830,
        this_s_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address0,
        this_s_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce0,
        this_s_we0 => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_we0,
        this_s_d0 => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_d0,
        this_s_address1 => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address1,
        this_s_ce1 => grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce1,
        this_s_q1 => this_s_q1);

    grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_376_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_ready,
        tmp_4 => tmp_4_reg_846,
        select_ln13_3 => select_ln13_3_reg_830,
        zext_ln13_38 => select_ln13_2_reg_824,
        zext_ln368 => select_ln13_3_reg_830,
        trunc_ln7 => trunc_ln7_reg_841,
        this_s_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address0,
        this_s_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce0,
        this_s_we0 => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_we0,
        this_s_d0 => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_d0,
        this_s_address1 => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address1,
        this_s_ce1 => grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce1,
        this_s_q1 => this_s_q1);

    grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_383_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_ready,
        t_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_address0,
        t_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_ce0,
        t_we0 => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_we0,
        t_d0 => grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_d0);

    grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_385_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_ready,
        sext_ln340_1 => sub_ln340_reg_851,
        phi_ln340_1 => phi_ln340_1_reg_218,
        p_read2_cast => p_read2,
        p_read1 => p_read1,
        t_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_address0,
        t_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_ce0,
        t_we0 => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_we0,
        t_d0 => grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_d0);

    grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308 : component dpu_keygen_shake_absorb_Pipeline_VITIS_LOOP_12_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start,
        ap_done => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done,
        ap_idle => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_idle,
        ap_ready => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_ready,
        t_address0 => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_address0,
        t_ce0 => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_ce0,
        t_q0 => t_q0,
        r_3_out => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_r_3_out,
        r_3_out_ap_vld => grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_r_3_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_return_preg <= ap_phi_mux_phi_ln390_phi_fu_235_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_fu_265_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_fu_265_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    grp_KeccakF1600_StatePermute_fu_265_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_fu_265_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_fu_265_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (icmp_ln349_fu_363_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln368_fu_570_p2 = ap_const_lv1_1))) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln368_fu_570_p2 = ap_const_lv1_0))) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln382_reg_864 = ap_const_lv1_0))) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                empty_fu_90 <= ap_const_lv4_0;
            elsif (((exitcond9413_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                empty_fu_90 <= empty_117_fu_349_p2;
            end if; 
        end if;
    end process;

    mlen_assign_6_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (icmp_ln349_fu_363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                mlen_assign_6_reg_171 <= ap_const_lv2_2;
            elsif (((icmp_ln349_reg_744 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                mlen_assign_6_reg_171 <= add_ln340_fu_439_p2;
            end if; 
        end if;
    end process;

    mlen_assign_8_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_1_fu_504_p2 = ap_const_lv1_1) and (icmp_ln359_fu_484_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_fu_484_p2 = ap_const_lv1_1)))) then 
                mlen_assign_8_reg_207 <= zext_ln340_fu_476_p1;
            elsif (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln359_1_reg_797 = ap_const_lv1_0) and (icmp_ln359_reg_783 = ap_const_lv1_0))) then 
                mlen_assign_8_reg_207 <= sub_ln363_fu_535_p2;
            end if; 
        end if;
    end process;

    mlen_assign_9_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                mlen_assign_9_fu_106 <= sext_ln340_fu_546_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln368_fu_570_p2 = ap_const_lv1_1))) then 
                mlen_assign_9_fu_106 <= add_ln368_fu_576_p2;
            end if; 
        end if;
    end process;

    phi_ln13_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (icmp_ln349_fu_363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_ln13_reg_182 <= ap_const_lv1_0;
            elsif (((icmp_ln349_reg_744 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                phi_ln13_reg_182 <= xor_ln351_1_fu_432_p2;
            end if; 
        end if;
    end process;

    phi_ln340_1_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_1_fu_504_p2 = ap_const_lv1_1) and (icmp_ln359_fu_484_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_fu_484_p2 = ap_const_lv1_1)))) then 
                phi_ln340_1_reg_218 <= ap_phi_mux_phi_ln13_phi_fu_186_p4;
            elsif (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln359_1_reg_797 = ap_const_lv1_0) and (icmp_ln359_reg_783 = ap_const_lv1_0))) then 
                phi_ln340_1_reg_218 <= xor_ln366_fu_540_p2;
            end if; 
        end if;
    end process;

    phi_ln340_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_1_fu_504_p2 = ap_const_lv1_1) and (icmp_ln359_fu_484_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_fu_484_p2 = ap_const_lv1_1)))) then 
                phi_ln340_reg_194 <= trunc_ln340_fu_472_p1;
            elsif (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln359_1_reg_797 = ap_const_lv1_0) and (icmp_ln359_reg_783 = ap_const_lv1_0))) then 
                phi_ln340_reg_194 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    phi_ln390_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln382_reg_864 = ap_const_lv1_1))) then 
                phi_ln390_reg_232 <= add_ln382_reg_857;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln382_reg_864 = ap_const_lv1_0))) then 
                phi_ln390_reg_232 <= add_ln388_fu_674_p2;
            end if; 
        end if;
    end process;

    this_pos_1_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (icmp_ln349_fu_363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                this_pos_1_reg_162 <= p_read_cast3_reg_727;
            elsif (((icmp_ln349_reg_744 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                this_pos_1_reg_162 <= add_ln351_fu_456_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln368_fu_570_p2 = ap_const_lv1_0))) then
                add_ln382_reg_857 <= add_ln382_fu_635_p2;
                icmp_ln382_reg_864 <= icmp_ln382_fu_641_p2;
                sub_ln340_reg_851 <= sub_ln340_fu_629_p2;
                tmp_4_reg_846 <= mlen_assign_9_fu_106(7 downto 3);
                trunc_ln7_reg_841 <= phi_ln340_reg_194(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_116_reg_714 <= empty_116_fu_314_p1;
                i_reg_733 <= i_fu_326_p1;
                    p_read2_cast_reg_719(2 downto 0) <= p_read2_cast_fu_318_p1(2 downto 0);
                p_read_cast3_reg_727 <= p_read_cast3_fu_322_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (icmp_ln349_fu_363_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                empty_118_reg_748 <= empty_118_fu_377_p1;
                icmp_reg_754 <= icmp_fu_391_p2;
                lshr_ln_reg_760 <= sub_ln356_fu_397_p2(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln349_reg_744 <= icmp_ln349_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_fu_484_p2 = ap_const_lv1_0))) then
                icmp_ln359_1_reg_797 <= icmp_ln359_1_fu_504_p2;
                trunc_ln359_1_reg_792 <= trunc_ln359_1_fu_500_p1;
                trunc_ln359_reg_787 <= trunc_ln359_fu_496_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln359_reg_783 <= icmp_ln359_fu_484_p2;
                    zext_ln340_reg_776(1 downto 0) <= zext_ln340_fu_476_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                select_ln13_1_reg_811 <= select_ln13_1_fu_527_p3;
                select_ln13_reg_806 <= select_ln13_fu_520_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                select_ln13_2_reg_824 <= select_ln13_2_fu_550_p3;
                select_ln13_3_reg_830 <= select_ln13_3_fu_556_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                this_s_addr_1_reg_873 <= zext_ln387_fu_659_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                this_s_addr_reg_765 <= zext_ln356_fu_412_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_1_fu_504_p2 = ap_const_lv1_0) and (icmp_ln359_fu_484_p2 = ap_const_lv1_0))) then
                trunc_ln342_2_reg_801 <= ap_phi_mux_this_pos_1_phi_fu_165_p4(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                trunc_ln388_reg_868 <= trunc_ln388_fu_647_p1;
            end if;
        end if;
    end process;
    p_read2_cast_reg_719(3) <= '0';
    zext_ln340_reg_776(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln349_fu_363_p2, ap_CS_fsm_state2, exitcond9413_fu_343_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, icmp_ln359_fu_484_p2, icmp_ln359_1_fu_504_p2, ap_CS_fsm_state10, ap_CS_fsm_state11, icmp_ln368_fu_570_p2, icmp_ln382_reg_864, ap_CS_fsm_state20, grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_done, grp_KeccakF1600_StatePermute_fu_265_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done, ap_block_state10_on_subcall_done, ap_CS_fsm_state15, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (icmp_ln349_fu_363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((exitcond9413_fu_343_p2 = ap_const_lv1_1) and (icmp_ln349_fu_363_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln359_1_fu_504_p2 = ap_const_lv1_0) and (icmp_ln359_fu_484_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln368_fu_570_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_KeccakF1600_StatePermute_fu_265_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln382_reg_864 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln382_reg_864 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln340_fu_439_p2 <= std_logic_vector(unsigned(umax_fu_421_p3) + unsigned(ap_const_lv2_3));
    add_ln351_fu_456_p2 <= std_logic_vector(unsigned(zext_ln351_1_fu_452_p1) + unsigned(p_read_cast3_reg_727));
    add_ln368_fu_576_p2 <= std_logic_vector(unsigned(mlen_assign_9_fu_106) + unsigned(ap_const_lv64_FFFFFFFFFFFFFF58));
    add_ln382_fu_635_p2 <= std_logic_vector(unsigned(phi_ln340_reg_194) + unsigned(and_ln_fu_613_p3));
    add_ln388_fu_674_p2 <= std_logic_vector(unsigned(add_ln382_reg_857) + unsigned(trunc_ln388_reg_868));
    and_ln_fu_613_p3 <= (tmp_4_fu_602_p4 & ap_const_lv3_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state10_on_subcall_done)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_265_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_265_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_done)
    begin
        if ((grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state10_on_subcall_done_assign_proc : process(grp_KeccakF1600_StatePermute_fu_265_ap_done, ap_predicate_op95_call_state10)
    begin
                ap_block_state10_on_subcall_done <= ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (grp_KeccakF1600_StatePermute_fu_265_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_mlen_assign_6_phi_fu_175_p4_assign_proc : process(icmp_ln349_reg_744, ap_CS_fsm_state6, add_ln340_fu_439_p2, mlen_assign_6_reg_171)
    begin
        if (((icmp_ln349_reg_744 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_mlen_assign_6_phi_fu_175_p4 <= add_ln340_fu_439_p2;
        else 
            ap_phi_mux_mlen_assign_6_phi_fu_175_p4 <= mlen_assign_6_reg_171;
        end if; 
    end process;


    ap_phi_mux_mlen_assign_8_phi_fu_210_p6_assign_proc : process(icmp_ln359_reg_783, icmp_ln359_1_reg_797, ap_CS_fsm_state10, sub_ln363_fu_535_p2, mlen_assign_8_reg_207)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln359_1_reg_797 = ap_const_lv1_0) and (icmp_ln359_reg_783 = ap_const_lv1_0))) then 
            ap_phi_mux_mlen_assign_8_phi_fu_210_p6 <= sub_ln363_fu_535_p2;
        else 
            ap_phi_mux_mlen_assign_8_phi_fu_210_p6 <= mlen_assign_8_reg_207;
        end if; 
    end process;


    ap_phi_mux_phi_ln13_phi_fu_186_p4_assign_proc : process(icmp_ln349_reg_744, ap_CS_fsm_state6, xor_ln351_1_fu_432_p2, phi_ln13_reg_182)
    begin
        if (((icmp_ln349_reg_744 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_phi_ln13_phi_fu_186_p4 <= xor_ln351_1_fu_432_p2;
        else 
            ap_phi_mux_phi_ln13_phi_fu_186_p4 <= phi_ln13_reg_182;
        end if; 
    end process;


    ap_phi_mux_phi_ln340_1_phi_fu_221_p6_assign_proc : process(icmp_ln359_reg_783, icmp_ln359_1_reg_797, ap_CS_fsm_state10, xor_ln366_fu_540_p2, phi_ln340_1_reg_218)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln359_1_reg_797 = ap_const_lv1_0) and (icmp_ln359_reg_783 = ap_const_lv1_0))) then 
            ap_phi_mux_phi_ln340_1_phi_fu_221_p6 <= xor_ln366_fu_540_p2;
        else 
            ap_phi_mux_phi_ln340_1_phi_fu_221_p6 <= phi_ln340_1_reg_218;
        end if; 
    end process;


    ap_phi_mux_phi_ln390_phi_fu_235_p4_assign_proc : process(icmp_ln382_reg_864, add_ln388_fu_674_p2, phi_ln390_reg_232, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln382_reg_864 = ap_const_lv1_0))) then 
            ap_phi_mux_phi_ln390_phi_fu_235_p4 <= add_ln388_fu_674_p2;
        else 
            ap_phi_mux_phi_ln390_phi_fu_235_p4 <= phi_ln390_reg_232;
        end if; 
    end process;


    ap_phi_mux_this_pos_1_phi_fu_165_p4_assign_proc : process(icmp_ln349_reg_744, ap_CS_fsm_state6, add_ln351_fu_456_p2, this_pos_1_reg_162)
    begin
        if (((icmp_ln349_reg_744 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_this_pos_1_phi_fu_165_p4 <= add_ln351_fu_456_p2;
        else 
            ap_phi_mux_this_pos_1_phi_fu_165_p4 <= this_pos_1_reg_162;
        end if; 
    end process;


    ap_predicate_op95_call_state10_assign_proc : process(icmp_ln359_reg_783, icmp_ln359_1_reg_797)
    begin
                ap_predicate_op95_call_state10 <= ((icmp_ln359_1_reg_797 = ap_const_lv1_0) and (icmp_ln359_reg_783 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_phi_ln390_phi_fu_235_p4, ap_CS_fsm_state21, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_return <= ap_phi_mux_phi_ln390_phi_fu_235_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    empty_116_fu_314_p0 <= p_read;
    empty_116_fu_314_p1 <= empty_116_fu_314_p0(8 - 1 downto 0);
    empty_117_fu_349_p2 <= std_logic_vector(unsigned(empty_fu_90) + unsigned(ap_const_lv4_1));
    empty_118_fu_377_p1 <= sub_ln351_fu_371_p2(2 - 1 downto 0);
    empty_119_fu_446_p3 <= 
        empty_118_reg_748 when (icmp_reg_754(0) = '1') else 
        ap_const_lv2_2;
    exitcond9413_fu_343_p2 <= "1" when (empty_fu_90 = ap_const_lv4_8) else "0";
    grp_KeccakF1600_StatePermute_fu_265_ap_start <= grp_KeccakF1600_StatePermute_fu_265_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_ap_start_reg;
    grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start <= grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_ap_start_reg;
    i_fu_326_p0 <= p_read;
    i_fu_326_p1 <= i_fu_326_p0(3 - 1 downto 0);
    icmp_fu_391_p2 <= "1" when (tmp_fu_381_p4 = ap_const_lv3_0) else "0";
    icmp_ln349_fu_363_p2 <= "1" when (i_reg_733 = ap_const_lv3_0) else "0";
    icmp_ln359_1_fu_504_p2 <= "1" when (unsigned(zext_ln340_1_fu_480_p1) < unsigned(sub_ln359_fu_490_p2)) else "0";
    icmp_ln359_fu_484_p2 <= "1" when (ap_phi_mux_this_pos_1_phi_fu_165_p4 = ap_const_lv11_0) else "0";
    icmp_ln368_fu_570_p2 <= "1" when (unsigned(mlen_assign_9_fu_106) > unsigned(ap_const_lv64_A7)) else "0";
    icmp_ln382_fu_641_p2 <= "1" when (mlen_assign_9_fu_106 = zext_ln378_fu_621_p1) else "0";
    lshr_ln1_fu_650_p4 <= add_ln382_reg_857(7 downto 3);
    p_cast13_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_90),64));
    p_read2_cast_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read2),4));
    p_read_cast3_fu_322_p0 <= p_read;
        p_read_cast3_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_cast3_fu_322_p0),11));

    select_ln13_1_fu_527_p3 <= 
        p_read1 when (phi_ln13_reg_182(0) = '1') else 
        p_read2_cast_reg_719;
    select_ln13_2_fu_550_p3 <= 
        p_read2_cast_reg_719 when (ap_phi_mux_phi_ln340_1_phi_fu_221_p6(0) = '1') else 
        p_read1;
    select_ln13_3_fu_556_p3 <= 
        p_read1 when (ap_phi_mux_phi_ln340_1_phi_fu_221_p6(0) = '1') else 
        p_read2_cast_reg_719;
    select_ln13_fu_520_p3 <= 
        p_read2_cast_reg_719 when (phi_ln13_reg_182(0) = '1') else 
        p_read1;
        sext_ln340_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_mlen_assign_8_phi_fu_210_p6),64));

    sub_ln340_fu_629_p2 <= std_logic_vector(unsigned(trunc_ln340_3_fu_587_p1) - unsigned(zext_ln379_fu_625_p1));
    sub_ln351_fu_371_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(zext_ln349_fu_360_p1));
    sub_ln356_fu_397_p2 <= std_logic_vector(unsigned(empty_116_reg_714) - unsigned(zext_ln351_fu_368_p1));
    sub_ln359_fu_490_p2 <= std_logic_vector(unsigned(ap_const_lv11_A8) - unsigned(ap_phi_mux_this_pos_1_phi_fu_165_p4));
    sub_ln363_fu_535_p2 <= std_logic_vector(unsigned(zext_ln340_reg_776) - unsigned(trunc_ln359_1_reg_792));

    t_address0_assign_proc : process(ap_CS_fsm_state2, exitcond9413_fu_343_p2, ap_CS_fsm_state5, ap_CS_fsm_state20, grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_address0, grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_address0, grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_address0, grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_address0, grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_address0, ap_CS_fsm_state3, ap_CS_fsm_state16, ap_CS_fsm_state18, p_cast13_fu_338_p1)
    begin
        if (((exitcond9413_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            t_address0 <= p_cast13_fu_338_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            t_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            t_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            t_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            t_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            t_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_address0;
        else 
            t_address0 <= "XXX";
        end if; 
    end process;


    t_ce0_assign_proc : process(ap_CS_fsm_state2, exitcond9413_fu_343_p2, ap_CS_fsm_state5, ap_CS_fsm_state20, grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_ce0, grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_ce0, grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_ce0, grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_ce0, grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_ce0, ap_CS_fsm_state3, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if (((exitcond9413_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            t_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            t_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            t_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            t_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            t_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            t_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_ce0;
        else 
            t_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_d0_assign_proc : process(ap_CS_fsm_state2, exitcond9413_fu_343_p2, grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_d0, grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_d0, grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_d0, ap_CS_fsm_state3, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if (((exitcond9413_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            t_d0 <= ap_const_lv4_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            t_d0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            t_d0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            t_d0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_d0;
        else 
            t_d0 <= "XXXX";
        end if; 
    end process;


    t_we0_assign_proc : process(ap_CS_fsm_state2, exitcond9413_fu_343_p2, grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_we0, grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_we0, grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_we0, ap_CS_fsm_state3, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if (((exitcond9413_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            t_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            t_we0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_385_7_fu_298_t_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            t_we0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_383_6_fu_293_t_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            t_we0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_351_1_fu_241_t_we0;
        else 
            t_we0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_address0_assign_proc : process(this_s_addr_reg_765, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, this_s_addr_1_reg_873, ap_CS_fsm_state20, grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address0, grp_KeccakF1600_StatePermute_fu_265_this_s_address0, grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address0, grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address0, ap_predicate_op95_call_state10, ap_CS_fsm_state21, ap_CS_fsm_state15, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state12, zext_ln356_fu_412_p1, zext_ln387_fu_659_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            this_s_address0 <= this_s_addr_1_reg_873;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            this_s_address0 <= zext_ln387_fu_659_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_address0 <= this_s_addr_reg_765;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            this_s_address0 <= zext_ln356_fu_412_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            this_s_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            this_s_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            this_s_address0 <= grp_KeccakF1600_StatePermute_fu_265_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            this_s_address0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address0;
        else 
            this_s_address0 <= "XXXXX";
        end if; 
    end process;


    this_s_address1_assign_proc : process(ap_CS_fsm_state10, grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address1, grp_KeccakF1600_StatePermute_fu_265_this_s_address1, grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address1, grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address1, ap_predicate_op95_call_state10, ap_CS_fsm_state15, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            this_s_address1 <= grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            this_s_address1 <= grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            this_s_address1 <= grp_KeccakF1600_StatePermute_fu_265_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            this_s_address1 <= grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_address1;
        else 
            this_s_address1 <= "XXXXX";
        end if; 
    end process;


    this_s_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state20, grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done, grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce0, grp_KeccakF1600_StatePermute_fu_265_this_s_ce0, grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce0, grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce0, grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done, ap_predicate_op95_call_state10, ap_CS_fsm_state21, ap_CS_fsm_state15, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_ap_done = ap_const_logic_1)) or ((grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            this_s_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            this_s_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            this_s_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            this_s_ce0 <= grp_KeccakF1600_StatePermute_fu_265_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            this_s_ce0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce0;
        else 
            this_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_ce1_assign_proc : process(ap_CS_fsm_state10, grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce1, grp_KeccakF1600_StatePermute_fu_265_this_s_ce1, grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce1, grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce1, ap_predicate_op95_call_state10, ap_CS_fsm_state15, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            this_s_ce1 <= grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            this_s_ce1 <= grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            this_s_ce1 <= grp_KeccakF1600_StatePermute_fu_265_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            this_s_ce1 <= grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_ce1;
        else 
            this_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_d0, grp_KeccakF1600_StatePermute_fu_265_this_s_d0, grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_d0, grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_d0, ap_predicate_op95_call_state10, ap_CS_fsm_state21, ap_CS_fsm_state15, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state12, xor_ln356_fu_465_p2, xor_ln387_fu_667_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            this_s_d0 <= xor_ln387_fu_667_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_d0 <= xor_ln356_fu_465_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            this_s_d0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            this_s_d0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            this_s_d0 <= grp_KeccakF1600_StatePermute_fu_265_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            this_s_d0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_d0;
        else 
            this_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    this_s_d1 <= grp_KeccakF1600_StatePermute_fu_265_this_s_d1;

    this_s_we0_assign_proc : process(icmp_ln349_reg_744, ap_CS_fsm_state6, ap_CS_fsm_state10, icmp_ln382_reg_864, grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_we0, grp_KeccakF1600_StatePermute_fu_265_this_s_we0, grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_we0, grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_we0, ap_predicate_op95_call_state10, ap_CS_fsm_state21, ap_CS_fsm_state15, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln382_reg_864 = ap_const_lv1_0)) or ((icmp_ln349_reg_744 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            this_s_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            this_s_we0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_376_5_fu_282_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            this_s_we0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_369_4_fu_273_this_s_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            this_s_we0 <= grp_KeccakF1600_StatePermute_fu_265_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            this_s_we0 <= grp_shake_absorb_Pipeline_VITIS_LOOP_360_2_fu_255_this_s_we0;
        else 
            this_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_we1_assign_proc : process(ap_CS_fsm_state10, grp_KeccakF1600_StatePermute_fu_265_this_s_we1, ap_predicate_op95_call_state10, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_predicate_op95_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            this_s_we1 <= grp_KeccakF1600_StatePermute_fu_265_this_s_we1;
        else 
            this_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_4_fu_602_p4 <= mlen_assign_9_fu_106(7 downto 3);
    tmp_fu_381_p4 <= sub_ln351_fu_371_p2(3 downto 1);
    trunc_ln340_3_fu_587_p1 <= mlen_assign_9_fu_106(9 - 1 downto 0);
    trunc_ln340_fu_472_p1 <= ap_phi_mux_this_pos_1_phi_fu_165_p4(8 - 1 downto 0);
    trunc_ln351_fu_428_p1 <= umax_fu_421_p3(1 - 1 downto 0);
    trunc_ln359_1_fu_500_p1 <= sub_ln359_fu_490_p2(3 - 1 downto 0);
    trunc_ln359_fu_496_p1 <= sub_ln359_fu_490_p2(1 - 1 downto 0);
    trunc_ln388_fu_647_p1 <= sub_ln340_reg_851(8 - 1 downto 0);
    umax_fu_421_p3 <= 
        xor_ln351_fu_416_p2 when (icmp_reg_754(0) = '1') else 
        ap_const_lv2_1;
    xor_ln351_1_fu_432_p2 <= (trunc_ln351_fu_428_p1 xor ap_const_lv1_1);
    xor_ln351_fu_416_p2 <= (empty_118_reg_748 xor ap_const_lv2_3);
    xor_ln356_fu_465_p2 <= (this_s_q0 xor grp_shake_absorb_Pipeline_VITIS_LOOP_12_1_fu_249_r_out);
    xor_ln366_fu_540_p2 <= (trunc_ln359_reg_787 xor phi_ln13_reg_182);
    xor_ln387_fu_667_p2 <= (this_s_q0 xor grp_shake_absorb_Pipeline_VITIS_LOOP_12_12_fu_308_r_3_out);
    zext_ln340_1_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_mlen_assign_6_phi_fu_175_p4),11));
    zext_ln340_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_mlen_assign_6_phi_fu_175_p4),3));
    zext_ln349_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_733),4));
    zext_ln351_1_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_119_fu_446_p3),11));
    zext_ln351_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_733),8));
    zext_ln356_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_760),64));
    zext_ln378_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_613_p3),64));
    zext_ln379_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_613_p3),9));
    zext_ln387_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_fu_650_p4),64));
end behav;
