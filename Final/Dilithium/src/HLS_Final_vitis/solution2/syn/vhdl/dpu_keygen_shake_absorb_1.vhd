-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen_shake_absorb_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    this_s_ce0 : OUT STD_LOGIC;
    this_s_we0 : OUT STD_LOGIC;
    this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    this_s_ce1 : OUT STD_LOGIC;
    this_s_we1 : OUT STD_LOGIC;
    this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    mode : IN STD_LOGIC_VECTOR (8 downto 0);
    seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    seedbuf_ce0 : OUT STD_LOGIC;
    seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    seedbuf_ce1 : OUT STD_LOGIC;
    seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    m : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of dpu_keygen_shake_absorb_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv64_A8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010101000";
    constant ap_const_lv64_88 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010001000";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal m_cast_fu_193_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal m_cast_reg_390 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln368_1_fu_232_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln368_1_reg_412 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond9415_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln368_fu_240_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln368_reg_419 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln340_fu_264_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln340_reg_424 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln340_1_fu_294_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln340_1_reg_432 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln368_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln340_2_fu_298_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln340_2_reg_437 : STD_LOGIC_VECTOR (7 downto 0);
    signal div_reg_443 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln13_2_fu_313_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln13_2_reg_449 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln379_fu_323_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln379_reg_455 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln382_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln382_reg_460 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln13_18_fu_333_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln13_18_reg_464 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal sub_ln340_fu_339_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln340_reg_470 : STD_LOGIC_VECTOR (8 downto 0);
    signal this_s_addr_reg_476 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_ce0 : STD_LOGIC;
    signal t_we0 : STD_LOGIC;
    signal t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_done : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce1 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce1 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_164_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_done : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_we0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_done : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_we0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_r_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_r_out_ap_vld : STD_LOGIC;
    signal add_ln388_fu_361_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_this_pos_3_phi_fu_137_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal this_pos_3_reg_134 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start_reg : STD_LOGIC := '0';
    signal grp_KeccakF1600_StatePermute_fu_164_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_cast_fu_205_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln387_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_76 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_127_fu_216_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx98_fu_88 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln371_fu_274_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mlen_assign_fu_92 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln368_fu_279_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln387_fu_351_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln346_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln378_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln379_fu_336_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln388_fu_358_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_369_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_ln368 : IN STD_LOGIC_VECTOR (4 downto 0);
        m_cast : IN STD_LOGIC_VECTOR (5 downto 0);
        trunc_ln340_2 : IN STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce1 : OUT STD_LOGIC;
        seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_376_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        div : IN STD_LOGIC_VECTOR (4 downto 0);
        add_ln13_2 : IN STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce1 : OUT STD_LOGIC;
        seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_KeccakF1600_StatePermute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_383_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_385_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln340 : IN STD_LOGIC_VECTOR (8 downto 0);
        trunc_ln1 : IN STD_LOGIC_VECTOR (6 downto 0);
        add_ln13_2 : IN STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_12_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        r_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        r_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_shake_absorb_1_t_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    t_U : component dpu_keygen_shake_absorb_1_t_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_address0,
        ce0 => t_ce0,
        we0 => t_we0,
        d0 => t_d0,
        q0 => t_q0);

    grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143 : component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_369_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start,
        ap_done => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_done,
        ap_idle => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_idle,
        ap_ready => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_ready,
        select_ln368 => select_ln368_reg_419,
        m_cast => m,
        trunc_ln340_2 => trunc_ln340_reg_424,
        seedbuf_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address0,
        seedbuf_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        seedbuf_address1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address1,
        seedbuf_ce1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce1,
        seedbuf_q1 => seedbuf_q1,
        this_s_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address0,
        this_s_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce0,
        this_s_we0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_we0,
        this_s_d0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_d0,
        this_s_address1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address1,
        this_s_ce1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce1,
        this_s_q1 => this_s_q1);

    grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154 : component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_376_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start,
        ap_done => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done,
        ap_idle => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_idle,
        ap_ready => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_ready,
        div => div_reg_443,
        add_ln13_2 => add_ln13_2_reg_449,
        seedbuf_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address0,
        seedbuf_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        seedbuf_address1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address1,
        seedbuf_ce1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce1,
        seedbuf_q1 => seedbuf_q1,
        this_s_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address0,
        this_s_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce0,
        this_s_we0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_we0,
        this_s_d0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_d0,
        this_s_address1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address1,
        this_s_ce1 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce1,
        this_s_q1 => this_s_q1);

    grp_KeccakF1600_StatePermute_fu_164 : component dpu_keygen_KeccakF1600_StatePermute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_fu_164_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_fu_164_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_fu_164_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_fu_164_ap_ready,
        this_s_address0 => grp_KeccakF1600_StatePermute_fu_164_this_s_address0,
        this_s_ce0 => grp_KeccakF1600_StatePermute_fu_164_this_s_ce0,
        this_s_we0 => grp_KeccakF1600_StatePermute_fu_164_this_s_we0,
        this_s_d0 => grp_KeccakF1600_StatePermute_fu_164_this_s_d0,
        this_s_q0 => this_s_q0,
        this_s_address1 => grp_KeccakF1600_StatePermute_fu_164_this_s_address1,
        this_s_ce1 => grp_KeccakF1600_StatePermute_fu_164_this_s_ce1,
        this_s_we1 => grp_KeccakF1600_StatePermute_fu_164_this_s_we1,
        this_s_d1 => grp_KeccakF1600_StatePermute_fu_164_this_s_d1,
        this_s_q1 => this_s_q1);

    grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172 : component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_383_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start,
        ap_done => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_done,
        ap_idle => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_idle,
        ap_ready => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_ready,
        t_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_address0,
        t_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_ce0,
        t_we0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_we0,
        t_d0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_d0);

    grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177 : component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_385_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start,
        ap_done => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_done,
        ap_idle => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_idle,
        ap_ready => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_ready,
        sext_ln340 => sub_ln340_reg_470,
        trunc_ln1 => trunc_ln379_reg_455,
        add_ln13_2 => add_ln13_2_reg_449,
        seedbuf_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_address0,
        seedbuf_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        t_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_address0,
        t_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_ce0,
        t_we0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_we0,
        t_d0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_d0);

    grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187 : component dpu_keygen_shake_absorb_1_Pipeline_VITIS_LOOP_12_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start,
        ap_done => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done,
        ap_idle => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_idle,
        ap_ready => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_ready,
        t_address0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_address0,
        t_ce0 => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_ce0,
        t_q0 => t_q0,
        r_out => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_r_out,
        r_out_ap_vld => grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_r_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv10_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_return_preg <= ap_phi_mux_this_pos_3_phi_fu_137_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_fu_164_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_fu_164_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_KeccakF1600_StatePermute_fu_164_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_fu_164_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_fu_164_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln368_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln368_fu_269_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln382_reg_460 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done = ap_const_logic_1))) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_fu_76 <= ap_const_lv4_0;
            elsif (((exitcond9415_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                empty_fu_76 <= empty_127_fu_216_p2;
            end if; 
        end if;
    end process;

    idx98_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9415_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                idx98_fu_88 <= ap_const_lv64_0;
            elsif (((icmp_ln368_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                idx98_fu_88 <= add_ln371_fu_274_p2;
            end if; 
        end if;
    end process;

    mlen_assign_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9415_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                mlen_assign_fu_92 <= ap_const_lv64_20;
            elsif (((icmp_ln368_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                mlen_assign_fu_92 <= sub_ln368_fu_279_p2;
            end if; 
        end if;
    end process;

    this_pos_3_reg_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln382_reg_460 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done = ap_const_logic_1))) then 
                this_pos_3_reg_134 <= zext_ln13_18_fu_333_p1;
            elsif (((icmp_ln382_reg_460 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                this_pos_3_reg_134 <= add_ln388_fu_361_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln368_fu_269_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln13_2_reg_449 <= add_ln13_2_fu_313_p2;
                div_reg_443 <= mlen_assign_fu_92(7 downto 3);
                icmp_ln382_reg_460 <= icmp_ln382_fu_327_p2;
                trunc_ln340_1_reg_432 <= trunc_ln340_1_fu_294_p1;
                trunc_ln340_2_reg_437 <= trunc_ln340_2_fu_298_p1;
                trunc_ln379_reg_455 <= trunc_ln379_fu_323_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    m_cast_reg_390(5 downto 0) <= m_cast_fu_193_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9415_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    select_ln368_1_reg_412(5) <= select_ln368_1_fu_232_p3(5);
                    select_ln368_reg_419(2) <= select_ln368_fu_240_p3(2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                sub_ln340_reg_470 <= sub_ln340_fu_339_p2;
                    zext_ln13_18_reg_464(7 downto 0) <= zext_ln13_18_fu_333_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                this_s_addr_reg_476 <= zext_ln387_fu_344_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                trunc_ln340_reg_424 <= trunc_ln340_fu_264_p1;
            end if;
        end if;
    end process;
    m_cast_reg_390(6) <= '0';
    select_ln368_1_reg_412(4 downto 0) <= "01000";
    select_ln368_1_reg_412(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000010";
    select_ln368_reg_419(1 downto 0) <= "01";
    select_ln368_reg_419(4 downto 3) <= "10";
    zext_ln13_18_reg_464(9 downto 8) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond9415_fu_210_p2, ap_CS_fsm_state3, icmp_ln368_fu_269_p2, icmp_ln382_reg_460, ap_CS_fsm_state7, ap_CS_fsm_state12, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_done, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done, grp_KeccakF1600_StatePermute_fu_164_ap_done, grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_done, grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_done, grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond9415_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln368_fu_269_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_KeccakF1600_StatePermute_fu_164_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln382_reg_460 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7) and (grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((icmp_ln382_reg_460 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln13_2_fu_313_p2 <= std_logic_vector(unsigned(trunc_ln340_fu_264_p1) + unsigned(m_cast_reg_390));
    add_ln371_fu_274_p2 <= std_logic_vector(unsigned(select_ln368_1_reg_412) + unsigned(idx98_fu_88));
    add_ln388_fu_361_p2 <= std_logic_vector(unsigned(zext_ln13_18_reg_464) + unsigned(sext_ln388_fu_358_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_done)
    begin
        if ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done)
    begin
        if ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_done)
    begin
        if ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_164_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_164_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done)
    begin
        if ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_done)
    begin
        if ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_this_pos_3_phi_fu_137_p4_assign_proc : process(icmp_ln382_reg_460, add_ln388_fu_361_p2, this_pos_3_reg_134, ap_CS_fsm_state13)
    begin
        if (((icmp_ln382_reg_460 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            ap_phi_mux_this_pos_3_phi_fu_137_p4 <= add_ln388_fu_361_p2;
        else 
            ap_phi_mux_this_pos_3_phi_fu_137_p4 <= this_pos_3_reg_134;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_this_pos_3_phi_fu_137_p4, ap_CS_fsm_state13, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_return <= ap_phi_mux_this_pos_3_phi_fu_137_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    empty_127_fu_216_p2 <= std_logic_vector(unsigned(empty_fu_76) + unsigned(ap_const_lv4_1));
    exitcond9415_fu_210_p2 <= "1" when (empty_fu_76 = ap_const_lv4_8) else "0";
    grp_KeccakF1600_StatePermute_fu_164_ap_start <= grp_KeccakF1600_StatePermute_fu_164_ap_start_reg;
    grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_start_reg;
    grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_ap_start_reg;
    grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_ap_start_reg;
    grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_ap_start_reg;
    grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_ap_start_reg;
    icmp_ln346_fu_227_p2 <= "1" when (mode = ap_const_lv9_80) else "0";
    icmp_ln368_fu_269_p2 <= "1" when (unsigned(mlen_assign_fu_92) < unsigned(select_ln368_1_reg_412)) else "0";
    icmp_ln382_fu_327_p2 <= "1" when (mlen_assign_fu_92 = zext_ln378_fu_319_p1) else "0";
    m_cast_fu_193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m),7));
    p_cast_fu_205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_76),64));

    seedbuf_address0_assign_proc : process(ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_address0, ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            seedbuf_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            seedbuf_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address0;
        else 
            seedbuf_address0 <= "XXXXXXX";
        end if; 
    end process;


    seedbuf_address1_assign_proc : process(ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address1, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            seedbuf_address1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_address1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_address1;
        else 
            seedbuf_address1 <= "XXXXXXX";
        end if; 
    end process;


    seedbuf_ce0_assign_proc : process(ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_ce0, ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            seedbuf_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_seedbuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            seedbuf_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce0;
        else 
            seedbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    seedbuf_ce1_assign_proc : process(ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce1, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            seedbuf_ce1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_seedbuf_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            seedbuf_ce1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_seedbuf_ce1;
        else 
            seedbuf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln368_1_fu_232_p3 <= 
        ap_const_lv64_A8 when (icmp_ln346_fu_227_p2(0) = '1') else 
        ap_const_lv64_88;
    select_ln368_fu_240_p3 <= 
        ap_const_lv5_15 when (icmp_ln346_fu_227_p2(0) = '1') else 
        ap_const_lv5_11;
        sext_ln388_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln340_reg_470),10));

    sub_ln340_fu_339_p2 <= std_logic_vector(unsigned(trunc_ln340_1_reg_432) - unsigned(zext_ln379_fu_336_p1));
    sub_ln368_fu_279_p2 <= std_logic_vector(unsigned(mlen_assign_fu_92) - unsigned(select_ln368_1_reg_412));

    t_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_address0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_address0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_address0, ap_CS_fsm_state8, ap_CS_fsm_state10, p_cast_fu_205_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            t_address0 <= p_cast_fu_205_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            t_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_address0;
        else 
            t_address0 <= "XXX";
        end if; 
    end process;


    t_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_ce0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_ce0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            t_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            t_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_ce0;
        else 
            t_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_d0_assign_proc : process(ap_CS_fsm_state2, grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_d0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_d0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            t_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_d0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_d0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_d0;
        else 
            t_d0 <= "XXXXXXXX";
        end if; 
    end process;


    t_we0_assign_proc : process(ap_CS_fsm_state2, exitcond9415_fu_210_p2, grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_we0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_we0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if (((exitcond9415_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            t_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            t_we0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_385_7_fu_177_t_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_we0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_383_6_fu_172_t_we0;
        else 
            t_we0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_address0_assign_proc : process(ap_CS_fsm_state7, this_s_addr_reg_476, ap_CS_fsm_state12, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address0, grp_KeccakF1600_StatePermute_fu_164_this_s_address0, ap_CS_fsm_state13, ap_CS_fsm_state4, ap_CS_fsm_state6, zext_ln387_fu_344_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            this_s_address0 <= this_s_addr_reg_476;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            this_s_address0 <= zext_ln387_fu_344_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_address0 <= grp_KeccakF1600_StatePermute_fu_164_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            this_s_address0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address0;
        else 
            this_s_address0 <= "XXXXX";
        end if; 
    end process;


    this_s_address1_assign_proc : process(ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address1, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address1, grp_KeccakF1600_StatePermute_fu_164_this_s_address1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_address1 <= grp_KeccakF1600_StatePermute_fu_164_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_address1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            this_s_address1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_address1;
        else 
            this_s_address1 <= "XXXXX";
        end if; 
    end process;


    this_s_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state12, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce0, grp_KeccakF1600_StatePermute_fu_164_this_s_ce0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            this_s_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_ce0 <= grp_KeccakF1600_StatePermute_fu_164_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            this_s_ce0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce0;
        else 
            this_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_ce1_assign_proc : process(ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce1, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce1, grp_KeccakF1600_StatePermute_fu_164_this_s_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_ce1 <= grp_KeccakF1600_StatePermute_fu_164_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_ce1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            this_s_ce1 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_ce1;
        else 
            this_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_d0_assign_proc : process(ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_d0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_d0, grp_KeccakF1600_StatePermute_fu_164_this_s_d0, ap_CS_fsm_state13, ap_CS_fsm_state4, ap_CS_fsm_state6, xor_ln387_fu_351_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            this_s_d0 <= xor_ln387_fu_351_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_d0 <= grp_KeccakF1600_StatePermute_fu_164_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_d0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            this_s_d0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_d0;
        else 
            this_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    this_s_d1 <= grp_KeccakF1600_StatePermute_fu_164_this_s_d1;

    this_s_we0_assign_proc : process(icmp_ln382_reg_460, ap_CS_fsm_state7, grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_we0, grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_we0, grp_KeccakF1600_StatePermute_fu_164_this_s_we0, ap_CS_fsm_state13, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((icmp_ln382_reg_460 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            this_s_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_we0 <= grp_KeccakF1600_StatePermute_fu_164_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            this_s_we0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_376_5_fu_154_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            this_s_we0 <= grp_shake_absorb_1_Pipeline_VITIS_LOOP_369_4_fu_143_this_s_we0;
        else 
            this_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    this_s_we1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_164_this_s_we1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            this_s_we1 <= grp_KeccakF1600_StatePermute_fu_164_this_s_we1;
        else 
            this_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln340_1_fu_294_p1 <= mlen_assign_fu_92(9 - 1 downto 0);
    trunc_ln340_2_fu_298_p1 <= mlen_assign_fu_92(8 - 1 downto 0);
    trunc_ln340_fu_264_p1 <= idx98_fu_88(7 - 1 downto 0);
    trunc_ln379_fu_323_p1 <= mlen_assign_fu_92(7 - 1 downto 0);
    xor_ln387_fu_351_p2 <= (this_s_q0 xor grp_shake_absorb_1_Pipeline_VITIS_LOOP_12_1_fu_187_r_out);
    zext_ln13_18_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln340_2_reg_437),10));
    zext_ln378_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln340_2_fu_298_p1),64));
    zext_ln379_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln340_2_reg_437),9));
    zext_ln387_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div_reg_443),64));
end behav;
