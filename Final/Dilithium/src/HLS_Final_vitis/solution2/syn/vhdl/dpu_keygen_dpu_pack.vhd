-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen_dpu_pack is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    this_0_ce0 : OUT STD_LOGIC;
    this_0_q0 : IN STD_LOGIC_VECTOR (8191 downto 0);
    pk_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pk_ce0 : OUT STD_LOGIC;
    pk_we0 : OUT STD_LOGIC;
    pk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pk_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pk_ce1 : OUT STD_LOGIC;
    pk_we1 : OUT STD_LOGIC;
    pk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ptr_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ptr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ptr_o_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (8191 downto 0) );
end;


architecture behav of dpu_keygen_dpu_pack is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln603_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal this_5_0_load_reg_182 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal this_0_load_reg_187 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_done : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_idle : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_ready : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_this_5_1_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_this_5_1_out_ap_vld : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_done : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_idle : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_ready : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_ce0 : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_we0 : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_ce1 : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_we1 : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o_ap_vld : STD_LOGIC;
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal idxprom_i_fu_136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_10_fu_54 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_15_fu_120_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal this_5_0_fu_58 : STD_LOGIC_VECTOR (8191 downto 0);
    signal zext_ln604_fu_126_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal addr_fu_130_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dpu_keygen_dpu_pack_Pipeline_VITIS_LOOP_73_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_5_0 : IN STD_LOGIC_VECTOR (8191 downto 0);
        this_0_load : IN STD_LOGIC_VECTOR (8191 downto 0);
        this_5_1_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        this_5_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_dpu_pack_Pipeline_VITIS_LOOP_605_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_5_1_reload : IN STD_LOGIC_VECTOR (8191 downto 0);
        pk_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pk_ce0 : OUT STD_LOGIC;
        pk_we0 : OUT STD_LOGIC;
        pk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pk_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pk_ce1 : OUT STD_LOGIC;
        pk_we1 : OUT STD_LOGIC;
        pk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ptr_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ptr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ptr_o_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79 : component dpu_keygen_dpu_pack_Pipeline_VITIS_LOOP_73_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start,
        ap_done => grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_done,
        ap_idle => grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_idle,
        ap_ready => grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_ready,
        this_5_0 => this_5_0_load_reg_182,
        this_0_load => this_0_load_reg_187,
        this_5_1_out => grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_this_5_1_out,
        this_5_1_out_ap_vld => grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_this_5_1_out_ap_vld);

    grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87 : component dpu_keygen_dpu_pack_Pipeline_VITIS_LOOP_605_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start,
        ap_done => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_done,
        ap_idle => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_idle,
        ap_ready => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_ready,
        this_5_1_reload => grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_this_5_1_out,
        pk_address0 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_address0,
        pk_ce0 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_ce0,
        pk_we0 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_we0,
        pk_d0 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_d0,
        pk_address1 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_address1,
        pk_ce1 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_ce1,
        pk_we1 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_we1,
        pk_d1 => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_d1,
        ptr_i => ptr_i,
        ptr_o => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o,
        ptr_o_ap_vld => grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    j_10_fu_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_10_fu_54 <= ap_const_lv3_0;
            elsif (((icmp_ln603_fu_114_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_10_fu_54 <= j_15_fu_120_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                this_0_load_reg_187 <= this_0_q0;
                this_5_0_load_reg_182 <= this_5_0_fu_58;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                this_5_0_fu_58 <= grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_this_5_1_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln603_fu_114_p2, grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_done, grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln603_fu_114_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    addr_fu_130_p2 <= std_logic_vector(unsigned(zext_ln604_fu_126_p1) + unsigned(ap_const_lv7_3F));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_done)
    begin
        if ((grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_done)
    begin
        if ((grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln603_fu_114_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln603_fu_114_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln603_fu_114_p2)
    begin
        if (((icmp_ln603_fu_114_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= this_5_0_fu_58;
    grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ap_start_reg;
    grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start <= grp_dpu_pack_Pipeline_VITIS_LOOP_73_1_fu_79_ap_start_reg;
    icmp_ln603_fu_114_p2 <= "1" when (j_10_fu_54 = ap_const_lv3_6) else "0";
    idxprom_i_fu_136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_fu_130_p2),64));
    j_15_fu_120_p2 <= std_logic_vector(unsigned(j_10_fu_54) + unsigned(ap_const_lv3_1));
    pk_address0 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_address0;
    pk_address1 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_address1;
    pk_ce0 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_ce0;
    pk_ce1 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_ce1;
    pk_d0 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_d0;
    pk_d1 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_d1;
    pk_we0 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_we0;
    pk_we1 <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_pk_we1;

    ptr_o_assign_proc : process(ap_CS_fsm_state1, ptr_i, grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o, grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o_ap_vld, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ptr_o <= ap_const_lv32_20;
        elsif (((grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ptr_o <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o;
        else 
            ptr_o <= ptr_i;
        end if; 
    end process;


    ptr_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o_ap_vld, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ptr_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ptr_o_ap_vld <= grp_dpu_pack_Pipeline_VITIS_LOOP_605_2_fu_87_ptr_o_ap_vld;
        else 
            ptr_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    this_0_address0 <= idxprom_i_fu_136_p1(8 - 1 downto 0);

    this_0_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            this_0_ce0 <= ap_const_logic_1;
        else 
            this_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln604_fu_126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_10_fu_54),7));
end behav;
