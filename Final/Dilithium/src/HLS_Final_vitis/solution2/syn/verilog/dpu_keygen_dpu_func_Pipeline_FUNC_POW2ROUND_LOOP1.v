// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dpu_keygen_dpu_func_Pipeline_FUNC_POW2ROUND_LOOP1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read2,
        p_read3,
        p_read,
        trunc_ln51,
        this_0_address0,
        this_0_ce0,
        this_0_we0,
        this_0_d0,
        this_0_q0,
        addr1,
        p_read1,
        addr2_cast_cast,
        addr3_cast_cast,
        this_3_18_out,
        this_3_18_out_ap_vld,
        this_4_18_out,
        this_4_18_out_ap_vld,
        this_1_17_out,
        this_1_17_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 32'd1;
parameter    ap_ST_fsm_pp0_stage1 = 32'd2;
parameter    ap_ST_fsm_pp0_stage2 = 32'd4;
parameter    ap_ST_fsm_pp0_stage3 = 32'd8;
parameter    ap_ST_fsm_pp0_stage4 = 32'd16;
parameter    ap_ST_fsm_pp0_stage5 = 32'd32;
parameter    ap_ST_fsm_pp0_stage6 = 32'd64;
parameter    ap_ST_fsm_pp0_stage7 = 32'd128;
parameter    ap_ST_fsm_pp0_stage8 = 32'd256;
parameter    ap_ST_fsm_pp0_stage9 = 32'd512;
parameter    ap_ST_fsm_pp0_stage10 = 32'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 32'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 32'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 32'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 32'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 32'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 32'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 32'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 32'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 32'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 32'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 32'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 32'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 32'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 32'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 32'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 32'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 32'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 32'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 32'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 32'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8191:0] p_read2;
input  [8191:0] p_read3;
input  [8191:0] p_read;
input  [2:0] trunc_ln51;
output  [7:0] this_0_address0;
output   this_0_ce0;
output  [1023:0] this_0_we0;
output  [8191:0] this_0_d0;
input  [8191:0] this_0_q0;
input  [7:0] addr1;
input  [8191:0] p_read1;
input  [5:0] addr2_cast_cast;
input  [5:0] addr3_cast_cast;
output  [8191:0] this_3_18_out;
output   this_3_18_out_ap_vld;
output  [8191:0] this_4_18_out;
output   this_4_18_out_ap_vld;
output  [8191:0] this_1_17_out;
output   this_1_17_out_ap_vld;

reg ap_idle;
reg[7:0] this_0_address0;
reg this_0_ce0;
reg[1023:0] this_0_we0;
reg[8191:0] this_0_d0;
reg this_3_18_out_ap_vld;
reg this_4_18_out_ap_vld;
reg this_1_17_out_ap_vld;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state33_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln286_fu_228_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln286_reg_352;
wire   [7:0] add_ln288_fu_248_p2;
reg   [7:0] add_ln288_reg_356;
wire   [6:0] add_ln290_fu_254_p2;
reg   [6:0] add_ln290_reg_361;
wire   [6:0] add_ln291_fu_260_p2;
reg   [6:0] add_ln291_reg_366;
wire   [8191:0] grp_read_p1_fu_165_ap_return;
reg   [8191:0] call_ret_reg_371;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [8191:0] this_4_ret5_reg_382;
wire    ap_block_pp0_stage31_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_read_p1_fu_165_ap_start;
wire    grp_read_p1_fu_165_ap_done;
wire    grp_read_p1_fu_165_ap_idle;
wire    grp_read_p1_fu_165_ap_ready;
wire   [7:0] grp_read_p1_fu_165_this_pMem_address0;
wire    grp_read_p1_fu_165_this_pMem_ce0;
wire   [8191:0] grp_dpu_unit_fu_172_ap_return_0;
wire   [8191:0] grp_dpu_unit_fu_172_ap_return_1;
reg    grp_dpu_unit_fu_172_ap_ce;
wire    ap_block_state4_pp0_stage3_iter0_ignore_call6;
wire    ap_block_pp0_stage3_11001_ignoreCallOp72;
wire    ap_block_state5_pp0_stage4_iter0_ignore_call6;
wire    ap_block_pp0_stage4_11001_ignoreCallOp73;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage5_iter0_ignore_call6;
wire    ap_block_pp0_stage5_11001_ignoreCallOp74;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage6_iter0_ignore_call6;
wire    ap_block_pp0_stage6_11001_ignoreCallOp75;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage7_iter0_ignore_call6;
wire    ap_block_pp0_stage7_11001_ignoreCallOp76;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage8_iter0_ignore_call6;
wire    ap_block_pp0_stage8_11001_ignoreCallOp77;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage9_iter0_ignore_call6;
wire    ap_block_pp0_stage9_11001_ignoreCallOp78;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage10_iter0_ignore_call6;
wire    ap_block_pp0_stage10_11001_ignoreCallOp79;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage11_iter0_ignore_call6;
wire    ap_block_pp0_stage11_11001_ignoreCallOp80;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage12_iter0_ignore_call6;
wire    ap_block_pp0_stage12_11001_ignoreCallOp81;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage13_iter0_ignore_call6;
wire    ap_block_pp0_stage13_11001_ignoreCallOp82;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage14_iter0_ignore_call6;
wire    ap_block_pp0_stage14_11001_ignoreCallOp83;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage15_iter0_ignore_call6;
wire    ap_block_pp0_stage15_11001_ignoreCallOp84;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage16_iter0_ignore_call6;
wire    ap_block_pp0_stage16_11001_ignoreCallOp85;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state18_pp0_stage17_iter0_ignore_call6;
wire    ap_block_pp0_stage17_11001_ignoreCallOp86;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state19_pp0_stage18_iter0_ignore_call6;
wire    ap_block_pp0_stage18_11001_ignoreCallOp87;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state20_pp0_stage19_iter0_ignore_call6;
wire    ap_block_pp0_stage19_11001_ignoreCallOp88;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state21_pp0_stage20_iter0_ignore_call6;
wire    ap_block_pp0_stage20_11001_ignoreCallOp89;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state22_pp0_stage21_iter0_ignore_call6;
wire    ap_block_pp0_stage21_11001_ignoreCallOp90;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state23_pp0_stage22_iter0_ignore_call6;
wire    ap_block_pp0_stage22_11001_ignoreCallOp91;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state24_pp0_stage23_iter0_ignore_call6;
wire    ap_block_pp0_stage23_11001_ignoreCallOp92;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state25_pp0_stage24_iter0_ignore_call6;
wire    ap_block_pp0_stage24_11001_ignoreCallOp93;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state26_pp0_stage25_iter0_ignore_call6;
wire    ap_block_pp0_stage25_11001_ignoreCallOp94;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state27_pp0_stage26_iter0_ignore_call6;
wire    ap_block_pp0_stage26_11001_ignoreCallOp95;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state28_pp0_stage27_iter0_ignore_call6;
wire    ap_block_pp0_stage27_11001_ignoreCallOp96;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_state29_pp0_stage28_iter0_ignore_call6;
wire    ap_block_pp0_stage28_11001_ignoreCallOp97;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_state30_pp0_stage29_iter0_ignore_call6;
wire    ap_block_pp0_stage29_11001_ignoreCallOp98;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state31_pp0_stage30_iter0_ignore_call6;
wire    ap_block_pp0_stage30_11001_ignoreCallOp99;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state32_pp0_stage31_iter0_ignore_call6;
wire    ap_block_pp0_stage31_11001_ignoreCallOp100;
wire    call_ln290_write_p3_fu_181_ap_start;
wire    call_ln290_write_p3_fu_181_ap_ready;
wire   [7:0] call_ln290_write_p3_fu_181_this_pMem_address0;
wire    call_ln290_write_p3_fu_181_this_pMem_ce0;
wire   [1023:0] call_ln290_write_p3_fu_181_this_pMem_we0;
wire   [8191:0] call_ln290_write_p3_fu_181_this_pMem_d0;
wire   [7:0] call_ln290_write_p3_fu_181_addr;
wire    call_ln291_write_p4_fu_189_ap_start;
wire    call_ln291_write_p4_fu_189_ap_ready;
wire   [7:0] call_ln291_write_p4_fu_189_this_pMem_address0;
wire    call_ln291_write_p4_fu_189_this_pMem_ce0;
wire   [1023:0] call_ln291_write_p4_fu_189_this_pMem_we0;
wire   [8191:0] call_ln291_write_p4_fu_189_this_pMem_d0;
wire   [7:0] call_ln291_write_p4_fu_189_addr;
reg    grp_read_p1_fu_165_ap_start_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
reg    call_ln290_write_p3_fu_181_ap_start_reg;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_block_pp0_stage31;
reg    call_ln291_write_p4_fu_189_ap_start_reg;
wire    ap_block_pp0_stage0;
reg   [2:0] i_fu_80;
wire   [2:0] i_39_fu_234_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_38;
reg   [8191:0] this_1_17_fu_84;
reg   [8191:0] this_4_18_fu_88;
reg   [8191:0] this_3_18_fu_92;
wire    ap_block_pp0_stage0_01001;
wire   [7:0] zext_ln288_fu_240_p1;
wire   [6:0] zext_ln288_1_fu_244_p1;
wire   [6:0] addr2_cast_cast_cast_fu_201_p1;
wire   [6:0] addr3_cast_cast_cast_fu_197_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [31:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_read_p1_fu_165_ap_start_reg = 1'b0;
#0 call_ln290_write_p3_fu_181_ap_start_reg = 1'b0;
#0 call_ln291_write_p4_fu_189_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dpu_keygen_read_p1 grp_read_p1_fu_165(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_read_p1_fu_165_ap_start),
    .ap_done(grp_read_p1_fu_165_ap_done),
    .ap_idle(grp_read_p1_fu_165_ap_idle),
    .ap_ready(grp_read_p1_fu_165_ap_ready),
    .this_pMem_address0(grp_read_p1_fu_165_this_pMem_address0),
    .this_pMem_ce0(grp_read_p1_fu_165_this_pMem_ce0),
    .this_pMem_q0(this_0_q0),
    .addr(add_ln288_reg_356),
    .ap_return(grp_read_p1_fu_165_ap_return)
);

dpu_keygen_dpu_unit grp_dpu_unit_fu_172(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read(call_ret_reg_371),
    .p_read1(p_read1),
    .p_read3(this_4_18_fu_88),
    .type_r(8'd6),
    .ap_return_0(grp_dpu_unit_fu_172_ap_return_0),
    .ap_return_1(grp_dpu_unit_fu_172_ap_return_1),
    .ap_ce(grp_dpu_unit_fu_172_ap_ce)
);

dpu_keygen_write_p3 call_ln290_write_p3_fu_181(
    .ap_start(call_ln290_write_p3_fu_181_ap_start),
    .ap_ready(call_ln290_write_p3_fu_181_ap_ready),
    .this_pMem_address0(call_ln290_write_p3_fu_181_this_pMem_address0),
    .this_pMem_ce0(call_ln290_write_p3_fu_181_this_pMem_ce0),
    .this_pMem_we0(call_ln290_write_p3_fu_181_this_pMem_we0),
    .this_pMem_d0(call_ln290_write_p3_fu_181_this_pMem_d0),
    .p_read(grp_dpu_unit_fu_172_ap_return_0),
    .addr(call_ln290_write_p3_fu_181_addr)
);

dpu_keygen_write_p4 call_ln291_write_p4_fu_189(
    .ap_start(call_ln291_write_p4_fu_189_ap_start),
    .ap_ready(call_ln291_write_p4_fu_189_ap_ready),
    .this_pMem_address0(call_ln291_write_p4_fu_189_this_pMem_address0),
    .this_pMem_ce0(call_ln291_write_p4_fu_189_this_pMem_ce0),
    .this_pMem_we0(call_ln291_write_p4_fu_189_this_pMem_we0),
    .this_pMem_d0(call_ln291_write_p4_fu_189_this_pMem_d0),
    .p_read(this_4_ret5_reg_382),
    .addr(call_ln291_write_p4_fu_189_addr)
);

dpu_keygen_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ln290_write_p3_fu_181_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (icmp_ln286_reg_352 == 1'd0))) begin
            call_ln290_write_p3_fu_181_ap_start_reg <= 1'b1;
        end else if (((1'b0 == ap_block_pp0_stage31_subdone) & (call_ln290_write_p3_fu_181_ap_ready == 1'b1))) begin
            call_ln290_write_p3_fu_181_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ln291_write_p4_fu_189_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            call_ln291_write_p4_fu_189_ap_start_reg <= 1'b1;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (call_ln291_write_p4_fu_189_ap_ready == 1'b1))) begin
            call_ln291_write_p4_fu_189_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_read_p1_fu_165_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln286_fu_228_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_read_p1_fu_165_ap_start_reg <= 1'b1;
        end else if ((grp_read_p1_fu_165_ap_ready == 1'b1)) begin
            grp_read_p1_fu_165_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln286_fu_228_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_80 <= i_39_fu_234_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            this_1_17_fu_84 <= p_read;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            this_1_17_fu_84 <= call_ret_reg_371;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_3_18_fu_92 <= p_read2;
    end else if (((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln286_reg_352 == 1'd0))) begin
        this_3_18_fu_92 <= grp_dpu_unit_fu_172_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_4_18_fu_88 <= p_read3;
    end else if (((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln286_reg_352 == 1'd0))) begin
        this_4_18_fu_88 <= grp_dpu_unit_fu_172_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln286_fu_228_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln288_reg_356 <= add_ln288_fu_248_p2;
        add_ln290_reg_361 <= add_ln290_fu_254_p2;
        add_ln291_reg_366 <= add_ln291_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln286_reg_352 == 1'd0))) begin
        call_ret_reg_371 <= grp_read_p1_fu_165_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln286_reg_352 <= icmp_ln286_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln286_reg_352 == 1'd0))) begin
        this_4_ret5_reg_382 <= grp_dpu_unit_fu_172_ap_return_1;
    end
end

always @ (*) begin
    if (((icmp_ln286_fu_228_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_38 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_38 = i_fu_80;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage31_11001_ignoreCallOp100) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage30_11001_ignoreCallOp99) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage29_11001_ignoreCallOp98) & (1'b1 == ap_CS_fsm_pp0_stage29)) | ((1'b0 == ap_block_pp0_stage28_11001_ignoreCallOp97) & (1'b1 == ap_CS_fsm_pp0_stage28)) | ((1'b0 == ap_block_pp0_stage27_11001_ignoreCallOp96) & (1'b1 == ap_CS_fsm_pp0_stage27)) | ((1'b0 == ap_block_pp0_stage26_11001_ignoreCallOp95) & (1'b1 == ap_CS_fsm_pp0_stage26)) | ((1'b0 == ap_block_pp0_stage25_11001_ignoreCallOp94) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage24_11001_ignoreCallOp93) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23_11001_ignoreCallOp92) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22_11001_ignoreCallOp91) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001_ignoreCallOp90) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20_11001_ignoreCallOp89) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001_ignoreCallOp88) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001_ignoreCallOp87) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001_ignoreCallOp86) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001_ignoreCallOp85) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001_ignoreCallOp84) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001_ignoreCallOp83) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001_ignoreCallOp82) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001_ignoreCallOp81) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001_ignoreCallOp80) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001_ignoreCallOp79) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001_ignoreCallOp78) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001_ignoreCallOp77) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001_ignoreCallOp76) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001_ignoreCallOp75) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001_ignoreCallOp74) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001_ignoreCallOp73) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001_ignoreCallOp72) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_dpu_unit_fu_172_ap_ce = 1'b1;
    end else begin
        grp_dpu_unit_fu_172_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_0_address0 = call_ln291_write_p4_fu_189_this_pMem_address0;
    end else if (((1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln286_reg_352 == 1'd0))) begin
        this_0_address0 = call_ln290_write_p3_fu_181_this_pMem_address0;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln286_reg_352 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln286_reg_352 == 1'd0)))) begin
        this_0_address0 = grp_read_p1_fu_165_this_pMem_address0;
    end else begin
        this_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_0_ce0 = call_ln291_write_p4_fu_189_this_pMem_ce0;
    end else if (((1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln286_reg_352 == 1'd0))) begin
        this_0_ce0 = call_ln290_write_p3_fu_181_this_pMem_ce0;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln286_reg_352 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln286_reg_352 == 1'd0)))) begin
        this_0_ce0 = grp_read_p1_fu_165_this_pMem_ce0;
    end else begin
        this_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_0_d0 = call_ln291_write_p4_fu_189_this_pMem_d0;
    end else if (((1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln286_reg_352 == 1'd0))) begin
        this_0_d0 = call_ln290_write_p3_fu_181_this_pMem_d0;
    end else begin
        this_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_0_we0 = call_ln291_write_p4_fu_189_this_pMem_we0;
    end else if (((1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (icmp_ln286_reg_352 == 1'd0))) begin
        this_0_we0 = call_ln290_write_p3_fu_181_this_pMem_we0;
    end else begin
        this_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln286_fu_228_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_1_17_out_ap_vld = 1'b1;
    end else begin
        this_1_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln286_fu_228_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_3_18_out_ap_vld = 1'b1;
    end else begin
        this_3_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln286_fu_228_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        this_4_18_out_ap_vld = 1'b1;
    end else begin
        this_4_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln288_fu_248_p2 = (zext_ln288_fu_240_p1 + addr1);

assign add_ln290_fu_254_p2 = (zext_ln288_1_fu_244_p1 + addr2_cast_cast_cast_fu_201_p1);

assign add_ln291_fu_260_p2 = (zext_ln288_1_fu_244_p1 + addr3_cast_cast_cast_fu_197_p1);

assign addr2_cast_cast_cast_fu_201_p1 = addr2_cast_cast;

assign addr3_cast_cast_cast_fu_197_p1 = addr3_cast_cast;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001_ignoreCallOp79 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001_ignoreCallOp80 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001_ignoreCallOp81 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001_ignoreCallOp82 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001_ignoreCallOp83 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001_ignoreCallOp84 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001_ignoreCallOp85 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001_ignoreCallOp86 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001_ignoreCallOp87 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001_ignoreCallOp88 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001_ignoreCallOp89 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001_ignoreCallOp90 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001_ignoreCallOp91 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001_ignoreCallOp92 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001_ignoreCallOp93 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001_ignoreCallOp94 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001_ignoreCallOp95 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001_ignoreCallOp96 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001_ignoreCallOp97 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001_ignoreCallOp98 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001_ignoreCallOp99 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001_ignoreCallOp100 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001_ignoreCallOp72 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001_ignoreCallOp73 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001_ignoreCallOp74 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001_ignoreCallOp75 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001_ignoreCallOp76 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001_ignoreCallOp77 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001_ignoreCallOp78 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign call_ln290_write_p3_fu_181_addr = add_ln290_reg_361;

assign call_ln290_write_p3_fu_181_ap_start = call_ln290_write_p3_fu_181_ap_start_reg;

assign call_ln291_write_p4_fu_189_addr = add_ln291_reg_366;

assign call_ln291_write_p4_fu_189_ap_start = call_ln291_write_p4_fu_189_ap_start_reg;

assign grp_read_p1_fu_165_ap_start = grp_read_p1_fu_165_ap_start_reg;

assign i_39_fu_234_p2 = (ap_sig_allocacmp_i_38 + 3'd1);

assign icmp_ln286_fu_228_p2 = ((ap_sig_allocacmp_i_38 == trunc_ln51) ? 1'b1 : 1'b0);

assign this_1_17_out = this_1_17_fu_84;

assign this_3_18_out = this_3_18_fu_92;

assign this_4_18_out = this_4_18_fu_88;

assign zext_ln288_1_fu_244_p1 = ap_sig_allocacmp_i_38;

assign zext_ln288_fu_240_p1 = ap_sig_allocacmp_i_38;

endmodule //dpu_keygen_dpu_func_Pipeline_FUNC_POW2ROUND_LOOP1
