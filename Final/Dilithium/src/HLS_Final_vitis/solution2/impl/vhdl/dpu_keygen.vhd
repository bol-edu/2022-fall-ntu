-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pk_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pk_ce0 : OUT STD_LOGIC;
    pk_we0 : OUT STD_LOGIC;
    pk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    pk_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    pk_ce1 : OUT STD_LOGIC;
    pk_we1 : OUT STD_LOGIC;
    pk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sk_ce0 : OUT STD_LOGIC;
    sk_we0 : OUT STD_LOGIC;
    sk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    sk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sk_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sk_ce1 : OUT STD_LOGIC;
    sk_we1 : OUT STD_LOGIC;
    sk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    sk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    seedbuf_ce0 : OUT STD_LOGIC;
    seedbuf_we0 : OUT STD_LOGIC;
    seedbuf_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    seedbuf_ce1 : OUT STD_LOGIC;
    seedbuf_we1 : OUT STD_LOGIC;
    seedbuf_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dpu_keygen is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dpu_keygen_dpu_keygen,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.121000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=484,HLS_SYN_DSP=0,HLS_SYN_FF=2348124,HLS_SYN_LUT=1598983,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (75 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (75 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (75 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (75 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (75 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (75 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (75 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (75 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (75 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (75 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv8192_lc_5 : STD_LOGIC_VECTOR (8191 downto
    constant ap_const_lv8_23 : STD_LOGIC_VECTOR (7 downto 0) := "00100011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv8_9A : STD_LOGIC_VECTOR (7 downto 0) := "10011010";
    constant ap_const_lv8_33 : STD_LOGIC_VECTOR (7 downto 0) := "00110011";
    constant ap_const_lv8_2D : STD_LOGIC_VECTOR (7 downto 0) := "00101101";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv11_70 : STD_LOGIC_VECTOR (10 downto 0) := "00001110000";
    constant ap_const_lv11_2F0 : STD_LOGIC_VECTOR (10 downto 0) := "01011110000";
    constant ap_const_lv11_5F0 : STD_LOGIC_VECTOR (10 downto 0) := "10111110000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv64_88 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_89 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010001001";
    constant ap_const_lv64_9A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011010";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_9B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011011";
    constant ap_const_lv64_9C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011100";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1024_lc_5 : STD_LOGIC_VECTOR (1023 downto
    constant ap_const_lv1024_lc_10 : STD_LOGIC_VECTOR (1023 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal zetas_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zetas_ce0 : STD_LOGIC;
    signal zetas_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal ptr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_shake_absorb_1_fu_585_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_824 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal dpu_pMem_q0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal reg_829 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal dpu_pMem_q1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal reg_839 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal grp_dpu_func_fu_460_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_done : STD_LOGIC;
    signal ap_block_state46_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_done : STD_LOGIC;
    signal ap_block_state48_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_done : STD_LOGIC;
    signal ap_block_state50_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal reg_844 : STD_LOGIC_VECTOR (8191 downto 0);
    signal reg_849 : STD_LOGIC_VECTOR (8191 downto 0);
    signal reg_854 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_pack_4_fu_776_ap_return : STD_LOGIC_VECTOR (8191 downto 0);
    signal reg_859 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal grp_dpu_pack_4_fu_776_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal i_7_reg_1318 : STD_LOGIC_VECTOR (4 downto 0);
    signal this_s_addr_reg_1323 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal this_pMem_addr_2_reg_1328 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal this_s_addr_1_reg_1333 : STD_LOGIC_VECTOR (4 downto 0);
    signal this_pMem_addr_4_reg_1345 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_pMem_load_1_reg_1351 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal this_pMem_load_2_reg_1356 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln31_fu_951_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln31_reg_1369 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal select_ln31_fu_974_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_reg_1381 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal select_ln31_1_fu_988_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_1_reg_1386 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln33_fu_997_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln33_reg_1394 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_shake_absorb_fu_640_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal spu_pos_2_reg_1400 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i_s_reg_1405 : STD_LOGIC_VECTOR (4 downto 0);
    signal this_s_addr_3_reg_1410 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal zext_ln31_fu_1044_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln31_reg_1415 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p_mid_fu_1047_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid_reg_1420 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln500_fu_1054_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln500_reg_1425 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal this_pMem_addr_7_reg_1433 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln500_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ctr_12_fu_1113_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal k_6_reg_1449 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal zext_ln38_fu_1139_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln38_reg_1457 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln37_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln39_fu_1154_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln39_reg_1469 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal this_pMem_addr_5_reg_1474 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_pMem_addr_6_reg_1479 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal add_ln43_fu_1205_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln43_reg_1488 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln42_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal addr_11_fu_1216_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_11_reg_1493 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dpu_pack_fu_743_ap_return : STD_LOGIC_VECTOR (8191 downto 0);
    signal dpu_p5_reg_1503 : STD_LOGIC_VECTOR (8191 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal buf_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_ce0 : STD_LOGIC;
    signal buf_we0 : STD_LOGIC;
    signal buf_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_ce1 : STD_LOGIC;
    signal buf_we1 : STD_LOGIC;
    signal buf_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dpu_pMem_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dpu_pMem_ce0 : STD_LOGIC;
    signal dpu_pMem_we0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal dpu_pMem_d0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal dpu_pMem_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dpu_pMem_ce1 : STD_LOGIC;
    signal dpu_pMem_we1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal dpu_pMem_d1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal spu_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal spu_s_ce0 : STD_LOGIC;
    signal spu_s_we0 : STD_LOGIC;
    signal spu_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal spu_s_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal spu_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal spu_s_ce1 : STD_LOGIC;
    signal spu_s_we1 : STD_LOGIC;
    signal spu_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal spu_s_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_ce0 : STD_LOGIC;
    signal tmp1_we0 : STD_LOGIC;
    signal tmp1_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_ce0 : STD_LOGIC;
    signal tmp2_we0 : STD_LOGIC;
    signal tmp2_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_ce0 : STD_LOGIC;
    signal tmp3_we0 : STD_LOGIC;
    signal tmp3_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tr_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tr_ce0 : STD_LOGIC;
    signal tr_we0 : STD_LOGIC;
    signal tr_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tr_ce1 : STD_LOGIC;
    signal tr_we1 : STD_LOGIC;
    signal grp_dpu_func_fu_460_ap_start : STD_LOGIC;
    signal grp_dpu_func_fu_460_ap_idle : STD_LOGIC;
    signal grp_dpu_func_fu_460_ap_ready : STD_LOGIC;
    signal grp_dpu_func_fu_460_this_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_func_fu_460_this_0_ce0 : STD_LOGIC;
    signal grp_dpu_func_fu_460_this_0_we0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_dpu_func_fu_460_this_0_d0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_p_read : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_p_read1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_p_read2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_p_read3 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_addr1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_func_fu_460_addr2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_func_fu_460_addr3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_func_fu_460_type_r : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_func_fu_460_itr : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_func_fu_460_ap_return_0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_ap_return_1 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_ap_return_2 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_func_fu_460_ap_return_3 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_p_out_ap_vld : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_p_out_ap_vld : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_we0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_d0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_ap_start : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_ap_done : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_fu_585_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_fu_585_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_1_fu_585_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_this_s_we1 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_1_fu_585_mode : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_shake_absorb_1_fu_585_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_fu_585_seedbuf_ce0 : STD_LOGIC;
    signal grp_shake_absorb_1_fu_585_seedbuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_absorb_1_fu_585_seedbuf_ce1 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_we0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_d0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_p_out_ap_vld : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_p_out_ap_vld : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_p_out_ap_vld : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_ap_start : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_ap_done : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_ap_idle : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_ap_ready : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_squeeze_2_fu_626_this_s_ce0 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_this_s_we0 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_squeeze_2_fu_626_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_squeeze_2_fu_626_this_s_ce1 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_this_s_we1 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_squeeze_2_fu_626_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_squeeze_2_fu_626_seedbuf_ce0 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_seedbuf_we0 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_seedbuf_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_shake_squeeze_2_fu_626_seedbuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_shake_squeeze_2_fu_626_seedbuf_ce1 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_seedbuf_we1 : STD_LOGIC;
    signal grp_shake_squeeze_2_fu_626_seedbuf_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_fu_640_ap_start : STD_LOGIC;
    signal grp_shake_absorb_fu_640_ap_done : STD_LOGIC;
    signal grp_shake_absorb_fu_640_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_fu_640_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_fu_640_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_fu_640_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_fu_640_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_fu_640_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_fu_640_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_fu_640_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_fu_640_this_s_we1 : STD_LOGIC;
    signal grp_shake_absorb_fu_640_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_650_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_we0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_we1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_650_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce1 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we1 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce1 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_d0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ctr_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ctr_1_out_ap_vld : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_p_out_ap_vld : STD_LOGIC;
    signal grp_sample_eta_fu_679_ap_start : STD_LOGIC;
    signal grp_sample_eta_fu_679_ap_done : STD_LOGIC;
    signal grp_sample_eta_fu_679_ap_idle : STD_LOGIC;
    signal grp_sample_eta_fu_679_ap_ready : STD_LOGIC;
    signal grp_sample_eta_fu_679_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sample_eta_fu_679_this_s_ce0 : STD_LOGIC;
    signal grp_sample_eta_fu_679_this_s_we0 : STD_LOGIC;
    signal grp_sample_eta_fu_679_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sample_eta_fu_679_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sample_eta_fu_679_this_s_ce1 : STD_LOGIC;
    signal grp_sample_eta_fu_679_this_s_we1 : STD_LOGIC;
    signal grp_sample_eta_fu_679_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sample_eta_fu_679_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sample_eta_fu_679_a_ce0 : STD_LOGIC;
    signal grp_sample_eta_fu_679_a_we0 : STD_LOGIC;
    signal grp_sample_eta_fu_679_a_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sample_eta_fu_679_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sample_eta_fu_679_seedbuf_ce0 : STD_LOGIC;
    signal grp_sample_eta_fu_679_seedbuf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sample_eta_fu_679_seedbuf_ce1 : STD_LOGIC;
    signal grp_sample_eta_fu_679_nonce : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_p_out_ap_vld : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_p_out : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_p_out_ap_vld : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_we0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_d0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_fu_743_ap_start : STD_LOGIC;
    signal grp_dpu_pack_fu_743_ap_done : STD_LOGIC;
    signal grp_dpu_pack_fu_743_ap_idle : STD_LOGIC;
    signal grp_dpu_pack_fu_743_ap_ready : STD_LOGIC;
    signal grp_dpu_pack_fu_743_this_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_fu_743_this_0_ce0 : STD_LOGIC;
    signal grp_dpu_pack_fu_743_pk_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dpu_pack_fu_743_pk_ce0 : STD_LOGIC;
    signal grp_dpu_pack_fu_743_pk_we0 : STD_LOGIC;
    signal grp_dpu_pack_fu_743_pk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_fu_743_pk_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dpu_pack_fu_743_pk_ce1 : STD_LOGIC;
    signal grp_dpu_pack_fu_743_pk_we1 : STD_LOGIC;
    signal grp_dpu_pack_fu_743_pk_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_fu_743_ptr_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dpu_pack_fu_743_ptr_o_ap_vld : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_ap_start : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_ap_done : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_ap_idle : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_ap_ready : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_3_fu_752_this_s_ce0 : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_this_s_we0 : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_3_fu_752_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_absorb_3_fu_752_this_s_ce1 : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_this_s_we1 : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_absorb_3_fu_752_pk_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_shake_absorb_3_fu_752_pk_ce0 : STD_LOGIC;
    signal grp_shake_absorb_3_fu_752_pk_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_shake_absorb_3_fu_752_pk_ce1 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_ap_start : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_ap_done : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_ap_idle : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_ap_ready : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_this_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_squeeze_fu_761_this_s_ce0 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_this_s_we0 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_this_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_squeeze_fu_761_this_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_shake_squeeze_fu_761_this_s_ce1 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_this_s_we1 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_this_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_shake_squeeze_fu_761_out_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_shake_squeeze_fu_761_out_r_ce0 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_out_r_we0 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_shake_squeeze_fu_761_out_r_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_shake_squeeze_fu_761_out_r_ce1 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_out_r_we1 : STD_LOGIC;
    signal grp_shake_squeeze_fu_761_out_r_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_done : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_idle : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_ready : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_ce0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_we0 : STD_LOGIC;
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_4_fu_776_ap_start : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_ap_idle : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_ap_ready : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_this_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_4_fu_776_this_0_ce0 : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_this_0_we0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_dpu_pack_4_fu_776_this_0_d0 : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_pack_4_fu_776_p_read : STD_LOGIC_VECTOR (8191 downto 0);
    signal grp_dpu_pack_4_fu_776_addr : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dpu_pack_4_fu_776_sk_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dpu_pack_4_fu_776_sk_ce0 : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_sk_we0 : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_sk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_4_fu_776_sk_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dpu_pack_4_fu_776_sk_ce1 : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_sk_we1 : STD_LOGIC;
    signal grp_dpu_pack_4_fu_776_sk_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dpu_pack_4_fu_776_ptrs : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dpu_pack_4_fu_776_type_r : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dpu_pack_4_fu_776_itr : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dpu_pack_4_fu_776_ptr_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dpu_pack_4_fu_776_ptr_o_ap_vld : STD_LOGIC;
    signal ctr_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dpu_func_fu_460_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_shake_absorb_1_fu_585_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (75 downto 0);
    signal ap_NS_fsm_state10 : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start_reg : STD_LOGIC := '0';
    signal grp_shake_squeeze_2_fu_626_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln31_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_shake_absorb_fu_640_ap_start_reg : STD_LOGIC := '0';
    signal grp_KeccakF1600_StatePermute_fu_650_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ctr_1_loc_fu_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_sample_eta_fu_679_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start_reg : STD_LOGIC := '0';
    signal grp_dpu_pack_fu_743_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_shake_absorb_3_fu_752_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_shake_squeeze_fu_761_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal grp_dpu_pack_4_fu_776_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln402_1_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln402_3_fu_1012_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom2_i_fu_1087_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom2_i29_fu_1163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom2_i39_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom2_i49_cast_cast_cast_fu_1226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_0_fu_244 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_fu_1092_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_4_fu_248 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten26_fu_252 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal k_5_fu_320 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_7_fu_1133_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_fu_324 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln42_fu_1195_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln402_fu_923_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_800_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal xor_ln402_1_fu_1037_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal xor_ln402_2_fu_1236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln402_fu_901_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_905_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln402_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln402_fu_917_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln32_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln31_1_fu_982_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln402_1_fu_1016_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln402_2_fu_1019_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln402_2_fu_1027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln402_1_fu_1031_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_1058_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln34_fu_1074_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln34_fu_1078_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_10_fu_1082_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal addr_fu_1157_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal addr_9_fu_1168_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln43_fu_1201_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln44_1_fu_1212_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal idxprom2_i49_cast_cast_fu_1222_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dpu_keygen_dpu_func IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        this_0_ce0 : OUT STD_LOGIC;
        this_0_we0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        this_0_d0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        this_0_q0 : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_read : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (8191 downto 0);
        addr1 : IN STD_LOGIC_VECTOR (7 downto 0);
        addr2 : IN STD_LOGIC_VECTOR (7 downto 0);
        addr3 : IN STD_LOGIC_VECTOR (7 downto 0);
        type_r : IN STD_LOGIC_VECTOR (7 downto 0);
        itr : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (8191 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_40_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_41_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_321_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        spu_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        spu_s_ce0 : OUT STD_LOGIC;
        spu_s_we0 : OUT STD_LOGIC;
        spu_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dpu_pMem_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dpu_pMem_ce0 : OUT STD_LOGIC;
        dpu_pMem_we0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        dpu_pMem_d0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        zetas_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        zetas_ce0 : OUT STD_LOGIC;
        zetas_q0 : IN STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        mode : IN STD_LOGIC_VECTOR (8 downto 0);
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce1 : OUT STD_LOGIC;
        seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        m : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dpu_pMem_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dpu_pMem_ce0 : OUT STD_LOGIC;
        dpu_pMem_we0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        dpu_pMem_d0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        zetas_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        zetas_ce0 : OUT STD_LOGIC;
        zetas_q0 : IN STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_54_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_pMem_load : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_55_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_pMem_load_3 : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_56_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_pMem_load_4 : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_shake_squeeze_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_we0 : OUT STD_LOGIC;
        seedbuf_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce1 : OUT STD_LOGIC;
        seedbuf_we1 : OUT STD_LOGIC;
        seedbuf_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_321_16 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        spu_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        spu_s_ce0 : OUT STD_LOGIC;
        spu_s_we0 : OUT STD_LOGIC;
        spu_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_shake_absorb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (3 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_KeccakF1600_StatePermute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_417_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        spu_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        spu_s_ce0 : OUT STD_LOGIC;
        spu_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_we0 : OUT STD_LOGIC;
        buf_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_we1 : OUT STD_LOGIC;
        buf_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_503_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ctr : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        buf_r_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_ce1 : OUT STD_LOGIC;
        buf_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        tmp1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp1_ce0 : OUT STD_LOGIC;
        tmp1_we0 : OUT STD_LOGIC;
        tmp1_d0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        ctr_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        ctr_1_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_pMem_load_8 : IN STD_LOGIC_VECTOR (8191 downto 0);
        tmp1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp1_ce0 : OUT STD_LOGIC;
        tmp1_q0 : IN STD_LOGIC_VECTOR (22 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_sample_eta IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        seedbuf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce1 : OUT STD_LOGIC;
        seedbuf_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        nonce : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_17 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_pMem_load_5 : IN STD_LOGIC_VECTOR (8191 downto 0);
        tmp2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp2_ce0 : OUT STD_LOGIC;
        tmp2_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_18 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_pMem_load_7 : IN STD_LOGIC_VECTOR (8191 downto 0);
        tmp2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp2_ce0 : OUT STD_LOGIC;
        tmp2_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (8191 downto 0);
        p_out_ap_vld : OUT STD_LOGIC );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_55_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        pk_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pk_ce0 : OUT STD_LOGIC;
        pk_we0 : OUT STD_LOGIC;
        pk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_321_110 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        spu_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        spu_s_ce0 : OUT STD_LOGIC;
        spu_s_we0 : OUT STD_LOGIC;
        spu_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_19 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_pMem_load_6 : IN STD_LOGIC_VECTOR (8191 downto 0);
        dpu_pMem_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dpu_pMem_ce0 : OUT STD_LOGIC;
        dpu_pMem_we0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        dpu_pMem_d0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        idxprom2_i49_cast : IN STD_LOGIC_VECTOR (4 downto 0);
        tmp3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tmp3_ce0 : OUT STD_LOGIC;
        tmp3_q0 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_60_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sk_ce0 : OUT STD_LOGIC;
        sk_we0 : OUT STD_LOGIC;
        sk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_61_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        seedbuf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        seedbuf_ce0 : OUT STD_LOGIC;
        seedbuf_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sk_ce0 : OUT STD_LOGIC;
        sk_we0 : OUT STD_LOGIC;
        sk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_pack IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        this_0_ce0 : OUT STD_LOGIC;
        this_0_q0 : IN STD_LOGIC_VECTOR (8191 downto 0);
        pk_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pk_ce0 : OUT STD_LOGIC;
        pk_we0 : OUT STD_LOGIC;
        pk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pk_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pk_ce1 : OUT STD_LOGIC;
        pk_we1 : OUT STD_LOGIC;
        pk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ptr_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ptr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ptr_o_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (8191 downto 0) );
    end component;


    component dpu_keygen_shake_absorb_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        pk_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pk_ce0 : OUT STD_LOGIC;
        pk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        pk_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pk_ce1 : OUT STD_LOGIC;
        pk_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_shake_squeeze IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce0 : OUT STD_LOGIC;
        this_s_we0 : OUT STD_LOGIC;
        this_s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        this_s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        this_s_ce1 : OUT STD_LOGIC;
        this_s_we1 : OUT STD_LOGIC;
        this_s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        this_s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_r_ce1 : OUT STD_LOGIC;
        out_r_we1 : OUT STD_LOGIC;
        out_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_62_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tr_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        tr_ce0 : OUT STD_LOGIC;
        tr_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sk_ce0 : OUT STD_LOGIC;
        sk_we0 : OUT STD_LOGIC;
        sk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_pack_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        this_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        this_0_ce0 : OUT STD_LOGIC;
        this_0_we0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        this_0_d0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        this_0_q0 : IN STD_LOGIC_VECTOR (8191 downto 0);
        p_read : IN STD_LOGIC_VECTOR (8191 downto 0);
        addr : IN STD_LOGIC_VECTOR (5 downto 0);
        sk_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sk_ce0 : OUT STD_LOGIC;
        sk_we0 : OUT STD_LOGIC;
        sk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        sk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sk_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sk_ce1 : OUT STD_LOGIC;
        sk_we1 : OUT STD_LOGIC;
        sk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        sk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ptrs : IN STD_LOGIC_VECTOR (10 downto 0);
        type_r : IN STD_LOGIC_VECTOR (2 downto 0);
        itr : IN STD_LOGIC_VECTOR (2 downto 0);
        ptr_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ptr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ptr_o_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (8191 downto 0) );
    end component;


    component dpu_keygen_zetas_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component dpu_keygen_buf_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dpu_keygen_dpu_pMem_RAM_T2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (1023 downto 0);
        d0 : IN STD_LOGIC_VECTOR (8191 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC_VECTOR (1023 downto 0);
        d1 : IN STD_LOGIC_VECTOR (8191 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (8191 downto 0) );
    end component;


    component dpu_keygen_spu_s_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component dpu_keygen_tmp1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (22 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component dpu_keygen_tmp2_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dpu_keygen_tr_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    zetas_U : component dpu_keygen_zetas_ROM_AUTO_1R
    generic map (
        DataWidth => 23,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => zetas_address0,
        ce0 => zetas_ce0,
        q0 => zetas_q0);

    buf_U : component dpu_keygen_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 170,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_address0,
        ce0 => buf_ce0,
        we0 => buf_we0,
        d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_d0,
        q0 => buf_q0,
        address1 => buf_address1,
        ce1 => buf_ce1,
        we1 => buf_we1,
        d1 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_d1,
        q1 => buf_q1);

    dpu_pMem_U : component dpu_keygen_dpu_pMem_RAM_T2P_BRAM_1R1W
    generic map (
        DataWidth => 8192,
        AddressRange => 158,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dpu_pMem_address0,
        ce0 => dpu_pMem_ce0,
        we0 => dpu_pMem_we0,
        d0 => dpu_pMem_d0,
        q0 => dpu_pMem_q0,
        address1 => dpu_pMem_address1,
        ce1 => dpu_pMem_ce1,
        we1 => dpu_pMem_we1,
        d1 => dpu_pMem_d1,
        q1 => dpu_pMem_q1);

    spu_s_U : component dpu_keygen_spu_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => spu_s_address0,
        ce0 => spu_s_ce0,
        we0 => spu_s_we0,
        d0 => spu_s_d0,
        q0 => spu_s_q0,
        address1 => spu_s_address1,
        ce1 => spu_s_ce1,
        we1 => spu_s_we1,
        d1 => spu_s_d1,
        q1 => spu_s_q1);

    tmp1_U : component dpu_keygen_tmp1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 23,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp1_address0,
        ce0 => tmp1_ce0,
        we0 => tmp1_we0,
        d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_d0,
        q0 => tmp1_q0);

    tmp2_U : component dpu_keygen_tmp2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 4,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp2_address0,
        ce0 => tmp2_ce0,
        we0 => tmp2_we0,
        d0 => grp_sample_eta_fu_679_a_d0,
        q0 => tmp2_q0);

    tmp3_U : component dpu_keygen_tmp2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 4,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp3_address0,
        ce0 => tmp3_ce0,
        we0 => tmp3_we0,
        d0 => grp_sample_eta_fu_679_a_d0,
        q0 => tmp3_q0);

    tr_U : component dpu_keygen_tr_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 48,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tr_address0,
        ce0 => tr_ce0,
        we0 => tr_we0,
        d0 => grp_shake_squeeze_fu_761_out_r_d0,
        q0 => tr_q0,
        address1 => grp_shake_squeeze_fu_761_out_r_address1,
        ce1 => tr_ce1,
        we1 => tr_we1,
        d1 => grp_shake_squeeze_fu_761_out_r_d1);

    grp_dpu_func_fu_460 : component dpu_keygen_dpu_func
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_func_fu_460_ap_start,
        ap_done => grp_dpu_func_fu_460_ap_done,
        ap_idle => grp_dpu_func_fu_460_ap_idle,
        ap_ready => grp_dpu_func_fu_460_ap_ready,
        this_0_address0 => grp_dpu_func_fu_460_this_0_address0,
        this_0_ce0 => grp_dpu_func_fu_460_this_0_ce0,
        this_0_we0 => grp_dpu_func_fu_460_this_0_we0,
        this_0_d0 => grp_dpu_func_fu_460_this_0_d0,
        this_0_q0 => dpu_pMem_q0,
        p_read => grp_dpu_func_fu_460_p_read,
        p_read1 => grp_dpu_func_fu_460_p_read1,
        p_read2 => grp_dpu_func_fu_460_p_read2,
        p_read3 => grp_dpu_func_fu_460_p_read3,
        addr1 => grp_dpu_func_fu_460_addr1,
        addr2 => grp_dpu_func_fu_460_addr2,
        addr3 => grp_dpu_func_fu_460_addr3,
        type_r => grp_dpu_func_fu_460_type_r,
        itr => grp_dpu_func_fu_460_itr,
        ap_return_0 => grp_dpu_func_fu_460_ap_return_0,
        ap_return_1 => grp_dpu_func_fu_460_ap_return_1,
        ap_return_2 => grp_dpu_func_fu_460_ap_return_2,
        ap_return_3 => grp_dpu_func_fu_460_ap_return_3);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_40_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_ready,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_p_out_ap_vld);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_41_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_ready,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_p_out_ap_vld);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_321_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_ready,
        spu_s_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_address0,
        spu_s_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_ce0,
        spu_s_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_we0,
        spu_s_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_d0);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_ready,
        dpu_pMem_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_address0,
        dpu_pMem_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_ce0,
        dpu_pMem_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_we0,
        dpu_pMem_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_d0,
        zetas_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_address0,
        zetas_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_ce0,
        zetas_q0 => zetas_q0);

    grp_shake_absorb_1_fu_585 : component dpu_keygen_shake_absorb_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_1_fu_585_ap_start,
        ap_done => grp_shake_absorb_1_fu_585_ap_done,
        ap_idle => grp_shake_absorb_1_fu_585_ap_idle,
        ap_ready => grp_shake_absorb_1_fu_585_ap_ready,
        this_s_address0 => grp_shake_absorb_1_fu_585_this_s_address0,
        this_s_ce0 => grp_shake_absorb_1_fu_585_this_s_ce0,
        this_s_we0 => grp_shake_absorb_1_fu_585_this_s_we0,
        this_s_d0 => grp_shake_absorb_1_fu_585_this_s_d0,
        this_s_q0 => spu_s_q0,
        this_s_address1 => grp_shake_absorb_1_fu_585_this_s_address1,
        this_s_ce1 => grp_shake_absorb_1_fu_585_this_s_ce1,
        this_s_we1 => grp_shake_absorb_1_fu_585_this_s_we1,
        this_s_d1 => grp_shake_absorb_1_fu_585_this_s_d1,
        this_s_q1 => spu_s_q1,
        mode => grp_shake_absorb_1_fu_585_mode,
        seedbuf_address0 => grp_shake_absorb_1_fu_585_seedbuf_address0,
        seedbuf_ce0 => grp_shake_absorb_1_fu_585_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        seedbuf_address1 => grp_shake_absorb_1_fu_585_seedbuf_address1,
        seedbuf_ce1 => grp_shake_absorb_1_fu_585_seedbuf_ce1,
        seedbuf_q1 => seedbuf_q1,
        m => ap_const_lv6_0,
        ap_return => grp_shake_absorb_1_fu_585_ap_return);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_ready,
        dpu_pMem_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_address0,
        dpu_pMem_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_ce0,
        dpu_pMem_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_we0,
        dpu_pMem_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_d0,
        zetas_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_address0,
        zetas_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_ce0,
        zetas_q0 => zetas_q0);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_54_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_ready,
        this_pMem_load => reg_829,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_p_out_ap_vld);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_55_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_ready,
        this_pMem_load_3 => this_pMem_load_1_reg_1351,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_p_out_ap_vld);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_56_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_ready,
        this_pMem_load_4 => this_pMem_load_2_reg_1356,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_p_out_ap_vld);

    grp_shake_squeeze_2_fu_626 : component dpu_keygen_shake_squeeze_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_squeeze_2_fu_626_ap_start,
        ap_done => grp_shake_squeeze_2_fu_626_ap_done,
        ap_idle => grp_shake_squeeze_2_fu_626_ap_idle,
        ap_ready => grp_shake_squeeze_2_fu_626_ap_ready,
        this_s_address0 => grp_shake_squeeze_2_fu_626_this_s_address0,
        this_s_ce0 => grp_shake_squeeze_2_fu_626_this_s_ce0,
        this_s_we0 => grp_shake_squeeze_2_fu_626_this_s_we0,
        this_s_d0 => grp_shake_squeeze_2_fu_626_this_s_d0,
        this_s_q0 => spu_s_q0,
        this_s_address1 => grp_shake_squeeze_2_fu_626_this_s_address1,
        this_s_ce1 => grp_shake_squeeze_2_fu_626_this_s_ce1,
        this_s_we1 => grp_shake_squeeze_2_fu_626_this_s_we1,
        this_s_d1 => grp_shake_squeeze_2_fu_626_this_s_d1,
        this_s_q1 => spu_s_q1,
        seedbuf_address0 => grp_shake_squeeze_2_fu_626_seedbuf_address0,
        seedbuf_ce0 => grp_shake_squeeze_2_fu_626_seedbuf_ce0,
        seedbuf_we0 => grp_shake_squeeze_2_fu_626_seedbuf_we0,
        seedbuf_d0 => grp_shake_squeeze_2_fu_626_seedbuf_d0,
        seedbuf_address1 => grp_shake_squeeze_2_fu_626_seedbuf_address1,
        seedbuf_ce1 => grp_shake_squeeze_2_fu_626_seedbuf_ce1,
        seedbuf_we1 => grp_shake_squeeze_2_fu_626_seedbuf_we1,
        seedbuf_d1 => grp_shake_squeeze_2_fu_626_seedbuf_d1);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_321_16
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_ready,
        spu_s_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_address0,
        spu_s_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_ce0,
        spu_s_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_we0,
        spu_s_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_d0);

    grp_shake_absorb_fu_640 : component dpu_keygen_shake_absorb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_fu_640_ap_start,
        ap_done => grp_shake_absorb_fu_640_ap_done,
        ap_idle => grp_shake_absorb_fu_640_ap_idle,
        ap_ready => grp_shake_absorb_fu_640_ap_ready,
        this_s_address0 => grp_shake_absorb_fu_640_this_s_address0,
        this_s_ce0 => grp_shake_absorb_fu_640_this_s_ce0,
        this_s_we0 => grp_shake_absorb_fu_640_this_s_we0,
        this_s_d0 => grp_shake_absorb_fu_640_this_s_d0,
        this_s_q0 => spu_s_q0,
        this_s_address1 => grp_shake_absorb_fu_640_this_s_address1,
        this_s_ce1 => grp_shake_absorb_fu_640_this_s_ce1,
        this_s_we1 => grp_shake_absorb_fu_640_this_s_we1,
        this_s_d1 => grp_shake_absorb_fu_640_this_s_d1,
        this_s_q1 => spu_s_q1,
        p_read => reg_824,
        p_read1 => zext_ln33_reg_1394,
        p_read2 => select_ln31_1_reg_1386,
        ap_return => grp_shake_absorb_fu_640_ap_return);

    grp_KeccakF1600_StatePermute_fu_650 : component dpu_keygen_KeccakF1600_StatePermute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_fu_650_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_fu_650_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_fu_650_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_fu_650_ap_ready,
        this_s_address0 => grp_KeccakF1600_StatePermute_fu_650_this_s_address0,
        this_s_ce0 => grp_KeccakF1600_StatePermute_fu_650_this_s_ce0,
        this_s_we0 => grp_KeccakF1600_StatePermute_fu_650_this_s_we0,
        this_s_d0 => grp_KeccakF1600_StatePermute_fu_650_this_s_d0,
        this_s_q0 => spu_s_q0,
        this_s_address1 => grp_KeccakF1600_StatePermute_fu_650_this_s_address1,
        this_s_ce1 => grp_KeccakF1600_StatePermute_fu_650_this_s_ce1,
        this_s_we1 => grp_KeccakF1600_StatePermute_fu_650_this_s_we1,
        this_s_d1 => grp_KeccakF1600_StatePermute_fu_650_this_s_d1,
        this_s_q1 => spu_s_q1);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_417_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_ready,
        spu_s_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_address0,
        spu_s_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_ce0,
        spu_s_q0 => spu_s_q0,
        buf_r_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address0,
        buf_r_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce0,
        buf_r_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we0,
        buf_r_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_d0,
        buf_r_address1 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address1,
        buf_r_ce1 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce1,
        buf_r_we1 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we1,
        buf_r_d1 => grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_d1);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_503_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_ready,
        ctr => trunc_ln500_reg_1425,
        buf_r_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address0,
        buf_r_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce0,
        buf_r_q0 => buf_q0,
        buf_r_address1 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address1,
        buf_r_ce1 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce1,
        buf_r_q1 => buf_q1,
        tmp1_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_address0,
        tmp1_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_ce0,
        tmp1_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_we0,
        tmp1_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_d0,
        ctr_1_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ctr_1_out,
        ctr_1_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ctr_1_out_ap_vld,
        ap_return => grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_return);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_ready,
        this_pMem_load_8 => reg_829,
        tmp1_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_address0,
        tmp1_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_ce0,
        tmp1_q0 => tmp1_q0,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_p_out_ap_vld);

    grp_sample_eta_fu_679 : component dpu_keygen_sample_eta
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sample_eta_fu_679_ap_start,
        ap_done => grp_sample_eta_fu_679_ap_done,
        ap_idle => grp_sample_eta_fu_679_ap_idle,
        ap_ready => grp_sample_eta_fu_679_ap_ready,
        this_s_address0 => grp_sample_eta_fu_679_this_s_address0,
        this_s_ce0 => grp_sample_eta_fu_679_this_s_ce0,
        this_s_we0 => grp_sample_eta_fu_679_this_s_we0,
        this_s_d0 => grp_sample_eta_fu_679_this_s_d0,
        this_s_q0 => spu_s_q0,
        this_s_address1 => grp_sample_eta_fu_679_this_s_address1,
        this_s_ce1 => grp_sample_eta_fu_679_this_s_ce1,
        this_s_we1 => grp_sample_eta_fu_679_this_s_we1,
        this_s_d1 => grp_sample_eta_fu_679_this_s_d1,
        this_s_q1 => spu_s_q1,
        a_address0 => grp_sample_eta_fu_679_a_address0,
        a_ce0 => grp_sample_eta_fu_679_a_ce0,
        a_we0 => grp_sample_eta_fu_679_a_we0,
        a_d0 => grp_sample_eta_fu_679_a_d0,
        seedbuf_address0 => grp_sample_eta_fu_679_seedbuf_address0,
        seedbuf_ce0 => grp_sample_eta_fu_679_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        seedbuf_address1 => grp_sample_eta_fu_679_seedbuf_address1,
        seedbuf_ce1 => grp_sample_eta_fu_679_seedbuf_ce1,
        seedbuf_q1 => seedbuf_q1,
        nonce => grp_sample_eta_fu_679_nonce);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_17
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_ready,
        this_pMem_load_5 => reg_829,
        tmp2_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_address0,
        tmp2_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_ce0,
        tmp2_q0 => tmp2_q0,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_p_out_ap_vld);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_ready,
        this_pMem_load_7 => reg_829,
        tmp2_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_address0,
        tmp2_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_ce0,
        tmp2_q0 => tmp2_q0,
        p_out => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_p_out,
        p_out_ap_vld => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_p_out_ap_vld);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_55_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_ready,
        seedbuf_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_address0,
        seedbuf_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        pk_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_address0,
        pk_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_ce0,
        pk_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_we0,
        pk_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_d0);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_321_110
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_ready,
        spu_s_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_address0,
        spu_s_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_ce0,
        spu_s_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_we0,
        spu_s_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_d0);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_95_19
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_ready,
        this_pMem_load_6 => reg_829,
        dpu_pMem_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_address0,
        dpu_pMem_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_ce0,
        dpu_pMem_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_we0,
        dpu_pMem_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_d0,
        idxprom2_i49_cast => addr_11_reg_1493,
        tmp3_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_address0,
        tmp3_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_ce0,
        tmp3_q0 => tmp3_q0);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_60_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_ready,
        seedbuf_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_address0,
        seedbuf_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        sk_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_address0,
        sk_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_ce0,
        sk_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_we0,
        sk_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_d0);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_61_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_ready,
        seedbuf_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_address0,
        seedbuf_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_ce0,
        seedbuf_q0 => seedbuf_q0,
        sk_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_address0,
        sk_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_ce0,
        sk_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_we0,
        sk_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_d0);

    grp_dpu_pack_fu_743 : component dpu_keygen_dpu_pack
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_pack_fu_743_ap_start,
        ap_done => grp_dpu_pack_fu_743_ap_done,
        ap_idle => grp_dpu_pack_fu_743_ap_idle,
        ap_ready => grp_dpu_pack_fu_743_ap_ready,
        this_0_address0 => grp_dpu_pack_fu_743_this_0_address0,
        this_0_ce0 => grp_dpu_pack_fu_743_this_0_ce0,
        this_0_q0 => dpu_pMem_q0,
        pk_address0 => grp_dpu_pack_fu_743_pk_address0,
        pk_ce0 => grp_dpu_pack_fu_743_pk_ce0,
        pk_we0 => grp_dpu_pack_fu_743_pk_we0,
        pk_d0 => grp_dpu_pack_fu_743_pk_d0,
        pk_address1 => grp_dpu_pack_fu_743_pk_address1,
        pk_ce1 => grp_dpu_pack_fu_743_pk_ce1,
        pk_we1 => grp_dpu_pack_fu_743_pk_we1,
        pk_d1 => grp_dpu_pack_fu_743_pk_d1,
        ptr_i => ptr,
        ptr_o => grp_dpu_pack_fu_743_ptr_o,
        ptr_o_ap_vld => grp_dpu_pack_fu_743_ptr_o_ap_vld,
        ap_return => grp_dpu_pack_fu_743_ap_return);

    grp_shake_absorb_3_fu_752 : component dpu_keygen_shake_absorb_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_absorb_3_fu_752_ap_start,
        ap_done => grp_shake_absorb_3_fu_752_ap_done,
        ap_idle => grp_shake_absorb_3_fu_752_ap_idle,
        ap_ready => grp_shake_absorb_3_fu_752_ap_ready,
        this_s_address0 => grp_shake_absorb_3_fu_752_this_s_address0,
        this_s_ce0 => grp_shake_absorb_3_fu_752_this_s_ce0,
        this_s_we0 => grp_shake_absorb_3_fu_752_this_s_we0,
        this_s_d0 => grp_shake_absorb_3_fu_752_this_s_d0,
        this_s_q0 => spu_s_q0,
        this_s_address1 => grp_shake_absorb_3_fu_752_this_s_address1,
        this_s_ce1 => grp_shake_absorb_3_fu_752_this_s_ce1,
        this_s_we1 => grp_shake_absorb_3_fu_752_this_s_we1,
        this_s_d1 => grp_shake_absorb_3_fu_752_this_s_d1,
        this_s_q1 => spu_s_q1,
        pk_address0 => grp_shake_absorb_3_fu_752_pk_address0,
        pk_ce0 => grp_shake_absorb_3_fu_752_pk_ce0,
        pk_q0 => pk_q0,
        pk_address1 => grp_shake_absorb_3_fu_752_pk_address1,
        pk_ce1 => grp_shake_absorb_3_fu_752_pk_ce1,
        pk_q1 => pk_q1);

    grp_shake_squeeze_fu_761 : component dpu_keygen_shake_squeeze
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_shake_squeeze_fu_761_ap_start,
        ap_done => grp_shake_squeeze_fu_761_ap_done,
        ap_idle => grp_shake_squeeze_fu_761_ap_idle,
        ap_ready => grp_shake_squeeze_fu_761_ap_ready,
        this_s_address0 => grp_shake_squeeze_fu_761_this_s_address0,
        this_s_ce0 => grp_shake_squeeze_fu_761_this_s_ce0,
        this_s_we0 => grp_shake_squeeze_fu_761_this_s_we0,
        this_s_d0 => grp_shake_squeeze_fu_761_this_s_d0,
        this_s_q0 => spu_s_q0,
        this_s_address1 => grp_shake_squeeze_fu_761_this_s_address1,
        this_s_ce1 => grp_shake_squeeze_fu_761_this_s_ce1,
        this_s_we1 => grp_shake_squeeze_fu_761_this_s_we1,
        this_s_d1 => grp_shake_squeeze_fu_761_this_s_d1,
        this_s_q1 => spu_s_q1,
        out_r_address0 => grp_shake_squeeze_fu_761_out_r_address0,
        out_r_ce0 => grp_shake_squeeze_fu_761_out_r_ce0,
        out_r_we0 => grp_shake_squeeze_fu_761_out_r_we0,
        out_r_d0 => grp_shake_squeeze_fu_761_out_r_d0,
        out_r_address1 => grp_shake_squeeze_fu_761_out_r_address1,
        out_r_ce1 => grp_shake_squeeze_fu_761_out_r_ce1,
        out_r_we1 => grp_shake_squeeze_fu_761_out_r_we1,
        out_r_d1 => grp_shake_squeeze_fu_761_out_r_d1);

    grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769 : component dpu_keygen_dpu_keygen_Pipeline_VITIS_LOOP_62_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start,
        ap_done => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_done,
        ap_idle => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_idle,
        ap_ready => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_ready,
        tr_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_address0,
        tr_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_ce0,
        tr_q0 => tr_q0,
        sk_address0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_address0,
        sk_ce0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_ce0,
        sk_we0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_we0,
        sk_d0 => grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_d0);

    grp_dpu_pack_4_fu_776 : component dpu_keygen_dpu_pack_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dpu_pack_4_fu_776_ap_start,
        ap_done => grp_dpu_pack_4_fu_776_ap_done,
        ap_idle => grp_dpu_pack_4_fu_776_ap_idle,
        ap_ready => grp_dpu_pack_4_fu_776_ap_ready,
        this_0_address0 => grp_dpu_pack_4_fu_776_this_0_address0,
        this_0_ce0 => grp_dpu_pack_4_fu_776_this_0_ce0,
        this_0_we0 => grp_dpu_pack_4_fu_776_this_0_we0,
        this_0_d0 => grp_dpu_pack_4_fu_776_this_0_d0,
        this_0_q0 => dpu_pMem_q0,
        p_read => grp_dpu_pack_4_fu_776_p_read,
        addr => grp_dpu_pack_4_fu_776_addr,
        sk_address0 => grp_dpu_pack_4_fu_776_sk_address0,
        sk_ce0 => grp_dpu_pack_4_fu_776_sk_ce0,
        sk_we0 => grp_dpu_pack_4_fu_776_sk_we0,
        sk_d0 => grp_dpu_pack_4_fu_776_sk_d0,
        sk_q0 => sk_q0,
        sk_address1 => grp_dpu_pack_4_fu_776_sk_address1,
        sk_ce1 => grp_dpu_pack_4_fu_776_sk_ce1,
        sk_we1 => grp_dpu_pack_4_fu_776_sk_we1,
        sk_d1 => grp_dpu_pack_4_fu_776_sk_d1,
        sk_q1 => sk_q1,
        ptrs => grp_dpu_pack_4_fu_776_ptrs,
        type_r => grp_dpu_pack_4_fu_776_type_r,
        itr => grp_dpu_pack_4_fu_776_itr,
        ptr_i => ptr,
        ptr_o => grp_dpu_pack_4_fu_776_ptr_o,
        ptr_o_ap_vld => grp_dpu_pack_4_fu_776_ptr_o_ap_vld,
        ap_return => grp_dpu_pack_4_fu_776_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_fu_650_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_fu_650_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                    grp_KeccakF1600_StatePermute_fu_650_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_fu_650_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_fu_650_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_func_fu_460_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_func_fu_460_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state47) or ((icmp_ln42_fu_1189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
                    grp_dpu_func_fu_460_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_func_fu_460_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_func_fu_460_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln42_fu_1189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln31_fu_945_p2 = ap_const_lv1_0))) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = ap_NS_fsm_state10))) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln42_fu_1189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_pack_4_fu_776_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_pack_4_fu_776_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                    grp_dpu_pack_4_fu_776_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_pack_4_fu_776_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_pack_4_fu_776_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dpu_pack_fu_743_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dpu_pack_fu_743_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                    grp_dpu_pack_fu_743_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dpu_pack_fu_743_ap_ready = ap_const_logic_1)) then 
                    grp_dpu_pack_fu_743_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sample_eta_fu_679_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sample_eta_fu_679_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln42_fu_1189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((icmp_ln37_fu_1127_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then 
                    grp_sample_eta_fu_679_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sample_eta_fu_679_ap_ready = ap_const_logic_1)) then 
                    grp_sample_eta_fu_679_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_1_fu_585_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_1_fu_585_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_shake_absorb_1_fu_585_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_1_fu_585_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_1_fu_585_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_3_fu_752_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_3_fu_752_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                    grp_shake_absorb_3_fu_752_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_3_fu_752_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_3_fu_752_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_absorb_fu_640_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_absorb_fu_640_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_shake_absorb_fu_640_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_absorb_fu_640_ap_ready = ap_const_logic_1)) then 
                    grp_shake_absorb_fu_640_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_squeeze_2_fu_626_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_squeeze_2_fu_626_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_shake_squeeze_2_fu_626_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_squeeze_2_fu_626_ap_ready = ap_const_logic_1)) then 
                    grp_shake_squeeze_2_fu_626_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_shake_squeeze_fu_761_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_shake_squeeze_fu_761_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                    grp_shake_squeeze_fu_761_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_shake_squeeze_fu_761_ap_ready = ap_const_logic_1)) then 
                    grp_shake_squeeze_fu_761_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ctr_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                ctr_reg_449 <= ctr_12_fu_1113_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                ctr_reg_449 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten26_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten26_fu_252 <= ap_const_lv5_0;
            elsif (((icmp_ln500_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                indvar_flatten26_fu_252 <= add_ln31_reg_1369;
            end if; 
        end if;
    end process;

    k_4_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                k_4_fu_248 <= ap_const_lv3_0;
            elsif (((icmp_ln500_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                k_4_fu_248 <= select_ln31_1_reg_1386;
            end if; 
        end if;
    end process;

    k_5_fu_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln31_fu_945_p2 = ap_const_lv1_1))) then 
                k_5_fu_320 <= ap_const_lv3_0;
            elsif (((icmp_ln37_fu_1127_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                k_5_fu_320 <= k_7_fu_1133_p2;
            end if; 
        end if;
    end process;

    k_fu_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_fu_1127_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                k_fu_324 <= ap_const_lv3_0;
            elsif (((icmp_ln42_fu_1189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                k_fu_324 <= add_ln42_fu_1195_p2;
            end if; 
        end if;
    end process;

    ptr_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_dpu_pack_4_fu_776_ptr_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74)) or ((grp_dpu_pack_4_fu_776_ptr_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((grp_dpu_pack_4_fu_776_ptr_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76)))) then 
                ptr <= grp_dpu_pack_4_fu_776_ptr_o;
            elsif (((grp_dpu_pack_fu_743_ptr_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                ptr <= grp_dpu_pack_fu_743_ptr_o;
            end if; 
        end if;
    end process;

    reg_829_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                reg_829 <= dpu_pMem_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                reg_829 <= dpu_pMem_q0;
            end if; 
        end if;
    end process;

    t_0_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_0_fu_244 <= ap_const_lv3_0;
            elsif (((icmp_ln500_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                t_0_fu_244 <= p_fu_1092_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                add_ln31_reg_1369 <= add_ln31_fu_951_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln42_fu_1189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                add_ln43_reg_1488 <= add_ln43_fu_1205_p2;
                addr_11_reg_1493 <= addr_11_fu_1216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ctr_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                ctr_1_loc_fu_268 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ctr_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                dpu_p5_reg_1503 <= grp_dpu_pack_fu_743_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_7_reg_1318 <= grp_shake_absorb_1_fu_585_ap_return(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                i_s_reg_1405 <= grp_shake_absorb_fu_640_ap_return(7 downto 3);
                spu_pos_2_reg_1400 <= grp_shake_absorb_fu_640_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                k_6_reg_1449 <= k_5_fu_320;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                    p_mid_reg_1420(4 downto 2) <= p_mid_fu_1047_p3(4 downto 2);
                    zext_ln31_reg_1415(2 downto 0) <= zext_ln31_fu_1044_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_824 <= grp_shake_absorb_1_fu_585_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state58) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state56) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state52) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_state50_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state50)) or ((ap_const_boolean_0 = ap_block_state48_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((ap_const_boolean_0 = ap_block_state46_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then
                reg_839 <= grp_dpu_func_fu_460_ap_return_1;
                reg_844 <= grp_dpu_func_fu_460_ap_return_0;
                reg_849 <= grp_dpu_func_fu_460_ap_return_2;
                reg_854 <= grp_dpu_func_fu_460_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74)) or ((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72)))) then
                reg_859 <= grp_dpu_pack_4_fu_776_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                select_ln31_1_reg_1386 <= select_ln31_1_fu_988_p3;
                select_ln31_reg_1381 <= select_ln31_fu_974_p3;
                    zext_ln33_reg_1394(2 downto 0) <= zext_ln33_fu_997_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                targetBlock_reg_1439 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                    this_pMem_addr_5_reg_1474(5 downto 0) <= idxprom2_i29_fu_1163_p1(8 - 1 downto 0)(5 downto 0);
                    zext_ln39_reg_1469(2 downto 0) <= zext_ln39_fu_1154_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                    this_pMem_addr_6_reg_1479(5 downto 0) <= idxprom2_i39_fu_1173_p1(8 - 1 downto 0)(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln500_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    this_pMem_addr_7_reg_1433(4 downto 0) <= idxprom2_i_fu_1087_p1(8 - 1 downto 0)(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                this_pMem_load_1_reg_1351 <= dpu_pMem_q0;
                this_pMem_load_2_reg_1356 <= dpu_pMem_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                this_s_addr_3_reg_1410 <= zext_ln402_3_fu_1012_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                this_s_addr_reg_1323 <= zext_ln402_1_fu_897_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                trunc_ln500_reg_1425 <= trunc_ln500_fu_1054_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_fu_1127_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    zext_ln38_reg_1457(2 downto 0) <= zext_ln38_fu_1139_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln33_reg_1394(3) <= '0';
    zext_ln31_reg_1415(3) <= '0';
    p_mid_reg_1420(1 downto 0) <= "00";
    this_pMem_addr_7_reg_1433(7 downto 5) <= "000";
    zext_ln38_reg_1457(3) <= '0';
    zext_ln39_reg_1469(5 downto 3) <= "000";
    this_pMem_addr_5_reg_1474(7 downto 6) <= "00";
    this_pMem_addr_6_reg_1479(7 downto 6) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state46, grp_dpu_func_fu_460_ap_done, ap_block_state46_on_subcall_done, ap_CS_fsm_state48, ap_block_state48_on_subcall_done, ap_CS_fsm_state50, ap_block_state50_on_subcall_done, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state72, grp_dpu_pack_4_fu_776_ap_done, ap_CS_fsm_state74, ap_CS_fsm_state14, ap_CS_fsm_state19, ap_CS_fsm_state24, icmp_ln500_fu_1068_p2, ap_CS_fsm_state30, ap_CS_fsm_state35, icmp_ln37_fu_1127_p2, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state42, icmp_ln42_fu_1189_p2, ap_CS_fsm_state62, grp_shake_absorb_1_fu_585_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_done, grp_shake_absorb_fu_640_ap_done, grp_KeccakF1600_StatePermute_fu_650_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_done, grp_sample_eta_fu_679_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_done, grp_dpu_pack_fu_743_ap_done, grp_shake_absorb_3_fu_752_ap_done, grp_shake_squeeze_fu_761_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_done, ap_CS_fsm_state60, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state11, icmp_ln31_fu_945_p2, ap_CS_fsm_state15, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state40, ap_CS_fsm_state45, ap_CS_fsm_state64, ap_CS_fsm_state68, ap_CS_fsm_state70, ap_CS_fsm_state76, ap_block_state2_on_subcall_done, ap_block_state5_on_subcall_done, ap_block_state11_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln31_fu_945_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_shake_absorb_1_fu_585_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_shake_absorb_fu_640_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln500_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_KeccakF1600_StatePermute_fu_650_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln37_fu_1127_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                if (((grp_sample_eta_fu_679_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state42 => 
                if (((icmp_ln42_fu_1189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                if (((grp_sample_eta_fu_679_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                if (((ap_const_boolean_0 = ap_block_state46_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (((ap_const_boolean_0 = ap_block_state48_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                if (((ap_const_boolean_0 = ap_block_state50_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state56) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state60) and (grp_dpu_func_fu_460_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                if (((grp_dpu_pack_fu_743_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((grp_shake_absorb_3_fu_752_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (((grp_shake_squeeze_fu_761_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                if (((grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                if (((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                if (((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln31_1_fu_982_p2 <= std_logic_vector(unsigned(k_4_fu_248) + unsigned(ap_const_lv3_1));
    add_ln31_fu_951_p2 <= std_logic_vector(unsigned(indvar_flatten26_fu_252) + unsigned(ap_const_lv5_1));
    add_ln34_fu_1074_p2 <= std_logic_vector(unsigned(zext_ln31_reg_1415) + unsigned(zext_ln33_reg_1394));
    add_ln42_fu_1195_p2 <= std_logic_vector(unsigned(k_fu_324) + unsigned(ap_const_lv3_1));
    add_ln43_fu_1205_p2 <= std_logic_vector(unsigned(zext_ln43_fu_1201_p1) + unsigned(ap_const_lv4_5));
    addr_10_fu_1082_p2 <= std_logic_vector(unsigned(zext_ln34_fu_1078_p1) + unsigned(p_mid_reg_1420));
    addr_11_fu_1216_p2 <= std_logic_vector(unsigned(zext_ln44_1_fu_1212_p1) + unsigned(ap_const_lv5_13));
    addr_9_fu_1168_p2 <= std_logic_vector(unsigned(zext_ln39_reg_1469) + unsigned(ap_const_lv6_1E));
    addr_fu_1157_p2 <= std_logic_vector(unsigned(zext_ln39_fu_1154_p1) + unsigned(ap_const_lv6_23));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state10 <= ap_NS_fsm(9);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state11_on_subcall_done)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_shake_absorb_1_fu_585_ap_done)
    begin
        if ((grp_shake_absorb_1_fu_585_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_shake_absorb_fu_640_ap_done)
    begin
        if ((grp_shake_absorb_fu_640_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_650_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_650_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state30_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(grp_sample_eta_fu_679_ap_done)
    begin
        if ((grp_sample_eta_fu_679_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state37_blk <= ap_const_logic_0;

    ap_ST_fsm_state38_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state40_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;

    ap_ST_fsm_state43_blk_assign_proc : process(grp_sample_eta_fu_679_ap_done)
    begin
        if ((grp_sample_eta_fu_679_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state43_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state43_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state44_blk <= ap_const_logic_0;

    ap_ST_fsm_state45_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state45_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state45_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state46_blk_assign_proc : process(ap_block_state46_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state46_on_subcall_done)) then 
            ap_ST_fsm_state46_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state46_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state47_blk <= ap_const_logic_0;

    ap_ST_fsm_state48_blk_assign_proc : process(ap_block_state48_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state48_on_subcall_done)) then 
            ap_ST_fsm_state48_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state48_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state50_blk_assign_proc : process(ap_block_state50_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state50_on_subcall_done)) then 
            ap_ST_fsm_state50_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state50_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(grp_dpu_func_fu_460_ap_done)
    begin
        if ((grp_dpu_func_fu_460_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state53_blk <= ap_const_logic_0;

    ap_ST_fsm_state54_blk_assign_proc : process(grp_dpu_func_fu_460_ap_done)
    begin
        if ((grp_dpu_func_fu_460_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state54_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state54_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state55_blk <= ap_const_logic_0;

    ap_ST_fsm_state56_blk_assign_proc : process(grp_dpu_func_fu_460_ap_done)
    begin
        if ((grp_dpu_func_fu_460_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state56_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state56_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state57_blk <= ap_const_logic_0;

    ap_ST_fsm_state58_blk_assign_proc : process(grp_dpu_func_fu_460_ap_done)
    begin
        if ((grp_dpu_func_fu_460_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state59_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_on_subcall_done)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state60_blk_assign_proc : process(grp_dpu_func_fu_460_ap_done)
    begin
        if ((grp_dpu_func_fu_460_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state60_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state60_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state61_blk <= ap_const_logic_0;

    ap_ST_fsm_state62_blk_assign_proc : process(grp_dpu_pack_fu_743_ap_done)
    begin
        if ((grp_dpu_pack_fu_743_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state62_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state62_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state63_blk <= ap_const_logic_0;

    ap_ST_fsm_state64_blk_assign_proc : process(grp_shake_absorb_3_fu_752_ap_done)
    begin
        if ((grp_shake_absorb_3_fu_752_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state64_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state64_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;

    ap_ST_fsm_state68_blk_assign_proc : process(grp_shake_squeeze_fu_761_ap_done)
    begin
        if ((grp_shake_squeeze_fu_761_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state68_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state68_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state70_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state70_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state70_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state71_blk <= ap_const_logic_0;

    ap_ST_fsm_state72_blk_assign_proc : process(grp_dpu_pack_4_fu_776_ap_done)
    begin
        if ((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state72_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state72_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state73_blk <= ap_const_logic_0;

    ap_ST_fsm_state74_blk_assign_proc : process(grp_dpu_pack_4_fu_776_ap_done)
    begin
        if ((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state74_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state74_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state75_blk <= ap_const_logic_0;

    ap_ST_fsm_state76_blk_assign_proc : process(grp_dpu_pack_4_fu_776_ap_done)
    begin
        if ((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state76_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state76_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done)
    begin
        if ((grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state11_on_subcall_done_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_done, grp_shake_squeeze_2_fu_626_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_shake_squeeze_2_fu_626_ap_done = ap_const_logic_0) or (grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_done = ap_const_logic_0) or (grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_done = ap_const_logic_0) or (grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_done = ap_const_logic_0) or (grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_done = ap_const_logic_0) or (grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_done = ap_const_logic_0));
    end process;


    ap_block_state46_on_subcall_done_assign_proc : process(grp_dpu_func_fu_460_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_done)
    begin
                ap_block_state46_on_subcall_done <= ((grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_done = ap_const_logic_0) or (grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_done = ap_const_logic_0) or (grp_dpu_func_fu_460_ap_done = ap_const_logic_0));
    end process;


    ap_block_state48_on_subcall_done_assign_proc : process(grp_dpu_func_fu_460_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_done)
    begin
                ap_block_state48_on_subcall_done <= ((grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_done = ap_const_logic_0) or (grp_dpu_func_fu_460_ap_done = ap_const_logic_0));
    end process;


    ap_block_state50_on_subcall_done_assign_proc : process(grp_dpu_func_fu_460_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_done)
    begin
                ap_block_state50_on_subcall_done <= ((grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_done = ap_const_logic_0) or (grp_dpu_func_fu_460_ap_done = ap_const_logic_0));
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_done, grp_shake_absorb_1_fu_585_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((grp_shake_absorb_1_fu_585_ap_done = ap_const_logic_0) or (grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_dpu_pack_4_fu_776_ap_done, ap_CS_fsm_state76)
    begin
        if (((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_dpu_pack_4_fu_776_ap_done, ap_CS_fsm_state76)
    begin
        if (((grp_dpu_pack_4_fu_776_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    buf_address0_assign_proc : process(ap_CS_fsm_state30, grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buf_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            buf_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address0;
        else 
            buf_address0 <= "XXXXXXXX";
        end if; 
    end process;


    buf_address1_assign_proc : process(ap_CS_fsm_state30, grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address1, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buf_address1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            buf_address1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_address1;
        else 
            buf_address1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_ce0_assign_proc : process(ap_CS_fsm_state30, grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buf_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            buf_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce0;
        else 
            buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_ce1_assign_proc : process(ap_CS_fsm_state30, grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce1, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            buf_ce1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_buf_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            buf_ce1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_ce1;
        else 
            buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_we0_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            buf_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we0;
        else 
            buf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_we1_assign_proc : process(grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            buf_we1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_buf_r_we1;
        else 
            buf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ctr_12_fu_1113_p3 <= 
        ctr_1_loc_fu_268 when (targetBlock_reg_1439(0) = '1') else 
        ap_const_lv32_100;

    dpu_pMem_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state39, ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state72, ap_CS_fsm_state74, this_pMem_addr_2_reg_1328, ap_CS_fsm_state8, ap_CS_fsm_state24, ap_CS_fsm_state36, this_pMem_addr_5_reg_1474, ap_CS_fsm_state42, icmp_ln42_fu_1189_p2, ap_CS_fsm_state62, grp_dpu_func_fu_460_this_0_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_address0, grp_dpu_pack_fu_743_this_0_address0, grp_dpu_pack_4_fu_776_this_0_address0, ap_CS_fsm_state60, ap_CS_fsm_state7, ap_CS_fsm_state45, ap_CS_fsm_state76, ap_CS_fsm_state3, idxprom2_i_fu_1087_p1, idxprom2_i29_fu_1163_p1, idxprom2_i49_cast_cast_cast_fu_1226_p1, ap_CS_fsm_state12)
    begin
        if (((icmp_ln42_fu_1189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            dpu_pMem_address0 <= idxprom2_i49_cast_cast_cast_fu_1226_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dpu_pMem_address0 <= this_pMem_addr_5_reg_1474;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            dpu_pMem_address0 <= idxprom2_i29_fu_1163_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            dpu_pMem_address0 <= idxprom2_i_fu_1087_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dpu_pMem_address0 <= this_pMem_addr_2_reg_1328;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dpu_pMem_address0 <= ap_const_lv64_9B(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dpu_pMem_address0 <= ap_const_lv64_9A(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dpu_pMem_address0 <= ap_const_lv64_89(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            dpu_pMem_address0 <= grp_dpu_pack_4_fu_776_this_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            dpu_pMem_address0 <= grp_dpu_pack_fu_743_this_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            dpu_pMem_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dpu_pMem_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dpu_pMem_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            dpu_pMem_address0 <= grp_dpu_func_fu_460_this_0_address0;
        else 
            dpu_pMem_address0 <= "XXXXXXXX";
        end if; 
    end process;


    dpu_pMem_address1_assign_proc : process(ap_CS_fsm_state9, this_pMem_addr_4_reg_1345, ap_CS_fsm_state13, this_pMem_addr_7_reg_1433, this_pMem_addr_6_reg_1479, ap_CS_fsm_state38, ap_CS_fsm_state3, idxprom2_i39_fu_1173_p1, ap_CS_fsm_state41, ap_CS_fsm_state34, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dpu_pMem_address1 <= this_pMem_addr_6_reg_1479;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            dpu_pMem_address1 <= idxprom2_i39_fu_1173_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dpu_pMem_address1 <= this_pMem_addr_7_reg_1433;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dpu_pMem_address1 <= this_pMem_addr_4_reg_1345;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dpu_pMem_address1 <= ap_const_lv64_9B(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dpu_pMem_address1 <= ap_const_lv64_9C(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dpu_pMem_address1 <= ap_const_lv64_88(8 - 1 downto 0);
        else 
            dpu_pMem_address1 <= "XXXXXXXX";
        end if; 
    end process;


    dpu_pMem_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state39, ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state8, ap_CS_fsm_state24, ap_CS_fsm_state36, ap_CS_fsm_state42, icmp_ln42_fu_1189_p2, ap_CS_fsm_state62, grp_dpu_func_fu_460_this_0_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_ce0, grp_sample_eta_fu_679_ap_done, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_ce0, grp_dpu_pack_fu_743_this_0_ce0, grp_dpu_pack_4_fu_776_this_0_ce0, ap_CS_fsm_state60, ap_CS_fsm_state7, ap_CS_fsm_state45, ap_CS_fsm_state76, ap_CS_fsm_state3, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln42_fu_1189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((grp_sample_eta_fu_679_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36)))) then 
            dpu_pMem_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            dpu_pMem_ce0 <= grp_dpu_pack_4_fu_776_this_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            dpu_pMem_ce0 <= grp_dpu_pack_fu_743_this_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            dpu_pMem_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dpu_pMem_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dpu_pMem_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            dpu_pMem_ce0 <= grp_dpu_func_fu_460_this_0_ce0;
        else 
            dpu_pMem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dpu_pMem_ce1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state38, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state41, ap_CS_fsm_state34, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            dpu_pMem_ce1 <= ap_const_logic_1;
        else 
            dpu_pMem_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dpu_pMem_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state39, ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_func_fu_460_this_0_d0, grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_p_out, grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_d0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_d0, grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_p_out, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_p_out, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_d0, grp_dpu_pack_4_fu_776_this_0_d0, ap_CS_fsm_state60, ap_CS_fsm_state7, ap_CS_fsm_state45, ap_CS_fsm_state76, ap_CS_fsm_state3, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dpu_pMem_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dpu_pMem_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dpu_pMem_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_p_out;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            dpu_pMem_d0 <= grp_dpu_pack_4_fu_776_this_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            dpu_pMem_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dpu_pMem_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dpu_pMem_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            dpu_pMem_d0 <= grp_dpu_func_fu_460_this_0_d0;
        else 
            dpu_pMem_d
        end if; 
    end process;


    dpu_pMem_d1_assign_proc : process(ap_CS_fsm_state13, grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_p_out, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_p_out, grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_p_out, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_p_out, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_p_out, ap_CS_fsm_state3, ap_CS_fsm_state41, ap_CS_fsm_state34, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dpu_pMem_d1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dpu_pMem_d1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dpu_pMem_d1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dpu_pMem_d1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dpu_pMem_d1 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_p_out;
        else 
            dpu_pMem_d
        end if; 
    end process;


    dpu_pMem_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state39, ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_func_fu_460_this_0_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_we0, grp_dpu_pack_4_fu_776_this_0_we0, ap_CS_fsm_state60, ap_CS_fsm_state7, ap_CS_fsm_state45, ap_CS_fsm_state76, ap_CS_fsm_state3, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dpu_pMem_we0 <= ap_const_lv1024_lc_10;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            dpu_pMem_we0 <= grp_dpu_pack_4_fu_776_this_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            dpu_pMem_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_dpu_pMem_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dpu_pMem_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_dpu_pMem_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dpu_pMem_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_dpu_pMem_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            dpu_pMem_we0 <= grp_dpu_func_fu_460_this_0_we0;
        else 
            dpu_pMem_we0 <= ap_const_lv1024_lc_5;
        end if; 
    end process;


    dpu_pMem_we1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state3, ap_CS_fsm_state41, ap_CS_fsm_state34, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dpu_pMem_we1 <= ap_const_lv1024_lc_10;
        else 
            dpu_pMem_we1 <= ap_const_lv1024_lc_5;
        end if; 
    end process;

    grp_KeccakF1600_StatePermute_fu_650_ap_start <= grp_KeccakF1600_StatePermute_fu_650_ap_start_reg;

    grp_dpu_func_fu_460_addr1_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            grp_dpu_func_fu_460_addr1 <= ap_const_lv8_9A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_dpu_func_fu_460_addr1 <= ap_const_lv8_3F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_dpu_func_fu_460_addr1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_dpu_func_fu_460_addr1 <= ap_const_lv8_23;
        else 
            grp_dpu_func_fu_460_addr1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_dpu_func_fu_460_addr2_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_dpu_func_fu_460_addr2 <= ap_const_lv8_33;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_dpu_func_fu_460_addr2 <= ap_const_lv8_3F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_dpu_func_fu_460_addr2 <= ap_const_lv8_23;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            grp_dpu_func_fu_460_addr2 <= ap_const_lv8_0;
        else 
            grp_dpu_func_fu_460_addr2 <= "XXXXXXXX";
        end if; 
    end process;


    grp_dpu_func_fu_460_addr3_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_dpu_func_fu_460_addr3 <= ap_const_lv8_2D;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_dpu_func_fu_460_addr3 <= ap_const_lv8_3F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            grp_dpu_func_fu_460_addr3 <= ap_const_lv8_0;
        else 
            grp_dpu_func_fu_460_addr3 <= "XXXXXXXX";
        end if; 
    end process;

    grp_dpu_func_fu_460_ap_start <= grp_dpu_func_fu_460_ap_start_reg;

    grp_dpu_func_fu_460_itr_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_dpu_func_fu_460_itr <= ap_const_lv8_6;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            grp_dpu_func_fu_460_itr <= ap_const_lv8_5;
        else 
            grp_dpu_func_fu_460_itr <= "XXXXXXXX";
        end if; 
    end process;


    grp_dpu_func_fu_460_p_read_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, reg_849, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_dpu_func_fu_460_p_read <= reg_849;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_dpu_func_fu_460_p_read <= ap_const_lv8192_lc_5;
        else 
            grp_dpu_func_fu_460_p_read
        end if; 
    end process;


    grp_dpu_func_fu_460_p_read1_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, reg_854, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_dpu_func_fu_460_p_read1 <= reg_854;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_dpu_func_fu_460_p_read1 <= ap_const_lv8192_lc_5;
        else 
            grp_dpu_func_fu_460_p_read
        end if; 
    end process;


    grp_dpu_func_fu_460_p_read2_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, reg_844, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_dpu_func_fu_460_p_read2 <= reg_844;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_dpu_func_fu_460_p_read2 <= ap_const_lv8192_lc_5;
        else 
            grp_dpu_func_fu_460_p_read
        end if; 
    end process;


    grp_dpu_func_fu_460_p_read3_assign_proc : process(reg_839, ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            grp_dpu_func_fu_460_p_read3 <= reg_839;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_dpu_func_fu_460_p_read3 <= ap_const_lv8192_lc_5;
        else 
            grp_dpu_func_fu_460_p_read
        end if; 
    end process;


    grp_dpu_func_fu_460_type_r_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_dpu_func_fu_460_type_r <= ap_const_lv8_7;
        else 
            grp_dpu_func_fu_460_type_r <= "XXXXXXXX";
        end if; 
    end process;

    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_40_1_fu_562_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_41_2_fu_567_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_54_7_fu_606_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_8_fu_612_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_56_9_fu_619_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_ap_start_reg;
    grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_ap_start_reg;

    grp_dpu_pack_4_fu_776_addr_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_dpu_pack_4_fu_776_addr <= ap_const_lv6_2D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_dpu_pack_4_fu_776_addr <= ap_const_lv6_33;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_dpu_pack_4_fu_776_addr <= ap_const_lv6_1E;
        else 
            grp_dpu_pack_4_fu_776_addr <= "XXXXXX";
        end if; 
    end process;

    grp_dpu_pack_4_fu_776_ap_start <= grp_dpu_pack_4_fu_776_ap_start_reg;

    grp_dpu_pack_4_fu_776_itr_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            grp_dpu_pack_4_fu_776_itr <= ap_const_lv3_6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_dpu_pack_4_fu_776_itr <= ap_const_lv3_5;
        else 
            grp_dpu_pack_4_fu_776_itr <= "XXX";
        end if; 
    end process;


    grp_dpu_pack_4_fu_776_p_read_assign_proc : process(reg_859, ap_CS_fsm_state72, ap_CS_fsm_state74, dpu_p5_reg_1503, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            grp_dpu_pack_4_fu_776_p_read <= reg_859;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_dpu_pack_4_fu_776_p_read <= dpu_p5_reg_1503;
        else 
            grp_dpu_pack_4_fu_776_p_read
        end if; 
    end process;


    grp_dpu_pack_4_fu_776_ptrs_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_dpu_pack_4_fu_776_ptrs <= ap_const_lv11_5F0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_dpu_pack_4_fu_776_ptrs <= ap_const_lv11_2F0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_dpu_pack_4_fu_776_ptrs <= ap_const_lv11_70;
        else 
            grp_dpu_pack_4_fu_776_ptrs <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_dpu_pack_4_fu_776_type_r_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state74, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_dpu_pack_4_fu_776_type_r <= ap_const_lv3_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            grp_dpu_pack_4_fu_776_type_r <= ap_const_lv3_6;
        else 
            grp_dpu_pack_4_fu_776_type_r <= "XXX";
        end if; 
    end process;

    grp_dpu_pack_fu_743_ap_start <= grp_dpu_pack_fu_743_ap_start_reg;
    grp_fu_800_p2 <= (spu_s_q0 xor ap_const_lv64_8000000000000000);
    grp_sample_eta_fu_679_ap_start <= grp_sample_eta_fu_679_ap_start_reg;

    grp_sample_eta_fu_679_nonce_assign_proc : process(ap_CS_fsm_state43, zext_ln38_reg_1457, ap_CS_fsm_state36, add_ln43_reg_1488)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_sample_eta_fu_679_nonce <= add_ln43_reg_1488;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_sample_eta_fu_679_nonce <= zext_ln38_reg_1457;
        else 
            grp_sample_eta_fu_679_nonce <= "XXXX";
        end if; 
    end process;

    grp_shake_absorb_1_fu_585_ap_start <= grp_shake_absorb_1_fu_585_ap_start_reg;

    grp_shake_absorb_1_fu_585_mode_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_shake_absorb_1_fu_585_mode <= ap_const_lv9_80;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_shake_absorb_1_fu_585_mode <= ap_const_lv9_100;
        else 
            grp_shake_absorb_1_fu_585_mode <= "XXXXXXXXX";
        end if; 
    end process;

    grp_shake_absorb_3_fu_752_ap_start <= grp_shake_absorb_3_fu_752_ap_start_reg;
    grp_shake_absorb_fu_640_ap_start <= grp_shake_absorb_fu_640_ap_start_reg;
    grp_shake_squeeze_2_fu_626_ap_start <= grp_shake_squeeze_2_fu_626_ap_start_reg;
    grp_shake_squeeze_fu_761_ap_start <= grp_shake_squeeze_fu_761_ap_start_reg;
    icmp_ln31_fu_945_p2 <= "1" when (indvar_flatten26_fu_252 = ap_const_lv5_1E) else "0";
    icmp_ln32_fu_968_p2 <= "1" when (t_0_fu_244 = ap_const_lv3_5) else "0";
    icmp_ln37_fu_1127_p2 <= "1" when (k_5_fu_320 = ap_const_lv3_5) else "0";
    icmp_ln42_fu_1189_p2 <= "1" when (k_fu_324 = ap_const_lv3_6) else "0";
    icmp_ln500_fu_1068_p2 <= "1" when (tmp_fu_1058_p4 = ap_const_lv24_0) else "0";
    idxprom2_i29_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_fu_1157_p2),64));
    idxprom2_i39_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_9_fu_1168_p2),64));
    idxprom2_i49_cast_cast_cast_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idxprom2_i49_cast_cast_fu_1222_p1),64));
        idxprom2_i49_cast_cast_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addr_11_fu_1216_p2),6));

    idxprom2_i_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr_10_fu_1082_p2),64));
    k_7_fu_1133_p2 <= std_logic_vector(unsigned(k_5_fu_320) + unsigned(ap_const_lv3_1));
    p_fu_1092_p2 <= std_logic_vector(unsigned(select_ln31_reg_1381) + unsigned(ap_const_lv3_1));
    p_mid_fu_1047_p3 <= (select_ln31_1_reg_1386 & ap_const_lv2_0);

    pk_address0_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state62, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_address0, grp_dpu_pack_fu_743_pk_address0, grp_shake_absorb_3_fu_752_pk_address0, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            pk_address0 <= grp_shake_absorb_3_fu_752_pk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            pk_address0 <= grp_dpu_pack_fu_743_pk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            pk_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_address0;
        else 
            pk_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    pk_address1_assign_proc : process(ap_CS_fsm_state62, grp_dpu_pack_fu_743_pk_address1, grp_shake_absorb_3_fu_752_pk_address1, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            pk_address1 <= grp_shake_absorb_3_fu_752_pk_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            pk_address1 <= grp_dpu_pack_fu_743_pk_address1;
        else 
            pk_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    pk_ce0_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state62, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_ce0, grp_dpu_pack_fu_743_pk_ce0, grp_shake_absorb_3_fu_752_pk_ce0, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            pk_ce0 <= grp_shake_absorb_3_fu_752_pk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            pk_ce0 <= grp_dpu_pack_fu_743_pk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            pk_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_ce0;
        else 
            pk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pk_ce1_assign_proc : process(ap_CS_fsm_state62, grp_dpu_pack_fu_743_pk_ce1, grp_shake_absorb_3_fu_752_pk_ce1, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            pk_ce1 <= grp_shake_absorb_3_fu_752_pk_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            pk_ce1 <= grp_dpu_pack_fu_743_pk_ce1;
        else 
            pk_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pk_d0_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state62, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_d0, grp_dpu_pack_fu_743_pk_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            pk_d0 <= grp_dpu_pack_fu_743_pk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            pk_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_d0;
        else 
            pk_d0 <= "XXXXXXXX";
        end if; 
    end process;

    pk_d1 <= grp_dpu_pack_fu_743_pk_d1;

    pk_we0_assign_proc : process(ap_CS_fsm_state46, ap_CS_fsm_state62, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_we0, grp_dpu_pack_fu_743_pk_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            pk_we0 <= grp_dpu_pack_fu_743_pk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            pk_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_pk_we0;
        else 
            pk_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pk_we1_assign_proc : process(ap_CS_fsm_state62, grp_dpu_pack_fu_743_pk_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            pk_we1 <= grp_dpu_pack_fu_743_pk_we1;
        else 
            pk_we1 <= ap_const_logic_0;
        end if; 
    end process;


    seedbuf_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state36, grp_shake_absorb_1_fu_585_seedbuf_address0, grp_shake_squeeze_2_fu_626_seedbuf_address0, grp_sample_eta_fu_679_seedbuf_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            seedbuf_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            seedbuf_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            seedbuf_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            seedbuf_address0 <= grp_sample_eta_fu_679_seedbuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            seedbuf_address0 <= grp_shake_squeeze_2_fu_626_seedbuf_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            seedbuf_address0 <= grp_shake_absorb_1_fu_585_seedbuf_address0;
        else 
            seedbuf_address0 <= "XXXXXXX";
        end if; 
    end process;


    seedbuf_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state36, grp_shake_absorb_1_fu_585_seedbuf_address1, grp_shake_squeeze_2_fu_626_seedbuf_address1, grp_sample_eta_fu_679_seedbuf_address1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            seedbuf_address1 <= grp_sample_eta_fu_679_seedbuf_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            seedbuf_address1 <= grp_shake_squeeze_2_fu_626_seedbuf_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            seedbuf_address1 <= grp_shake_absorb_1_fu_585_seedbuf_address1;
        else 
            seedbuf_address1 <= "XXXXXXX";
        end if; 
    end process;


    seedbuf_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state46, ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state36, grp_shake_absorb_1_fu_585_seedbuf_ce0, grp_shake_squeeze_2_fu_626_seedbuf_ce0, grp_sample_eta_fu_679_seedbuf_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            seedbuf_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_seedbuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            seedbuf_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_seedbuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            seedbuf_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_55_5_fu_706_seedbuf_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            seedbuf_ce0 <= grp_sample_eta_fu_679_seedbuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            seedbuf_ce0 <= grp_shake_squeeze_2_fu_626_seedbuf_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            seedbuf_ce0 <= grp_shake_absorb_1_fu_585_seedbuf_ce0;
        else 
            seedbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    seedbuf_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state36, grp_shake_absorb_1_fu_585_seedbuf_ce1, grp_shake_squeeze_2_fu_626_seedbuf_ce1, grp_sample_eta_fu_679_seedbuf_ce1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            seedbuf_ce1 <= grp_sample_eta_fu_679_seedbuf_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            seedbuf_ce1 <= grp_shake_squeeze_2_fu_626_seedbuf_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            seedbuf_ce1 <= grp_shake_absorb_1_fu_585_seedbuf_ce1;
        else 
            seedbuf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    seedbuf_d0 <= grp_shake_squeeze_2_fu_626_seedbuf_d0;
    seedbuf_d1 <= grp_shake_squeeze_2_fu_626_seedbuf_d1;

    seedbuf_we0_assign_proc : process(grp_shake_squeeze_2_fu_626_seedbuf_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            seedbuf_we0 <= grp_shake_squeeze_2_fu_626_seedbuf_we0;
        else 
            seedbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    seedbuf_we1_assign_proc : process(grp_shake_squeeze_2_fu_626_seedbuf_we1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            seedbuf_we1 <= grp_shake_squeeze_2_fu_626_seedbuf_we1;
        else 
            seedbuf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln31_1_fu_988_p3 <= 
        add_ln31_1_fu_982_p2 when (icmp_ln32_fu_968_p2(0) = '1') else 
        k_4_fu_248;
    select_ln31_fu_974_p3 <= 
        ap_const_lv3_0 when (icmp_ln32_fu_968_p2(0) = '1') else 
        t_0_fu_244;
    shl_ln402_1_fu_1031_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1F),to_integer(unsigned('0' & zext_ln402_2_fu_1027_p1(31-1 downto 0)))));
    shl_ln402_2_fu_1019_p3 <= (trunc_ln402_1_fu_1016_p1 & ap_const_lv3_0);
    shl_ln402_fu_917_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1F),to_integer(unsigned('0' & zext_ln402_fu_913_p1(31-1 downto 0)))));
    shl_ln_fu_905_p3 <= (trunc_ln402_fu_901_p1 & ap_const_lv3_0);

    sk_address0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_address0, grp_dpu_pack_4_fu_776_sk_address0, ap_CS_fsm_state70, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            sk_address0 <= grp_dpu_pack_4_fu_776_sk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            sk_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            sk_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            sk_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_address0;
        else 
            sk_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    sk_address1 <= grp_dpu_pack_4_fu_776_sk_address1;

    sk_ce0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_ce0, grp_dpu_pack_4_fu_776_sk_ce0, ap_CS_fsm_state70, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            sk_ce0 <= grp_dpu_pack_4_fu_776_sk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            sk_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            sk_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            sk_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_ce0;
        else 
            sk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sk_ce1_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_pack_4_fu_776_sk_ce1, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            sk_ce1 <= grp_dpu_pack_4_fu_776_sk_ce1;
        else 
            sk_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sk_d0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_d0, grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_d0, grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_d0, grp_dpu_pack_4_fu_776_sk_d0, ap_CS_fsm_state70, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            sk_d0 <= grp_dpu_pack_4_fu_776_sk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            sk_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            sk_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            sk_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_d0;
        else 
            sk_d0 <= "XXXXXXXX";
        end if; 
    end process;

    sk_d1 <= grp_dpu_pack_4_fu_776_sk_d1;

    sk_we0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state50, ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_we0, grp_dpu_pack_4_fu_776_sk_we0, ap_CS_fsm_state70, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            sk_we0 <= grp_dpu_pack_4_fu_776_sk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            sk_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_sk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            sk_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_61_7_fu_735_sk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            sk_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_60_6_fu_727_sk_we0;
        else 
            sk_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sk_we1_assign_proc : process(ap_CS_fsm_state72, ap_CS_fsm_state74, grp_dpu_pack_4_fu_776_sk_we1, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            sk_we1 <= grp_dpu_pack_4_fu_776_sk_we1;
        else 
            sk_we1 <= ap_const_logic_0;
        end if; 
    end process;


    spu_s_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state9, ap_CS_fsm_state43, ap_CS_fsm_state46, this_s_addr_reg_1323, ap_CS_fsm_state6, ap_CS_fsm_state8, this_s_addr_1_reg_1333, ap_CS_fsm_state19, this_s_addr_3_reg_1410, ap_CS_fsm_state20, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state65, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_address0, grp_shake_absorb_1_fu_585_this_s_address0, grp_shake_squeeze_2_fu_626_this_s_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_address0, grp_shake_absorb_fu_640_this_s_address0, grp_KeccakF1600_StatePermute_fu_650_this_s_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_address0, grp_sample_eta_fu_679_this_s_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_address0, grp_shake_absorb_3_fu_752_this_s_address0, grp_shake_squeeze_fu_761_this_s_address0, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state64, ap_CS_fsm_state68, zext_ln402_1_fu_897_p1, zext_ln402_3_fu_1012_p1, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            spu_s_address0 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            spu_s_address0 <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            spu_s_address0 <= this_s_addr_3_reg_1410;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            spu_s_address0 <= zext_ln402_3_fu_1012_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            spu_s_address0 <= this_s_addr_1_reg_1333;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            spu_s_address0 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            spu_s_address0 <= this_s_addr_reg_1323;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            spu_s_address0 <= zext_ln402_1_fu_897_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_address0 <= grp_shake_squeeze_fu_761_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_address0 <= grp_shake_absorb_3_fu_752_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            spu_s_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_address0 <= grp_sample_eta_fu_679_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            spu_s_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_address0 <= grp_KeccakF1600_StatePermute_fu_650_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_address0 <= grp_shake_absorb_fu_640_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            spu_s_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_address0 <= grp_shake_squeeze_2_fu_626_this_s_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_address0 <= grp_shake_absorb_1_fu_585_this_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            spu_s_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_address0;
        else 
            spu_s_address0 <= "XXXXX";
        end if; 
    end process;


    spu_s_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state36, ap_CS_fsm_state65, grp_shake_absorb_1_fu_585_this_s_address1, grp_shake_squeeze_2_fu_626_this_s_address1, grp_shake_absorb_fu_640_this_s_address1, grp_KeccakF1600_StatePermute_fu_650_this_s_address1, grp_sample_eta_fu_679_this_s_address1, grp_shake_absorb_3_fu_752_this_s_address1, grp_shake_squeeze_fu_761_this_s_address1, ap_CS_fsm_state11, ap_CS_fsm_state26, ap_CS_fsm_state64, ap_CS_fsm_state68, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            spu_s_address1 <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            spu_s_address1 <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_address1 <= grp_shake_squeeze_fu_761_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_address1 <= grp_shake_absorb_3_fu_752_this_s_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_address1 <= grp_sample_eta_fu_679_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_address1 <= grp_KeccakF1600_StatePermute_fu_650_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_address1 <= grp_shake_absorb_fu_640_this_s_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_address1 <= grp_shake_squeeze_2_fu_626_this_s_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_address1 <= grp_shake_absorb_1_fu_585_this_s_address1;
        else 
            spu_s_address1 <= "XXXXX";
        end if; 
    end process;


    spu_s_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state9, ap_CS_fsm_state43, ap_CS_fsm_state46, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state23, ap_CS_fsm_state36, ap_CS_fsm_state65, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_ce0, grp_shake_absorb_1_fu_585_this_s_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done, grp_shake_squeeze_2_fu_626_this_s_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_ce0, grp_shake_absorb_fu_640_this_s_ce0, grp_KeccakF1600_StatePermute_fu_650_this_s_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_ce0, grp_sample_eta_fu_679_this_s_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_ce0, grp_shake_absorb_3_fu_752_this_s_ce0, grp_shake_squeeze_fu_761_this_s_ce0, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state64, ap_CS_fsm_state68, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            spu_s_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_ce0 <= grp_shake_squeeze_fu_761_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_ce0 <= grp_shake_absorb_3_fu_752_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            spu_s_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_ce0 <= grp_sample_eta_fu_679_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            spu_s_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_417_2_fu_657_spu_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_ce0 <= grp_KeccakF1600_StatePermute_fu_650_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_ce0 <= grp_shake_absorb_fu_640_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            spu_s_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_ce0 <= grp_shake_squeeze_2_fu_626_this_s_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_ce0 <= grp_shake_absorb_1_fu_585_this_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            spu_s_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_ce0;
        else 
            spu_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    spu_s_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state36, ap_CS_fsm_state65, grp_shake_absorb_1_fu_585_this_s_ce1, grp_shake_squeeze_2_fu_626_this_s_ce1, grp_shake_absorb_fu_640_this_s_ce1, grp_KeccakF1600_StatePermute_fu_650_this_s_ce1, grp_sample_eta_fu_679_this_s_ce1, grp_shake_absorb_3_fu_752_this_s_ce1, grp_shake_squeeze_fu_761_this_s_ce1, ap_CS_fsm_state11, ap_CS_fsm_state26, ap_CS_fsm_state64, ap_CS_fsm_state68, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            spu_s_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_ce1 <= grp_shake_squeeze_fu_761_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_ce1 <= grp_shake_absorb_3_fu_752_this_s_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_ce1 <= grp_sample_eta_fu_679_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_ce1 <= grp_KeccakF1600_StatePermute_fu_650_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_ce1 <= grp_shake_absorb_fu_640_this_s_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_ce1 <= grp_shake_squeeze_2_fu_626_this_s_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_ce1 <= grp_shake_absorb_1_fu_585_this_s_ce1;
        else 
            spu_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    spu_s_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state9, ap_CS_fsm_state43, ap_CS_fsm_state46, ap_CS_fsm_state19, ap_CS_fsm_state23, ap_CS_fsm_state36, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_d0, grp_shake_absorb_1_fu_585_this_s_d0, grp_shake_squeeze_2_fu_626_this_s_d0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_d0, grp_shake_absorb_fu_640_this_s_d0, grp_KeccakF1600_StatePermute_fu_650_this_s_d0, grp_sample_eta_fu_679_this_s_d0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_d0, grp_shake_absorb_3_fu_752_this_s_d0, grp_shake_squeeze_fu_761_this_s_d0, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state26, ap_CS_fsm_state64, ap_CS_fsm_state68, xor_ln402_fu_923_p2, grp_fu_800_p2, ap_CS_fsm_state21, xor_ln402_1_fu_1037_p2, ap_CS_fsm_state66, xor_ln402_2_fu_1236_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            spu_s_d0 <= xor_ln402_2_fu_1236_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            spu_s_d0 <= xor_ln402_1_fu_1037_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            spu_s_d0 <= grp_fu_800_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            spu_s_d0 <= xor_ln402_fu_923_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_d0 <= grp_shake_squeeze_fu_761_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_d0 <= grp_shake_absorb_3_fu_752_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            spu_s_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_d0 <= grp_sample_eta_fu_679_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_d0 <= grp_KeccakF1600_StatePermute_fu_650_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_d0 <= grp_shake_absorb_fu_640_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            spu_s_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_d0 <= grp_shake_squeeze_2_fu_626_this_s_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_d0 <= grp_shake_absorb_1_fu_585_this_s_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            spu_s_d0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_d0;
        else 
            spu_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    spu_s_d1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state36, grp_shake_absorb_1_fu_585_this_s_d1, grp_shake_squeeze_2_fu_626_this_s_d1, grp_shake_absorb_fu_640_this_s_d1, grp_KeccakF1600_StatePermute_fu_650_this_s_d1, grp_sample_eta_fu_679_this_s_d1, grp_shake_absorb_3_fu_752_this_s_d1, grp_shake_squeeze_fu_761_this_s_d1, ap_CS_fsm_state11, ap_CS_fsm_state26, ap_CS_fsm_state64, ap_CS_fsm_state68, grp_fu_800_p2, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            spu_s_d1 <= grp_fu_800_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_d1 <= grp_shake_squeeze_fu_761_this_s_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_d1 <= grp_shake_absorb_3_fu_752_this_s_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_d1 <= grp_sample_eta_fu_679_this_s_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_d1 <= grp_KeccakF1600_StatePermute_fu_650_this_s_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_d1 <= grp_shake_absorb_fu_640_this_s_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_d1 <= grp_shake_squeeze_2_fu_626_this_s_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_d1 <= grp_shake_absorb_1_fu_585_this_s_d1;
        else 
            spu_s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    spu_s_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state9, ap_CS_fsm_state43, ap_CS_fsm_state46, ap_CS_fsm_state19, ap_CS_fsm_state23, ap_CS_fsm_state36, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_we0, grp_shake_absorb_1_fu_585_this_s_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done, grp_shake_squeeze_2_fu_626_this_s_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_we0, grp_shake_absorb_fu_640_this_s_we0, grp_KeccakF1600_StatePermute_fu_650_this_s_we0, grp_sample_eta_fu_679_this_s_we0, grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_we0, grp_shake_absorb_3_fu_752_this_s_we0, grp_shake_squeeze_fu_761_this_s_we0, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state26, ap_CS_fsm_state64, ap_CS_fsm_state68, ap_CS_fsm_state21, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            spu_s_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_we0 <= grp_shake_squeeze_fu_761_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_we0 <= grp_shake_absorb_3_fu_752_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            spu_s_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_110_fu_714_spu_s_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_we0 <= grp_sample_eta_fu_679_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_we0 <= grp_KeccakF1600_StatePermute_fu_650_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_we0 <= grp_shake_absorb_fu_640_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            spu_s_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_16_fu_635_spu_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_we0 <= grp_shake_squeeze_2_fu_626_this_s_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_we0 <= grp_shake_absorb_1_fu_585_this_s_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            spu_s_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_321_1_fu_572_spu_s_we0;
        else 
            spu_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    spu_s_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state19, ap_CS_fsm_state36, grp_shake_absorb_1_fu_585_this_s_we1, grp_shake_squeeze_2_fu_626_this_s_we1, grp_shake_absorb_fu_640_this_s_we1, grp_KeccakF1600_StatePermute_fu_650_this_s_we1, grp_sample_eta_fu_679_this_s_we1, grp_shake_absorb_3_fu_752_this_s_we1, grp_shake_squeeze_fu_761_this_s_we1, ap_CS_fsm_state11, ap_CS_fsm_state26, ap_CS_fsm_state64, ap_CS_fsm_state68, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            spu_s_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            spu_s_we1 <= grp_shake_squeeze_fu_761_this_s_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            spu_s_we1 <= grp_shake_absorb_3_fu_752_this_s_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            spu_s_we1 <= grp_sample_eta_fu_679_this_s_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            spu_s_we1 <= grp_KeccakF1600_StatePermute_fu_650_this_s_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            spu_s_we1 <= grp_shake_absorb_fu_640_this_s_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            spu_s_we1 <= grp_shake_squeeze_2_fu_626_this_s_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            spu_s_we1 <= grp_shake_absorb_1_fu_585_this_s_we1;
        else 
            spu_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

    this_pMem_addr_2_reg_1328 <= ap_const_lv64_9A(8 - 1 downto 0);
    this_pMem_addr_4_reg_1345 <= ap_const_lv64_9C(8 - 1 downto 0);
    this_s_addr_1_reg_1333 <= ap_const_lv64_10(5 - 1 downto 0);

    tmp1_address0_assign_proc : process(ap_CS_fsm_state30, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_address0, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            tmp1_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            tmp1_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_address0;
        else 
            tmp1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tmp1_ce0_assign_proc : process(ap_CS_fsm_state30, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_ce0, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            tmp1_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_1_fu_671_tmp1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            tmp1_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_ce0;
        else 
            tmp1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp1_we0_assign_proc : process(ap_CS_fsm_state30, grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            tmp1_we0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_503_2_fu_663_tmp1_we0;
        else 
            tmp1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp2_address0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state38, grp_sample_eta_fu_679_a_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_address0, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            tmp2_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            tmp2_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            tmp2_address0 <= grp_sample_eta_fu_679_a_address0;
        else 
            tmp2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tmp2_ce0_assign_proc : process(ap_CS_fsm_state36, ap_CS_fsm_state38, grp_sample_eta_fu_679_a_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_ce0, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            tmp2_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_18_fu_698_tmp2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            tmp2_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_17_fu_690_tmp2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            tmp2_ce0 <= grp_sample_eta_fu_679_a_ce0;
        else 
            tmp2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp2_we0_assign_proc : process(ap_CS_fsm_state36, grp_sample_eta_fu_679_a_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            tmp2_we0 <= grp_sample_eta_fu_679_a_we0;
        else 
            tmp2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp3_address0_assign_proc : process(ap_CS_fsm_state43, grp_sample_eta_fu_679_a_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_address0, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            tmp3_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            tmp3_address0 <= grp_sample_eta_fu_679_a_address0;
        else 
            tmp3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tmp3_ce0_assign_proc : process(ap_CS_fsm_state43, grp_sample_eta_fu_679_a_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_ce0, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            tmp3_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_95_19_fu_719_tmp3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            tmp3_ce0 <= grp_sample_eta_fu_679_a_ce0;
        else 
            tmp3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp3_we0_assign_proc : process(ap_CS_fsm_state43, grp_sample_eta_fu_679_a_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            tmp3_we0 <= grp_sample_eta_fu_679_a_we0;
        else 
            tmp3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_1058_p4 <= ctr_reg_449(31 downto 8);

    tr_address0_assign_proc : process(grp_shake_squeeze_fu_761_out_r_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_address0, ap_CS_fsm_state68, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            tr_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            tr_address0 <= grp_shake_squeeze_fu_761_out_r_address0;
        else 
            tr_address0 <= "XXXXXX";
        end if; 
    end process;


    tr_ce0_assign_proc : process(grp_shake_squeeze_fu_761_out_r_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_ce0, ap_CS_fsm_state68, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            tr_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_62_8_fu_769_tr_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            tr_ce0 <= grp_shake_squeeze_fu_761_out_r_ce0;
        else 
            tr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tr_ce1_assign_proc : process(grp_shake_squeeze_fu_761_out_r_ce1, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            tr_ce1 <= grp_shake_squeeze_fu_761_out_r_ce1;
        else 
            tr_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tr_we0_assign_proc : process(grp_shake_squeeze_fu_761_out_r_we0, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            tr_we0 <= grp_shake_squeeze_fu_761_out_r_we0;
        else 
            tr_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tr_we1_assign_proc : process(grp_shake_squeeze_fu_761_out_r_we1, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            tr_we1 <= grp_shake_squeeze_fu_761_out_r_we1;
        else 
            tr_we1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln402_1_fu_1016_p1 <= spu_pos_2_reg_1400(3 - 1 downto 0);
    trunc_ln402_fu_901_p1 <= reg_824(3 - 1 downto 0);
    trunc_ln500_fu_1054_p1 <= ctr_reg_449(8 - 1 downto 0);
    xor_ln402_1_fu_1037_p2 <= (spu_s_q0 xor shl_ln402_1_fu_1031_p2);
    xor_ln402_2_fu_1236_p2 <= (spu_s_q1 xor ap_const_lv64_1F);
    xor_ln402_fu_923_p2 <= (spu_s_q0 xor shl_ln402_fu_917_p2);

    zetas_address0_assign_proc : process(ap_CS_fsm_state5, grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_address0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            zetas_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            zetas_address0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_address0;
        else 
            zetas_address0 <= "XXXXXXXX";
        end if; 
    end process;


    zetas_ce0_assign_proc : process(ap_CS_fsm_state5, grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_ce0, grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            zetas_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_48_5_VITIS_LOOP_49_6_fu_599_zetas_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            zetas_ce0 <= grp_dpu_keygen_Pipeline_VITIS_LOOP_42_3_VITIS_LOOP_43_4_fu_578_zetas_ce0;
        else 
            zetas_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln31_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_1_reg_1386),4));
    zext_ln33_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_fu_974_p3),4));
    zext_ln34_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln34_fu_1074_p2),5));
    zext_ln38_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_5_fu_320),4));
    zext_ln39_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_6_reg_1449),6));
    zext_ln402_1_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_7_reg_1318),64));
    zext_ln402_2_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln402_2_fu_1019_p3),64));
    zext_ln402_3_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_s_reg_1405),64));
    zext_ln402_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_905_p3),64));
    zext_ln43_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_fu_324),4));
    zext_ln44_1_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_fu_324),5));
end behav;
