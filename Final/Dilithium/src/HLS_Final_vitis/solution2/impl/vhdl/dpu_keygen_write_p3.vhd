-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dpu_keygen_write_p3 is
port (
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_pMem_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    this_pMem_ce0 : OUT STD_LOGIC;
    this_pMem_we0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
    this_pMem_d0 : OUT STD_LOGIC_VECTOR (8191 downto 0);
    p_read : IN STD_LOGIC_VECTOR (8191 downto 0);
    addr : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of dpu_keygen_write_p3 is 
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv1024_lc_5 : STD_LOGIC_VECTOR (1023 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1024_lc_10 : STD_LOGIC_VECTOR (1023 downto

attribute shreg_extract : string;
    signal idxprom2_fu_50_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    ap_ready <= ap_start;
    idxprom2_fu_50_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addr),64));
    this_pMem_address0 <= idxprom2_fu_50_p1(8 - 1 downto 0);

    this_pMem_ce0_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            this_pMem_ce0 <= ap_const_logic_1;
        else 
            this_pMem_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    this_pMem_d0 <= p_read;

    this_pMem_we0_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            this_pMem_we0 <= ap_const_lv1024_lc_10;
        else 
            this_pMem_we0 <= ap_const_lv1024_lc_5;
        end if; 
    end process;

end behav;
