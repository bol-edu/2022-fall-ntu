#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("X_R_TDATA", 32, hls_in, 0, "axis", "in_data", 1),
	Port_Property("X_R_TVALID", 1, hls_in, 0, "axis", "in_vld", 1),
	Port_Property("X_R_TREADY", 1, hls_out, 0, "axis", "in_acc", 1),
	Port_Property("X_I_TDATA", 32, hls_in, 1, "axis", "in_data", 1),
	Port_Property("X_I_TVALID", 1, hls_in, 1, "axis", "in_vld", 1),
	Port_Property("X_I_TREADY", 1, hls_out, 1, "axis", "in_acc", 1),
	Port_Property("OUT_R_1_address0", 8, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("OUT_R_1_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("OUT_R_1_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("OUT_R_1_d0", 32, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("OUT_R_1_address1", 8, hls_out, 3, "ap_memory", "MemPortADDR2", 1),
	Port_Property("OUT_R_1_ce1", 1, hls_out, 3, "ap_memory", "MemPortCE2", 1),
	Port_Property("OUT_R_1_we1", 1, hls_out, 3, "ap_memory", "MemPortWE2", 1),
	Port_Property("OUT_R_1_d1", 32, hls_out, 3, "ap_memory", "MemPortDIN2", 1),
	Port_Property("OUT_R_2_address0", 8, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("OUT_R_2_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("OUT_R_2_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("OUT_R_2_d0", 32, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("OUT_R_2_address1", 8, hls_out, 4, "ap_memory", "MemPortADDR2", 1),
	Port_Property("OUT_R_2_ce1", 1, hls_out, 4, "ap_memory", "MemPortCE2", 1),
	Port_Property("OUT_R_2_we1", 1, hls_out, 4, "ap_memory", "MemPortWE2", 1),
	Port_Property("OUT_R_2_d1", 32, hls_out, 4, "ap_memory", "MemPortDIN2", 1),
	Port_Property("OUT_R_3_address0", 8, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("OUT_R_3_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("OUT_R_3_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("OUT_R_3_d0", 32, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("OUT_R_3_address1", 8, hls_out, 5, "ap_memory", "MemPortADDR2", 1),
	Port_Property("OUT_R_3_ce1", 1, hls_out, 5, "ap_memory", "MemPortCE2", 1),
	Port_Property("OUT_R_3_we1", 1, hls_out, 5, "ap_memory", "MemPortWE2", 1),
	Port_Property("OUT_R_3_d1", 32, hls_out, 5, "ap_memory", "MemPortDIN2", 1),
	Port_Property("OUT_I_1_address0", 8, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("OUT_I_1_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("OUT_I_1_we0", 1, hls_out, 7, "ap_memory", "mem_we", 1),
	Port_Property("OUT_I_1_d0", 32, hls_out, 7, "ap_memory", "mem_din", 1),
	Port_Property("OUT_I_1_address1", 8, hls_out, 7, "ap_memory", "MemPortADDR2", 1),
	Port_Property("OUT_I_1_ce1", 1, hls_out, 7, "ap_memory", "MemPortCE2", 1),
	Port_Property("OUT_I_1_we1", 1, hls_out, 7, "ap_memory", "MemPortWE2", 1),
	Port_Property("OUT_I_1_d1", 32, hls_out, 7, "ap_memory", "MemPortDIN2", 1),
	Port_Property("OUT_I_2_address0", 8, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("OUT_I_2_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("OUT_I_2_we0", 1, hls_out, 8, "ap_memory", "mem_we", 1),
	Port_Property("OUT_I_2_d0", 32, hls_out, 8, "ap_memory", "mem_din", 1),
	Port_Property("OUT_I_2_address1", 8, hls_out, 8, "ap_memory", "MemPortADDR2", 1),
	Port_Property("OUT_I_2_ce1", 1, hls_out, 8, "ap_memory", "MemPortCE2", 1),
	Port_Property("OUT_I_2_we1", 1, hls_out, 8, "ap_memory", "MemPortWE2", 1),
	Port_Property("OUT_I_2_d1", 32, hls_out, 8, "ap_memory", "MemPortDIN2", 1),
	Port_Property("OUT_I_3_address0", 8, hls_out, 9, "ap_memory", "mem_address", 1),
	Port_Property("OUT_I_3_ce0", 1, hls_out, 9, "ap_memory", "mem_ce", 1),
	Port_Property("OUT_I_3_we0", 1, hls_out, 9, "ap_memory", "mem_we", 1),
	Port_Property("OUT_I_3_d0", 32, hls_out, 9, "ap_memory", "mem_din", 1),
	Port_Property("OUT_I_3_address1", 8, hls_out, 9, "ap_memory", "MemPortADDR2", 1),
	Port_Property("OUT_I_3_ce1", 1, hls_out, 9, "ap_memory", "MemPortCE2", 1),
	Port_Property("OUT_I_3_we1", 1, hls_out, 9, "ap_memory", "MemPortWE2", 1),
	Port_Property("OUT_I_3_d1", 32, hls_out, 9, "ap_memory", "MemPortDIN2", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 12, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 12, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "dft";
