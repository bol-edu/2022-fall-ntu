// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_dft_Pipeline_DFT_Loop9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OUT_I_3_address0,
        OUT_I_3_ce0,
        OUT_I_3_we0,
        OUT_I_3_d0,
        OUT_I_3_address1,
        OUT_I_3_ce1,
        OUT_I_3_we1,
        OUT_I_3_d1,
        OUT_I_2_address0,
        OUT_I_2_ce0,
        OUT_I_2_we0,
        OUT_I_2_d0,
        OUT_I_2_address1,
        OUT_I_2_ce1,
        OUT_I_2_we1,
        OUT_I_2_d1,
        OUT_I_1_address0,
        OUT_I_1_ce0,
        OUT_I_1_we0,
        OUT_I_1_d0,
        OUT_I_1_address1,
        OUT_I_1_ce1,
        OUT_I_1_we1,
        OUT_I_1_d1,
        OUT_I_0_address0,
        OUT_I_0_ce0,
        OUT_I_0_we0,
        OUT_I_0_d0,
        OUT_R_3_address0,
        OUT_R_3_ce0,
        OUT_R_3_we0,
        OUT_R_3_d0,
        OUT_R_3_address1,
        OUT_R_3_ce1,
        OUT_R_3_we1,
        OUT_R_3_d1,
        OUT_R_2_address0,
        OUT_R_2_ce0,
        OUT_R_2_we0,
        OUT_R_2_d0,
        OUT_R_2_address1,
        OUT_R_2_ce1,
        OUT_R_2_we1,
        OUT_R_2_d1,
        OUT_R_1_address0,
        OUT_R_1_ce0,
        OUT_R_1_we0,
        OUT_R_1_d0,
        OUT_R_1_address1,
        OUT_R_1_ce1,
        OUT_R_1_we1,
        OUT_R_1_d1,
        OUT_R_0_address0,
        OUT_R_0_ce0,
        OUT_R_0_we0,
        OUT_R_0_d0,
        buf1_R_address0,
        buf1_R_ce0,
        buf1_R_q0,
        buf1_I_address0,
        buf1_I_ce0,
        buf1_I_q0,
        buf1_R_1_address0,
        buf1_R_1_ce0,
        buf1_R_1_q0,
        buf1_R_1_address1,
        buf1_R_1_ce1,
        buf1_R_1_q1,
        buf1_I_1_address0,
        buf1_I_1_ce0,
        buf1_I_1_q0,
        buf1_I_1_address1,
        buf1_I_1_ce1,
        buf1_I_1_q1,
        buf1_R_2_address0,
        buf1_R_2_ce0,
        buf1_R_2_q0,
        buf1_R_2_address1,
        buf1_R_2_ce1,
        buf1_R_2_q1,
        buf1_I_2_address0,
        buf1_I_2_ce0,
        buf1_I_2_q0,
        buf1_I_2_address1,
        buf1_I_2_ce1,
        buf1_I_2_q1,
        buf1_R_3_address0,
        buf1_R_3_ce0,
        buf1_R_3_q0,
        buf1_R_3_address1,
        buf1_R_3_ce1,
        buf1_R_3_q1,
        buf1_I_3_address0,
        buf1_I_3_ce0,
        buf1_I_3_q0,
        buf1_I_3_address1,
        buf1_I_3_ce1,
        buf1_I_3_q1,
        W_real_address0,
        W_real_ce0,
        W_real_q0,
        W_real_address1,
        W_real_ce1,
        W_real_q1,
        W_imag_address0,
        W_imag_ce0,
        W_imag_q0,
        W_imag_address1,
        W_imag_ce1,
        W_imag_q1,
        grp_fu_404_p_din0,
        grp_fu_404_p_din1,
        grp_fu_404_p_opcode,
        grp_fu_404_p_dout0,
        grp_fu_404_p_ce,
        grp_fu_408_p_din0,
        grp_fu_408_p_din1,
        grp_fu_408_p_opcode,
        grp_fu_408_p_dout0,
        grp_fu_408_p_ce,
        grp_fu_412_p_din0,
        grp_fu_412_p_din1,
        grp_fu_412_p_opcode,
        grp_fu_412_p_dout0,
        grp_fu_412_p_ce,
        grp_fu_416_p_din0,
        grp_fu_416_p_din1,
        grp_fu_416_p_opcode,
        grp_fu_416_p_dout0,
        grp_fu_416_p_ce,
        grp_fu_420_p_din0,
        grp_fu_420_p_din1,
        grp_fu_420_p_opcode,
        grp_fu_420_p_dout0,
        grp_fu_420_p_ce,
        grp_fu_424_p_din0,
        grp_fu_424_p_din1,
        grp_fu_424_p_opcode,
        grp_fu_424_p_dout0,
        grp_fu_424_p_ce,
        grp_fu_428_p_din0,
        grp_fu_428_p_din1,
        grp_fu_428_p_opcode,
        grp_fu_428_p_dout0,
        grp_fu_428_p_ce,
        grp_fu_432_p_din0,
        grp_fu_432_p_din1,
        grp_fu_432_p_opcode,
        grp_fu_432_p_dout0,
        grp_fu_432_p_ce,
        grp_fu_436_p_din0,
        grp_fu_436_p_din1,
        grp_fu_436_p_opcode,
        grp_fu_436_p_dout0,
        grp_fu_436_p_ce,
        grp_fu_440_p_din0,
        grp_fu_440_p_din1,
        grp_fu_440_p_opcode,
        grp_fu_440_p_dout0,
        grp_fu_440_p_ce,
        grp_fu_444_p_din0,
        grp_fu_444_p_din1,
        grp_fu_444_p_opcode,
        grp_fu_444_p_dout0,
        grp_fu_444_p_ce,
        grp_fu_448_p_din0,
        grp_fu_448_p_din1,
        grp_fu_448_p_opcode,
        grp_fu_448_p_dout0,
        grp_fu_448_p_ce,
        grp_fu_500_p_din0,
        grp_fu_500_p_din1,
        grp_fu_500_p_dout0,
        grp_fu_500_p_ce,
        grp_fu_504_p_din0,
        grp_fu_504_p_din1,
        grp_fu_504_p_dout0,
        grp_fu_504_p_ce,
        grp_fu_508_p_din0,
        grp_fu_508_p_din1,
        grp_fu_508_p_dout0,
        grp_fu_508_p_ce,
        grp_fu_512_p_din0,
        grp_fu_512_p_din1,
        grp_fu_512_p_dout0,
        grp_fu_512_p_ce,
        grp_fu_516_p_din0,
        grp_fu_516_p_din1,
        grp_fu_516_p_dout0,
        grp_fu_516_p_ce,
        grp_fu_520_p_din0,
        grp_fu_520_p_din1,
        grp_fu_520_p_dout0,
        grp_fu_520_p_ce,
        grp_fu_524_p_din0,
        grp_fu_524_p_din1,
        grp_fu_524_p_dout0,
        grp_fu_524_p_ce,
        grp_fu_528_p_din0,
        grp_fu_528_p_din1,
        grp_fu_528_p_dout0,
        grp_fu_528_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] OUT_I_3_address0;
output   OUT_I_3_ce0;
output   OUT_I_3_we0;
output  [31:0] OUT_I_3_d0;
output  [7:0] OUT_I_3_address1;
output   OUT_I_3_ce1;
output   OUT_I_3_we1;
output  [31:0] OUT_I_3_d1;
output  [7:0] OUT_I_2_address0;
output   OUT_I_2_ce0;
output   OUT_I_2_we0;
output  [31:0] OUT_I_2_d0;
output  [7:0] OUT_I_2_address1;
output   OUT_I_2_ce1;
output   OUT_I_2_we1;
output  [31:0] OUT_I_2_d1;
output  [7:0] OUT_I_1_address0;
output   OUT_I_1_ce0;
output   OUT_I_1_we0;
output  [31:0] OUT_I_1_d0;
output  [7:0] OUT_I_1_address1;
output   OUT_I_1_ce1;
output   OUT_I_1_we1;
output  [31:0] OUT_I_1_d1;
output  [7:0] OUT_I_0_address0;
output   OUT_I_0_ce0;
output   OUT_I_0_we0;
output  [31:0] OUT_I_0_d0;
output  [7:0] OUT_R_3_address0;
output   OUT_R_3_ce0;
output   OUT_R_3_we0;
output  [31:0] OUT_R_3_d0;
output  [7:0] OUT_R_3_address1;
output   OUT_R_3_ce1;
output   OUT_R_3_we1;
output  [31:0] OUT_R_3_d1;
output  [7:0] OUT_R_2_address0;
output   OUT_R_2_ce0;
output   OUT_R_2_we0;
output  [31:0] OUT_R_2_d0;
output  [7:0] OUT_R_2_address1;
output   OUT_R_2_ce1;
output   OUT_R_2_we1;
output  [31:0] OUT_R_2_d1;
output  [7:0] OUT_R_1_address0;
output   OUT_R_1_ce0;
output   OUT_R_1_we0;
output  [31:0] OUT_R_1_d0;
output  [7:0] OUT_R_1_address1;
output   OUT_R_1_ce1;
output   OUT_R_1_we1;
output  [31:0] OUT_R_1_d1;
output  [7:0] OUT_R_0_address0;
output   OUT_R_0_ce0;
output   OUT_R_0_we0;
output  [31:0] OUT_R_0_d0;
output  [7:0] buf1_R_address0;
output   buf1_R_ce0;
input  [31:0] buf1_R_q0;
output  [7:0] buf1_I_address0;
output   buf1_I_ce0;
input  [31:0] buf1_I_q0;
output  [7:0] buf1_R_1_address0;
output   buf1_R_1_ce0;
input  [31:0] buf1_R_1_q0;
output  [7:0] buf1_R_1_address1;
output   buf1_R_1_ce1;
input  [31:0] buf1_R_1_q1;
output  [7:0] buf1_I_1_address0;
output   buf1_I_1_ce0;
input  [31:0] buf1_I_1_q0;
output  [7:0] buf1_I_1_address1;
output   buf1_I_1_ce1;
input  [31:0] buf1_I_1_q1;
output  [7:0] buf1_R_2_address0;
output   buf1_R_2_ce0;
input  [31:0] buf1_R_2_q0;
output  [7:0] buf1_R_2_address1;
output   buf1_R_2_ce1;
input  [31:0] buf1_R_2_q1;
output  [7:0] buf1_I_2_address0;
output   buf1_I_2_ce0;
input  [31:0] buf1_I_2_q0;
output  [7:0] buf1_I_2_address1;
output   buf1_I_2_ce1;
input  [31:0] buf1_I_2_q1;
output  [7:0] buf1_R_3_address0;
output   buf1_R_3_ce0;
input  [31:0] buf1_R_3_q0;
output  [7:0] buf1_R_3_address1;
output   buf1_R_3_ce1;
input  [31:0] buf1_R_3_q1;
output  [7:0] buf1_I_3_address0;
output   buf1_I_3_ce0;
input  [31:0] buf1_I_3_q0;
output  [7:0] buf1_I_3_address1;
output   buf1_I_3_ce1;
input  [31:0] buf1_I_3_q1;
output  [8:0] W_real_address0;
output   W_real_ce0;
input  [31:0] W_real_q0;
output  [8:0] W_real_address1;
output   W_real_ce1;
input  [31:0] W_real_q1;
output  [8:0] W_imag_address0;
output   W_imag_ce0;
input  [31:0] W_imag_q0;
output  [8:0] W_imag_address1;
output   W_imag_ce1;
input  [31:0] W_imag_q1;
output  [31:0] grp_fu_404_p_din0;
output  [31:0] grp_fu_404_p_din1;
output  [1:0] grp_fu_404_p_opcode;
input  [31:0] grp_fu_404_p_dout0;
output   grp_fu_404_p_ce;
output  [31:0] grp_fu_408_p_din0;
output  [31:0] grp_fu_408_p_din1;
output  [1:0] grp_fu_408_p_opcode;
input  [31:0] grp_fu_408_p_dout0;
output   grp_fu_408_p_ce;
output  [31:0] grp_fu_412_p_din0;
output  [31:0] grp_fu_412_p_din1;
output  [1:0] grp_fu_412_p_opcode;
input  [31:0] grp_fu_412_p_dout0;
output   grp_fu_412_p_ce;
output  [31:0] grp_fu_416_p_din0;
output  [31:0] grp_fu_416_p_din1;
output  [1:0] grp_fu_416_p_opcode;
input  [31:0] grp_fu_416_p_dout0;
output   grp_fu_416_p_ce;
output  [31:0] grp_fu_420_p_din0;
output  [31:0] grp_fu_420_p_din1;
output  [1:0] grp_fu_420_p_opcode;
input  [31:0] grp_fu_420_p_dout0;
output   grp_fu_420_p_ce;
output  [31:0] grp_fu_424_p_din0;
output  [31:0] grp_fu_424_p_din1;
output  [0:0] grp_fu_424_p_opcode;
input  [31:0] grp_fu_424_p_dout0;
output   grp_fu_424_p_ce;
output  [31:0] grp_fu_428_p_din0;
output  [31:0] grp_fu_428_p_din1;
output  [0:0] grp_fu_428_p_opcode;
input  [31:0] grp_fu_428_p_dout0;
output   grp_fu_428_p_ce;
output  [31:0] grp_fu_432_p_din0;
output  [31:0] grp_fu_432_p_din1;
output  [1:0] grp_fu_432_p_opcode;
input  [31:0] grp_fu_432_p_dout0;
output   grp_fu_432_p_ce;
output  [31:0] grp_fu_436_p_din0;
output  [31:0] grp_fu_436_p_din1;
output  [1:0] grp_fu_436_p_opcode;
input  [31:0] grp_fu_436_p_dout0;
output   grp_fu_436_p_ce;
output  [31:0] grp_fu_440_p_din0;
output  [31:0] grp_fu_440_p_din1;
output  [1:0] grp_fu_440_p_opcode;
input  [31:0] grp_fu_440_p_dout0;
output   grp_fu_440_p_ce;
output  [31:0] grp_fu_444_p_din0;
output  [31:0] grp_fu_444_p_din1;
output  [1:0] grp_fu_444_p_opcode;
input  [31:0] grp_fu_444_p_dout0;
output   grp_fu_444_p_ce;
output  [31:0] grp_fu_448_p_din0;
output  [31:0] grp_fu_448_p_din1;
output  [1:0] grp_fu_448_p_opcode;
input  [31:0] grp_fu_448_p_dout0;
output   grp_fu_448_p_ce;
output  [31:0] grp_fu_500_p_din0;
output  [31:0] grp_fu_500_p_din1;
input  [31:0] grp_fu_500_p_dout0;
output   grp_fu_500_p_ce;
output  [31:0] grp_fu_504_p_din0;
output  [31:0] grp_fu_504_p_din1;
input  [31:0] grp_fu_504_p_dout0;
output   grp_fu_504_p_ce;
output  [31:0] grp_fu_508_p_din0;
output  [31:0] grp_fu_508_p_din1;
input  [31:0] grp_fu_508_p_dout0;
output   grp_fu_508_p_ce;
output  [31:0] grp_fu_512_p_din0;
output  [31:0] grp_fu_512_p_din1;
input  [31:0] grp_fu_512_p_dout0;
output   grp_fu_512_p_ce;
output  [31:0] grp_fu_516_p_din0;
output  [31:0] grp_fu_516_p_din1;
input  [31:0] grp_fu_516_p_dout0;
output   grp_fu_516_p_ce;
output  [31:0] grp_fu_520_p_din0;
output  [31:0] grp_fu_520_p_din1;
input  [31:0] grp_fu_520_p_dout0;
output   grp_fu_520_p_ce;
output  [31:0] grp_fu_524_p_din0;
output  [31:0] grp_fu_524_p_din1;
input  [31:0] grp_fu_524_p_dout0;
output   grp_fu_524_p_ce;
output  [31:0] grp_fu_528_p_din0;
output  [31:0] grp_fu_528_p_din1;
input  [31:0] grp_fu_528_p_dout0;
output   grp_fu_528_p_ce;

reg ap_idle;
reg OUT_I_3_ce0;
reg OUT_I_3_we0;
reg OUT_I_3_ce1;
reg OUT_I_3_we1;
reg OUT_I_2_ce0;
reg OUT_I_2_we0;
reg OUT_I_2_ce1;
reg OUT_I_2_we1;
reg OUT_I_1_ce0;
reg OUT_I_1_we0;
reg OUT_I_1_ce1;
reg OUT_I_1_we1;
reg[7:0] OUT_I_0_address0;
reg OUT_I_0_ce0;
reg OUT_I_0_we0;
reg[31:0] OUT_I_0_d0;
reg OUT_R_3_ce0;
reg OUT_R_3_we0;
reg OUT_R_3_ce1;
reg OUT_R_3_we1;
reg OUT_R_2_ce0;
reg OUT_R_2_we0;
reg OUT_R_2_ce1;
reg OUT_R_2_we1;
reg OUT_R_1_ce0;
reg OUT_R_1_we0;
reg OUT_R_1_ce1;
reg OUT_R_1_we1;
reg[7:0] OUT_R_0_address0;
reg OUT_R_0_ce0;
reg OUT_R_0_we0;
reg[31:0] OUT_R_0_d0;
reg[7:0] buf1_R_address0;
reg buf1_R_ce0;
reg[7:0] buf1_I_address0;
reg buf1_I_ce0;
reg buf1_R_1_ce0;
reg buf1_R_1_ce1;
reg buf1_I_1_ce0;
reg buf1_I_1_ce1;
reg buf1_R_2_ce0;
reg buf1_R_2_ce1;
reg buf1_I_2_ce0;
reg buf1_I_2_ce1;
reg buf1_R_3_ce0;
reg buf1_R_3_ce1;
reg buf1_I_3_ce0;
reg buf1_I_3_ce1;
reg[8:0] W_real_address0;
reg W_real_ce0;
reg[8:0] W_real_address1;
reg W_real_ce1;
reg[8:0] W_imag_address0;
reg W_imag_ce0;
reg[8:0] W_imag_address1;
reg W_imag_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_state30_pp0_stage1_iter14;
wire    ap_block_state32_pp0_stage1_iter15;
wire    ap_block_state34_pp0_stage1_iter16;
wire    ap_block_state36_pp0_stage1_iter17;
wire    ap_block_state38_pp0_stage1_iter18;
wire    ap_block_state40_pp0_stage1_iter19;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln68_reg_884;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_646;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_state31_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
wire    ap_block_state35_pp0_stage0_iter17;
wire    ap_block_state37_pp0_stage0_iter18;
wire    ap_block_state39_pp0_stage0_iter19;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_650;
reg   [31:0] reg_654;
reg   [31:0] reg_658;
reg   [31:0] reg_662;
reg   [31:0] reg_666;
reg   [9:0] i_18_0_load_reg_879;
wire   [0:0] icmp_ln68_fu_678_p2;
wire   [8:0] empty_20_fu_684_p1;
reg   [8:0] empty_20_reg_888;
wire   [7:0] lshr_ln77_s_fu_688_p4;
reg   [7:0] lshr_ln77_s_reg_895;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter1_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter2_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter3_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter4_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter5_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter6_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter7_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter8_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter9_reg;
reg   [7:0] lshr_ln77_s_reg_895_pp0_iter10_reg;
wire   [7:0] xor_ln79_fu_698_p2;
reg   [7:0] xor_ln79_reg_900;
wire   [6:0] lshr_ln77_1_fu_716_p4;
reg   [6:0] lshr_ln77_1_reg_915;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter1_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter2_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter3_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter4_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter5_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter6_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter7_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter8_reg;
reg   [6:0] lshr_ln77_1_reg_915_pp0_iter9_reg;
wire   [63:0] zext_ln79_1_fu_734_p1;
reg   [63:0] zext_ln79_1_reg_920;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter1_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter2_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter3_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter4_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter5_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter6_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter7_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter8_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter9_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter10_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter11_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter12_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter13_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter14_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter15_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter16_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter17_reg;
reg   [63:0] zext_ln79_1_reg_920_pp0_iter18_reg;
wire   [63:0] zext_ln79_fu_744_p1;
reg   [63:0] zext_ln79_reg_960;
reg   [63:0] zext_ln79_reg_960_pp0_iter1_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter2_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter3_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter4_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter5_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter6_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter7_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter8_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter9_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter10_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter11_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter12_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter13_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter14_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter15_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter16_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter17_reg;
reg   [63:0] zext_ln79_reg_960_pp0_iter18_reg;
reg   [31:0] W_real_load_1_reg_976;
reg   [31:0] W_imag_load_1_reg_982;
reg   [31:0] buf1_R_1_load_1_reg_988;
reg   [31:0] buf1_I_1_load_1_reg_994;
reg   [31:0] buf1_R_2_load_1_reg_1010;
reg   [31:0] buf1_I_2_load_1_reg_1016;
reg   [31:0] buf1_R_3_load_1_reg_1032;
reg   [31:0] buf1_I_3_load_1_reg_1038;
reg   [31:0] buf1_R_load_1_reg_1054;
reg   [31:0] buf1_I_load_1_reg_1060;
reg   [31:0] W_real_load_2_reg_1066;
reg   [31:0] W_imag_load_2_reg_1072;
reg   [31:0] W_real_load_3_reg_1078;
reg   [31:0] W_imag_load_3_reg_1084;
reg   [31:0] W_real_load_reg_1090;
reg   [31:0] W_imag_load_reg_1096;
reg   [31:0] mul22_i8_1_reg_1102;
reg   [31:0] mul23_i9_1_reg_1107;
reg   [31:0] mul24_i8_1_reg_1112;
reg   [31:0] mul25_i9_1_reg_1117;
reg   [31:0] mul22_i8_2_reg_1122;
reg   [31:0] mul23_i9_2_reg_1127;
reg   [31:0] mul24_i8_2_reg_1132;
reg   [31:0] mul25_i9_2_reg_1137;
reg   [31:0] mul22_i8_3_reg_1142;
reg   [31:0] mul23_i9_3_reg_1147;
reg   [31:0] mul24_i8_3_reg_1152;
reg   [31:0] mul25_i9_3_reg_1157;
reg   [31:0] mul22_i8_reg_1162;
reg   [31:0] mul23_i9_reg_1167;
reg   [31:0] mul24_i8_reg_1172;
reg   [31:0] mul25_i9_reg_1177;
wire   [63:0] zext_ln77_1_fu_786_p1;
reg   [63:0] zext_ln77_1_reg_1182;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter11_reg;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter12_reg;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter13_reg;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter14_reg;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter15_reg;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter16_reg;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter17_reg;
reg   [63:0] zext_ln77_1_reg_1182_pp0_iter18_reg;
reg   [31:0] buf1_R_1_load_reg_1206;
reg   [31:0] buf1_I_1_load_reg_1212;
wire   [63:0] zext_ln77_fu_791_p1;
reg   [63:0] zext_ln77_reg_1218;
reg   [63:0] zext_ln77_reg_1218_pp0_iter12_reg;
reg   [63:0] zext_ln77_reg_1218_pp0_iter13_reg;
reg   [63:0] zext_ln77_reg_1218_pp0_iter14_reg;
reg   [63:0] zext_ln77_reg_1218_pp0_iter15_reg;
reg   [63:0] zext_ln77_reg_1218_pp0_iter16_reg;
reg   [63:0] zext_ln77_reg_1218_pp0_iter17_reg;
reg   [63:0] zext_ln77_reg_1218_pp0_iter18_reg;
reg   [63:0] zext_ln77_reg_1218_pp0_iter19_reg;
reg   [31:0] t_R_9_1_reg_1234;
reg   [31:0] t_I_9_1_reg_1240;
reg   [31:0] buf1_R_load_reg_1266;
reg   [31:0] buf1_I_load_reg_1272;
reg   [31:0] buf1_R_2_load_reg_1278;
reg   [31:0] buf1_I_2_load_reg_1284;
reg   [31:0] t_R_9_2_reg_1290;
reg   [31:0] t_I_9_2_reg_1296;
reg   [31:0] buf1_R_3_load_reg_1302;
reg   [31:0] buf1_I_3_load_reg_1308;
reg   [31:0] t_R_9_3_reg_1314;
reg   [31:0] t_I_9_3_reg_1320;
reg   [31:0] t_R_9_reg_1326;
reg   [31:0] t_I_9_reg_1332;
reg   [31:0] add33_i9_3_reg_1338;
reg   [31:0] add36_i9_3_reg_1343;
reg   [31:0] add33_i9_reg_1348;
reg   [31:0] add36_i9_reg_1353;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln72_1_fu_710_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln72_2_fu_754_p1;
wire   [63:0] zext_ln72_3_fu_765_p1;
wire   [63:0] zext_ln72_fu_781_p1;
reg   [9:0] i_18_0_fu_96;
wire   [9:0] add_ln68_fu_771_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_18_0_load;
wire   [31:0] bitcast_ln85_fu_854_p1;
wire   [31:0] bitcast_ln87_fu_864_p1;
wire   [31:0] bitcast_ln86_fu_859_p1;
wire   [31:0] bitcast_ln88_fu_868_p1;
reg   [31:0] grp_fu_566_p0;
reg   [31:0] grp_fu_566_p1;
reg   [31:0] grp_fu_570_p0;
reg   [31:0] grp_fu_570_p1;
reg   [31:0] grp_fu_574_p0;
reg   [31:0] grp_fu_574_p1;
reg   [31:0] grp_fu_578_p0;
reg   [31:0] grp_fu_578_p1;
reg   [31:0] grp_fu_582_p0;
reg   [31:0] grp_fu_582_p1;
reg   [31:0] grp_fu_586_p0;
reg   [31:0] grp_fu_586_p1;
reg   [31:0] grp_fu_590_p0;
reg   [31:0] grp_fu_590_p1;
reg   [31:0] grp_fu_594_p0;
reg   [31:0] grp_fu_594_p1;
reg   [31:0] grp_fu_598_p0;
reg   [31:0] grp_fu_598_p1;
reg   [31:0] grp_fu_602_p0;
reg   [31:0] grp_fu_602_p1;
reg   [31:0] grp_fu_606_p0;
reg   [31:0] grp_fu_606_p1;
reg   [31:0] grp_fu_610_p0;
reg   [31:0] grp_fu_610_p1;
reg   [31:0] grp_fu_614_p0;
reg   [31:0] grp_fu_614_p1;
reg   [31:0] grp_fu_618_p0;
reg   [31:0] grp_fu_618_p1;
reg   [31:0] grp_fu_622_p0;
reg   [31:0] grp_fu_622_p1;
reg   [31:0] grp_fu_626_p0;
reg   [31:0] grp_fu_626_p1;
reg   [31:0] grp_fu_630_p0;
reg   [31:0] grp_fu_630_p1;
reg   [31:0] grp_fu_634_p0;
reg   [31:0] grp_fu_634_p1;
reg   [31:0] grp_fu_638_p0;
reg   [31:0] grp_fu_638_p1;
reg   [31:0] grp_fu_642_p0;
reg   [31:0] grp_fu_642_p1;
wire   [8:0] or_ln68_fu_704_p2;
wire   [7:0] zext_ln79_s_fu_726_p3;
wire   [8:0] or_ln68_1_fu_749_p2;
wire   [8:0] or_ln68_2_fu_760_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to19;
reg    ap_block_pp0;
wire    ap_enable_operation_581;
reg    ap_enable_state37_pp0_iter18_stage0;
wire    ap_enable_operation_587;
wire    ap_enable_operation_583;
wire    ap_enable_operation_589;
wire    ap_enable_operation_605;
reg    ap_enable_state38_pp0_iter18_stage1;
wire    ap_enable_operation_611;
wire    ap_enable_operation_607;
wire    ap_enable_operation_613;
wire    ap_enable_operation_617;
wire    ap_enable_operation_623;
wire    ap_enable_operation_619;
wire    ap_enable_operation_625;
wire    ap_enable_operation_629;
reg    ap_enable_state39_pp0_iter19_stage0;
wire    ap_enable_operation_637;
reg    ap_enable_state40_pp0_iter19_stage1;
wire    ap_enable_operation_631;
wire    ap_enable_operation_639;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_18_0_fu_96 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln68_reg_884 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        i_18_0_fu_96 <= add_ln68_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln68_reg_884 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        W_imag_load_1_reg_982 <= W_imag_q1;
        W_real_load_1_reg_976 <= W_real_q1;
        buf1_I_1_load_1_reg_994 <= buf1_I_1_q1;
        buf1_I_2_load_1_reg_1016 <= buf1_I_2_q1;
        buf1_I_3_load_1_reg_1038 <= buf1_I_3_q1;
        buf1_R_1_load_1_reg_988 <= buf1_R_1_q1;
        buf1_R_2_load_1_reg_1010 <= buf1_R_2_q1;
        buf1_R_3_load_1_reg_1032 <= buf1_R_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        W_imag_load_2_reg_1072 <= W_imag_q1;
        W_imag_load_3_reg_1084 <= W_imag_q0;
        W_real_load_2_reg_1066 <= W_real_q1;
        W_real_load_3_reg_1078 <= W_real_q0;
        buf1_I_load_1_reg_1060 <= buf1_I_q0;
        buf1_R_load_1_reg_1054 <= buf1_R_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        W_imag_load_reg_1096 <= W_imag_q0;
        W_real_load_reg_1090 <= W_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add33_i9_3_reg_1338 <= grp_fu_444_p_dout0;
        add36_i9_3_reg_1343 <= grp_fu_448_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add33_i9_reg_1348 <= grp_fu_444_p_dout0;
        add36_i9_reg_1353 <= grp_fu_448_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        zext_ln79_reg_960_pp0_iter10_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter9_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter11_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter10_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter12_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter11_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter13_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter12_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter14_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter13_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter15_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter14_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter16_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter15_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter17_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter16_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter18_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter17_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter1_reg[7 : 0] <= zext_ln79_reg_960[7 : 0];
        zext_ln79_reg_960_pp0_iter2_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter1_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter3_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter2_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter4_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter3_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter5_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter4_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter6_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter5_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter7_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter6_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter8_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter7_reg[7 : 0];
        zext_ln79_reg_960_pp0_iter9_reg[7 : 0] <= zext_ln79_reg_960_pp0_iter8_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf1_I_1_load_reg_1212 <= buf1_I_1_q0;
        buf1_R_1_load_reg_1206 <= buf1_R_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        buf1_I_2_load_reg_1284 <= buf1_I_2_q0;
        buf1_I_3_load_reg_1308 <= buf1_I_3_q0;
        buf1_I_load_reg_1272 <= buf1_I_q0;
        buf1_R_2_load_reg_1278 <= buf1_R_2_q0;
        buf1_R_3_load_reg_1302 <= buf1_R_3_q0;
        buf1_R_load_reg_1266 <= buf1_R_q0;
        t_I_9_2_reg_1296 <= grp_fu_408_p_dout0;
        t_I_9_3_reg_1320 <= grp_fu_416_p_dout0;
        t_R_9_2_reg_1290 <= grp_fu_404_p_dout0;
        t_R_9_3_reg_1314 <= grp_fu_412_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_20_reg_888 <= empty_20_fu_684_p1;
        lshr_ln77_1_reg_915 <= {{ap_sig_allocacmp_i_18_0_load[8:2]}};
        lshr_ln77_s_reg_895 <= {{ap_sig_allocacmp_i_18_0_load[9:2]}};
        xor_ln79_reg_900 <= xor_ln79_fu_698_p2;
        zext_ln79_1_reg_920[6 : 0] <= zext_ln79_1_fu_734_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_18_0_load_reg_879 <= ap_sig_allocacmp_i_18_0_load;
        icmp_ln68_reg_884 <= icmp_ln68_fu_678_p2;
        lshr_ln77_1_reg_915_pp0_iter1_reg <= lshr_ln77_1_reg_915;
        lshr_ln77_1_reg_915_pp0_iter2_reg <= lshr_ln77_1_reg_915_pp0_iter1_reg;
        lshr_ln77_1_reg_915_pp0_iter3_reg <= lshr_ln77_1_reg_915_pp0_iter2_reg;
        lshr_ln77_1_reg_915_pp0_iter4_reg <= lshr_ln77_1_reg_915_pp0_iter3_reg;
        lshr_ln77_1_reg_915_pp0_iter5_reg <= lshr_ln77_1_reg_915_pp0_iter4_reg;
        lshr_ln77_1_reg_915_pp0_iter6_reg <= lshr_ln77_1_reg_915_pp0_iter5_reg;
        lshr_ln77_1_reg_915_pp0_iter7_reg <= lshr_ln77_1_reg_915_pp0_iter6_reg;
        lshr_ln77_1_reg_915_pp0_iter8_reg <= lshr_ln77_1_reg_915_pp0_iter7_reg;
        lshr_ln77_1_reg_915_pp0_iter9_reg <= lshr_ln77_1_reg_915_pp0_iter8_reg;
        lshr_ln77_s_reg_895_pp0_iter10_reg <= lshr_ln77_s_reg_895_pp0_iter9_reg;
        lshr_ln77_s_reg_895_pp0_iter1_reg <= lshr_ln77_s_reg_895;
        lshr_ln77_s_reg_895_pp0_iter2_reg <= lshr_ln77_s_reg_895_pp0_iter1_reg;
        lshr_ln77_s_reg_895_pp0_iter3_reg <= lshr_ln77_s_reg_895_pp0_iter2_reg;
        lshr_ln77_s_reg_895_pp0_iter4_reg <= lshr_ln77_s_reg_895_pp0_iter3_reg;
        lshr_ln77_s_reg_895_pp0_iter5_reg <= lshr_ln77_s_reg_895_pp0_iter4_reg;
        lshr_ln77_s_reg_895_pp0_iter6_reg <= lshr_ln77_s_reg_895_pp0_iter5_reg;
        lshr_ln77_s_reg_895_pp0_iter7_reg <= lshr_ln77_s_reg_895_pp0_iter6_reg;
        lshr_ln77_s_reg_895_pp0_iter8_reg <= lshr_ln77_s_reg_895_pp0_iter7_reg;
        lshr_ln77_s_reg_895_pp0_iter9_reg <= lshr_ln77_s_reg_895_pp0_iter8_reg;
        zext_ln77_1_reg_1182[6 : 0] <= zext_ln77_1_fu_786_p1[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter11_reg[6 : 0] <= zext_ln77_1_reg_1182[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter12_reg[6 : 0] <= zext_ln77_1_reg_1182_pp0_iter11_reg[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter13_reg[6 : 0] <= zext_ln77_1_reg_1182_pp0_iter12_reg[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter14_reg[6 : 0] <= zext_ln77_1_reg_1182_pp0_iter13_reg[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter15_reg[6 : 0] <= zext_ln77_1_reg_1182_pp0_iter14_reg[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter16_reg[6 : 0] <= zext_ln77_1_reg_1182_pp0_iter15_reg[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter17_reg[6 : 0] <= zext_ln77_1_reg_1182_pp0_iter16_reg[6 : 0];
        zext_ln77_1_reg_1182_pp0_iter18_reg[6 : 0] <= zext_ln77_1_reg_1182_pp0_iter17_reg[6 : 0];
        zext_ln77_reg_1218[7 : 0] <= zext_ln77_fu_791_p1[7 : 0];
        zext_ln77_reg_1218_pp0_iter12_reg[7 : 0] <= zext_ln77_reg_1218[7 : 0];
        zext_ln77_reg_1218_pp0_iter13_reg[7 : 0] <= zext_ln77_reg_1218_pp0_iter12_reg[7 : 0];
        zext_ln77_reg_1218_pp0_iter14_reg[7 : 0] <= zext_ln77_reg_1218_pp0_iter13_reg[7 : 0];
        zext_ln77_reg_1218_pp0_iter15_reg[7 : 0] <= zext_ln77_reg_1218_pp0_iter14_reg[7 : 0];
        zext_ln77_reg_1218_pp0_iter16_reg[7 : 0] <= zext_ln77_reg_1218_pp0_iter15_reg[7 : 0];
        zext_ln77_reg_1218_pp0_iter17_reg[7 : 0] <= zext_ln77_reg_1218_pp0_iter16_reg[7 : 0];
        zext_ln77_reg_1218_pp0_iter18_reg[7 : 0] <= zext_ln77_reg_1218_pp0_iter17_reg[7 : 0];
        zext_ln77_reg_1218_pp0_iter19_reg[7 : 0] <= zext_ln77_reg_1218_pp0_iter18_reg[7 : 0];
        zext_ln79_1_reg_920_pp0_iter10_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter9_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter11_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter10_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter12_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter11_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter13_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter12_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter14_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter13_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter15_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter14_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter16_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter15_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter17_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter16_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter18_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter17_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter1_reg[6 : 0] <= zext_ln79_1_reg_920[6 : 0];
        zext_ln79_1_reg_920_pp0_iter2_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter1_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter3_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter2_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter4_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter3_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter5_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter4_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter6_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter5_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter7_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter6_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter8_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter7_reg[6 : 0];
        zext_ln79_1_reg_920_pp0_iter9_reg[6 : 0] <= zext_ln79_1_reg_920_pp0_iter8_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul22_i8_1_reg_1102 <= grp_fu_500_p_dout0;
        mul23_i9_1_reg_1107 <= grp_fu_504_p_dout0;
        mul24_i8_1_reg_1112 <= grp_fu_508_p_dout0;
        mul25_i9_1_reg_1117 <= grp_fu_512_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul22_i8_2_reg_1122 <= grp_fu_500_p_dout0;
        mul22_i8_3_reg_1142 <= grp_fu_516_p_dout0;
        mul23_i9_2_reg_1127 <= grp_fu_504_p_dout0;
        mul23_i9_3_reg_1147 <= grp_fu_520_p_dout0;
        mul24_i8_2_reg_1132 <= grp_fu_508_p_dout0;
        mul24_i8_3_reg_1152 <= grp_fu_524_p_dout0;
        mul25_i9_2_reg_1137 <= grp_fu_512_p_dout0;
        mul25_i9_3_reg_1157 <= grp_fu_528_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul22_i8_reg_1162 <= grp_fu_516_p_dout0;
        mul23_i9_reg_1167 <= grp_fu_520_p_dout0;
        mul24_i8_reg_1172 <= grp_fu_524_p_dout0;
        mul25_i9_reg_1177 <= grp_fu_528_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_646 <= grp_fu_420_p_dout0;
        reg_650 <= grp_fu_424_p_dout0;
        reg_654 <= grp_fu_428_p_dout0;
        reg_658 <= grp_fu_432_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_662 <= grp_fu_436_p_dout0;
        reg_666 <= grp_fu_440_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_I_9_1_reg_1240 <= grp_fu_408_p_dout0;
        t_R_9_1_reg_1234 <= grp_fu_404_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_I_9_reg_1332 <= grp_fu_416_p_dout0;
        t_R_9_reg_1326 <= grp_fu_412_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln68_reg_884 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        zext_ln79_reg_960[7 : 0] <= zext_ln79_fu_744_p1[7 : 0];
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter19 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            OUT_I_0_address0 = zext_ln77_reg_1218_pp0_iter19_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            OUT_I_0_address0 = zext_ln79_reg_960_pp0_iter18_reg;
        end else begin
            OUT_I_0_address0 = 'bx;
        end
    end else begin
        OUT_I_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        OUT_I_0_ce0 = 1'b1;
    end else begin
        OUT_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter19 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            OUT_I_0_d0 = bitcast_ln88_fu_868_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            OUT_I_0_d0 = bitcast_ln86_fu_859_p1;
        end else begin
            OUT_I_0_d0 = 'bx;
        end
    end else begin
        OUT_I_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        OUT_I_0_we0 = 1'b1;
    end else begin
        OUT_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_I_1_ce0 = 1'b1;
    end else begin
        OUT_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_I_1_ce1 = 1'b1;
    end else begin
        OUT_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_I_1_we0 = 1'b1;
    end else begin
        OUT_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_I_1_we1 = 1'b1;
    end else begin
        OUT_I_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_2_ce0 = 1'b1;
    end else begin
        OUT_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_2_ce1 = 1'b1;
    end else begin
        OUT_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_2_we0 = 1'b1;
    end else begin
        OUT_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_2_we1 = 1'b1;
    end else begin
        OUT_I_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_3_ce0 = 1'b1;
    end else begin
        OUT_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_3_ce1 = 1'b1;
    end else begin
        OUT_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_3_we0 = 1'b1;
    end else begin
        OUT_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_I_3_we1 = 1'b1;
    end else begin
        OUT_I_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter19 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            OUT_R_0_address0 = zext_ln77_reg_1218_pp0_iter19_reg;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            OUT_R_0_address0 = zext_ln79_reg_960_pp0_iter18_reg;
        end else begin
            OUT_R_0_address0 = 'bx;
        end
    end else begin
        OUT_R_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        OUT_R_0_ce0 = 1'b1;
    end else begin
        OUT_R_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter19 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            OUT_R_0_d0 = bitcast_ln87_fu_864_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            OUT_R_0_d0 = bitcast_ln85_fu_854_p1;
        end else begin
            OUT_R_0_d0 = 'bx;
        end
    end else begin
        OUT_R_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        OUT_R_0_we0 = 1'b1;
    end else begin
        OUT_R_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_R_1_ce0 = 1'b1;
    end else begin
        OUT_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_R_1_ce1 = 1'b1;
    end else begin
        OUT_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_R_1_we0 = 1'b1;
    end else begin
        OUT_R_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OUT_R_1_we1 = 1'b1;
    end else begin
        OUT_R_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_2_ce0 = 1'b1;
    end else begin
        OUT_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_2_ce1 = 1'b1;
    end else begin
        OUT_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_2_we0 = 1'b1;
    end else begin
        OUT_R_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_2_we1 = 1'b1;
    end else begin
        OUT_R_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_3_ce0 = 1'b1;
    end else begin
        OUT_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_3_ce1 = 1'b1;
    end else begin
        OUT_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_3_we0 = 1'b1;
    end else begin
        OUT_R_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        OUT_R_3_we1 = 1'b1;
    end else begin
        OUT_R_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        W_imag_address0 = zext_ln72_fu_781_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        W_imag_address0 = zext_ln72_3_fu_765_p1;
    end else begin
        W_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_imag_address1 = zext_ln72_2_fu_754_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            W_imag_address1 = zext_ln72_1_fu_710_p1;
        end else begin
            W_imag_address1 = 'bx;
        end
    end else begin
        W_imag_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        W_imag_ce0 = 1'b1;
    end else begin
        W_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        W_imag_ce1 = 1'b1;
    end else begin
        W_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        W_real_address0 = zext_ln72_fu_781_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        W_real_address0 = zext_ln72_3_fu_765_p1;
    end else begin
        W_real_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_real_address1 = zext_ln72_2_fu_754_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            W_real_address1 = zext_ln72_1_fu_710_p1;
        end else begin
            W_real_address1 = 'bx;
        end
    end else begin
        W_real_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        W_real_ce0 = 1'b1;
    end else begin
        W_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        W_real_ce1 = 1'b1;
    end else begin
        W_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln68_reg_884 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to19 = 1'b1;
    end else begin
        ap_idle_pp0_1to19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_18_0_load = 10'd0;
    end else begin
        ap_sig_allocacmp_i_18_0_load = i_18_0_fu_96;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_I_1_ce0 = 1'b1;
    end else begin
        buf1_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_I_1_ce1 = 1'b1;
    end else begin
        buf1_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_I_2_ce0 = 1'b1;
    end else begin
        buf1_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_I_2_ce1 = 1'b1;
    end else begin
        buf1_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_I_3_ce0 = 1'b1;
    end else begin
        buf1_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_I_3_ce1 = 1'b1;
    end else begin
        buf1_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        buf1_I_address0 = zext_ln77_fu_791_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        buf1_I_address0 = zext_ln79_fu_744_p1;
    end else begin
        buf1_I_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        buf1_I_ce0 = 1'b1;
    end else begin
        buf1_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_R_1_ce0 = 1'b1;
    end else begin
        buf1_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_R_1_ce1 = 1'b1;
    end else begin
        buf1_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_R_2_ce0 = 1'b1;
    end else begin
        buf1_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_R_2_ce1 = 1'b1;
    end else begin
        buf1_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_R_3_ce0 = 1'b1;
    end else begin
        buf1_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf1_R_3_ce1 = 1'b1;
    end else begin
        buf1_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        buf1_R_address0 = zext_ln77_fu_791_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        buf1_R_address0 = zext_ln79_fu_744_p1;
    end else begin
        buf1_R_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        buf1_R_ce0 = 1'b1;
    end else begin
        buf1_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_566_p0 = mul22_i8_2_reg_1122;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_566_p0 = mul22_i8_1_reg_1102;
        end else begin
            grp_fu_566_p0 = 'bx;
        end
    end else begin
        grp_fu_566_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_566_p1 = mul23_i9_2_reg_1127;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_566_p1 = mul23_i9_1_reg_1107;
        end else begin
            grp_fu_566_p1 = 'bx;
        end
    end else begin
        grp_fu_566_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_570_p0 = mul24_i8_2_reg_1132;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_570_p0 = mul24_i8_1_reg_1112;
        end else begin
            grp_fu_570_p0 = 'bx;
        end
    end else begin
        grp_fu_570_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_570_p1 = mul25_i9_2_reg_1137;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_570_p1 = mul25_i9_1_reg_1117;
        end else begin
            grp_fu_570_p1 = 'bx;
        end
    end else begin
        grp_fu_570_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_574_p0 = mul22_i8_reg_1162;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_574_p0 = mul22_i8_3_reg_1142;
    end else begin
        grp_fu_574_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_574_p1 = mul23_i9_reg_1167;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_574_p1 = mul23_i9_3_reg_1147;
    end else begin
        grp_fu_574_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_578_p0 = mul24_i8_reg_1172;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_578_p0 = mul24_i8_3_reg_1152;
    end else begin
        grp_fu_578_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_578_p1 = mul25_i9_reg_1177;
    end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_578_p1 = mul25_i9_3_reg_1157;
    end else begin
        grp_fu_578_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_582_p0 = buf1_R_2_load_reg_1278;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_582_p0 = buf1_R_1_load_reg_1206;
    end else begin
        grp_fu_582_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_582_p1 = t_R_9_2_reg_1290;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_582_p1 = t_R_9_1_reg_1234;
    end else begin
        grp_fu_582_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_586_p0 = buf1_I_2_load_reg_1284;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_586_p0 = buf1_I_1_load_reg_1212;
    end else begin
        grp_fu_586_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_586_p1 = t_I_9_2_reg_1296;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_586_p1 = t_I_9_1_reg_1240;
    end else begin
        grp_fu_586_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_590_p0 = buf1_R_2_load_reg_1278;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_590_p0 = buf1_R_1_load_reg_1206;
    end else begin
        grp_fu_590_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_590_p1 = t_R_9_2_reg_1290;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_590_p1 = t_R_9_1_reg_1234;
    end else begin
        grp_fu_590_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_594_p0 = buf1_I_2_load_reg_1284;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_594_p0 = buf1_I_1_load_reg_1212;
    end else begin
        grp_fu_594_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_594_p1 = t_I_9_2_reg_1296;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_594_p1 = t_I_9_1_reg_1240;
    end else begin
        grp_fu_594_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_598_p0 = buf1_R_load_reg_1266;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_598_p0 = buf1_R_3_load_reg_1302;
        end else begin
            grp_fu_598_p0 = 'bx;
        end
    end else begin
        grp_fu_598_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_598_p1 = t_R_9_reg_1326;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_598_p1 = t_R_9_3_reg_1314;
        end else begin
            grp_fu_598_p1 = 'bx;
        end
    end else begin
        grp_fu_598_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_602_p0 = buf1_I_load_reg_1272;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_602_p0 = buf1_I_3_load_reg_1308;
        end else begin
            grp_fu_602_p0 = 'bx;
        end
    end else begin
        grp_fu_602_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_602_p1 = t_I_9_reg_1332;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_602_p1 = t_I_9_3_reg_1320;
        end else begin
            grp_fu_602_p1 = 'bx;
        end
    end else begin
        grp_fu_602_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_606_p0 = buf1_R_load_reg_1266;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_606_p0 = buf1_R_3_load_reg_1302;
        end else begin
            grp_fu_606_p0 = 'bx;
        end
    end else begin
        grp_fu_606_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_606_p1 = t_R_9_reg_1326;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_606_p1 = t_R_9_3_reg_1314;
        end else begin
            grp_fu_606_p1 = 'bx;
        end
    end else begin
        grp_fu_606_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_610_p0 = buf1_I_load_reg_1272;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_610_p0 = buf1_I_3_load_reg_1308;
        end else begin
            grp_fu_610_p0 = 'bx;
        end
    end else begin
        grp_fu_610_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_610_p1 = t_I_9_reg_1332;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_610_p1 = t_I_9_3_reg_1320;
        end else begin
            grp_fu_610_p1 = 'bx;
        end
    end else begin
        grp_fu_610_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_614_p0 = buf1_R_2_load_1_reg_1010;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_614_p0 = buf1_R_1_load_1_reg_988;
        end else begin
            grp_fu_614_p0 = 'bx;
        end
    end else begin
        grp_fu_614_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_614_p1 = W_real_load_2_reg_1066;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_614_p1 = W_real_load_1_reg_976;
        end else begin
            grp_fu_614_p1 = 'bx;
        end
    end else begin
        grp_fu_614_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_618_p0 = buf1_I_2_load_1_reg_1016;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_618_p0 = buf1_I_1_load_1_reg_994;
        end else begin
            grp_fu_618_p0 = 'bx;
        end
    end else begin
        grp_fu_618_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_618_p1 = W_imag_load_2_reg_1072;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_618_p1 = W_imag_load_1_reg_982;
        end else begin
            grp_fu_618_p1 = 'bx;
        end
    end else begin
        grp_fu_618_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_622_p0 = buf1_I_2_load_1_reg_1016;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_622_p0 = buf1_I_1_load_1_reg_994;
        end else begin
            grp_fu_622_p0 = 'bx;
        end
    end else begin
        grp_fu_622_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_622_p1 = W_real_load_2_reg_1066;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_622_p1 = W_real_load_1_reg_976;
        end else begin
            grp_fu_622_p1 = 'bx;
        end
    end else begin
        grp_fu_622_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_626_p0 = buf1_R_2_load_1_reg_1010;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_626_p0 = buf1_R_1_load_1_reg_988;
        end else begin
            grp_fu_626_p0 = 'bx;
        end
    end else begin
        grp_fu_626_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_626_p1 = W_imag_load_2_reg_1072;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            grp_fu_626_p1 = W_imag_load_1_reg_982;
        end else begin
            grp_fu_626_p1 = 'bx;
        end
    end else begin
        grp_fu_626_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_630_p0 = buf1_R_load_1_reg_1054;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_630_p0 = buf1_R_3_load_1_reg_1032;
    end else begin
        grp_fu_630_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_630_p1 = W_real_load_reg_1090;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_630_p1 = W_real_load_3_reg_1078;
    end else begin
        grp_fu_630_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_634_p0 = buf1_I_load_1_reg_1060;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_634_p0 = buf1_I_3_load_1_reg_1038;
    end else begin
        grp_fu_634_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_634_p1 = W_imag_load_reg_1096;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_634_p1 = W_imag_load_3_reg_1084;
    end else begin
        grp_fu_634_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_638_p0 = buf1_I_load_1_reg_1060;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_638_p0 = buf1_I_3_load_1_reg_1038;
    end else begin
        grp_fu_638_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_638_p1 = W_real_load_reg_1090;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_638_p1 = W_real_load_3_reg_1078;
    end else begin
        grp_fu_638_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_642_p0 = buf1_R_load_1_reg_1054;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_642_p0 = buf1_R_3_load_1_reg_1032;
    end else begin
        grp_fu_642_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_642_p1 = W_imag_load_reg_1096;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_642_p1 = W_imag_load_3_reg_1084;
    end else begin
        grp_fu_642_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to19 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OUT_I_1_address0 = zext_ln77_1_reg_1182_pp0_iter17_reg;

assign OUT_I_1_address1 = zext_ln79_1_reg_920_pp0_iter17_reg;

assign OUT_I_1_d0 = reg_658;

assign OUT_I_1_d1 = reg_650;

assign OUT_I_2_address0 = zext_ln77_1_reg_1182_pp0_iter18_reg;

assign OUT_I_2_address1 = zext_ln79_1_reg_920_pp0_iter18_reg;

assign OUT_I_2_d0 = reg_658;

assign OUT_I_2_d1 = reg_650;

assign OUT_I_3_address0 = zext_ln77_1_reg_1182_pp0_iter18_reg;

assign OUT_I_3_address1 = zext_ln79_1_reg_920_pp0_iter18_reg;

assign OUT_I_3_d0 = add36_i9_3_reg_1343;

assign OUT_I_3_d1 = reg_666;

assign OUT_R_1_address0 = zext_ln77_1_reg_1182_pp0_iter17_reg;

assign OUT_R_1_address1 = zext_ln79_1_reg_920_pp0_iter17_reg;

assign OUT_R_1_d0 = reg_654;

assign OUT_R_1_d1 = reg_646;

assign OUT_R_2_address0 = zext_ln77_1_reg_1182_pp0_iter18_reg;

assign OUT_R_2_address1 = zext_ln79_1_reg_920_pp0_iter18_reg;

assign OUT_R_2_d0 = reg_654;

assign OUT_R_2_d1 = reg_646;

assign OUT_R_3_address0 = zext_ln77_1_reg_1182_pp0_iter18_reg;

assign OUT_R_3_address1 = zext_ln79_1_reg_920_pp0_iter18_reg;

assign OUT_R_3_d0 = add33_i9_3_reg_1338;

assign OUT_R_3_d1 = reg_662;

assign add_ln68_fu_771_p2 = (i_18_0_load_reg_879 + 10'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_operation_581 = (1'b1 == 1'b1);

assign ap_enable_operation_583 = (1'b1 == 1'b1);

assign ap_enable_operation_587 = (1'b1 == 1'b1);

assign ap_enable_operation_589 = (1'b1 == 1'b1);

assign ap_enable_operation_605 = (1'b1 == 1'b1);

assign ap_enable_operation_607 = (1'b1 == 1'b1);

assign ap_enable_operation_611 = (1'b1 == 1'b1);

assign ap_enable_operation_613 = (1'b1 == 1'b1);

assign ap_enable_operation_617 = (1'b1 == 1'b1);

assign ap_enable_operation_619 = (1'b1 == 1'b1);

assign ap_enable_operation_623 = (1'b1 == 1'b1);

assign ap_enable_operation_625 = (1'b1 == 1'b1);

assign ap_enable_operation_629 = (1'b1 == 1'b1);

assign ap_enable_operation_631 = (1'b1 == 1'b1);

assign ap_enable_operation_637 = (1'b1 == 1'b1);

assign ap_enable_operation_639 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state37_pp0_iter18_stage0 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state38_pp0_iter18_stage1 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state39_pp0_iter19_stage0 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state40_pp0_iter19_stage1 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln85_fu_854_p1 = reg_662;

assign bitcast_ln86_fu_859_p1 = reg_666;

assign bitcast_ln87_fu_864_p1 = add33_i9_reg_1348;

assign bitcast_ln88_fu_868_p1 = add36_i9_reg_1353;

assign buf1_I_1_address0 = zext_ln77_1_fu_786_p1;

assign buf1_I_1_address1 = zext_ln79_1_fu_734_p1;

assign buf1_I_2_address0 = zext_ln77_1_reg_1182;

assign buf1_I_2_address1 = zext_ln79_1_fu_734_p1;

assign buf1_I_3_address0 = zext_ln77_1_reg_1182;

assign buf1_I_3_address1 = zext_ln79_1_fu_734_p1;

assign buf1_R_1_address0 = zext_ln77_1_fu_786_p1;

assign buf1_R_1_address1 = zext_ln79_1_fu_734_p1;

assign buf1_R_2_address0 = zext_ln77_1_reg_1182;

assign buf1_R_2_address1 = zext_ln79_1_fu_734_p1;

assign buf1_R_3_address0 = zext_ln77_1_reg_1182;

assign buf1_R_3_address1 = zext_ln79_1_fu_734_p1;

assign empty_20_fu_684_p1 = ap_sig_allocacmp_i_18_0_load[8:0];

assign grp_fu_404_p_ce = 1'b1;

assign grp_fu_404_p_din0 = grp_fu_566_p0;

assign grp_fu_404_p_din1 = grp_fu_566_p1;

assign grp_fu_404_p_opcode = 2'd1;

assign grp_fu_408_p_ce = 1'b1;

assign grp_fu_408_p_din0 = grp_fu_570_p0;

assign grp_fu_408_p_din1 = grp_fu_570_p1;

assign grp_fu_408_p_opcode = 2'd0;

assign grp_fu_412_p_ce = 1'b1;

assign grp_fu_412_p_din0 = grp_fu_574_p0;

assign grp_fu_412_p_din1 = grp_fu_574_p1;

assign grp_fu_412_p_opcode = 2'd1;

assign grp_fu_416_p_ce = 1'b1;

assign grp_fu_416_p_din0 = grp_fu_578_p0;

assign grp_fu_416_p_din1 = grp_fu_578_p1;

assign grp_fu_416_p_opcode = 2'd0;

assign grp_fu_420_p_ce = 1'b1;

assign grp_fu_420_p_din0 = grp_fu_582_p0;

assign grp_fu_420_p_din1 = grp_fu_582_p1;

assign grp_fu_420_p_opcode = 2'd1;

assign grp_fu_424_p_ce = 1'b1;

assign grp_fu_424_p_din0 = grp_fu_586_p0;

assign grp_fu_424_p_din1 = grp_fu_586_p1;

assign grp_fu_424_p_opcode = 2'd1;

assign grp_fu_428_p_ce = 1'b1;

assign grp_fu_428_p_din0 = grp_fu_590_p0;

assign grp_fu_428_p_din1 = grp_fu_590_p1;

assign grp_fu_428_p_opcode = 2'd0;

assign grp_fu_432_p_ce = 1'b1;

assign grp_fu_432_p_din0 = grp_fu_594_p0;

assign grp_fu_432_p_din1 = grp_fu_594_p1;

assign grp_fu_432_p_opcode = 2'd0;

assign grp_fu_436_p_ce = 1'b1;

assign grp_fu_436_p_din0 = grp_fu_598_p0;

assign grp_fu_436_p_din1 = grp_fu_598_p1;

assign grp_fu_436_p_opcode = 2'd1;

assign grp_fu_440_p_ce = 1'b1;

assign grp_fu_440_p_din0 = grp_fu_602_p0;

assign grp_fu_440_p_din1 = grp_fu_602_p1;

assign grp_fu_440_p_opcode = 2'd1;

assign grp_fu_444_p_ce = 1'b1;

assign grp_fu_444_p_din0 = grp_fu_606_p0;

assign grp_fu_444_p_din1 = grp_fu_606_p1;

assign grp_fu_444_p_opcode = 2'd0;

assign grp_fu_448_p_ce = 1'b1;

assign grp_fu_448_p_din0 = grp_fu_610_p0;

assign grp_fu_448_p_din1 = grp_fu_610_p1;

assign grp_fu_448_p_opcode = 2'd0;

assign grp_fu_500_p_ce = 1'b1;

assign grp_fu_500_p_din0 = grp_fu_614_p0;

assign grp_fu_500_p_din1 = grp_fu_614_p1;

assign grp_fu_504_p_ce = 1'b1;

assign grp_fu_504_p_din0 = grp_fu_618_p0;

assign grp_fu_504_p_din1 = grp_fu_618_p1;

assign grp_fu_508_p_ce = 1'b1;

assign grp_fu_508_p_din0 = grp_fu_622_p0;

assign grp_fu_508_p_din1 = grp_fu_622_p1;

assign grp_fu_512_p_ce = 1'b1;

assign grp_fu_512_p_din0 = grp_fu_626_p0;

assign grp_fu_512_p_din1 = grp_fu_626_p1;

assign grp_fu_516_p_ce = 1'b1;

assign grp_fu_516_p_din0 = grp_fu_630_p0;

assign grp_fu_516_p_din1 = grp_fu_630_p1;

assign grp_fu_520_p_ce = 1'b1;

assign grp_fu_520_p_din0 = grp_fu_634_p0;

assign grp_fu_520_p_din1 = grp_fu_634_p1;

assign grp_fu_524_p_ce = 1'b1;

assign grp_fu_524_p_din0 = grp_fu_638_p0;

assign grp_fu_524_p_din1 = grp_fu_638_p1;

assign grp_fu_528_p_ce = 1'b1;

assign grp_fu_528_p_din0 = grp_fu_642_p0;

assign grp_fu_528_p_din1 = grp_fu_642_p1;

assign icmp_ln68_fu_678_p2 = ((ap_sig_allocacmp_i_18_0_load == 10'd512) ? 1'b1 : 1'b0);

assign lshr_ln77_1_fu_716_p4 = {{ap_sig_allocacmp_i_18_0_load[8:2]}};

assign lshr_ln77_s_fu_688_p4 = {{ap_sig_allocacmp_i_18_0_load[9:2]}};

assign or_ln68_1_fu_749_p2 = (empty_20_reg_888 | 9'd2);

assign or_ln68_2_fu_760_p2 = (empty_20_reg_888 | 9'd3);

assign or_ln68_fu_704_p2 = (empty_20_fu_684_p1 | 9'd1);

assign xor_ln79_fu_698_p2 = (lshr_ln77_s_fu_688_p4 ^ 8'd128);

assign zext_ln72_1_fu_710_p1 = or_ln68_fu_704_p2;

assign zext_ln72_2_fu_754_p1 = or_ln68_1_fu_749_p2;

assign zext_ln72_3_fu_765_p1 = or_ln68_2_fu_760_p2;

assign zext_ln72_fu_781_p1 = empty_20_reg_888;

assign zext_ln77_1_fu_786_p1 = lshr_ln77_1_reg_915_pp0_iter9_reg;

assign zext_ln77_fu_791_p1 = lshr_ln77_s_reg_895_pp0_iter10_reg;

assign zext_ln79_1_fu_734_p1 = zext_ln79_s_fu_726_p3;

assign zext_ln79_fu_744_p1 = xor_ln79_reg_900;

assign zext_ln79_s_fu_726_p3 = {{1'd1}, {lshr_ln77_1_fu_716_p4}};

always @ (posedge ap_clk) begin
    zext_ln79_1_reg_920[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter16_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter17_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_1_reg_920_pp0_iter18_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000001;
    zext_ln79_reg_960[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter17_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln79_reg_960_pp0_iter18_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter16_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter17_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_1182_pp0_iter18_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter17_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter18_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1218_pp0_iter19_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //dft_dft_Pipeline_DFT_Loop9
