-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dft_dft_Pipeline_DFT_Loop9 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    OUT_I_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_3_ce0 : OUT STD_LOGIC;
    OUT_I_3_we0 : OUT STD_LOGIC;
    OUT_I_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_3_ce1 : OUT STD_LOGIC;
    OUT_I_3_we1 : OUT STD_LOGIC;
    OUT_I_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_2_ce0 : OUT STD_LOGIC;
    OUT_I_2_we0 : OUT STD_LOGIC;
    OUT_I_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_2_ce1 : OUT STD_LOGIC;
    OUT_I_2_we1 : OUT STD_LOGIC;
    OUT_I_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_1_ce0 : OUT STD_LOGIC;
    OUT_I_1_we0 : OUT STD_LOGIC;
    OUT_I_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_1_ce1 : OUT STD_LOGIC;
    OUT_I_1_we1 : OUT STD_LOGIC;
    OUT_I_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_0_ce0 : OUT STD_LOGIC;
    OUT_I_0_we0 : OUT STD_LOGIC;
    OUT_I_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_3_ce0 : OUT STD_LOGIC;
    OUT_R_3_we0 : OUT STD_LOGIC;
    OUT_R_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_3_ce1 : OUT STD_LOGIC;
    OUT_R_3_we1 : OUT STD_LOGIC;
    OUT_R_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_2_ce0 : OUT STD_LOGIC;
    OUT_R_2_we0 : OUT STD_LOGIC;
    OUT_R_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_2_ce1 : OUT STD_LOGIC;
    OUT_R_2_we1 : OUT STD_LOGIC;
    OUT_R_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_1_ce0 : OUT STD_LOGIC;
    OUT_R_1_we0 : OUT STD_LOGIC;
    OUT_R_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_1_ce1 : OUT STD_LOGIC;
    OUT_R_1_we1 : OUT STD_LOGIC;
    OUT_R_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_0_ce0 : OUT STD_LOGIC;
    OUT_R_0_we0 : OUT STD_LOGIC;
    OUT_R_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    buf1_R_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_R_ce0 : OUT STD_LOGIC;
    buf1_R_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_I_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_I_ce0 : OUT STD_LOGIC;
    buf1_I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_R_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_R_1_ce0 : OUT STD_LOGIC;
    buf1_R_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_R_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_R_1_ce1 : OUT STD_LOGIC;
    buf1_R_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_I_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_I_1_ce0 : OUT STD_LOGIC;
    buf1_I_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_I_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_I_1_ce1 : OUT STD_LOGIC;
    buf1_I_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_R_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_R_2_ce0 : OUT STD_LOGIC;
    buf1_R_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_R_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_R_2_ce1 : OUT STD_LOGIC;
    buf1_R_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_I_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_I_2_ce0 : OUT STD_LOGIC;
    buf1_I_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_I_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_I_2_ce1 : OUT STD_LOGIC;
    buf1_I_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_R_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_R_3_ce0 : OUT STD_LOGIC;
    buf1_R_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_R_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_R_3_ce1 : OUT STD_LOGIC;
    buf1_R_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_I_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_I_3_ce0 : OUT STD_LOGIC;
    buf1_I_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buf1_I_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf1_I_3_ce1 : OUT STD_LOGIC;
    buf1_I_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_real_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_real_ce0 : OUT STD_LOGIC;
    W_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_real_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_real_ce1 : OUT STD_LOGIC;
    W_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_imag_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_imag_ce0 : OUT STD_LOGIC;
    W_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_imag_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_imag_ce1 : OUT STD_LOGIC;
    W_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_404_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_404_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_404_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_404_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_404_p_ce : OUT STD_LOGIC;
    grp_fu_408_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_408_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_408_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_408_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_408_p_ce : OUT STD_LOGIC;
    grp_fu_412_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_412_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_412_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_412_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_412_p_ce : OUT STD_LOGIC;
    grp_fu_416_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_416_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_416_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_416_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_416_p_ce : OUT STD_LOGIC;
    grp_fu_420_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_420_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_420_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_420_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_420_p_ce : OUT STD_LOGIC;
    grp_fu_424_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_424_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_424_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_424_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_424_p_ce : OUT STD_LOGIC;
    grp_fu_428_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_428_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_428_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_428_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_428_p_ce : OUT STD_LOGIC;
    grp_fu_432_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_432_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_432_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_432_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_432_p_ce : OUT STD_LOGIC;
    grp_fu_436_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_436_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_436_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_436_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_436_p_ce : OUT STD_LOGIC;
    grp_fu_440_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_440_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_440_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_440_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_440_p_ce : OUT STD_LOGIC;
    grp_fu_444_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_444_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_444_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_444_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_444_p_ce : OUT STD_LOGIC;
    grp_fu_448_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_448_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_448_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_448_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_448_p_ce : OUT STD_LOGIC;
    grp_fu_500_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_500_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_500_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_500_p_ce : OUT STD_LOGIC;
    grp_fu_504_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_504_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_504_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_504_p_ce : OUT STD_LOGIC;
    grp_fu_508_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_508_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_508_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_508_p_ce : OUT STD_LOGIC;
    grp_fu_512_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_512_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_512_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_512_p_ce : OUT STD_LOGIC;
    grp_fu_516_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_516_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_516_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_516_p_ce : OUT STD_LOGIC;
    grp_fu_520_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_520_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_520_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_520_p_ce : OUT STD_LOGIC;
    grp_fu_524_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_524_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_524_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_524_p_ce : OUT STD_LOGIC;
    grp_fu_528_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_528_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_528_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_528_p_ce : OUT STD_LOGIC );
end;


architecture behav of dft_dft_Pipeline_DFT_Loop9 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter16 : BOOLEAN;
    signal ap_block_state36_pp0_stage1_iter17 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter18 : BOOLEAN;
    signal ap_block_state40_pp0_stage1_iter19 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln68_reg_884 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_646 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_650 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_654 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_658 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_662 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_666 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_18_0_load_reg_879 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln68_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_20_fu_684_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_20_reg_888 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln77_s_fu_688_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_s_reg_895_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln79_fu_698_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln79_reg_900 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln77_1_fu_716_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln77_1_reg_915_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln79_1_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_1_reg_920_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_fu_744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_reg_960_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal W_real_load_1_reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_imag_load_1_reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_R_1_load_1_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_1_load_1_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_R_2_load_1_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_2_load_1_reg_1016 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_R_3_load_1_reg_1032 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_3_load_1_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_R_load_1_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_load_1_reg_1060 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_real_load_2_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_imag_load_2_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_real_load_3_reg_1078 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_imag_load_3_reg_1084 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_real_load_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_imag_load_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul22_i8_1_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul23_i9_1_reg_1107 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_i8_1_reg_1112 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul25_i9_1_reg_1117 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul22_i8_2_reg_1122 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul23_i9_2_reg_1127 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_i8_2_reg_1132 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul25_i9_2_reg_1137 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul22_i8_3_reg_1142 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul23_i9_3_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_i8_3_reg_1152 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul25_i9_3_reg_1157 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul22_i8_reg_1162 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul23_i9_reg_1167 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul24_i8_reg_1172 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul25_i9_reg_1177 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln77_1_fu_786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_1182_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal buf1_R_1_load_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_1_load_reg_1212 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln77_fu_791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1218_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal t_R_9_1_reg_1234 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_I_9_1_reg_1240 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_R_load_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_load_reg_1272 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_R_2_load_reg_1278 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_2_load_reg_1284 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_R_9_2_reg_1290 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_I_9_2_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_R_3_load_reg_1302 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_I_3_load_reg_1308 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_R_9_3_reg_1314 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_I_9_3_reg_1320 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_R_9_reg_1326 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_I_9_reg_1332 : STD_LOGIC_VECTOR (31 downto 0);
    signal add33_i9_3_reg_1338 : STD_LOGIC_VECTOR (31 downto 0);
    signal add36_i9_3_reg_1343 : STD_LOGIC_VECTOR (31 downto 0);
    signal add33_i9_reg_1348 : STD_LOGIC_VECTOR (31 downto 0);
    signal add36_i9_reg_1353 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln72_1_fu_710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln72_2_fu_754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln72_3_fu_765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln72_fu_781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_18_0_fu_96 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln68_fu_771_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_18_0_load : STD_LOGIC_VECTOR (9 downto 0);
    signal bitcast_ln85_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln87_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln86_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln88_fu_868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_566_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_570_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_574_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_578_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_578_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_582_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_586_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_590_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_594_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_598_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_602_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_602_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_606_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_610_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_610_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_614_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_614_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_618_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_622_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_626_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_626_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_630_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_630_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_634_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_634_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_638_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_642_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln68_fu_704_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln79_s_fu_726_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln68_1_fu_749_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln68_2_fu_760_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to19 : STD_LOGIC;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_581 : BOOLEAN;
    signal ap_enable_state37_pp0_iter18_stage0 : BOOLEAN;
    signal ap_enable_operation_587 : BOOLEAN;
    signal ap_enable_operation_583 : BOOLEAN;
    signal ap_enable_operation_589 : BOOLEAN;
    signal ap_enable_operation_605 : BOOLEAN;
    signal ap_enable_state38_pp0_iter18_stage1 : BOOLEAN;
    signal ap_enable_operation_611 : BOOLEAN;
    signal ap_enable_operation_607 : BOOLEAN;
    signal ap_enable_operation_613 : BOOLEAN;
    signal ap_enable_operation_617 : BOOLEAN;
    signal ap_enable_operation_623 : BOOLEAN;
    signal ap_enable_operation_619 : BOOLEAN;
    signal ap_enable_operation_625 : BOOLEAN;
    signal ap_enable_operation_629 : BOOLEAN;
    signal ap_enable_state39_pp0_iter19_stage0 : BOOLEAN;
    signal ap_enable_operation_637 : BOOLEAN;
    signal ap_enable_state40_pp0_iter19_stage1 : BOOLEAN;
    signal ap_enable_operation_631 : BOOLEAN;
    signal ap_enable_operation_639 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dft_fsub_32ns_32ns_32_13_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_fadd_32ns_32ns_32_13_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_faddfsub_32ns_32ns_32_13_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_fmul_32ns_32ns_32_8_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component dft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter18_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_18_0_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_18_0_fu_96 <= ap_const_lv10_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_884 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                i_18_0_fu_96 <= add_ln68_fu_771_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_884 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                W_imag_load_1_reg_982 <= W_imag_q1;
                W_real_load_1_reg_976 <= W_real_q1;
                buf1_I_1_load_1_reg_994 <= buf1_I_1_q1;
                buf1_I_2_load_1_reg_1016 <= buf1_I_2_q1;
                buf1_I_3_load_1_reg_1038 <= buf1_I_3_q1;
                buf1_R_1_load_1_reg_988 <= buf1_R_1_q1;
                buf1_R_2_load_1_reg_1010 <= buf1_R_2_q1;
                buf1_R_3_load_1_reg_1032 <= buf1_R_3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                W_imag_load_2_reg_1072 <= W_imag_q1;
                W_imag_load_3_reg_1084 <= W_imag_q0;
                W_real_load_2_reg_1066 <= W_real_q1;
                W_real_load_3_reg_1078 <= W_real_q0;
                buf1_I_load_1_reg_1060 <= buf1_I_q0;
                buf1_R_load_1_reg_1054 <= buf1_R_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                W_imag_load_reg_1096 <= W_imag_q0;
                W_real_load_reg_1090 <= W_real_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add33_i9_3_reg_1338 <= grp_fu_444_p_dout0;
                add36_i9_3_reg_1343 <= grp_fu_448_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add33_i9_reg_1348 <= grp_fu_444_p_dout0;
                add36_i9_reg_1353 <= grp_fu_448_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                    zext_ln79_reg_960_pp0_iter10_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter9_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter11_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter10_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter12_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter11_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter13_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter12_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter14_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter13_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter15_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter14_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter16_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter15_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter17_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter16_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter18_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter17_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter1_reg(7 downto 0) <= zext_ln79_reg_960(7 downto 0);
                    zext_ln79_reg_960_pp0_iter2_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter1_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter3_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter2_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter4_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter3_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter5_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter4_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter6_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter5_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter7_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter6_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter8_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter7_reg(7 downto 0);
                    zext_ln79_reg_960_pp0_iter9_reg(7 downto 0) <= zext_ln79_reg_960_pp0_iter8_reg(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                buf1_I_1_load_reg_1212 <= buf1_I_1_q0;
                buf1_R_1_load_reg_1206 <= buf1_R_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                buf1_I_2_load_reg_1284 <= buf1_I_2_q0;
                buf1_I_3_load_reg_1308 <= buf1_I_3_q0;
                buf1_I_load_reg_1272 <= buf1_I_q0;
                buf1_R_2_load_reg_1278 <= buf1_R_2_q0;
                buf1_R_3_load_reg_1302 <= buf1_R_3_q0;
                buf1_R_load_reg_1266 <= buf1_R_q0;
                t_I_9_2_reg_1296 <= grp_fu_408_p_dout0;
                t_I_9_3_reg_1320 <= grp_fu_416_p_dout0;
                t_R_9_2_reg_1290 <= grp_fu_404_p_dout0;
                t_R_9_3_reg_1314 <= grp_fu_412_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln68_fu_678_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_20_reg_888 <= empty_20_fu_684_p1;
                lshr_ln77_1_reg_915 <= ap_sig_allocacmp_i_18_0_load(8 downto 2);
                lshr_ln77_s_reg_895 <= ap_sig_allocacmp_i_18_0_load(9 downto 2);
                xor_ln79_reg_900 <= xor_ln79_fu_698_p2;
                    zext_ln79_1_reg_920(6 downto 0) <= zext_ln79_1_fu_734_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_18_0_load_reg_879 <= ap_sig_allocacmp_i_18_0_load;
                icmp_ln68_reg_884 <= icmp_ln68_fu_678_p2;
                lshr_ln77_1_reg_915_pp0_iter1_reg <= lshr_ln77_1_reg_915;
                lshr_ln77_1_reg_915_pp0_iter2_reg <= lshr_ln77_1_reg_915_pp0_iter1_reg;
                lshr_ln77_1_reg_915_pp0_iter3_reg <= lshr_ln77_1_reg_915_pp0_iter2_reg;
                lshr_ln77_1_reg_915_pp0_iter4_reg <= lshr_ln77_1_reg_915_pp0_iter3_reg;
                lshr_ln77_1_reg_915_pp0_iter5_reg <= lshr_ln77_1_reg_915_pp0_iter4_reg;
                lshr_ln77_1_reg_915_pp0_iter6_reg <= lshr_ln77_1_reg_915_pp0_iter5_reg;
                lshr_ln77_1_reg_915_pp0_iter7_reg <= lshr_ln77_1_reg_915_pp0_iter6_reg;
                lshr_ln77_1_reg_915_pp0_iter8_reg <= lshr_ln77_1_reg_915_pp0_iter7_reg;
                lshr_ln77_1_reg_915_pp0_iter9_reg <= lshr_ln77_1_reg_915_pp0_iter8_reg;
                lshr_ln77_s_reg_895_pp0_iter10_reg <= lshr_ln77_s_reg_895_pp0_iter9_reg;
                lshr_ln77_s_reg_895_pp0_iter1_reg <= lshr_ln77_s_reg_895;
                lshr_ln77_s_reg_895_pp0_iter2_reg <= lshr_ln77_s_reg_895_pp0_iter1_reg;
                lshr_ln77_s_reg_895_pp0_iter3_reg <= lshr_ln77_s_reg_895_pp0_iter2_reg;
                lshr_ln77_s_reg_895_pp0_iter4_reg <= lshr_ln77_s_reg_895_pp0_iter3_reg;
                lshr_ln77_s_reg_895_pp0_iter5_reg <= lshr_ln77_s_reg_895_pp0_iter4_reg;
                lshr_ln77_s_reg_895_pp0_iter6_reg <= lshr_ln77_s_reg_895_pp0_iter5_reg;
                lshr_ln77_s_reg_895_pp0_iter7_reg <= lshr_ln77_s_reg_895_pp0_iter6_reg;
                lshr_ln77_s_reg_895_pp0_iter8_reg <= lshr_ln77_s_reg_895_pp0_iter7_reg;
                lshr_ln77_s_reg_895_pp0_iter9_reg <= lshr_ln77_s_reg_895_pp0_iter8_reg;
                    zext_ln77_1_reg_1182(6 downto 0) <= zext_ln77_1_fu_786_p1(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter11_reg(6 downto 0) <= zext_ln77_1_reg_1182(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter12_reg(6 downto 0) <= zext_ln77_1_reg_1182_pp0_iter11_reg(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter13_reg(6 downto 0) <= zext_ln77_1_reg_1182_pp0_iter12_reg(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter14_reg(6 downto 0) <= zext_ln77_1_reg_1182_pp0_iter13_reg(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter15_reg(6 downto 0) <= zext_ln77_1_reg_1182_pp0_iter14_reg(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter16_reg(6 downto 0) <= zext_ln77_1_reg_1182_pp0_iter15_reg(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter17_reg(6 downto 0) <= zext_ln77_1_reg_1182_pp0_iter16_reg(6 downto 0);
                    zext_ln77_1_reg_1182_pp0_iter18_reg(6 downto 0) <= zext_ln77_1_reg_1182_pp0_iter17_reg(6 downto 0);
                    zext_ln77_reg_1218(7 downto 0) <= zext_ln77_fu_791_p1(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter12_reg(7 downto 0) <= zext_ln77_reg_1218(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter13_reg(7 downto 0) <= zext_ln77_reg_1218_pp0_iter12_reg(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter14_reg(7 downto 0) <= zext_ln77_reg_1218_pp0_iter13_reg(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter15_reg(7 downto 0) <= zext_ln77_reg_1218_pp0_iter14_reg(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter16_reg(7 downto 0) <= zext_ln77_reg_1218_pp0_iter15_reg(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter17_reg(7 downto 0) <= zext_ln77_reg_1218_pp0_iter16_reg(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter18_reg(7 downto 0) <= zext_ln77_reg_1218_pp0_iter17_reg(7 downto 0);
                    zext_ln77_reg_1218_pp0_iter19_reg(7 downto 0) <= zext_ln77_reg_1218_pp0_iter18_reg(7 downto 0);
                    zext_ln79_1_reg_920_pp0_iter10_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter9_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter11_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter10_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter12_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter11_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter13_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter12_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter14_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter13_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter15_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter14_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter16_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter15_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter17_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter16_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter18_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter17_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter1_reg(6 downto 0) <= zext_ln79_1_reg_920(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter2_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter1_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter3_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter2_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter4_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter3_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter5_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter4_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter6_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter5_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter7_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter6_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter8_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter7_reg(6 downto 0);
                    zext_ln79_1_reg_920_pp0_iter9_reg(6 downto 0) <= zext_ln79_1_reg_920_pp0_iter8_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul22_i8_1_reg_1102 <= grp_fu_500_p_dout0;
                mul23_i9_1_reg_1107 <= grp_fu_504_p_dout0;
                mul24_i8_1_reg_1112 <= grp_fu_508_p_dout0;
                mul25_i9_1_reg_1117 <= grp_fu_512_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul22_i8_2_reg_1122 <= grp_fu_500_p_dout0;
                mul22_i8_3_reg_1142 <= grp_fu_516_p_dout0;
                mul23_i9_2_reg_1127 <= grp_fu_504_p_dout0;
                mul23_i9_3_reg_1147 <= grp_fu_520_p_dout0;
                mul24_i8_2_reg_1132 <= grp_fu_508_p_dout0;
                mul24_i8_3_reg_1152 <= grp_fu_524_p_dout0;
                mul25_i9_2_reg_1137 <= grp_fu_512_p_dout0;
                mul25_i9_3_reg_1157 <= grp_fu_528_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul22_i8_reg_1162 <= grp_fu_516_p_dout0;
                mul23_i9_reg_1167 <= grp_fu_520_p_dout0;
                mul24_i8_reg_1172 <= grp_fu_524_p_dout0;
                mul25_i9_reg_1177 <= grp_fu_528_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_646 <= grp_fu_420_p_dout0;
                reg_650 <= grp_fu_424_p_dout0;
                reg_654 <= grp_fu_428_p_dout0;
                reg_658 <= grp_fu_432_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_662 <= grp_fu_436_p_dout0;
                reg_666 <= grp_fu_440_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t_I_9_1_reg_1240 <= grp_fu_408_p_dout0;
                t_R_9_1_reg_1234 <= grp_fu_404_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t_I_9_reg_1332 <= grp_fu_416_p_dout0;
                t_R_9_reg_1326 <= grp_fu_412_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_884 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    zext_ln79_reg_960(7 downto 0) <= zext_ln79_fu_744_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln79_1_reg_920(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter4_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter5_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter6_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter7_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter8_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter9_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter10_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter11_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter12_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter13_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter14_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter15_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter16_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter17_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_1_reg_920_pp0_iter18_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000001";
    zext_ln79_reg_960(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter2_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter3_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter4_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter5_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter6_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter7_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter8_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter9_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter10_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter11_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter12_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter13_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter14_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter15_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter16_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter17_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln79_reg_960_pp0_iter18_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter11_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter12_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter13_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter14_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter15_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter16_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter17_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_1182_pp0_iter18_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter12_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter13_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter14_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter15_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter16_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter17_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter18_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1218_pp0_iter19_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to19, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to19 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    OUT_I_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, zext_ln79_reg_960_pp0_iter18_reg, zext_ln77_reg_1218_pp0_iter19_reg, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter19 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                OUT_I_0_address0 <= zext_ln77_reg_1218_pp0_iter19_reg(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                OUT_I_0_address0 <= zext_ln79_reg_960_pp0_iter18_reg(8 - 1 downto 0);
            else 
                OUT_I_0_address0 <= "XXXXXXXX";
            end if;
        else 
            OUT_I_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    OUT_I_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            OUT_I_0_ce0 <= ap_const_logic_1;
        else 
            OUT_I_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, bitcast_ln86_fu_859_p1, bitcast_ln88_fu_868_p1)
    begin
        if ((ap_enable_reg_pp0_iter19 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                OUT_I_0_d0 <= bitcast_ln88_fu_868_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                OUT_I_0_d0 <= bitcast_ln86_fu_859_p1;
            else 
                OUT_I_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            OUT_I_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_I_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            OUT_I_0_we0 <= ap_const_logic_1;
        else 
            OUT_I_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_1_address0 <= zext_ln77_1_reg_1182_pp0_iter17_reg(8 - 1 downto 0);
    OUT_I_1_address1 <= zext_ln79_1_reg_920_pp0_iter17_reg(8 - 1 downto 0);

    OUT_I_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_I_1_ce0 <= ap_const_logic_1;
        else 
            OUT_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_I_1_ce1 <= ap_const_logic_1;
        else 
            OUT_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_1_d0 <= reg_658;
    OUT_I_1_d1 <= reg_650;

    OUT_I_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_I_1_we0 <= ap_const_logic_1;
        else 
            OUT_I_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_I_1_we1 <= ap_const_logic_1;
        else 
            OUT_I_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_2_address0 <= zext_ln77_1_reg_1182_pp0_iter18_reg(8 - 1 downto 0);
    OUT_I_2_address1 <= zext_ln79_1_reg_920_pp0_iter18_reg(8 - 1 downto 0);

    OUT_I_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_2_ce0 <= ap_const_logic_1;
        else 
            OUT_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_2_ce1 <= ap_const_logic_1;
        else 
            OUT_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_2_d0 <= reg_658;
    OUT_I_2_d1 <= reg_650;

    OUT_I_2_we0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_2_we0 <= ap_const_logic_1;
        else 
            OUT_I_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_2_we1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_2_we1 <= ap_const_logic_1;
        else 
            OUT_I_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_3_address0 <= zext_ln77_1_reg_1182_pp0_iter18_reg(8 - 1 downto 0);
    OUT_I_3_address1 <= zext_ln79_1_reg_920_pp0_iter18_reg(8 - 1 downto 0);

    OUT_I_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_3_ce0 <= ap_const_logic_1;
        else 
            OUT_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_3_ce1 <= ap_const_logic_1;
        else 
            OUT_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_3_d0 <= add36_i9_3_reg_1343;
    OUT_I_3_d1 <= reg_666;

    OUT_I_3_we0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_3_we0 <= ap_const_logic_1;
        else 
            OUT_I_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_3_we1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_I_3_we1 <= ap_const_logic_1;
        else 
            OUT_I_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, zext_ln79_reg_960_pp0_iter18_reg, zext_ln77_reg_1218_pp0_iter19_reg, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter19 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                OUT_R_0_address0 <= zext_ln77_reg_1218_pp0_iter19_reg(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                OUT_R_0_address0 <= zext_ln79_reg_960_pp0_iter18_reg(8 - 1 downto 0);
            else 
                OUT_R_0_address0 <= "XXXXXXXX";
            end if;
        else 
            OUT_R_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    OUT_R_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            OUT_R_0_ce0 <= ap_const_logic_1;
        else 
            OUT_R_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, bitcast_ln85_fu_854_p1, bitcast_ln87_fu_864_p1)
    begin
        if ((ap_enable_reg_pp0_iter19 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                OUT_R_0_d0 <= bitcast_ln87_fu_864_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                OUT_R_0_d0 <= bitcast_ln85_fu_854_p1;
            else 
                OUT_R_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            OUT_R_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_R_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            OUT_R_0_we0 <= ap_const_logic_1;
        else 
            OUT_R_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_1_address0 <= zext_ln77_1_reg_1182_pp0_iter17_reg(8 - 1 downto 0);
    OUT_R_1_address1 <= zext_ln79_1_reg_920_pp0_iter17_reg(8 - 1 downto 0);

    OUT_R_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_R_1_ce0 <= ap_const_logic_1;
        else 
            OUT_R_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_R_1_ce1 <= ap_const_logic_1;
        else 
            OUT_R_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_1_d0 <= reg_654;
    OUT_R_1_d1 <= reg_646;

    OUT_R_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_R_1_we0 <= ap_const_logic_1;
        else 
            OUT_R_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OUT_R_1_we1 <= ap_const_logic_1;
        else 
            OUT_R_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_2_address0 <= zext_ln77_1_reg_1182_pp0_iter18_reg(8 - 1 downto 0);
    OUT_R_2_address1 <= zext_ln79_1_reg_920_pp0_iter18_reg(8 - 1 downto 0);

    OUT_R_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_2_ce0 <= ap_const_logic_1;
        else 
            OUT_R_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_2_ce1 <= ap_const_logic_1;
        else 
            OUT_R_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_2_d0 <= reg_654;
    OUT_R_2_d1 <= reg_646;

    OUT_R_2_we0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_2_we0 <= ap_const_logic_1;
        else 
            OUT_R_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_2_we1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_2_we1 <= ap_const_logic_1;
        else 
            OUT_R_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_3_address0 <= zext_ln77_1_reg_1182_pp0_iter18_reg(8 - 1 downto 0);
    OUT_R_3_address1 <= zext_ln79_1_reg_920_pp0_iter18_reg(8 - 1 downto 0);

    OUT_R_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_3_ce0 <= ap_const_logic_1;
        else 
            OUT_R_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_3_ce1 <= ap_const_logic_1;
        else 
            OUT_R_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_3_d0 <= add33_i9_3_reg_1338;
    OUT_R_3_d1 <= reg_662;

    OUT_R_3_we0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_3_we0 <= ap_const_logic_1;
        else 
            OUT_R_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_3_we1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            OUT_R_3_we1 <= ap_const_logic_1;
        else 
            OUT_R_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    W_imag_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln72_3_fu_765_p1, zext_ln72_fu_781_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_imag_address0 <= zext_ln72_fu_781_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            W_imag_address0 <= zext_ln72_3_fu_765_p1(9 - 1 downto 0);
        else 
            W_imag_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    W_imag_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln72_1_fu_710_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln72_2_fu_754_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_imag_address1 <= zext_ln72_2_fu_754_p1(9 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                W_imag_address1 <= zext_ln72_1_fu_710_p1(9 - 1 downto 0);
            else 
                W_imag_address1 <= "XXXXXXXXX";
            end if;
        else 
            W_imag_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    W_imag_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            W_imag_ce0 <= ap_const_logic_1;
        else 
            W_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_imag_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            W_imag_ce1 <= ap_const_logic_1;
        else 
            W_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_real_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln72_3_fu_765_p1, zext_ln72_fu_781_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_real_address0 <= zext_ln72_fu_781_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            W_real_address0 <= zext_ln72_3_fu_765_p1(9 - 1 downto 0);
        else 
            W_real_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    W_real_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln72_1_fu_710_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln72_2_fu_754_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_real_address1 <= zext_ln72_2_fu_754_p1(9 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                W_real_address1 <= zext_ln72_1_fu_710_p1(9 - 1 downto 0);
            else 
                W_real_address1 <= "XXXXXXXXX";
            end if;
        else 
            W_real_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    W_real_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            W_real_ce0 <= ap_const_logic_1;
        else 
            W_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_real_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            W_real_ce1 <= ap_const_logic_1;
        else 
            W_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln68_fu_771_p2 <= std_logic_vector(unsigned(i_18_0_load_reg_879) + unsigned(ap_const_lv10_4));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= (((ap_ST_fsm_pp0_stage1 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage1_subdone)) or ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone)));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage1_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage1_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln68_reg_884)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln68_reg_884 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter18_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter18_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

        ap_enable_operation_581 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_583 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_587 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_589 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_605 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_607 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_611 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_613 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_617 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_619 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_623 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_625 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_629 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_631 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_637 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_639 <= (ap_const_boolean_1 = ap_const_boolean_1);
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_enable_state37_pp0_iter18_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter18)
    begin
                ap_enable_state37_pp0_iter18_stage0 <= ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state38_pp0_iter18_stage1_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage1)
    begin
                ap_enable_state38_pp0_iter18_stage1 <= ((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_enable_state39_pp0_iter19_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter19)
    begin
                ap_enable_state39_pp0_iter19_stage0 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state40_pp0_iter19_stage1_assign_proc : process(ap_enable_reg_pp0_iter19, ap_CS_fsm_pp0_stage1)
    begin
                ap_enable_state40_pp0_iter19_stage1 <= ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to19_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to19 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to19 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_18_0_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_18_0_fu_96, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i_18_0_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_i_18_0_load <= i_18_0_fu_96;
        end if; 
    end process;

    bitcast_ln85_fu_854_p1 <= reg_662;
    bitcast_ln86_fu_859_p1 <= reg_666;
    bitcast_ln87_fu_864_p1 <= add33_i9_reg_1348;
    bitcast_ln88_fu_868_p1 <= add36_i9_reg_1353;
    buf1_I_1_address0 <= zext_ln77_1_fu_786_p1(8 - 1 downto 0);
    buf1_I_1_address1 <= zext_ln79_1_fu_734_p1(8 - 1 downto 0);

    buf1_I_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_I_1_ce0 <= ap_const_logic_1;
        else 
            buf1_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_I_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_I_1_ce1 <= ap_const_logic_1;
        else 
            buf1_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf1_I_2_address0 <= zext_ln77_1_reg_1182(8 - 1 downto 0);
    buf1_I_2_address1 <= zext_ln79_1_fu_734_p1(8 - 1 downto 0);

    buf1_I_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_I_2_ce0 <= ap_const_logic_1;
        else 
            buf1_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_I_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_I_2_ce1 <= ap_const_logic_1;
        else 
            buf1_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf1_I_3_address0 <= zext_ln77_1_reg_1182(8 - 1 downto 0);
    buf1_I_3_address1 <= zext_ln79_1_fu_734_p1(8 - 1 downto 0);

    buf1_I_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_I_3_ce0 <= ap_const_logic_1;
        else 
            buf1_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_I_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_I_3_ce1 <= ap_const_logic_1;
        else 
            buf1_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_I_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln79_fu_744_p1, zext_ln77_fu_791_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buf1_I_address0 <= zext_ln77_fu_791_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            buf1_I_address0 <= zext_ln79_fu_744_p1(8 - 1 downto 0);
        else 
            buf1_I_address0 <= "XXXXXXXX";
        end if; 
    end process;


    buf1_I_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            buf1_I_ce0 <= ap_const_logic_1;
        else 
            buf1_I_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf1_R_1_address0 <= zext_ln77_1_fu_786_p1(8 - 1 downto 0);
    buf1_R_1_address1 <= zext_ln79_1_fu_734_p1(8 - 1 downto 0);

    buf1_R_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_R_1_ce0 <= ap_const_logic_1;
        else 
            buf1_R_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_R_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_R_1_ce1 <= ap_const_logic_1;
        else 
            buf1_R_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf1_R_2_address0 <= zext_ln77_1_reg_1182(8 - 1 downto 0);
    buf1_R_2_address1 <= zext_ln79_1_fu_734_p1(8 - 1 downto 0);

    buf1_R_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_R_2_ce0 <= ap_const_logic_1;
        else 
            buf1_R_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_R_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_R_2_ce1 <= ap_const_logic_1;
        else 
            buf1_R_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf1_R_3_address0 <= zext_ln77_1_reg_1182(8 - 1 downto 0);
    buf1_R_3_address1 <= zext_ln79_1_fu_734_p1(8 - 1 downto 0);

    buf1_R_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_R_3_ce0 <= ap_const_logic_1;
        else 
            buf1_R_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_R_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf1_R_3_ce1 <= ap_const_logic_1;
        else 
            buf1_R_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_R_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, zext_ln79_fu_744_p1, zext_ln77_fu_791_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buf1_R_address0 <= zext_ln77_fu_791_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            buf1_R_address0 <= zext_ln79_fu_744_p1(8 - 1 downto 0);
        else 
            buf1_R_address0 <= "XXXXXXXX";
        end if; 
    end process;


    buf1_R_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter11, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            buf1_R_ce0 <= ap_const_logic_1;
        else 
            buf1_R_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_20_fu_684_p1 <= ap_sig_allocacmp_i_18_0_load(9 - 1 downto 0);
    grp_fu_404_p_ce <= ap_const_logic_1;
    grp_fu_404_p_din0 <= grp_fu_566_p0;
    grp_fu_404_p_din1 <= grp_fu_566_p1;
    grp_fu_404_p_opcode <= ap_const_lv2_1;
    grp_fu_408_p_ce <= ap_const_logic_1;
    grp_fu_408_p_din0 <= grp_fu_570_p0;
    grp_fu_408_p_din1 <= grp_fu_570_p1;
    grp_fu_408_p_opcode <= ap_const_lv2_0;
    grp_fu_412_p_ce <= ap_const_logic_1;
    grp_fu_412_p_din0 <= grp_fu_574_p0;
    grp_fu_412_p_din1 <= grp_fu_574_p1;
    grp_fu_412_p_opcode <= ap_const_lv2_1;
    grp_fu_416_p_ce <= ap_const_logic_1;
    grp_fu_416_p_din0 <= grp_fu_578_p0;
    grp_fu_416_p_din1 <= grp_fu_578_p1;
    grp_fu_416_p_opcode <= ap_const_lv2_0;
    grp_fu_420_p_ce <= ap_const_logic_1;
    grp_fu_420_p_din0 <= grp_fu_582_p0;
    grp_fu_420_p_din1 <= grp_fu_582_p1;
    grp_fu_420_p_opcode <= ap_const_lv2_1;
    grp_fu_424_p_ce <= ap_const_logic_1;
    grp_fu_424_p_din0 <= grp_fu_586_p0;
    grp_fu_424_p_din1 <= grp_fu_586_p1;
    grp_fu_424_p_opcode <= ap_const_lv2_1(1 - 1 downto 0);
    grp_fu_428_p_ce <= ap_const_logic_1;
    grp_fu_428_p_din0 <= grp_fu_590_p0;
    grp_fu_428_p_din1 <= grp_fu_590_p1;
    grp_fu_428_p_opcode <= ap_const_lv2_0(1 - 1 downto 0);
    grp_fu_432_p_ce <= ap_const_logic_1;
    grp_fu_432_p_din0 <= grp_fu_594_p0;
    grp_fu_432_p_din1 <= grp_fu_594_p1;
    grp_fu_432_p_opcode <= ap_const_lv2_0;
    grp_fu_436_p_ce <= ap_const_logic_1;
    grp_fu_436_p_din0 <= grp_fu_598_p0;
    grp_fu_436_p_din1 <= grp_fu_598_p1;
    grp_fu_436_p_opcode <= ap_const_lv2_1;
    grp_fu_440_p_ce <= ap_const_logic_1;
    grp_fu_440_p_din0 <= grp_fu_602_p0;
    grp_fu_440_p_din1 <= grp_fu_602_p1;
    grp_fu_440_p_opcode <= ap_const_lv2_1;
    grp_fu_444_p_ce <= ap_const_logic_1;
    grp_fu_444_p_din0 <= grp_fu_606_p0;
    grp_fu_444_p_din1 <= grp_fu_606_p1;
    grp_fu_444_p_opcode <= ap_const_lv2_0;
    grp_fu_448_p_ce <= ap_const_logic_1;
    grp_fu_448_p_din0 <= grp_fu_610_p0;
    grp_fu_448_p_din1 <= grp_fu_610_p1;
    grp_fu_448_p_opcode <= ap_const_lv2_0;
    grp_fu_500_p_ce <= ap_const_logic_1;
    grp_fu_500_p_din0 <= grp_fu_614_p0;
    grp_fu_500_p_din1 <= grp_fu_614_p1;
    grp_fu_504_p_ce <= ap_const_logic_1;
    grp_fu_504_p_din0 <= grp_fu_618_p0;
    grp_fu_504_p_din1 <= grp_fu_618_p1;
    grp_fu_508_p_ce <= ap_const_logic_1;
    grp_fu_508_p_din0 <= grp_fu_622_p0;
    grp_fu_508_p_din1 <= grp_fu_622_p1;
    grp_fu_512_p_ce <= ap_const_logic_1;
    grp_fu_512_p_din0 <= grp_fu_626_p0;
    grp_fu_512_p_din1 <= grp_fu_626_p1;
    grp_fu_516_p_ce <= ap_const_logic_1;
    grp_fu_516_p_din0 <= grp_fu_630_p0;
    grp_fu_516_p_din1 <= grp_fu_630_p1;
    grp_fu_520_p_ce <= ap_const_logic_1;
    grp_fu_520_p_din0 <= grp_fu_634_p0;
    grp_fu_520_p_din1 <= grp_fu_634_p1;
    grp_fu_524_p_ce <= ap_const_logic_1;
    grp_fu_524_p_din0 <= grp_fu_638_p0;
    grp_fu_524_p_din1 <= grp_fu_638_p1;
    grp_fu_528_p_ce <= ap_const_logic_1;
    grp_fu_528_p_din0 <= grp_fu_642_p0;
    grp_fu_528_p_din1 <= grp_fu_642_p1;

    grp_fu_566_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul22_i8_1_reg_1102, mul22_i8_2_reg_1122, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_566_p0 <= mul22_i8_2_reg_1122;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_566_p0 <= mul22_i8_1_reg_1102;
            else 
                grp_fu_566_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_566_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_566_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul23_i9_1_reg_1107, mul23_i9_2_reg_1127, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_566_p1 <= mul23_i9_2_reg_1127;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_566_p1 <= mul23_i9_1_reg_1107;
            else 
                grp_fu_566_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_566_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_570_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul24_i8_1_reg_1112, mul24_i8_2_reg_1132, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_570_p0 <= mul24_i8_2_reg_1132;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_570_p0 <= mul24_i8_1_reg_1112;
            else 
                grp_fu_570_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_570_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_570_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, mul25_i9_1_reg_1117, mul25_i9_2_reg_1137, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_570_p1 <= mul25_i9_2_reg_1137;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_570_p1 <= mul25_i9_1_reg_1117;
            else 
                grp_fu_570_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_570_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_574_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, mul22_i8_3_reg_1142, mul22_i8_reg_1162, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_574_p0 <= mul22_i8_reg_1162;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_574_p0 <= mul22_i8_3_reg_1142;
        else 
            grp_fu_574_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_574_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, mul23_i9_3_reg_1147, mul23_i9_reg_1167, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_574_p1 <= mul23_i9_reg_1167;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_574_p1 <= mul23_i9_3_reg_1147;
        else 
            grp_fu_574_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_578_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, mul24_i8_3_reg_1152, mul24_i8_reg_1172, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_578_p0 <= mul24_i8_reg_1172;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_578_p0 <= mul24_i8_3_reg_1152;
        else 
            grp_fu_578_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_578_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, mul25_i9_3_reg_1157, mul25_i9_reg_1177, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_578_p1 <= mul25_i9_reg_1177;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_578_p1 <= mul25_i9_3_reg_1157;
        else 
            grp_fu_578_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_582_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_R_1_load_reg_1206, buf1_R_2_load_reg_1278, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_582_p0 <= buf1_R_2_load_reg_1278;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_582_p0 <= buf1_R_1_load_reg_1206;
        else 
            grp_fu_582_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_582_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_R_9_1_reg_1234, t_R_9_2_reg_1290, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_582_p1 <= t_R_9_2_reg_1290;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_582_p1 <= t_R_9_1_reg_1234;
        else 
            grp_fu_582_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_586_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_I_1_load_reg_1212, buf1_I_2_load_reg_1284, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_586_p0 <= buf1_I_2_load_reg_1284;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_586_p0 <= buf1_I_1_load_reg_1212;
        else 
            grp_fu_586_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_586_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_I_9_1_reg_1240, t_I_9_2_reg_1296, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_586_p1 <= t_I_9_2_reg_1296;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_586_p1 <= t_I_9_1_reg_1240;
        else 
            grp_fu_586_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_590_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_R_1_load_reg_1206, buf1_R_2_load_reg_1278, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_590_p0 <= buf1_R_2_load_reg_1278;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_590_p0 <= buf1_R_1_load_reg_1206;
        else 
            grp_fu_590_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_590_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_R_9_1_reg_1234, t_R_9_2_reg_1290, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_590_p1 <= t_R_9_2_reg_1290;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_590_p1 <= t_R_9_1_reg_1234;
        else 
            grp_fu_590_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_594_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_I_1_load_reg_1212, buf1_I_2_load_reg_1284, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_594_p0 <= buf1_I_2_load_reg_1284;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_594_p0 <= buf1_I_1_load_reg_1212;
        else 
            grp_fu_594_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_594_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_I_9_1_reg_1240, t_I_9_2_reg_1296, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_594_p1 <= t_I_9_2_reg_1296;
        elsif (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_594_p1 <= t_I_9_1_reg_1240;
        else 
            grp_fu_594_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_598_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_R_load_reg_1266, buf1_R_3_load_reg_1302, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_598_p0 <= buf1_R_load_reg_1266;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_598_p0 <= buf1_R_3_load_reg_1302;
            else 
                grp_fu_598_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_598_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_598_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_R_9_3_reg_1314, t_R_9_reg_1326, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_598_p1 <= t_R_9_reg_1326;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_598_p1 <= t_R_9_3_reg_1314;
            else 
                grp_fu_598_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_598_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_602_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_I_load_reg_1272, buf1_I_3_load_reg_1308, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_602_p0 <= buf1_I_load_reg_1272;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_602_p0 <= buf1_I_3_load_reg_1308;
            else 
                grp_fu_602_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_602_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_602_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_I_9_3_reg_1320, t_I_9_reg_1332, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_602_p1 <= t_I_9_reg_1332;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_602_p1 <= t_I_9_3_reg_1320;
            else 
                grp_fu_602_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_602_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_606_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_R_load_reg_1266, buf1_R_3_load_reg_1302, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_606_p0 <= buf1_R_load_reg_1266;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_606_p0 <= buf1_R_3_load_reg_1302;
            else 
                grp_fu_606_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_606_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_606_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_R_9_3_reg_1314, t_R_9_reg_1326, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_606_p1 <= t_R_9_reg_1326;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_606_p1 <= t_R_9_3_reg_1314;
            else 
                grp_fu_606_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_606_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_610_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, buf1_I_load_reg_1272, buf1_I_3_load_reg_1308, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_610_p0 <= buf1_I_load_reg_1272;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_610_p0 <= buf1_I_3_load_reg_1308;
            else 
                grp_fu_610_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_610_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_610_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter12, ap_CS_fsm_pp0_stage1, t_I_9_3_reg_1320, t_I_9_reg_1332, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter12 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_610_p1 <= t_I_9_reg_1332;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_610_p1 <= t_I_9_3_reg_1320;
            else 
                grp_fu_610_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_610_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_614_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, buf1_R_1_load_1_reg_988, buf1_R_2_load_1_reg_1010, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_614_p0 <= buf1_R_2_load_1_reg_1010;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_614_p0 <= buf1_R_1_load_1_reg_988;
            else 
                grp_fu_614_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_614_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_614_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, W_real_load_1_reg_976, W_real_load_2_reg_1066, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_614_p1 <= W_real_load_2_reg_1066;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_614_p1 <= W_real_load_1_reg_976;
            else 
                grp_fu_614_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_614_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_618_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, buf1_I_1_load_1_reg_994, buf1_I_2_load_1_reg_1016, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_618_p0 <= buf1_I_2_load_1_reg_1016;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_618_p0 <= buf1_I_1_load_1_reg_994;
            else 
                grp_fu_618_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_618_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_618_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, W_imag_load_1_reg_982, W_imag_load_2_reg_1072, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_618_p1 <= W_imag_load_2_reg_1072;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_618_p1 <= W_imag_load_1_reg_982;
            else 
                grp_fu_618_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_618_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_622_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, buf1_I_1_load_1_reg_994, buf1_I_2_load_1_reg_1016, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_622_p0 <= buf1_I_2_load_1_reg_1016;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_622_p0 <= buf1_I_1_load_1_reg_994;
            else 
                grp_fu_622_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_622_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_622_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, W_real_load_1_reg_976, W_real_load_2_reg_1066, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_622_p1 <= W_real_load_2_reg_1066;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_622_p1 <= W_real_load_1_reg_976;
            else 
                grp_fu_622_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_622_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_626_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, buf1_R_1_load_1_reg_988, buf1_R_2_load_1_reg_1010, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_626_p0 <= buf1_R_2_load_1_reg_1010;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_626_p0 <= buf1_R_1_load_1_reg_988;
            else 
                grp_fu_626_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_626_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_626_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, W_imag_load_1_reg_982, W_imag_load_2_reg_1072, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                grp_fu_626_p1 <= W_imag_load_2_reg_1072;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                grp_fu_626_p1 <= W_imag_load_1_reg_982;
            else 
                grp_fu_626_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_626_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_630_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, buf1_R_3_load_1_reg_1032, buf1_R_load_1_reg_1054, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_630_p0 <= buf1_R_load_1_reg_1054;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_630_p0 <= buf1_R_3_load_1_reg_1032;
        else 
            grp_fu_630_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_630_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, W_real_load_3_reg_1078, W_real_load_reg_1090, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_630_p1 <= W_real_load_reg_1090;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_630_p1 <= W_real_load_3_reg_1078;
        else 
            grp_fu_630_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_634_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, buf1_I_3_load_1_reg_1038, buf1_I_load_1_reg_1060, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_634_p0 <= buf1_I_load_1_reg_1060;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_634_p0 <= buf1_I_3_load_1_reg_1038;
        else 
            grp_fu_634_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_634_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, W_imag_load_3_reg_1084, W_imag_load_reg_1096, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_634_p1 <= W_imag_load_reg_1096;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_634_p1 <= W_imag_load_3_reg_1084;
        else 
            grp_fu_634_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_638_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, buf1_I_3_load_1_reg_1038, buf1_I_load_1_reg_1060, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_638_p0 <= buf1_I_load_1_reg_1060;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_638_p0 <= buf1_I_3_load_1_reg_1038;
        else 
            grp_fu_638_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_638_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, W_real_load_3_reg_1078, W_real_load_reg_1090, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_638_p1 <= W_real_load_reg_1090;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_638_p1 <= W_real_load_3_reg_1078;
        else 
            grp_fu_638_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_642_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, buf1_R_3_load_1_reg_1032, buf1_R_load_1_reg_1054, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_642_p0 <= buf1_R_load_1_reg_1054;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_642_p0 <= buf1_R_3_load_1_reg_1032;
        else 
            grp_fu_642_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_642_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, W_imag_load_3_reg_1084, W_imag_load_reg_1096, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_642_p1 <= W_imag_load_reg_1096;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_642_p1 <= W_imag_load_3_reg_1084;
        else 
            grp_fu_642_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln68_fu_678_p2 <= "1" when (ap_sig_allocacmp_i_18_0_load = ap_const_lv10_200) else "0";
    lshr_ln77_1_fu_716_p4 <= ap_sig_allocacmp_i_18_0_load(8 downto 2);
    lshr_ln77_s_fu_688_p4 <= ap_sig_allocacmp_i_18_0_load(9 downto 2);
    or_ln68_1_fu_749_p2 <= (empty_20_reg_888 or ap_const_lv9_2);
    or_ln68_2_fu_760_p2 <= (empty_20_reg_888 or ap_const_lv9_3);
    or_ln68_fu_704_p2 <= (empty_20_fu_684_p1 or ap_const_lv9_1);
    xor_ln79_fu_698_p2 <= (lshr_ln77_s_fu_688_p4 xor ap_const_lv8_80);
    zext_ln72_1_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln68_fu_704_p2),64));
    zext_ln72_2_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln68_1_fu_749_p2),64));
    zext_ln72_3_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln68_2_fu_760_p2),64));
    zext_ln72_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_20_reg_888),64));
    zext_ln77_1_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln77_1_reg_915_pp0_iter9_reg),64));
    zext_ln77_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln77_s_reg_895_pp0_iter10_reg),64));
    zext_ln79_1_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln79_s_fu_726_p3),64));
    zext_ln79_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln79_reg_900),64));
    zext_ln79_s_fu_726_p3 <= (ap_const_lv1_1 & lshr_ln77_1_fu_716_p4);
end behav;
