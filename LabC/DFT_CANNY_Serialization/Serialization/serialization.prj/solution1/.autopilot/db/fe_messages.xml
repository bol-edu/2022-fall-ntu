<xilinx:hls_fe_msgs>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:30:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="objField2Arrow" ARG_PragmaIsValid="1" ARG_PragmaType="inline" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:48:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="objField2Arrow" ARG_PragmaIsValid="1" ARG_PragmaType="unroll" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:56:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="objField2Arrow" ARG_PragmaIsValid="1" ARG_PragmaType="unroll" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:63:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="postVector" ARG_PragmaIsValid="1" ARG_PragmaType="inline" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:74:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="padBuffer" ARG_PragmaIsValid="1" ARG_PragmaType="inline" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:80:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="padBuffer" ARG_PragmaIsValid="1" ARG_PragmaType="unroll" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="C:/Users/User/Documents/HLS/LabC/serialization/serialization.prj/solution1/csynth.tcl:27:9" msg_body="HLS pragma dump">
        <args ARG_PragmaContext="directive" ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="name=dut" ARG_PragmaType="top" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="C:/Users/User/Documents/HLS/LabC/serialization/serialization.prj/solution1/directives.tcl:6:9" msg_body="HLS pragma dump">
        <args ARG_PragmaContext="directive" ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="name=dut" ARG_PragmaType="top" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:146:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="mode=s_axilite port=return" ARG_PragmaType="interface" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:147:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="mode=axis register_mode=both port=src register" ARG_PragmaType="interface" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:148:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="mode=axis register_mode=both port=dst register" ARG_PragmaType="interface" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:151:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=dst_buf0" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:152:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=dst_buf1" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:153:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=dst_buf2" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:154:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=dst_buf3" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:155:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=dst_buf4" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:156:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=dst_buf5" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:157:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=val_buf0" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:158:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=val_buf1" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:159:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=val_buf2" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:160:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=val_buf3" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:161:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=val_buf4" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:162:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dim=1 factor=8 type=cyclic variable=val_buf5" ARG_PragmaType="array_partition" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:167:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="dependent=false type=inter variable=src" ARG_PragmaType="dependence" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:172:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaOptions="max=9497 avg=9497 min=9497" ARG_PragmaType="loop_tripcount" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="top.cpp:173:9" msg_body="HLS pragma dump">
        <args ARG_PragmaFunction="dut" ARG_PragmaIsValid="1" ARG_PragmaType="pipeline" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:178:3" msg_body="Inlining function 'objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:179:3" msg_body="Inlining function 'objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:180:3" msg_body="Inlining function 'objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:181:3" msg_body="Inlining function 'objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:182:3" msg_body="Inlining function 'objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:183:3" msg_body="Inlining function 'objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="objField2Arrow(obj_wrapper_t, int, bool&amp;, char*, short&amp;, char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:186:2" msg_body="Inlining function 'postVector(char*, short&amp;, short)' into 'dut(char*, int, char*)'">
        <args Callee="postVector(char*, short&amp;, short)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:187:2" msg_body="Inlining function 'postVector(char*, short&amp;, short)' into 'dut(char*, int, char*)'">
        <args Callee="postVector(char*, short&amp;, short)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:188:2" msg_body="Inlining function 'postVector(char*, short&amp;, short)' into 'dut(char*, int, char*)'">
        <args Callee="postVector(char*, short&amp;, short)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:189:2" msg_body="Inlining function 'postVector(char*, short&amp;, short)' into 'dut(char*, int, char*)'">
        <args Callee="postVector(char*, short&amp;, short)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:190:2" msg_body="Inlining function 'postVector(char*, short&amp;, short)' into 'dut(char*, int, char*)'">
        <args Callee="postVector(char*, short&amp;, short)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:191:2" msg_body="Inlining function 'postVector(char*, short&amp;, short)' into 'dut(char*, int, char*)'">
        <args Callee="postVector(char*, short&amp;, short)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:193:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:194:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:195:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:196:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:197:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:198:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:199:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:200:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:201:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:202:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:203:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-131" msg_severity="INFO" msg_loc="top.cpp:204:2" msg_body="Inlining function 'padBuffer(char*, short&amp;)' into 'dut(char*, int, char*)'">
        <args Callee="padBuffer(char*, short&amp;)" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="PRAGMA_UNROLL" msg_id="214-291" msg_severity="INFO" msg_loc="top.cpp:175:3" msg_body="Loop 'OBJ_LOAD_LOOP' is marked as complete unroll implied by the pipeline pragma">
        <args LoopName="OBJ_LOAD_LOOP"/>
    </msg>
    <msg msg_groups="PRAGMA_UNROLL" msg_id="214-291" msg_severity="INFO" msg_loc="top.cpp:55:13" msg_body="Loop 'BYTE_COPY_LOOP' is marked as complete unroll implied by the pipeline pragma">
        <args LoopName="BYTE_COPY_LOOP"/>
    </msg>
    <msg msg_groups="PRAGMA_UNROLL" msg_id="214-291" msg_severity="INFO" msg_loc="top.cpp:47:4" msg_body="Loop 'VALUE_COPY_LOOP' is marked as complete unroll implied by the pipeline pragma">
        <args LoopName="VALUE_COPY_LOOP"/>
    </msg>
    <msg msg_groups="PRAGMA_UNROLL" msg_id="214-186" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Unrolling loop 'PAD_LOOP' (top.cpp:79:2) in function 'dut' completely with a factor of 7">
        <args Factor="7" LoopLoc="top.cpp:79:2" LoopName="PAD_LOOP"/>
    </msg>
    <msg msg_groups="PRAGMA_UNROLL" msg_id="214-186" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Unrolling loop 'OBJ_LOAD_LOOP' (top.cpp:175:3) in function 'dut' completely with a factor of 11">
        <args Factor="11" LoopLoc="top.cpp:175:3" LoopName="OBJ_LOAD_LOOP"/>
    </msg>
    <msg msg_groups="PRAGMA_UNROLL" msg_id="214-186" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Unrolling loop 'BYTE_COPY_LOOP' (top.cpp:55:13) in function 'dut' completely with a factor of 8">
        <args Factor="8" LoopLoc="top.cpp:55:13" LoopName="BYTE_COPY_LOOP"/>
    </msg>
    <msg msg_groups="PRAGMA_UNROLL" msg_id="214-186" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Unrolling loop 'VALUE_COPY_LOOP' (top.cpp:47:4) in function 'dut' completely with a factor of 8">
        <args Factor="8" LoopLoc="top.cpp:47:4" LoopName="VALUE_COPY_LOOP"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Inlining function 'obj_wrapper_t::type()' into 'dut(char*, int, char*)'">
        <args Callee="obj_wrapper_t::type()" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Inlining function 'obj_wrapper_t::id()' into 'dut(char*, int, char*)'">
        <args Callee="obj_wrapper_t::id()" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Inlining function 'obj_wrapper_t::valid()' into 'dut(char*, int, char*)'">
        <args Callee="obj_wrapper_t::valid()" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="top.cpp:145:0" msg_body="Inlining function 'obj_wrapper_t::data()' into 'dut(char*, int, char*)'">
        <args Callee="obj_wrapper_t::data()" Caller="dut(char*, int, char*)"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:149:7" msg_body="Applying array_partition to 'dst_buf0': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="dst_buf0"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:149:23" msg_body="Applying array_partition to 'dst_buf1': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="dst_buf1"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:149:39" msg_body="Applying array_partition to 'dst_buf2': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="dst_buf2"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:149:55" msg_body="Applying array_partition to 'dst_buf3': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="dst_buf3"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:149:71" msg_body="Applying array_partition to 'dst_buf4': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="dst_buf4"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:149:87" msg_body="Applying array_partition to 'dst_buf5': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="dst_buf5"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:150:7" msg_body="Applying array_partition to 'val_buf0': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="val_buf0"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:150:24" msg_body="Applying array_partition to 'val_buf1': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="val_buf1"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:150:41" msg_body="Applying array_partition to 'val_buf2': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="val_buf2"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:150:58" msg_body="Applying array_partition to 'val_buf3': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="val_buf3"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:150:75" msg_body="Applying array_partition to 'val_buf4': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="val_buf4"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="top.cpp:150:92" msg_body="Applying array_partition to 'val_buf5': Cyclic partitioning with factor 8 on dimension 1.">
        <args Dim="1" Factor="8" Mode="Cyclic" UOName="val_buf5"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-358" msg_severity="WARNING" msg_loc="top.cpp:35:19" msg_body="Array transformation on index using bit extension logic may lead to poor performance. Please use int or long for array index computation to benefit from optimizations."/>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-358" msg_severity="WARNING" msg_loc="top.cpp:75:24" msg_body="Array transformation on index using bit extension logic may lead to poor performance. Please use int or long for array index computation to benefit from optimizations."/>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-358" msg_severity="WARNING" msg_loc="top.cpp:36:25" msg_body="Array transformation on index using bit extension logic may lead to poor performance. Please use int or long for array index computation to benefit from optimizations."/>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-358" msg_severity="WARNING" msg_loc="top.cpp:64:6" msg_body="Array transformation on index using bit extension logic may lead to poor performance. Please use int or long for array index computation to benefit from optimizations."/>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-142" msg_severity="WARNING" msg_loc="top.cpp:145:0" msg_body="Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'src'">
        <args Name="src"/>
    </msg>
    <msg msg_groups="CODE_UNSUPPORTED" msg_id="214-142" msg_severity="WARNING" msg_loc="top.cpp:145:0" msg_body="Implementing stream: may cause mismatch if read and write accesses are not in sequential order on port 'dst'">
        <args Name="dst"/>
    </msg>
</xilinx:hls_fe_msgs>

