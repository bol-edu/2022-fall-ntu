// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module canny_MergeFilter (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        x_sobel_din,
        x_sobel_num_data_valid,
        x_sobel_fifo_cap,
        x_sobel_full_n,
        x_sobel_write,
        y_sobel_din,
        y_sobel_num_data_valid,
        y_sobel_fifo_cap,
        y_sobel_full_n,
        y_sobel_write,
        y_sobel_7_din,
        y_sobel_7_num_data_valid,
        y_sobel_7_fifo_cap,
        y_sobel_7_full_n,
        y_sobel_7_write,
        start_out,
        start_write,
        src_address0,
        src_ce0,
        src_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [12:0] x_sobel_din;
input  [14:0] x_sobel_num_data_valid;
input  [14:0] x_sobel_fifo_cap;
input   x_sobel_full_n;
output   x_sobel_write;
output  [12:0] y_sobel_din;
input  [14:0] y_sobel_num_data_valid;
input  [14:0] y_sobel_fifo_cap;
input   y_sobel_full_n;
output   y_sobel_write;
output  [19:0] y_sobel_7_din;
input  [15:0] y_sobel_7_num_data_valid;
input  [15:0] y_sobel_7_fifo_cap;
input   y_sobel_7_full_n;
output   y_sobel_7_write;
output   start_out;
output   start_write;
output  [13:0] src_address0;
output   src_ce0;
input  [31:0] src_q0;

reg ap_idle;
reg x_sobel_write;
reg y_sobel_write;
reg y_sobel_7_write;
reg start_write;
reg src_ce0;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
reg   [0:0] and_ln117_reg_1516;
reg   [0:0] and_ln117_reg_1516_pp0_iter17_reg;
reg    ap_block_state19_pp0_stage0_iter18;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_296_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    x_sobel_blk_n;
wire    ap_block_pp0_stage0;
reg    y_sobel_blk_n;
reg    y_sobel_7_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln68_reg_1479;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter1_reg;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter2_reg;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter3_reg;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter4_reg;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter5_reg;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter6_reg;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter7_reg;
reg   [0:0] icmp_ln68_reg_1479_pp0_iter8_reg;
wire   [14:0] xy_2_fu_302_p2;
reg   [14:0] xy_2_reg_1483;
reg   [7:0] LineBuff_addr_reg_1488;
reg   [7:0] LineBuff_addr_reg_1488_pp0_iter1_reg;
reg   [7:0] LineBuff_addr_reg_1488_pp0_iter2_reg;
reg   [7:0] LineBuff_addr_reg_1488_pp0_iter3_reg;
wire   [7:0] adr_x_V_5_fu_365_p3;
reg   [7:0] adr_x_V_5_reg_1494;
wire   [0:0] icmp_ln82_fu_383_p2;
reg   [0:0] icmp_ln82_reg_1499;
wire   [6:0] trunc_ln83_fu_389_p1;
reg   [6:0] trunc_ln83_reg_1504;
wire   [0:0] icmp_ln85_fu_393_p2;
reg   [0:0] icmp_ln85_reg_1511;
wire   [0:0] and_ln117_fu_431_p2;
reg   [0:0] and_ln117_reg_1516_pp0_iter1_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter2_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter3_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter4_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter5_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter6_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter7_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter8_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter9_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter10_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter11_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter12_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter13_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter14_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter15_reg;
reg   [0:0] and_ln117_reg_1516_pp0_iter16_reg;
wire   [31:0] y_8_fu_455_p3;
reg   [31:0] y_8_reg_1520;
wire   [31:0] x_8_fu_463_p3;
reg   [31:0] x_8_reg_1525;
wire   [13:0] ret_V_fu_511_p2;
reg   [13:0] ret_V_reg_1530;
reg   [7:0] i_op_assign_19_load_reg_1540;
reg   [7:0] i_op_assign_19_load_reg_1540_pp0_iter4_reg;
reg   [7:0] i_op_assign_19_load_reg_1540_pp0_iter5_reg;
reg   [7:0] i_op_assign_21_load_reg_1546;
reg   [7:0] i_op_assign_s_reg_1552;
reg   [7:0] i_op_assign_s_reg_1552_pp0_iter4_reg;
reg   [7:0] i_op_assign_s_reg_1552_pp0_iter5_reg;
reg   [7:0] i_op_assign_s_reg_1552_pp0_iter6_reg;
reg   [7:0] i_op_assign_s_reg_1552_pp0_iter7_reg;
reg   [7:0] i_op_assign_s_reg_1552_pp0_iter8_reg;
reg   [7:0] i_op_assign_s_reg_1552_pp0_iter9_reg;
reg   [7:0] i_op_assign_1_reg_1559;
reg   [7:0] i_op_assign_1_reg_1559_pp0_iter4_reg;
reg   [7:0] i_op_assign_1_reg_1559_pp0_iter5_reg;
reg   [7:0] i_op_assign_1_reg_1559_pp0_iter6_reg;
reg   [7:0] i_op_assign_1_reg_1559_pp0_iter7_reg;
reg   [7:0] lhs_8_reg_1566;
reg   [7:0] lhs_8_reg_1566_pp0_iter4_reg;
reg   [7:0] lhs_8_reg_1566_pp0_iter5_reg;
reg   [7:0] lhs_8_reg_1566_pp0_iter6_reg;
reg   [7:0] lhs_8_reg_1566_pp0_iter7_reg;
reg   [7:0] lhs_8_reg_1566_pp0_iter8_reg;
reg   [7:0] i_op_assign_3_reg_1572;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter4_reg;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter5_reg;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter6_reg;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter7_reg;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter8_reg;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter9_reg;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter10_reg;
reg   [7:0] i_op_assign_3_reg_1572_pp0_iter11_reg;
wire   [7:0] lhs_V_13_fu_582_p1;
reg   [7:0] lhs_V_13_reg_1579;
reg   [7:0] lhs_V_13_reg_1579_pp0_iter4_reg;
reg   [7:0] lhs_V_13_reg_1579_pp0_iter5_reg;
reg   [7:0] lhs_V_13_reg_1579_pp0_iter6_reg;
reg   [7:0] lhs_V_13_reg_1579_pp0_iter7_reg;
reg   [7:0] lhs_V_13_reg_1579_pp0_iter8_reg;
reg   [31:0] tmp_reg_1585;
reg   [7:0] lhs_V_10_reg_1610;
reg   [7:0] lhs_V_10_reg_1610_pp0_iter6_reg;
reg   [7:0] lhs_V_10_reg_1610_pp0_iter7_reg;
reg   [7:0] lhs_V_10_reg_1610_pp0_iter8_reg;
wire   [15:0] grp_fu_600_p2;
reg   [15:0] ret_V_32_reg_1621;
wire   [16:0] grp_fu_610_p2;
reg   [16:0] ret_V_34_reg_1626;
reg   [7:0] i_op_assign_15_load_reg_1631;
reg   [7:0] i_op_assign_15_load_reg_1631_pp0_iter7_reg;
reg   [7:0] lhs_6_reg_1662;
reg   [7:0] lhs_6_reg_1662_pp0_iter8_reg;
reg   [7:0] lhs_6_reg_1662_pp0_iter9_reg;
reg   [7:0] lhs_7_reg_1667;
reg   [7:0] lhs_7_reg_1667_pp0_iter8_reg;
reg   [7:0] lhs_7_reg_1667_pp0_iter9_reg;
reg   [7:0] i_op_assign_14_load_reg_1672;
reg   [7:0] i_op_assign_14_load_reg_1672_pp0_iter8_reg;
wire   [16:0] grp_fu_654_p2;
reg   [16:0] ret_V_27_reg_1687;
reg   [16:0] ret_V_27_reg_1687_pp0_iter8_reg;
reg   [16:0] ret_V_27_reg_1687_pp0_iter9_reg;
wire  signed [15:0] grp_fu_1152_p3;
reg  signed [15:0] pixel_tmp_1_6_reg_1693;
wire   [17:0] grp_fu_1159_p3;
reg   [17:0] pixel_tmp_2_5_reg_1698;
reg   [7:0] lhs_V_8_reg_1703;
reg   [7:0] lhs_V_8_reg_1703_pp0_iter9_reg;
reg   [7:0] lhs_V_8_reg_1703_pp0_iter10_reg;
reg   [7:0] i_op_assign_7_load_reg_1709;
reg   [7:0] i_op_assign_7_load_reg_1709_pp0_iter9_reg;
wire   [17:0] grp_fu_679_p2;
reg  signed [17:0] ret_V_24_reg_1739;
reg   [7:0] i_op_assign_load_reg_1754;
reg   [7:0] lhs_V_7_reg_1760;
reg   [7:0] lhs_V_7_reg_1760_pp0_iter10_reg;
reg   [7:0] i_op_assign_2_load_reg_1765;
reg   [7:0] i_op_assign_2_load_reg_1765_pp0_iter10_reg;
reg   [7:0] i_op_assign_2_load_reg_1765_pp0_iter11_reg;
wire   [17:0] grp_fu_726_p2;
reg   [17:0] ret_V_18_reg_1785;
wire  signed [16:0] grp_fu_1167_p3;
reg  signed [16:0] pixel_tmp_1_7_reg_1815;
wire   [18:0] grp_fu_1182_p3;
reg   [18:0] add_ln110_1_reg_1820;
wire   [16:0] grp_fu_1175_p3;
reg   [16:0] add_ln110_2_reg_1825;
reg   [7:0] i_op_assign_4_load_reg_1830;
wire   [16:0] grp_fu_782_p2;
reg   [16:0] ret_V_16_reg_1860;
wire   [15:0] grp_fu_788_p2;
reg  signed [15:0] ret_V_17_reg_1865;
wire   [16:0] grp_fu_797_p2;
reg   [16:0] ret_V_25_reg_1880;
wire  signed [18:0] grp_fu_1190_p3;
reg  signed [18:0] add_ln109_2_reg_1890;
wire   [18:0] add_ln109_3_fu_932_p2;
reg   [18:0] add_ln109_3_reg_1895;
(* use_dsp48 = "no" *) wire   [18:0] pixel_tmp_2_6_fu_941_p2;
reg   [18:0] pixel_tmp_2_6_reg_1900;
wire   [15:0] grp_fu_839_p2;
reg   [15:0] ret_V_39_reg_1905;
wire   [17:0] grp_fu_849_p2;
reg  signed [17:0] ret_V_7_reg_1915;
wire  signed [18:0] grp_fu_1198_p2;
reg  signed [18:0] ret_V_13_reg_1930;
wire   [14:0] grp_fu_873_p2;
reg   [14:0] ret_V_37_reg_1950;
(* use_dsp48 = "no" *) wire   [18:0] pixel_tmp_1_8_fu_974_p2;
reg  signed [18:0] pixel_tmp_1_8_reg_1955;
wire  signed [17:0] grp_fu_1204_p3;
reg  signed [17:0] add_ln109_6_reg_1960;
wire  signed [16:0] sext_ln1494_fu_981_p1;
wire   [15:0] zext_ln109_fu_993_p1;
wire   [17:0] grp_fu_1219_p3;
reg   [17:0] add_ln109_10_reg_2007;
wire   [19:0] grp_fu_1235_p3;
reg   [19:0] add_ln110_4_reg_2012;
wire   [17:0] grp_fu_1227_p3;
reg   [17:0] add_ln110_5_reg_2017;
wire  signed [16:0] grp_fu_1211_p3;
reg  signed [16:0] add_ln110_12_reg_2022;
wire  signed [17:0] grp_fu_959_p2;
reg  signed [17:0] ret_V_12_reg_2027;
reg  signed [17:0] ret_V_12_reg_2027_pp0_iter14_reg;
wire  signed [19:0] grp_fu_1282_p3;
reg  signed [19:0] add_ln109_5_reg_2033;
wire  signed [18:0] grp_fu_1290_p3;
reg  signed [18:0] add_ln109_7_reg_2038;
wire  signed [16:0] grp_fu_1243_p3;
reg  signed [16:0] add_ln109_13_reg_2048;
wire   [15:0] grp_fu_1259_p3;
reg   [15:0] add_ln109_15_reg_2053;
(* use_dsp48 = "no" *) wire   [19:0] pixel_tmp_2_7_fu_1008_p2;
reg   [19:0] pixel_tmp_2_7_reg_2058;
wire  signed [18:0] grp_fu_1275_p3;
reg  signed [18:0] add_ln110_7_reg_2063;
wire  signed [18:0] grp_fu_1251_p3;
reg  signed [18:0] add_ln110_9_reg_2068;
wire  signed [16:0] grp_fu_1267_p3;
reg  signed [16:0] add_ln110_14_reg_2078;
wire   [15:0] grp_fu_1298_p3;
reg   [15:0] add_ln110_15_reg_2083;
(* use_dsp48 = "no" *) wire   [19:0] pixel_tmp_1_9_fu_1022_p2;
reg   [19:0] pixel_tmp_1_9_reg_2088;
wire  signed [18:0] grp_fu_1314_p3;
reg  signed [18:0] add_ln109_11_reg_2093;
reg  signed [18:0] add_ln109_11_reg_2093_pp0_iter15_reg;
wire   [20:0] add_ln110_8_fu_1039_p2;
reg   [20:0] add_ln110_8_reg_2108;
(* use_dsp48 = "no" *) wire   [18:0] add_ln110_10_fu_1045_p2;
reg   [18:0] add_ln110_10_reg_2113;
wire  signed [18:0] grp_fu_1306_p3;
reg  signed [18:0] add_ln110_13_reg_2118;
(* use_dsp48 = "no" *) wire   [16:0] add_ln110_16_fu_1053_p2;
reg   [16:0] add_ln110_16_reg_2123;
wire   [20:0] add_ln109_9_fu_1064_p2;
reg   [20:0] add_ln109_9_reg_2128;
wire  signed [17:0] grp_fu_1330_p3;
reg  signed [17:0] add_ln109_14_reg_2133;
wire   [16:0] grp_fu_1322_p3;
reg   [16:0] add_ln109_16_reg_2138;
wire   [20:0] add_ln110_11_fu_1073_p2;
reg   [20:0] add_ln110_11_reg_2143;
(* use_dsp48 = "no" *) wire   [18:0] add_ln110_17_fu_1081_p2;
reg   [18:0] add_ln110_17_reg_2148;
wire   [20:0] add_ln109_12_fu_1089_p2;
reg   [20:0] add_ln109_12_reg_2153;
wire   [18:0] add_ln109_17_fu_1100_p2;
reg   [18:0] add_ln109_17_reg_2158;
reg   [12:0] lshr_ln1_reg_2163;
reg   [12:0] lshr_ln1_reg_2163_pp0_iter17_reg;
reg   [19:0] lshr_ln2_reg_2168;
reg   [19:0] lshr_ln2_reg_2168_pp0_iter17_reg;
reg   [12:0] lshr_ln_reg_2173;
reg    ap_condition_exit_pp0_iter9_stage0;
wire   [7:0] LineBuff_address0;
reg    LineBuff_ce0;
reg    LineBuff_we0;
wire   [39:0] LineBuff_d0;
wire   [7:0] LineBuff_address1;
reg    LineBuff_ce1;
wire   [39:0] LineBuff_q1;
wire   [63:0] idxprom8_fu_308_p1;
wire   [63:0] zext_ln541_fu_529_p1;
reg   [14:0] xy_fu_126;
reg   [14:0] ap_sig_allocacmp_xy_1;
wire    ap_loop_init;
reg   [31:0] y_fu_130;
reg   [31:0] ap_sig_allocacmp_y_6;
reg   [31:0] x_fu_134;
reg   [31:0] ap_sig_allocacmp_x_6;
reg   [7:0] lhs_V_fu_138;
reg   [7:0] i_op_assign_4_fu_142;
reg   [7:0] lhs_fu_146;
reg   [7:0] i_op_assign_14_fu_150;
reg   [7:0] i_op_assign_18_fu_154;
reg   [7:0] i_op_assign_fu_158;
reg   [7:0] lhs_V_1_fu_162;
reg   [7:0] i_op_assign_2_fu_166;
reg   [7:0] lhs_V_2_fu_170;
reg   [7:0] lhs_V_3_fu_174;
reg   [7:0] i_op_assign_7_fu_178;
reg   [7:0] lhs_1_fu_182;
reg   [7:0] lhs_2_fu_186;
reg   [7:0] lhs_3_fu_190;
reg   [7:0] i_op_assign_15_fu_194;
reg   [7:0] lhs_V_4_fu_198;
reg   [7:0] lhs_V_5_fu_202;
reg   [7:0] i_op_assign_19_fu_206;
reg   [7:0] lhs_V_6_fu_210;
reg   [7:0] i_op_assign_21_fu_214;
reg    ap_block_pp0_stage0_01001;
wire   [30:0] tmp_14_fu_313_p4;
wire   [7:0] trunc_ln74_fu_329_p1;
wire   [0:0] icmp_ln76_fu_339_p2;
wire   [7:0] adr_x_V_1_fu_345_p2;
wire   [7:0] adr_x_V_2_fu_351_p2;
wire   [0:0] icmp_ln73_fu_323_p2;
wire   [7:0] adr_x_V_fu_333_p2;
wire   [7:0] adr_x_V_3_fu_357_p3;
wire   [30:0] tmp_15_fu_373_p4;
wire   [29:0] tmp_16_fu_399_p4;
wire   [29:0] tmp_17_fu_415_p4;
wire   [0:0] icmp_ln117_fu_409_p2;
wire   [0:0] icmp_ln117_1_fu_425_p2;
wire   [0:0] icmp_ln122_fu_437_p2;
wire   [31:0] y_7_fu_443_p2;
wire   [31:0] x_7_fu_449_p2;
wire   [6:0] adr_y_V_1_fu_476_p2;
wire   [6:0] adr_y_V_2_fu_481_p2;
wire   [6:0] adr_y_V_fu_471_p2;
wire   [6:0] select_ln85_fu_486_p3;
wire   [6:0] select_ln82_fu_493_p3;
wire   [13:0] ret_V_38_fu_500_p3;
wire   [13:0] zext_ln1495_fu_508_p1;
wire   [7:0] grp_fu_600_p0;
wire  signed [7:0] grp_fu_600_p1;
wire   [7:0] grp_fu_610_p0;
wire   [9:0] grp_fu_610_p1;
wire   [7:0] grp_fu_654_p0;
wire   [9:0] grp_fu_654_p1;
wire   [7:0] grp_fu_679_p0;
wire  signed [9:0] grp_fu_679_p1;
wire   [7:0] grp_fu_726_p0;
wire  signed [9:0] grp_fu_726_p1;
wire   [7:0] grp_fu_782_p0;
wire   [9:0] grp_fu_782_p1;
wire   [7:0] grp_fu_788_p0;
wire  signed [7:0] grp_fu_788_p1;
wire   [7:0] grp_fu_797_p0;
wire   [9:0] grp_fu_797_p1;
wire   [7:0] grp_fu_839_p0;
wire  signed [7:0] grp_fu_839_p1;
wire   [7:0] grp_fu_849_p0;
wire  signed [9:0] grp_fu_849_p1;
wire   [7:0] grp_fu_873_p0;
wire   [7:0] grp_fu_873_p1;
wire  signed [18:0] sext_ln109_1_fu_929_p1;
wire   [18:0] zext_ln1494_28_fu_923_p1;
wire   [18:0] zext_ln110_3_fu_938_p1;
wire   [7:0] grp_fu_959_p0;
wire  signed [9:0] grp_fu_959_p1;
wire   [19:0] zext_ln110_4_fu_1005_p1;
wire  signed [19:0] sext_ln109_5_fu_1019_p1;
wire  signed [20:0] sext_ln110_fu_1036_p1;
wire   [20:0] zext_ln110_2_fu_1033_p1;
wire  signed [18:0] sext_ln1494_7_fu_1016_p1;
wire   [16:0] zext_ln110_5_fu_1050_p1;
wire  signed [20:0] sext_ln109_3_fu_1061_p1;
wire  signed [20:0] sext_ln1494_3_fu_1058_p1;
wire  signed [20:0] sext_ln110_1_fu_1070_p1;
wire  signed [18:0] sext_ln110_3_fu_1078_p1;
wire  signed [20:0] sext_ln109_6_fu_1086_p1;
wire   [18:0] zext_ln109_3_fu_1097_p1;
wire  signed [18:0] sext_ln109_8_fu_1094_p1;
wire  signed [20:0] sext_ln110_4_fu_1106_p1;
wire   [20:0] pixel_tmp_2_fu_1109_p2;
wire  signed [20:0] sext_ln109_9_fu_1134_p1;
wire   [20:0] pixel_tmp_1_fu_1137_p2;
wire   [7:0] grp_fu_1152_p0;
wire   [6:0] grp_fu_1152_p1;
wire   [7:0] grp_fu_1159_p0;
wire   [8:0] grp_fu_1159_p1;
wire   [16:0] grp_fu_1159_p2;
wire   [7:0] grp_fu_1167_p0;
wire  signed [7:0] grp_fu_1167_p1;
wire   [7:0] grp_fu_1175_p0;
wire   [6:0] grp_fu_1175_p1;
wire   [7:0] grp_fu_1182_p0;
wire   [8:0] grp_fu_1182_p1;
wire   [17:0] grp_fu_1182_p2;
wire   [7:0] grp_fu_1190_p0;
wire  signed [9:0] grp_fu_1190_p1;
wire   [7:0] grp_fu_1198_p0;
wire  signed [10:0] grp_fu_1198_p1;
wire   [7:0] grp_fu_1204_p0;
wire   [8:0] grp_fu_1204_p1;
wire   [7:0] grp_fu_1211_p0;
wire  signed [7:0] grp_fu_1211_p1;
wire   [7:0] grp_fu_1219_p0;
wire   [8:0] grp_fu_1219_p1;
wire   [16:0] grp_fu_1219_p2;
wire   [7:0] grp_fu_1227_p0;
wire   [6:0] grp_fu_1227_p1;
wire   [16:0] grp_fu_1227_p2;
wire   [7:0] grp_fu_1235_p0;
wire   [9:0] grp_fu_1235_p1;
wire   [18:0] grp_fu_1235_p2;
wire   [7:0] grp_fu_1243_p0;
wire  signed [7:0] grp_fu_1243_p1;
wire  signed [15:0] grp_fu_1243_p2;
wire   [7:0] grp_fu_1251_p0;
wire  signed [9:0] grp_fu_1251_p1;
wire   [7:0] grp_fu_1259_p0;
wire   [6:0] grp_fu_1259_p1;
wire   [14:0] grp_fu_1259_p2;
wire   [7:0] grp_fu_1267_p0;
wire  signed [7:0] grp_fu_1267_p1;
wire  signed [15:0] grp_fu_1267_p2;
wire   [7:0] grp_fu_1275_p0;
wire  signed [9:0] grp_fu_1275_p1;
wire   [7:0] grp_fu_1282_p0;
wire  signed [10:0] grp_fu_1282_p1;
wire   [7:0] grp_fu_1290_p0;
wire   [9:0] grp_fu_1290_p1;
wire   [7:0] grp_fu_1298_p0;
wire   [6:0] grp_fu_1298_p1;
wire   [14:0] grp_fu_1298_p2;
wire   [7:0] grp_fu_1306_p0;
wire  signed [9:0] grp_fu_1306_p1;
wire   [7:0] grp_fu_1314_p0;
wire  signed [9:0] grp_fu_1314_p1;
wire   [17:0] grp_fu_1314_p2;
wire   [7:0] grp_fu_1322_p0;
wire   [6:0] grp_fu_1322_p1;
wire   [15:0] grp_fu_1322_p2;
wire   [7:0] grp_fu_1330_p0;
wire   [8:0] grp_fu_1330_p1;
reg    grp_fu_600_ce;
reg    grp_fu_610_ce;
reg    grp_fu_654_ce;
reg    grp_fu_679_ce;
reg    grp_fu_726_ce;
reg    grp_fu_782_ce;
reg    grp_fu_788_ce;
reg    grp_fu_797_ce;
reg    grp_fu_839_ce;
reg    grp_fu_849_ce;
reg    grp_fu_873_ce;
reg    grp_fu_959_ce;
reg    grp_fu_1152_ce;
reg    grp_fu_1159_ce;
reg    grp_fu_1167_ce;
reg    grp_fu_1175_ce;
reg    grp_fu_1182_ce;
reg    grp_fu_1190_ce;
reg    grp_fu_1198_ce;
reg    grp_fu_1204_ce;
reg    grp_fu_1211_ce;
reg    grp_fu_1219_ce;
reg    grp_fu_1227_ce;
reg    grp_fu_1235_ce;
reg    grp_fu_1243_ce;
reg    grp_fu_1251_ce;
reg    grp_fu_1259_ce;
reg    grp_fu_1267_ce;
reg    grp_fu_1275_ce;
reg    grp_fu_1282_ce;
reg    grp_fu_1290_ce;
reg    grp_fu_1298_ce;
reg    grp_fu_1306_ce;
reg    grp_fu_1314_ce;
reg    grp_fu_1322_ce;
reg    grp_fu_1330_ce;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_97;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_104;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_enable_operation_120;
reg    ap_enable_state5_pp0_iter4_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [14:0] grp_fu_1152_p00;
wire   [16:0] grp_fu_1159_p00;
wire   [17:0] grp_fu_1159_p20;
wire   [15:0] grp_fu_1167_p00;
wire   [14:0] grp_fu_1175_p00;
wire   [16:0] grp_fu_1182_p00;
wire   [18:0] grp_fu_1182_p20;
wire   [17:0] grp_fu_1190_p00;
wire   [18:0] grp_fu_1198_p00;
wire   [16:0] grp_fu_1204_p00;
wire   [15:0] grp_fu_1211_p00;
wire   [16:0] grp_fu_1219_p00;
wire   [17:0] grp_fu_1219_p20;
wire   [14:0] grp_fu_1227_p00;
wire   [17:0] grp_fu_1227_p20;
wire   [17:0] grp_fu_1235_p00;
wire   [19:0] grp_fu_1235_p20;
wire   [15:0] grp_fu_1243_p00;
wire   [17:0] grp_fu_1251_p00;
wire   [14:0] grp_fu_1259_p00;
wire   [15:0] grp_fu_1267_p00;
wire   [17:0] grp_fu_1275_p00;
wire   [18:0] grp_fu_1282_p00;
wire   [17:0] grp_fu_1290_p00;
wire   [14:0] grp_fu_1298_p00;
wire   [17:0] grp_fu_1306_p00;
wire   [17:0] grp_fu_1314_p00;
wire   [18:0] grp_fu_1314_p20;
wire   [14:0] grp_fu_1322_p00;
wire   [16:0] grp_fu_1322_p20;
wire   [16:0] grp_fu_1330_p00;
wire   [15:0] grp_fu_600_p00;
wire   [16:0] grp_fu_610_p00;
wire   [16:0] grp_fu_654_p00;
wire   [17:0] grp_fu_679_p00;
wire   [17:0] grp_fu_726_p00;
wire   [16:0] grp_fu_782_p00;
wire   [15:0] grp_fu_788_p00;
wire   [16:0] grp_fu_797_p00;
wire   [15:0] grp_fu_839_p00;
wire   [17:0] grp_fu_849_p00;
wire   [14:0] grp_fu_873_p00;
wire   [17:0] grp_fu_959_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_done_reg = 1'b0;
end

canny_MergeFilter_LineBuff_RAM_AUTO_1R1W #(
    .DataWidth( 40 ),
    .AddressRange( 132 ),
    .AddressWidth( 8 ))
LineBuff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuff_address0),
    .ce0(LineBuff_ce0),
    .we0(LineBuff_we0),
    .d0(LineBuff_d0),
    .address1(LineBuff_address1),
    .ce1(LineBuff_ce1),
    .q1(LineBuff_q1)
);

canny_mul_8ns_8s_16_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_3_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_600_p0),
    .din1(grp_fu_600_p1),
    .ce(grp_fu_600_ce),
    .dout(grp_fu_600_p2)
);

canny_mul_8ns_10ns_17_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_610_p0),
    .din1(grp_fu_610_p1),
    .ce(grp_fu_610_ce),
    .dout(grp_fu_610_p2)
);

canny_mul_8ns_10ns_17_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_654_p0),
    .din1(grp_fu_654_p1),
    .ce(grp_fu_654_ce),
    .dout(grp_fu_654_p2)
);

canny_mul_8ns_10s_18_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
mul_8ns_10s_18_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_679_p0),
    .din1(grp_fu_679_p1),
    .ce(grp_fu_679_ce),
    .dout(grp_fu_679_p2)
);

canny_mul_8ns_10s_18_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
mul_8ns_10s_18_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_726_p0),
    .din1(grp_fu_726_p1),
    .ce(grp_fu_726_ce),
    .dout(grp_fu_726_p2)
);

canny_mul_8ns_10ns_17_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_3_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_782_p0),
    .din1(grp_fu_782_p1),
    .ce(grp_fu_782_ce),
    .dout(grp_fu_782_p2)
);

canny_mul_8ns_8s_16_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_3_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_788_p0),
    .din1(grp_fu_788_p1),
    .ce(grp_fu_788_ce),
    .dout(grp_fu_788_p2)
);

canny_mul_8ns_10ns_17_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_3_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_797_p0),
    .din1(grp_fu_797_p1),
    .ce(grp_fu_797_ce),
    .dout(grp_fu_797_p2)
);

canny_mul_8ns_8s_16_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_3_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_839_p0),
    .din1(grp_fu_839_p1),
    .ce(grp_fu_839_ce),
    .dout(grp_fu_839_p2)
);

canny_mul_8ns_10s_18_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
mul_8ns_10s_18_3_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_849_p0),
    .din1(grp_fu_849_p1),
    .ce(grp_fu_849_ce),
    .dout(grp_fu_849_p2)
);

canny_mul_8ns_8ns_15_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_8ns_8ns_15_3_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_873_p0),
    .din1(grp_fu_873_p1),
    .ce(grp_fu_873_ce),
    .dout(grp_fu_873_p2)
);

canny_mul_8ns_10s_18_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
mul_8ns_10s_18_3_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_959_p0),
    .din1(grp_fu_959_p1),
    .ce(grp_fu_959_ce),
    .dout(grp_fu_959_p2)
);

canny_mac_muladd_8ns_7ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_7ns_16ns_16_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1152_p0),
    .din1(grp_fu_1152_p1),
    .din2(ret_V_32_reg_1621),
    .ce(grp_fu_1152_ce),
    .dout(grp_fu_1152_p3)
);

canny_mac_muladd_8ns_9ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_9ns_17ns_18_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1159_p0),
    .din1(grp_fu_1159_p1),
    .din2(grp_fu_1159_p2),
    .ce(grp_fu_1159_ce),
    .dout(grp_fu_1159_p3)
);

canny_mac_muladd_8ns_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8s_16s_17_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1167_p0),
    .din1(grp_fu_1167_p1),
    .din2(pixel_tmp_1_6_reg_1693),
    .ce(grp_fu_1167_ce),
    .dout(grp_fu_1167_p3)
);

canny_mac_muladd_8ns_7ns_17ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_7ns_17ns_17_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1175_p0),
    .din1(grp_fu_1175_p1),
    .din2(ret_V_27_reg_1687),
    .ce(grp_fu_1175_ce),
    .dout(grp_fu_1175_p3)
);

canny_mac_muladd_8ns_9ns_18ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
mac_muladd_8ns_9ns_18ns_19_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1182_p0),
    .din1(grp_fu_1182_p1),
    .din2(grp_fu_1182_p2),
    .ce(grp_fu_1182_ce),
    .dout(grp_fu_1182_p3)
);

canny_mac_muladd_8ns_10s_18s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
mac_muladd_8ns_10s_18s_19_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1190_p0),
    .din1(grp_fu_1190_p1),
    .din2(ret_V_24_reg_1739),
    .ce(grp_fu_1190_ce),
    .dout(grp_fu_1190_p3)
);

canny_mul_mul_8ns_11s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_mul_8ns_11s_19_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1198_p0),
    .din1(grp_fu_1198_p1),
    .ce(grp_fu_1198_ce),
    .dout(grp_fu_1198_p2)
);

canny_mac_muladd_8ns_9ns_18ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_9ns_18ns_18_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1204_p0),
    .din1(grp_fu_1204_p1),
    .din2(ret_V_18_reg_1785),
    .ce(grp_fu_1204_ce),
    .dout(grp_fu_1204_p3)
);

canny_mac_muladd_8ns_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8s_16s_17_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1211_p0),
    .din1(grp_fu_1211_p1),
    .din2(ret_V_17_reg_1865),
    .ce(grp_fu_1211_ce),
    .dout(grp_fu_1211_p3)
);

canny_mac_muladd_8ns_9ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_9ns_17ns_18_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1219_p0),
    .din1(grp_fu_1219_p1),
    .din2(grp_fu_1219_p2),
    .ce(grp_fu_1219_ce),
    .dout(grp_fu_1219_p3)
);

canny_mac_muladd_8ns_7ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_7ns_17ns_18_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1227_p0),
    .din1(grp_fu_1227_p1),
    .din2(grp_fu_1227_p2),
    .ce(grp_fu_1227_ce),
    .dout(grp_fu_1227_p3)
);

canny_mac_muladd_8ns_10ns_19ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
mac_muladd_8ns_10ns_19ns_20_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1235_p0),
    .din1(grp_fu_1235_p1),
    .din2(grp_fu_1235_p2),
    .ce(grp_fu_1235_ce),
    .dout(grp_fu_1235_p3)
);

canny_mac_muladd_8ns_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8s_16s_17_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1243_p0),
    .din1(grp_fu_1243_p1),
    .din2(grp_fu_1243_p2),
    .ce(grp_fu_1243_ce),
    .dout(grp_fu_1243_p3)
);

canny_mac_muladd_8ns_10s_18s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
mac_muladd_8ns_10s_18s_19_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1251_p0),
    .din1(grp_fu_1251_p1),
    .din2(ret_V_7_reg_1915),
    .ce(grp_fu_1251_ce),
    .dout(grp_fu_1251_p3)
);

canny_mac_muladd_8ns_7ns_15ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_7ns_15ns_16_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1259_p0),
    .din1(grp_fu_1259_p1),
    .din2(grp_fu_1259_p2),
    .ce(grp_fu_1259_ce),
    .dout(grp_fu_1259_p3)
);

canny_mac_muladd_8ns_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8s_16s_17_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1267_p0),
    .din1(grp_fu_1267_p1),
    .din2(grp_fu_1267_p2),
    .ce(grp_fu_1267_ce),
    .dout(grp_fu_1267_p3)
);

canny_mac_muladd_8ns_10s_19s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
mac_muladd_8ns_10s_19s_19_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1275_p0),
    .din1(grp_fu_1275_p1),
    .din2(ret_V_13_reg_1930),
    .ce(grp_fu_1275_ce),
    .dout(grp_fu_1275_p3)
);

canny_mac_muladd_8ns_11s_19s_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
mac_muladd_8ns_11s_19s_20_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1282_p0),
    .din1(grp_fu_1282_p1),
    .din2(pixel_tmp_1_8_reg_1955),
    .ce(grp_fu_1282_ce),
    .dout(grp_fu_1282_p3)
);

canny_mac_muladd_8ns_10ns_18s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
mac_muladd_8ns_10ns_18s_19_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1290_p0),
    .din1(grp_fu_1290_p1),
    .din2(add_ln109_6_reg_1960),
    .ce(grp_fu_1290_ce),
    .dout(grp_fu_1290_p3)
);

canny_mac_muladd_8ns_7ns_15ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_7ns_15ns_16_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1298_p0),
    .din1(grp_fu_1298_p1),
    .din2(grp_fu_1298_p2),
    .ce(grp_fu_1298_ce),
    .dout(grp_fu_1298_p3)
);

canny_mac_muladd_8ns_10s_17s_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 19 ))
mac_muladd_8ns_10s_17s_19_4_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1306_p0),
    .din1(grp_fu_1306_p1),
    .din2(add_ln110_12_reg_2022),
    .ce(grp_fu_1306_ce),
    .dout(grp_fu_1306_p3)
);

canny_mac_muladd_8ns_10s_18ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
mac_muladd_8ns_10s_18ns_19_4_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1314_p0),
    .din1(grp_fu_1314_p1),
    .din2(grp_fu_1314_p2),
    .ce(grp_fu_1314_ce),
    .dout(grp_fu_1314_p3)
);

canny_mac_muladd_8ns_7ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_7ns_16ns_17_4_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1322_p0),
    .din1(grp_fu_1322_p1),
    .din2(grp_fu_1322_p2),
    .ce(grp_fu_1322_ce),
    .dout(grp_fu_1322_p3)
);

canny_mac_muladd_8ns_9ns_17s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_9ns_17s_18_4_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1330_p0),
    .din1(grp_fu_1330_p1),
    .din2(add_ln109_13_reg_2048),
    .ce(grp_fu_1330_ce),
    .dout(grp_fu_1330_p3)
);

canny_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter9_stage0)) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1))) begin
            x_fu_134 <= 32'd0;
        end else if (((icmp_ln68_reg_1479 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_fu_134 <= x_8_reg_1525;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1))) begin
            xy_fu_126 <= 15'd0;
        end else if (((icmp_ln68_reg_1479 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            xy_fu_126 <= xy_2_reg_1483;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1))) begin
            y_fu_130 <= 32'd0;
        end else if (((icmp_ln68_reg_1479 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            y_fu_130 <= y_8_reg_1520;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln68_fu_296_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuff_addr_reg_1488 <= idxprom8_fu_308_p1;
        adr_x_V_5_reg_1494 <= adr_x_V_5_fu_365_p3;
        and_ln117_reg_1516 <= and_ln117_fu_431_p2;
        icmp_ln82_reg_1499 <= icmp_ln82_fu_383_p2;
        icmp_ln85_reg_1511 <= icmp_ln85_fu_393_p2;
        trunc_ln83_reg_1504 <= trunc_ln83_fu_389_p1;
        x_8_reg_1525 <= x_8_fu_463_p3;
        y_8_reg_1520 <= y_8_fu_455_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuff_addr_reg_1488_pp0_iter1_reg <= LineBuff_addr_reg_1488;
        and_ln117_reg_1516_pp0_iter1_reg <= and_ln117_reg_1516;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln68_reg_1479 <= icmp_ln68_fu_296_p2;
        icmp_ln68_reg_1479_pp0_iter1_reg <= icmp_ln68_reg_1479;
        xy_2_reg_1483 <= xy_2_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        LineBuff_addr_reg_1488_pp0_iter2_reg <= LineBuff_addr_reg_1488_pp0_iter1_reg;
        LineBuff_addr_reg_1488_pp0_iter3_reg <= LineBuff_addr_reg_1488_pp0_iter2_reg;
        add_ln109_11_reg_2093_pp0_iter15_reg <= add_ln109_11_reg_2093;
        add_ln109_12_reg_2153 <= add_ln109_12_fu_1089_p2;
        add_ln109_17_reg_2158 <= add_ln109_17_fu_1100_p2;
        add_ln109_3_reg_1895 <= add_ln109_3_fu_932_p2;
        add_ln109_9_reg_2128 <= add_ln109_9_fu_1064_p2;
        add_ln110_10_reg_2113 <= add_ln110_10_fu_1045_p2;
        add_ln110_11_reg_2143 <= add_ln110_11_fu_1073_p2;
        add_ln110_16_reg_2123 <= add_ln110_16_fu_1053_p2;
        add_ln110_17_reg_2148 <= add_ln110_17_fu_1081_p2;
        add_ln110_8_reg_2108 <= add_ln110_8_fu_1039_p2;
        and_ln117_reg_1516_pp0_iter10_reg <= and_ln117_reg_1516_pp0_iter9_reg;
        and_ln117_reg_1516_pp0_iter11_reg <= and_ln117_reg_1516_pp0_iter10_reg;
        and_ln117_reg_1516_pp0_iter12_reg <= and_ln117_reg_1516_pp0_iter11_reg;
        and_ln117_reg_1516_pp0_iter13_reg <= and_ln117_reg_1516_pp0_iter12_reg;
        and_ln117_reg_1516_pp0_iter14_reg <= and_ln117_reg_1516_pp0_iter13_reg;
        and_ln117_reg_1516_pp0_iter15_reg <= and_ln117_reg_1516_pp0_iter14_reg;
        and_ln117_reg_1516_pp0_iter16_reg <= and_ln117_reg_1516_pp0_iter15_reg;
        and_ln117_reg_1516_pp0_iter17_reg <= and_ln117_reg_1516_pp0_iter16_reg;
        and_ln117_reg_1516_pp0_iter2_reg <= and_ln117_reg_1516_pp0_iter1_reg;
        and_ln117_reg_1516_pp0_iter3_reg <= and_ln117_reg_1516_pp0_iter2_reg;
        and_ln117_reg_1516_pp0_iter4_reg <= and_ln117_reg_1516_pp0_iter3_reg;
        and_ln117_reg_1516_pp0_iter5_reg <= and_ln117_reg_1516_pp0_iter4_reg;
        and_ln117_reg_1516_pp0_iter6_reg <= and_ln117_reg_1516_pp0_iter5_reg;
        and_ln117_reg_1516_pp0_iter7_reg <= and_ln117_reg_1516_pp0_iter6_reg;
        and_ln117_reg_1516_pp0_iter8_reg <= and_ln117_reg_1516_pp0_iter7_reg;
        and_ln117_reg_1516_pp0_iter9_reg <= and_ln117_reg_1516_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i_op_assign_14_load_reg_1672_pp0_iter8_reg <= i_op_assign_14_load_reg_1672;
        i_op_assign_15_load_reg_1631 <= i_op_assign_15_fu_194;
        i_op_assign_15_load_reg_1631_pp0_iter7_reg <= i_op_assign_15_load_reg_1631;
        i_op_assign_19_load_reg_1540 <= i_op_assign_19_fu_206;
        i_op_assign_19_load_reg_1540_pp0_iter4_reg <= i_op_assign_19_load_reg_1540;
        i_op_assign_19_load_reg_1540_pp0_iter5_reg <= i_op_assign_19_load_reg_1540_pp0_iter4_reg;
        i_op_assign_1_reg_1559_pp0_iter4_reg <= i_op_assign_1_reg_1559;
        i_op_assign_1_reg_1559_pp0_iter5_reg <= i_op_assign_1_reg_1559_pp0_iter4_reg;
        i_op_assign_1_reg_1559_pp0_iter6_reg <= i_op_assign_1_reg_1559_pp0_iter5_reg;
        i_op_assign_1_reg_1559_pp0_iter7_reg <= i_op_assign_1_reg_1559_pp0_iter6_reg;
        i_op_assign_21_load_reg_1546 <= i_op_assign_21_fu_214;
        i_op_assign_2_load_reg_1765 <= i_op_assign_2_fu_166;
        i_op_assign_2_load_reg_1765_pp0_iter10_reg <= i_op_assign_2_load_reg_1765;
        i_op_assign_2_load_reg_1765_pp0_iter11_reg <= i_op_assign_2_load_reg_1765_pp0_iter10_reg;
        i_op_assign_3_reg_1572_pp0_iter10_reg <= i_op_assign_3_reg_1572_pp0_iter9_reg;
        i_op_assign_3_reg_1572_pp0_iter11_reg <= i_op_assign_3_reg_1572_pp0_iter10_reg;
        i_op_assign_3_reg_1572_pp0_iter4_reg <= i_op_assign_3_reg_1572;
        i_op_assign_3_reg_1572_pp0_iter5_reg <= i_op_assign_3_reg_1572_pp0_iter4_reg;
        i_op_assign_3_reg_1572_pp0_iter6_reg <= i_op_assign_3_reg_1572_pp0_iter5_reg;
        i_op_assign_3_reg_1572_pp0_iter7_reg <= i_op_assign_3_reg_1572_pp0_iter6_reg;
        i_op_assign_3_reg_1572_pp0_iter8_reg <= i_op_assign_3_reg_1572_pp0_iter7_reg;
        i_op_assign_3_reg_1572_pp0_iter9_reg <= i_op_assign_3_reg_1572_pp0_iter8_reg;
        i_op_assign_4_load_reg_1830 <= i_op_assign_4_fu_142;
        i_op_assign_7_load_reg_1709 <= i_op_assign_7_fu_178;
        i_op_assign_7_load_reg_1709_pp0_iter9_reg <= i_op_assign_7_load_reg_1709;
        i_op_assign_load_reg_1754 <= i_op_assign_fu_158;
        i_op_assign_s_reg_1552_pp0_iter4_reg <= i_op_assign_s_reg_1552;
        i_op_assign_s_reg_1552_pp0_iter5_reg <= i_op_assign_s_reg_1552_pp0_iter4_reg;
        i_op_assign_s_reg_1552_pp0_iter6_reg <= i_op_assign_s_reg_1552_pp0_iter5_reg;
        i_op_assign_s_reg_1552_pp0_iter7_reg <= i_op_assign_s_reg_1552_pp0_iter6_reg;
        i_op_assign_s_reg_1552_pp0_iter8_reg <= i_op_assign_s_reg_1552_pp0_iter7_reg;
        i_op_assign_s_reg_1552_pp0_iter9_reg <= i_op_assign_s_reg_1552_pp0_iter8_reg;
        icmp_ln68_reg_1479_pp0_iter2_reg <= icmp_ln68_reg_1479_pp0_iter1_reg;
        icmp_ln68_reg_1479_pp0_iter3_reg <= icmp_ln68_reg_1479_pp0_iter2_reg;
        icmp_ln68_reg_1479_pp0_iter4_reg <= icmp_ln68_reg_1479_pp0_iter3_reg;
        icmp_ln68_reg_1479_pp0_iter5_reg <= icmp_ln68_reg_1479_pp0_iter4_reg;
        icmp_ln68_reg_1479_pp0_iter6_reg <= icmp_ln68_reg_1479_pp0_iter5_reg;
        icmp_ln68_reg_1479_pp0_iter7_reg <= icmp_ln68_reg_1479_pp0_iter6_reg;
        icmp_ln68_reg_1479_pp0_iter8_reg <= icmp_ln68_reg_1479_pp0_iter7_reg;
        lhs_6_reg_1662 <= lhs_1_fu_182;
        lhs_6_reg_1662_pp0_iter8_reg <= lhs_6_reg_1662;
        lhs_6_reg_1662_pp0_iter9_reg <= lhs_6_reg_1662_pp0_iter8_reg;
        lhs_7_reg_1667 <= lhs_3_fu_190;
        lhs_7_reg_1667_pp0_iter8_reg <= lhs_7_reg_1667;
        lhs_7_reg_1667_pp0_iter9_reg <= lhs_7_reg_1667_pp0_iter8_reg;
        lhs_8_reg_1566_pp0_iter4_reg <= lhs_8_reg_1566;
        lhs_8_reg_1566_pp0_iter5_reg <= lhs_8_reg_1566_pp0_iter4_reg;
        lhs_8_reg_1566_pp0_iter6_reg <= lhs_8_reg_1566_pp0_iter5_reg;
        lhs_8_reg_1566_pp0_iter7_reg <= lhs_8_reg_1566_pp0_iter6_reg;
        lhs_8_reg_1566_pp0_iter8_reg <= lhs_8_reg_1566_pp0_iter7_reg;
        lhs_V_10_reg_1610 <= lhs_V_4_fu_198;
        lhs_V_10_reg_1610_pp0_iter6_reg <= lhs_V_10_reg_1610;
        lhs_V_10_reg_1610_pp0_iter7_reg <= lhs_V_10_reg_1610_pp0_iter6_reg;
        lhs_V_10_reg_1610_pp0_iter8_reg <= lhs_V_10_reg_1610_pp0_iter7_reg;
        lhs_V_13_reg_1579_pp0_iter4_reg <= lhs_V_13_reg_1579;
        lhs_V_13_reg_1579_pp0_iter5_reg <= lhs_V_13_reg_1579_pp0_iter4_reg;
        lhs_V_13_reg_1579_pp0_iter6_reg <= lhs_V_13_reg_1579_pp0_iter5_reg;
        lhs_V_13_reg_1579_pp0_iter7_reg <= lhs_V_13_reg_1579_pp0_iter6_reg;
        lhs_V_13_reg_1579_pp0_iter8_reg <= lhs_V_13_reg_1579_pp0_iter7_reg;
        lhs_V_7_reg_1760 <= lhs_V_1_fu_162;
        lhs_V_7_reg_1760_pp0_iter10_reg <= lhs_V_7_reg_1760;
        lhs_V_8_reg_1703 <= lhs_V_2_fu_170;
        lhs_V_8_reg_1703_pp0_iter10_reg <= lhs_V_8_reg_1703_pp0_iter9_reg;
        lhs_V_8_reg_1703_pp0_iter9_reg <= lhs_V_8_reg_1703;
        lshr_ln1_reg_2163 <= {{pixel_tmp_2_fu_1109_p2[20:8]}};
        lshr_ln1_reg_2163_pp0_iter17_reg <= lshr_ln1_reg_2163;
        lshr_ln2_reg_2168 <= {{pixel_tmp_2_fu_1109_p2[20:1]}};
        lshr_ln2_reg_2168_pp0_iter17_reg <= lshr_ln2_reg_2168;
        lshr_ln_reg_2173 <= {{pixel_tmp_1_fu_1137_p2[20:8]}};
        pixel_tmp_1_8_reg_1955 <= pixel_tmp_1_8_fu_974_p2;
        pixel_tmp_1_9_reg_2088 <= pixel_tmp_1_9_fu_1022_p2;
        pixel_tmp_2_6_reg_1900 <= pixel_tmp_2_6_fu_941_p2;
        pixel_tmp_2_7_reg_2058 <= pixel_tmp_2_7_fu_1008_p2;
        ret_V_12_reg_2027 <= grp_fu_959_p2;
        ret_V_12_reg_2027_pp0_iter14_reg <= ret_V_12_reg_2027;
        ret_V_13_reg_1930 <= grp_fu_1198_p2;
        ret_V_16_reg_1860 <= grp_fu_782_p2;
        ret_V_17_reg_1865 <= grp_fu_788_p2;
        ret_V_25_reg_1880 <= grp_fu_797_p2;
        ret_V_27_reg_1687_pp0_iter8_reg <= ret_V_27_reg_1687;
        ret_V_27_reg_1687_pp0_iter9_reg <= ret_V_27_reg_1687_pp0_iter8_reg;
        ret_V_37_reg_1950 <= grp_fu_873_p2;
        ret_V_39_reg_1905 <= grp_fu_839_p2;
        ret_V_7_reg_1915 <= grp_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln109_10_reg_2007 <= grp_fu_1219_p3;
        add_ln110_12_reg_2022 <= grp_fu_1211_p3;
        add_ln110_4_reg_2012 <= grp_fu_1235_p3;
        add_ln110_5_reg_2017 <= grp_fu_1227_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln109_11_reg_2093 <= grp_fu_1314_p3;
        add_ln110_13_reg_2118 <= grp_fu_1306_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln109_13_reg_2048 <= grp_fu_1243_p3;
        add_ln109_15_reg_2053 <= grp_fu_1259_p3;
        add_ln109_5_reg_2033 <= grp_fu_1282_p3;
        add_ln109_7_reg_2038 <= grp_fu_1290_p3;
        add_ln110_14_reg_2078 <= grp_fu_1267_p3;
        add_ln110_15_reg_2083 <= grp_fu_1298_p3;
        add_ln110_7_reg_2063 <= grp_fu_1275_p3;
        add_ln110_9_reg_2068 <= grp_fu_1251_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln109_14_reg_2133 <= grp_fu_1330_p3;
        add_ln109_16_reg_2138 <= grp_fu_1322_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln109_2_reg_1890 <= grp_fu_1190_p3;
        i_op_assign_4_fu_142 <= lhs_V_8_reg_1703_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln109_6_reg_1960 <= grp_fu_1204_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln110_1_reg_1820 <= grp_fu_1182_p3;
        add_ln110_2_reg_1825 <= grp_fu_1175_p3;
        i_op_assign_2_fu_166 <= i_op_assign_s_reg_1552_pp0_iter8_reg;
        i_op_assign_fu_158 <= lhs_V_1_fu_162;
        lhs_V_1_fu_162 <= i_op_assign_2_fu_166;
        lhs_V_fu_138 <= i_op_assign_fu_158;
        pixel_tmp_1_7_reg_1815 <= grp_fu_1167_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_14_fu_150 <= i_op_assign_15_load_reg_1631;
        lhs_1_fu_182 <= lhs_2_fu_186;
        lhs_2_fu_186 <= lhs_3_fu_190;
        lhs_3_fu_190 <= lhs_8_reg_1566_pp0_iter6_reg;
        lhs_fu_146 <= lhs_1_fu_182;
        pixel_tmp_1_6_reg_1693 <= grp_fu_1152_p3;
        pixel_tmp_2_5_reg_1698 <= grp_fu_1159_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1479_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_14_load_reg_1672 <= i_op_assign_14_fu_150;
        ret_V_27_reg_1687 <= grp_fu_654_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_15_fu_194 <= lhs_V_10_reg_1610;
        i_op_assign_18_fu_154 <= i_op_assign_19_load_reg_1540_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_19_fu_206 <= lhs_V_6_fu_210;
        i_op_assign_21_fu_214 <= lhs_V_13_fu_582_p1;
        lhs_V_6_fu_210 <= i_op_assign_21_fu_214;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1479_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_1_reg_1559 <= {{LineBuff_q1[23:16]}};
        i_op_assign_3_reg_1572 <= {{LineBuff_q1[39:32]}};
        i_op_assign_s_reg_1552 <= {{LineBuff_q1[15:8]}};
        lhs_8_reg_1566 <= {{LineBuff_q1[31:24]}};
        lhs_V_13_reg_1579 <= lhs_V_13_fu_582_p1;
        tmp_reg_1585 <= {{LineBuff_q1[39:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_7_fu_178 <= i_op_assign_1_reg_1559_pp0_iter7_reg;
        lhs_V_2_fu_170 <= lhs_V_3_fu_174;
        lhs_V_3_fu_174 <= i_op_assign_7_fu_178;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_V_4_fu_198 <= lhs_V_5_fu_202;
        lhs_V_5_fu_202 <= i_op_assign_3_reg_1572_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1479_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_V_18_reg_1785 <= grp_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1479_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_V_24_reg_1739 <= grp_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1479_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_V_32_reg_1621 <= grp_fu_600_p2;
        ret_V_34_reg_1626 <= grp_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1479 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_V_reg_1530 <= ret_V_fu_511_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuff_ce0 = 1'b1;
    end else begin
        LineBuff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuff_ce1 = 1'b1;
    end else begin
        LineBuff_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuff_we0 = 1'b1;
    end else begin
        LineBuff_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln68_fu_296_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln68_reg_1479_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1))) begin
            ap_sig_allocacmp_x_6 = 32'd0;
        end else if (((icmp_ln68_reg_1479 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_sig_allocacmp_x_6 = x_8_reg_1525;
        end else begin
            ap_sig_allocacmp_x_6 = x_fu_134;
        end
    end else begin
        ap_sig_allocacmp_x_6 = x_fu_134;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1))) begin
            ap_sig_allocacmp_xy_1 = 15'd0;
        end else if (((icmp_ln68_reg_1479 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_sig_allocacmp_xy_1 = xy_2_reg_1483;
        end else begin
            ap_sig_allocacmp_xy_1 = xy_fu_126;
        end
    end else begin
        ap_sig_allocacmp_xy_1 = xy_fu_126;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1))) begin
            ap_sig_allocacmp_y_6 = 32'd0;
        end else if (((icmp_ln68_reg_1479 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_sig_allocacmp_y_6 = y_8_reg_1520;
        end else begin
            ap_sig_allocacmp_y_6 = y_fu_130;
        end
    end else begin
        ap_sig_allocacmp_y_6 = y_fu_130;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1152_ce = 1'b1;
    end else begin
        grp_fu_1152_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1159_ce = 1'b1;
    end else begin
        grp_fu_1159_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1167_ce = 1'b1;
    end else begin
        grp_fu_1167_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1175_ce = 1'b1;
    end else begin
        grp_fu_1175_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1182_ce = 1'b1;
    end else begin
        grp_fu_1182_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1190_ce = 1'b1;
    end else begin
        grp_fu_1190_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1198_ce = 1'b1;
    end else begin
        grp_fu_1198_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1204_ce = 1'b1;
    end else begin
        grp_fu_1204_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1211_ce = 1'b1;
    end else begin
        grp_fu_1211_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1219_ce = 1'b1;
    end else begin
        grp_fu_1219_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1227_ce = 1'b1;
    end else begin
        grp_fu_1227_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1235_ce = 1'b1;
    end else begin
        grp_fu_1235_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1243_ce = 1'b1;
    end else begin
        grp_fu_1243_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1251_ce = 1'b1;
    end else begin
        grp_fu_1251_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1259_ce = 1'b1;
    end else begin
        grp_fu_1259_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1267_ce = 1'b1;
    end else begin
        grp_fu_1267_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1275_ce = 1'b1;
    end else begin
        grp_fu_1275_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1282_ce = 1'b1;
    end else begin
        grp_fu_1282_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1290_ce = 1'b1;
    end else begin
        grp_fu_1290_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1298_ce = 1'b1;
    end else begin
        grp_fu_1298_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1306_ce = 1'b1;
    end else begin
        grp_fu_1306_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1314_ce = 1'b1;
    end else begin
        grp_fu_1314_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1322_ce = 1'b1;
    end else begin
        grp_fu_1322_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1330_ce = 1'b1;
    end else begin
        grp_fu_1330_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_600_ce = 1'b1;
    end else begin
        grp_fu_600_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_610_ce = 1'b1;
    end else begin
        grp_fu_610_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_654_ce = 1'b1;
    end else begin
        grp_fu_654_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_679_ce = 1'b1;
    end else begin
        grp_fu_679_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_726_ce = 1'b1;
    end else begin
        grp_fu_726_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_782_ce = 1'b1;
    end else begin
        grp_fu_782_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_788_ce = 1'b1;
    end else begin
        grp_fu_788_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_797_ce = 1'b1;
    end else begin
        grp_fu_797_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_839_ce = 1'b1;
    end else begin
        grp_fu_839_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_849_ce = 1'b1;
    end else begin
        grp_fu_849_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_873_ce = 1'b1;
    end else begin
        grp_fu_873_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_959_ce = 1'b1;
    end else begin
        grp_fu_959_ce = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_ce0 = 1'b1;
    end else begin
        src_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg))) begin
        x_sobel_blk_n = x_sobel_full_n;
    end else begin
        x_sobel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg))) begin
        x_sobel_write = 1'b1;
    end else begin
        x_sobel_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg))) begin
        y_sobel_7_blk_n = y_sobel_7_full_n;
    end else begin
        y_sobel_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg))) begin
        y_sobel_7_write = 1'b1;
    end else begin
        y_sobel_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg))) begin
        y_sobel_blk_n = y_sobel_full_n;
    end else begin
        y_sobel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg))) begin
        y_sobel_write = 1'b1;
    end else begin
        y_sobel_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LineBuff_address0 = LineBuff_addr_reg_1488_pp0_iter3_reg;

assign LineBuff_address1 = LineBuff_addr_reg_1488_pp0_iter1_reg;

assign LineBuff_d0 = {{lhs_V_13_reg_1579}, {tmp_reg_1585}};

assign add_ln109_12_fu_1089_p2 = ($signed(sext_ln109_6_fu_1086_p1) + $signed(add_ln109_9_reg_2128));

assign add_ln109_17_fu_1100_p2 = ($signed(zext_ln109_3_fu_1097_p1) + $signed(sext_ln109_8_fu_1094_p1));

assign add_ln109_3_fu_932_p2 = ($signed(sext_ln109_1_fu_929_p1) + $signed(zext_ln1494_28_fu_923_p1));

assign add_ln109_9_fu_1064_p2 = ($signed(sext_ln109_3_fu_1061_p1) + $signed(sext_ln1494_3_fu_1058_p1));

assign add_ln110_10_fu_1045_p2 = ($signed(add_ln110_9_reg_2068) + $signed(sext_ln1494_7_fu_1016_p1));

assign add_ln110_11_fu_1073_p2 = ($signed(sext_ln110_1_fu_1070_p1) + $signed(add_ln110_8_reg_2108));

assign add_ln110_16_fu_1053_p2 = ($signed(zext_ln110_5_fu_1050_p1) + $signed(add_ln110_14_reg_2078));

assign add_ln110_17_fu_1081_p2 = ($signed(sext_ln110_3_fu_1078_p1) + $signed(add_ln110_13_reg_2118));

assign add_ln110_8_fu_1039_p2 = ($signed(sext_ln110_fu_1036_p1) + $signed(zext_ln110_2_fu_1033_p1));

assign adr_x_V_1_fu_345_p2 = (8'd0 - trunc_ln74_fu_329_p1);

assign adr_x_V_2_fu_351_p2 = ($signed(trunc_ln74_fu_329_p1) + $signed(8'd254));

assign adr_x_V_3_fu_357_p3 = ((icmp_ln76_fu_339_p2[0:0] == 1'b1) ? adr_x_V_1_fu_345_p2 : adr_x_V_2_fu_351_p2);

assign adr_x_V_5_fu_365_p3 = ((icmp_ln73_fu_323_p2[0:0] == 1'b1) ? adr_x_V_fu_333_p2 : adr_x_V_3_fu_357_p3);

assign adr_x_V_fu_333_p2 = (8'd2 - trunc_ln74_fu_329_p1);

assign adr_y_V_1_fu_476_p2 = (7'd0 - trunc_ln83_reg_1504);

assign adr_y_V_2_fu_481_p2 = ($signed(trunc_ln83_reg_1504) + $signed(7'd126));

assign adr_y_V_fu_471_p2 = (7'd2 - trunc_ln83_reg_1504);

assign and_ln117_fu_431_p2 = (icmp_ln117_fu_409_p2 & icmp_ln117_1_fu_425_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (((y_sobel_7_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((y_sobel_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((1'd1 == and_ln117_reg_1516_pp0_iter17_reg) & (x_sobel_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (((y_sobel_7_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((y_sobel_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((1'd1 == and_ln117_reg_1516_pp0_iter17_reg) & (x_sobel_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (((y_sobel_7_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((y_sobel_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((1'd1 == and_ln117_reg_1516_pp0_iter17_reg) & (x_sobel_full_n == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter18 = (((y_sobel_7_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((y_sobel_full_n == 1'b0) & (1'd1 == and_ln117_reg_1516_pp0_iter17_reg)) | ((1'd1 == and_ln117_reg_1516_pp0_iter17_reg) & (x_sobel_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_104 = (icmp_ln68_reg_1479_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_120 = (icmp_ln68_reg_1479_pp0_iter3_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_97 = (icmp_ln68_reg_1479_pp0_iter1_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign grp_fu_1152_p0 = grp_fu_1152_p00;

assign grp_fu_1152_p00 = i_op_assign_21_load_reg_1546;

assign grp_fu_1152_p1 = 15'd121;

assign grp_fu_1159_p0 = grp_fu_1159_p00;

assign grp_fu_1159_p00 = i_op_assign_21_load_reg_1546;

assign grp_fu_1159_p1 = 17'd315;

assign grp_fu_1159_p2 = grp_fu_1159_p20;

assign grp_fu_1159_p20 = ret_V_34_reg_1626;

assign grp_fu_1167_p0 = grp_fu_1167_p00;

assign grp_fu_1167_p00 = i_op_assign_18_fu_154;

assign grp_fu_1167_p1 = 16'd65439;

assign grp_fu_1175_p0 = grp_fu_1175_p00;

assign grp_fu_1175_p00 = i_op_assign_18_fu_154;

assign grp_fu_1175_p1 = 15'd97;

assign grp_fu_1182_p0 = grp_fu_1182_p00;

assign grp_fu_1182_p00 = i_op_assign_19_load_reg_1540_pp0_iter5_reg;

assign grp_fu_1182_p1 = 17'd315;

assign grp_fu_1182_p2 = grp_fu_1182_p20;

assign grp_fu_1182_p20 = pixel_tmp_2_5_reg_1698;

assign grp_fu_1190_p0 = grp_fu_1190_p00;

assign grp_fu_1190_p00 = i_op_assign_14_fu_150;

assign grp_fu_1190_p1 = 18'd261829;

assign grp_fu_1198_p0 = grp_fu_1198_p00;

assign grp_fu_1198_p00 = lhs_V_3_fu_174;

assign grp_fu_1198_p1 = 19'd523742;

assign grp_fu_1204_p0 = grp_fu_1204_p00;

assign grp_fu_1204_p00 = i_op_assign_7_fu_178;

assign grp_fu_1204_p1 = 17'd394;

assign grp_fu_1211_p0 = grp_fu_1211_p00;

assign grp_fu_1211_p00 = i_op_assign_s_reg_1552_pp0_iter8_reg;

assign grp_fu_1211_p1 = 16'd65439;

assign grp_fu_1219_p0 = grp_fu_1219_p00;

assign grp_fu_1219_p00 = lhs_8_reg_1566_pp0_iter8_reg;

assign grp_fu_1219_p1 = 17'd436;

assign grp_fu_1219_p2 = grp_fu_1219_p20;

assign grp_fu_1219_p20 = ret_V_16_reg_1860;

assign grp_fu_1227_p0 = grp_fu_1227_p00;

assign grp_fu_1227_p00 = i_op_assign_14_load_reg_1672_pp0_iter8_reg;

assign grp_fu_1227_p1 = 15'd121;

assign grp_fu_1227_p2 = grp_fu_1227_p20;

assign grp_fu_1227_p20 = ret_V_25_reg_1880;

assign grp_fu_1235_p0 = grp_fu_1235_p00;

assign grp_fu_1235_p00 = lhs_V_10_reg_1610_pp0_iter8_reg;

assign grp_fu_1235_p1 = 18'd546;

assign grp_fu_1235_p2 = grp_fu_1235_p20;

assign grp_fu_1235_p20 = pixel_tmp_2_6_reg_1900;

assign grp_fu_1243_p0 = grp_fu_1243_p00;

assign grp_fu_1243_p00 = i_op_assign_load_reg_1754;

assign grp_fu_1243_p1 = 16'd65415;

assign grp_fu_1243_p2 = sext_ln1494_fu_981_p1;

assign grp_fu_1251_p0 = grp_fu_1251_p00;

assign grp_fu_1251_p00 = i_op_assign_load_reg_1754;

assign grp_fu_1251_p1 = 18'd261829;

assign grp_fu_1259_p0 = grp_fu_1259_p00;

assign grp_fu_1259_p00 = i_op_assign_s_reg_1552_pp0_iter9_reg;

assign grp_fu_1259_p1 = 15'd97;

assign grp_fu_1259_p2 = zext_ln109_fu_993_p1;

assign grp_fu_1267_p0 = grp_fu_1267_p00;

assign grp_fu_1267_p00 = i_op_assign_4_fu_142;

assign grp_fu_1267_p1 = 16'd65415;

assign grp_fu_1267_p2 = sext_ln1494_fu_981_p1;

assign grp_fu_1275_p0 = grp_fu_1275_p00;

assign grp_fu_1275_p00 = i_op_assign_7_load_reg_1709_pp0_iter9_reg;

assign grp_fu_1275_p1 = 18'd261750;

assign grp_fu_1282_p0 = grp_fu_1282_p00;

assign grp_fu_1282_p00 = lhs_6_reg_1662_pp0_iter9_reg;

assign grp_fu_1282_p1 = 19'd523742;

assign grp_fu_1290_p0 = grp_fu_1290_p00;

assign grp_fu_1290_p00 = lhs_7_reg_1667_pp0_iter9_reg;

assign grp_fu_1290_p1 = 18'd546;

assign grp_fu_1298_p0 = grp_fu_1298_p00;

assign grp_fu_1298_p00 = i_op_assign_3_reg_1572_pp0_iter9_reg;

assign grp_fu_1298_p1 = 15'd121;

assign grp_fu_1298_p2 = zext_ln109_fu_993_p1;

assign grp_fu_1306_p0 = grp_fu_1306_p00;

assign grp_fu_1306_p00 = lhs_V_7_reg_1760_pp0_iter10_reg;

assign grp_fu_1306_p1 = 18'd261708;

assign grp_fu_1314_p0 = grp_fu_1314_p00;

assign grp_fu_1314_p00 = i_op_assign_4_load_reg_1830;

assign grp_fu_1314_p1 = 18'd261829;

assign grp_fu_1314_p2 = grp_fu_1314_p20;

assign grp_fu_1314_p20 = add_ln109_10_reg_2007;

assign grp_fu_1322_p0 = grp_fu_1322_p00;

assign grp_fu_1322_p00 = i_op_assign_2_load_reg_1765_pp0_iter11_reg;

assign grp_fu_1322_p1 = 15'd121;

assign grp_fu_1322_p2 = grp_fu_1322_p20;

assign grp_fu_1322_p20 = add_ln109_15_reg_2053;

assign grp_fu_1330_p0 = grp_fu_1330_p00;

assign grp_fu_1330_p00 = i_op_assign_3_reg_1572_pp0_iter11_reg;

assign grp_fu_1330_p1 = 17'd315;

assign grp_fu_600_p0 = grp_fu_600_p00;

assign grp_fu_600_p00 = i_op_assign_19_fu_206;

assign grp_fu_600_p1 = 16'd65415;

assign grp_fu_610_p0 = grp_fu_610_p00;

assign grp_fu_610_p00 = lhs_V_6_fu_210;

assign grp_fu_610_p1 = 17'd436;

assign grp_fu_654_p0 = grp_fu_654_p00;

assign grp_fu_654_p00 = lhs_V_5_fu_202;

assign grp_fu_654_p1 = 17'd394;

assign grp_fu_679_p0 = grp_fu_679_p00;

assign grp_fu_679_p00 = i_op_assign_15_fu_194;

assign grp_fu_679_p1 = 18'd261750;

assign grp_fu_726_p0 = grp_fu_726_p00;

assign grp_fu_726_p00 = lhs_fu_146;

assign grp_fu_726_p1 = 18'd261708;

assign grp_fu_782_p0 = grp_fu_782_p00;

assign grp_fu_782_p00 = i_op_assign_1_reg_1559_pp0_iter7_reg;

assign grp_fu_782_p1 = 17'd315;

assign grp_fu_788_p0 = grp_fu_788_p00;

assign grp_fu_788_p00 = i_op_assign_1_reg_1559_pp0_iter7_reg;

assign grp_fu_788_p1 = 16'd65415;

assign grp_fu_797_p0 = grp_fu_797_p00;

assign grp_fu_797_p00 = i_op_assign_15_load_reg_1631_pp0_iter7_reg;

assign grp_fu_797_p1 = 17'd394;

assign grp_fu_839_p0 = grp_fu_839_p00;

assign grp_fu_839_p00 = lhs_V_fu_138;

assign grp_fu_839_p1 = 16'd65439;

assign grp_fu_849_p0 = grp_fu_849_p00;

assign grp_fu_849_p00 = i_op_assign_2_fu_166;

assign grp_fu_849_p1 = 18'd261829;

assign grp_fu_873_p0 = grp_fu_873_p00;

assign grp_fu_873_p00 = lhs_V_13_reg_1579_pp0_iter8_reg;

assign grp_fu_873_p1 = 15'd97;

assign grp_fu_959_p0 = grp_fu_959_p00;

assign grp_fu_959_p00 = lhs_V_8_reg_1703_pp0_iter10_reg;

assign grp_fu_959_p1 = 18'd261750;

assign icmp_ln117_1_fu_425_p2 = (($signed(tmp_17_fu_415_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_409_p2 = (($signed(tmp_16_fu_399_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_437_p2 = ((ap_sig_allocacmp_x_6 == 32'd131) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_296_p2 = ((ap_sig_allocacmp_xy_1 == 15'd17424) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_323_p2 = (($signed(tmp_14_fu_313_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_339_p2 = (($signed(ap_sig_allocacmp_x_6) > $signed(32'd129)) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_383_p2 = (($signed(tmp_15_fu_373_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_393_p2 = (($signed(ap_sig_allocacmp_y_6) > $signed(32'd129)) ? 1'b1 : 1'b0);

assign idxprom8_fu_308_p1 = ap_sig_allocacmp_x_6;

assign lhs_V_13_fu_582_p1 = src_q0[7:0];

assign pixel_tmp_1_8_fu_974_p2 = ($signed(add_ln109_3_reg_1895) + $signed(add_ln109_2_reg_1890));

assign pixel_tmp_1_9_fu_1022_p2 = ($signed(sext_ln109_5_fu_1019_p1) + $signed(add_ln109_5_reg_2033));

assign pixel_tmp_1_fu_1137_p2 = ($signed(sext_ln109_9_fu_1134_p1) + $signed(add_ln109_12_reg_2153));

assign pixel_tmp_2_6_fu_941_p2 = (zext_ln110_3_fu_938_p1 + add_ln110_1_reg_1820);

assign pixel_tmp_2_7_fu_1008_p2 = (zext_ln110_4_fu_1005_p1 + add_ln110_4_reg_2012);

assign pixel_tmp_2_fu_1109_p2 = ($signed(sext_ln110_4_fu_1106_p1) + $signed(add_ln110_11_reg_2143));

assign ret_V_38_fu_500_p3 = {{select_ln82_fu_493_p3}, {7'd0}};

assign ret_V_fu_511_p2 = (ret_V_38_fu_500_p3 + zext_ln1495_fu_508_p1);

assign select_ln82_fu_493_p3 = ((icmp_ln82_reg_1499[0:0] == 1'b1) ? adr_y_V_fu_471_p2 : select_ln85_fu_486_p3);

assign select_ln85_fu_486_p3 = ((icmp_ln85_reg_1511[0:0] == 1'b1) ? adr_y_V_1_fu_476_p2 : adr_y_V_2_fu_481_p2);

assign sext_ln109_1_fu_929_p1 = pixel_tmp_1_7_reg_1815;

assign sext_ln109_3_fu_1061_p1 = $signed(pixel_tmp_1_9_reg_2088);

assign sext_ln109_5_fu_1019_p1 = add_ln109_7_reg_2038;

assign sext_ln109_6_fu_1086_p1 = add_ln109_11_reg_2093_pp0_iter15_reg;

assign sext_ln109_8_fu_1094_p1 = add_ln109_14_reg_2133;

assign sext_ln109_9_fu_1134_p1 = $signed(add_ln109_17_reg_2158);

assign sext_ln110_1_fu_1070_p1 = $signed(add_ln110_10_reg_2113);

assign sext_ln110_3_fu_1078_p1 = $signed(add_ln110_16_reg_2123);

assign sext_ln110_4_fu_1106_p1 = $signed(add_ln110_17_reg_2148);

assign sext_ln110_fu_1036_p1 = add_ln110_7_reg_2063;

assign sext_ln1494_3_fu_1058_p1 = ret_V_12_reg_2027_pp0_iter14_reg;

assign sext_ln1494_7_fu_1016_p1 = ret_V_12_reg_2027;

assign sext_ln1494_fu_981_p1 = $signed(ret_V_39_reg_1905);

assign src_address0 = zext_ln541_fu_529_p1;

assign start_out = real_start;

assign tmp_14_fu_313_p4 = {{ap_sig_allocacmp_x_6[31:1]}};

assign tmp_15_fu_373_p4 = {{ap_sig_allocacmp_y_6[31:1]}};

assign tmp_16_fu_399_p4 = {{ap_sig_allocacmp_x_6[31:2]}};

assign tmp_17_fu_415_p4 = {{ap_sig_allocacmp_y_6[31:2]}};

assign trunc_ln74_fu_329_p1 = ap_sig_allocacmp_x_6[7:0];

assign trunc_ln83_fu_389_p1 = ap_sig_allocacmp_y_6[6:0];

assign x_7_fu_449_p2 = (ap_sig_allocacmp_x_6 + 32'd1);

assign x_8_fu_463_p3 = ((icmp_ln122_fu_437_p2[0:0] == 1'b1) ? 32'd0 : x_7_fu_449_p2);

assign x_sobel_din = lshr_ln_reg_2173;

assign xy_2_fu_302_p2 = (ap_sig_allocacmp_xy_1 + 15'd1);

assign y_7_fu_443_p2 = (ap_sig_allocacmp_y_6 + 32'd1);

assign y_8_fu_455_p3 = ((icmp_ln122_fu_437_p2[0:0] == 1'b1) ? y_7_fu_443_p2 : ap_sig_allocacmp_y_6);

assign y_sobel_7_din = lshr_ln2_reg_2168_pp0_iter17_reg;

assign y_sobel_din = lshr_ln1_reg_2163_pp0_iter17_reg;

assign zext_ln109_3_fu_1097_p1 = add_ln109_16_reg_2138;

assign zext_ln109_fu_993_p1 = ret_V_37_reg_1950;

assign zext_ln110_2_fu_1033_p1 = pixel_tmp_2_7_reg_2058;

assign zext_ln110_3_fu_938_p1 = add_ln110_2_reg_1825;

assign zext_ln110_4_fu_1005_p1 = add_ln110_5_reg_2017;

assign zext_ln110_5_fu_1050_p1 = add_ln110_15_reg_2083;

assign zext_ln1494_28_fu_923_p1 = ret_V_27_reg_1687_pp0_iter9_reg;

assign zext_ln1495_fu_508_p1 = adr_x_V_5_reg_1494;

assign zext_ln541_fu_529_p1 = ret_V_reg_1530;

endmodule //canny_MergeFilter
